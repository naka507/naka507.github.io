[{"title":"\u542f\u7528\u7f16\u8bd1\u5668","url":"https:\/\/naka507.github.io\/posts\/6C82D57E03DDE1F0.html","content":"\u542f\u7528\u7f16\u8bd1\u5668\n\u8fd9\u662f\u4f60\u7528C\u5199\u7684\u7b2c\u4e00\u4e2a\u7b80\u5355\u7684\u7a0b\u5e8f\uff1a\nint main(int argc, char *argv[])\n{\n    puts(\"Hello world.\");\n\n    return 0;\n}\n\u628a\u5b83\u5199\u8fdb ex1.c \u5e76\u8f93\u5165\uff1a\n$ make ex1\ncc     ex1.c   -o ex1\n\u4f60\u7684\u7f16\u8bd1\u5668\u53ef\u80fd\u4f1a\u4f7f\u7528\u4e00\u4e2a\u6709\u4e9b\u4e0d\u540c\u7684\u547d\u4ee4\uff0c\u4f46\u662f\u6700\u540e\u5e94\u8be5\u4f1a\u4ea7\u751f\u4e00\u4e2a\u540d\u4e3aex1\u7684\u6587\u4ef6\uff0c\u5e76\u4e14\u4f60\u53ef\u4ee5\u8fd0\u884c\u5b83\u3002\n\u4f60\u4f1a\u770b\u5230\u4ec0\u4e48\n\u73b0\u5728\u4f60\u53ef\u4ee5\u8fd0\u884c\u7a0b\u5e8f\u5e76\u770b\u5230\u8f93\u51fa\u3002\n$ .\/ex1\nHello world.\n\u5982\u679c\u6ca1\u6709\uff0c\u5219\u9700\u8981\u8fd4\u56de\u53bb\u4fee\u590d\u5b83\u3002\n\u5982\u4f55\u4f7f\u5b83\u5d29\u6e83\n\u5728\u8fd9\u672c\u4e66\u4e2d\u6211\u4f1a\u6dfb\u52a0\u4e00\u4e2a\u5c0f\u8282\uff0c\u5173\u4e8e\u5982\u4f55\u4f7f\u7a0b\u5e8f\u5d29\u6e83\u3002\u6211\u4f1a\u8ba9\u4f60\u5bf9\u7a0b\u5e8f\u505a\u4e00\u4e9b\u5947\u602a\u7684\u4e8b\u60c5\uff0c\u4ee5\u5947\u602a\u7684\u65b9\u5f0f\u8fd0\u884c\uff0c\u6216\u8005\u4fee\u6539\u4ee3\u7801\uff0c\u4ee5\u4fbf\u8ba9\u4f60\u770b\u5230\u5d29\u6e83\u548c\u7f16\u8bd1\u5668\u9519\u8bef\u3002\n\u5bf9\u4e8e\u8fd9\u4e2a\u7a0b\u5e8f\uff0c\u6253\u5f00\u6240\u6709\u7f16\u8bd1\u8b66\u544a\u91cd\u65b0\u6784\u5efa\u5b83\uff1a\n$ rm ex1\n$ CFLAGS=\"-Wall\" make ex1\ncc -Wall    ex1.c   -o ex1\nex1.c: In function 'main':\nex1.c:3: warning: implicit declaration of function 'puts'\n$ .\/ex1\nHello world.\n$\n\u73b0\u5728\u4f60\u4f1a\u5f97\u5230\u4e00\u4e2a\u8b66\u544a\uff0c\u8bf4puts\u51fd\u6570\u662f\u9690\u5f0f\u58f0\u660e\u7684\u3002C\u8bed\u8a00\u7684\u7f16\u8bd1\u5668\u5f88\u667a\u80fd\uff0c\u5b83\u80fd\u591f\u7406\u89e3\u4f60\u60f3\u8981\u4ec0\u4e48\u3002\u4f46\u662f\u5982\u679c\u53ef\u4ee5\u7684\u8bdd\uff0c\u4f60\u5e94\u8be5\u53bb\u9664\u6240\u6709\u7f16\u8bd1\u5668\u8b66\u544a\u3002\u628a\u4e0b\u9762\u4e00\u884c\u6dfb\u52a0\u5230ex1.c\u6587\u4ef6\u7684\u6700\u4e0a\u9762\uff0c\u4e4b\u540e\u91cd\u65b0\u7f16\u8bd1\u6765\u53bb\u9664\u5b83\uff1a\n#include &lt;stdio.h&gt;\n\u73b0\u5728\u50cf\u521a\u624d\u4e00\u6837\u91cd\u65b0\u6267\u884cmake\u547d\u4ee4\uff0c\u4f60\u4f1a\u770b\u5230\u6240\u6709\u8b66\u544a\u90fd\u6d88\u5931\u4e86\u3002\n\u9644\u52a0\u9898\n\n\u5728\u4f60\u7684\u6587\u672c\u7f16\u8f91\u5668\u4e2d\u6253\u5f00ex1\u6587\u4ef6\uff0c\u968f\u673a\u4fee\u6539\u6216\u5220\u9664\u4e00\u90e8\u5206\uff0c\u4e4b\u540e\u8fd0\u884c\u5b83\u770b\u770b\u53d1\u751f\u4e86\u4ec0\u4e48\u3002\n\u518d\u591a\u6253\u53705\u884c\u6587\u672c\u6216\u8005\u5176\u5b83\u6bd4\"Hello world.\"\u66f4\u590d\u6742\u7684\u4e1c\u897f\u3002\n\u6267\u884cman 3 puts\u6765\u9605\u8bfb\u8fd9\u4e2a\u51fd\u6570\u548c\u5176\u5b83\u51fd\u6570\u7684\u6587\u6863\u3002\n","categories":"\u7ec3\u4e601","tags":["\u7f16\u8bd1\u5668","puts"]},{"title":"\u7528Make\u6765\u4ee3\u66ffPython","url":"https:\/\/naka507.github.io\/posts\/44DB81B8DEDE247B.html","content":"\u7528Make\u6765\u4ee3\u66ffPython\n\u5728Python\u4e2d\uff0c\u4f60\u4ec5\u4ec5\u9700\u8981\u8f93\u5165python\uff0c\u5c31\u53ef\u4ee5\u8fd0\u884c\u4f60\u60f3\u8981\u8fd0\u884c\u7684\u4ee3\u7801\u3002Python\u7684\u89e3\u91ca\u5668\u4f1a\u8fd0\u884c\u5b83\u4eec\uff0c\u5e76\u4e14\u5728\u8fd0\u884c\u4e2d\u5bfc\u5165\u5b83\u6240\u9700\u7684\u5e93\u548c\u5176\u5b83\u4e1c\u897f\u3002C\u662f\u5b8c\u5168\u4e0d\u540c\u7684\u4e1c\u897f\uff0c\u4f60\u9700\u8981\u4e8b\u5148\u7f16\u8bd1\u4f60\u7684\u6e90\u6587\u4ef6\uff0c\u5e76\u4e14\u624b\u52a8\u5c06\u5b83\u4eec\u6574\u5408\u4e3a\u4e00\u4e2a\u53ef\u4ee5\u81ea\u5df1\u8fd0\u884c\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u3002\u624b\u52a8\u6765\u505a\u8fd9\u4e9b\u4e8b\u60c5\u5f88\u75db\u82e6\uff0c\u5728\u4e0a\u4e00\u4e2a\u7ec3\u4e60\u4e2d\u53ea\u9700\u8981\u8fd0\u884cmake\u5c31\u80fd\u5b8c\u6210\u3002\n\u8fd9\u4e2a\u7ec3\u4e60\u662fGNU make \u7684\u901f\u6210\u8bfe\uff0c\u7531\u4e8e\u4f60\u5728\u5b66C\u8bed\u8a00\uff0c\u6240\u4ee5\u4f60\u5c31\u5fc5\u987b\u638c\u63e1\u5b83\u3002Make \u5c06\u8d2f\u7a7f\u5269\u4e0b\u7684\u8bfe\u7a0b\uff0c\u7b49\u6548\u4e8ePython\uff08\u547d\u4ee4\uff09\u3002\u5b83\u4f1a\u6784\u5efa\u6e90\u7801\uff0c\u6267\u884c\u6d4b\u8bd5\uff0c\u8bbe\u7f6e\u4e00\u4e9b\u9009\u9879\u4ee5\u53ca\u4e3a\u4f60\u505a\u6240\u6709Python\u901a\u5e38\u4f1a\u505a\u7684\u4e8b\u60c5\u3002\n\u6709\u6240\u4e0d\u540c\u7684\u662f\uff0c\u6211\u4f1a\u5411\u4f60\u5c55\u793a\u4e00\u4e9b\u66f4\u667a\u80fd\u5316\u7684Makefile\u9b54\u6cd5\uff0c\u4f60\u4e0d\u9700\u8981\u6307\u51fa\u4f60\u7684C\u7a0b\u5e8f\u7684\u6bcf\u4e00\u4e2a\u611a\u8822\u7684\u7ec6\u8282\u6765\u6784\u5efa\u5b83\u3002\u6211\u4e0d\u4f1a\u5728\u7ec3\u4e60\u4e2d\u90a3\u6837\u505a\uff0c\u4f46\u662f\u4f60\u9700\u8981\u5148\u7528\u4e00\u6bb5\u65f6\u95f4\u7684\u201c\u4f4e\u7ea7 make\u201d\uff0c\u6211\u624d\u80fd\u5411\u4f60\u6f14\u793a\u201c\u5927\u5e08\u7ea7\u7684make\u201d\u3002\n\u4f7f\u7528 Make\n\u4f7f\u7528make\u7684\u7b2c\u4e00\u9636\u6bb5\u5c31\u662f\u7528\u5b83\u5df2\u77e5\u7684\u65b9\u5f0f\u6765\u6784\u5efa\u7a0b\u5e8f\u3002Make\u9884\u7f6e\u4e86\u4e00\u4e9b\u77e5\u8bc6\uff0c\u6765\u4ece\u5176\u5b83\u6587\u4ef6\u6784\u5efa\u591a\u79cd\u6587\u4ef6\u3002\u4e0a\u4e00\u4e2a\u7ec3\u4e60\u4e2d\uff0c\u4f60\u5df2\u7ecf\u4f7f\u7528\u50cf\u4e0b\u9762\u7684\u547d\u4ee4\u6765\u8fd9\u6837\u505a\u4e86\uff1a\n$ make ex1\n# or this one too\n$ CFLAGS=\"-Wall\" make ex1\n\u7b2c\u4e00\u4e2a\u547d\u4ee4\u4e2d\u4f60\u544a\u8bc9make\uff0c\u201c\u6211\u60f3\u521b\u5efa\u540d\u4e3aex1\u7684\u6587\u4ef6\u201d\u3002\u4e8e\u662fMake\u6267\u884c\u4e0b\u9762\u7684\u52a8\u4f5c\uff1a\n\n\u6587\u4ef6ex1\u5b58\u5728\u5417\uff1f\n\u6ca1\u6709\u3002\u597d\u7684\uff0c\u6709\u6ca1\u6709\u5176\u4ed6\u6587\u4ef6\u4ee5ex1\u5f00\u5934\uff1f\n\u6709\uff0c\u53eb\u505aex1.c\u3002\u6211\u77e5\u9053\u5982\u4f55\u6784\u5efa.c\u6587\u4ef6\u5417\uff1f\n\u662f\u7684\uff0c\u6211\u4f1a\u8fd0\u884c\u547d\u4ee4cc ex1.c -o ex1\u6765\u6784\u5efa\u5b83\u3002\n\u6211\u5c06\u4f7f\u7528cc\u4eceex1.c\u6587\u4ef6\u6765\u4e3a\u4f60\u6784\u5efaex1\u3002\n\n\u4e0a\u9762\u5217\u51fa\u7684\u7b2c\u4e8c\u6761\u547d\u4ee4\u662f\u4e00\u79cd\u5411make\u547d\u4ee4\u4f20\u9012\u201c\u4fee\u6539\u5668\u201d\u7684\u9014\u5f84\u3002\u5982\u679c\u4f60\u4e0d\u719f\u6089Unix shell\u5982\u4f55\u5de5\u4f5c\uff0c\u4f60\u53ef\u4ee5\u521b\u5efa\u8fd9\u4e9b\u201c\u73af\u5883\u53d8\u91cf\u201d\uff0c\u5b83\u4eec\u4f1a\u5728\u7a0b\u5e8f\u8fd0\u884c\u65f6\u751f\u6548\u3002\u6709\u65f6\u4f60\u4f1a\u7528\u4e00\u6761\u7c7b\u4f3c\u4e8eexport CFLAGS=\"-Wall\"\u7684\u547d\u4ee4\u6765\u6267\u884c\u76f8\u540c\u7684\u4e8b\u60c5\uff0c\u53d6\u51b3\u4e8e\u4f60\u6240\u7528\u7684shell\u3002\u7136\u800c\u4f60\u53ef\u4ee5\u4ec5\u4ec5\u628a\u5b83\u4eec\u653e\u5230\u4f60\u60f3\u6267\u884c\u7684\u547d\u4ee4\u524d\u9762\uff0c\u4e8e\u662f\u73af\u5883\u53d8\u91cf\u53ea\u4f1a\u5728\u7a0b\u5e8f\u8fd0\u884c\u65f6\u6709\u6548\u3002\n\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\u6211\u6267\u884c\u4e86CFLAGS=\"-Wall\" make ex1\uff0c\u6240\u4ee5\u5b83\u4f1a\u7ed9make\u901a\u5e38\u4f7f\u7528\u7684cc\u547d\u4ee4\u6dfb\u52a0-Wall\u9009\u9879\u3002\u8fd9\u884c\u547d\u4ee4\u544a\u8bc9cc\u7f16\u8bd1\u5668\u8981\u62a5\u544a\u6240\u6709\u7684\u8b66\u544a\uff08\u7136\u800c\u5b9e\u9645\u4e0a\u4e0d\u53ef\u80fd\u62a5\u544a\u6240\u6709\u8b66\u544a\uff09\u3002\n\u5b9e\u9645\u4e0a\u4f60\u53ef\u4ee5\u6df1\u5165\u63a2\u7d22\u4f7f\u7528make\u7684\u4e0a\u8ff0\u65b9\u6cd5\uff0c\u4f46\u662f\u5148\u8ba9\u6211\u4eec\u6765\u770b\u770bMakefile\uff0c\u4ee5\u4fbf\u8ba9\u4f60\u5bf9make\u4e86\u89e3\u5f97\u66f4\u591a\u4e00\u70b9\u3002\u9996\u5148\uff0c\u521b\u5efa\u6587\u4ef6\u5e76\u5199\u5165\u4ee5\u4e0b\u5185\u5bb9\uff1a\nCFLAGS=-Wall -g\n\nclean:\n    rm -f ex1\n\u5c06\u6587\u4ef6\u5728\u4f60\u7684\u5f53\u524d\u6587\u4ef6\u5939\u4e0a\u4fdd\u5b58\u4e3aMakefile\u3002Make\u4f1a\u81ea\u52a8\u5047\u8bbe\u5f53\u524d\u6587\u4ef6\u5939\u4e2d\u6709\u4e00\u4e2a\u53eb\u505aMakefile\u7684\u6587\u4ef6\uff0c\u5e76\u4e14\u4f1a\u6267\u884c\u5b83\u3002\u6b64\u5916\uff0c\u4e00\u5b9a\u8981\u6ce8\u610f\uff1a\u786e\u4fdd\u4f60\u53ea\u8f93\u5165\u4e86 TAB \u5b57\u7b26\uff0c\u800c\u4e0d\u662f\u7a7a\u683c\u548c TAB \u7684\u6df7\u5408\u3002\n\n\u8bd1\u8005\u6ce8\uff1a\u4e0a\u8ff0\u4ee3\u7801\u4e2d\u7b2c\u56db\u884crm\u524d\u9762\u662f\u4e00\u4e2a TAB \uff0c\u800c\u4e0d\u662f\u591a\u4e2a\u7b49\u91cf\u7684\u7a7a\u683c\u3002\n\nMakefile\u5411\u4f60\u5c55\u793a\u4e86make\u7684\u4e00\u4e9b\u65b0\u529f\u80fd\u3002\u9996\u5148\u6211\u4eec\u5728\u6587\u4ef6\u4e2d\u8bbe\u7f6eCFLAGS\uff0c\u6240\u4ee5\u4e4b\u540e\u5c31\u4e0d\u7528\u518d\u8bbe\u7f6e\u4e86\u3002\u5e76\u4e14\uff0c\u6211\u4eec\u6dfb\u52a0\u4e86-g\u6807\u8bc6\u6765\u83b7\u53d6\u8c03\u8bd5\u4fe1\u606f\u3002\u63a5\u7740\u6211\u4eec\u5199\u4e86\u4e00\u4e2a\u53eb\u505aclean\u7684\u90e8\u5206\uff0c\u5b83\u544a\u8bc9make\u5982\u4f55\u6e05\u7406\u6211\u4eec\u7684\u5c0f\u9879\u76ee\u3002\n\u786e\u4fdd\u5b83\u548c\u4f60\u7684ex1.c\u6587\u4ef6\u5728\u76f8\u540c\u7684\u76ee\u5f55\u4e2d\uff0c\u4e4b\u540e\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a\n$ make clean\n$ make ex1\n\u4f60\u4f1a\u770b\u5230\u4ec0\u4e48\n\u5982\u679c\u4ee3\u7801\u80fd\u6b63\u5e38\u5de5\u4f5c\uff0c\u4f60\u5e94\u8be5\u770b\u5230\u8fd9\u4e9b\uff1a\n$ make clean\nrm -f ex1\n$ make ex1\ncc -Wall -g    ex1.c   -o ex1\nex1.c: In function 'main':\nex1.c:3: warning: implicit declaration of function 'puts'\n$\n\u4f60\u53ef\u4ee5\u770b\u51fa\u6765\u6211\u6267\u884c\u4e86make clean\uff0c\u5b83\u544a\u8bc9make\u6267\u884c\u6211\u4eec\u7684clean\u76ee\u6807\u3002\u518d\u53bb\u770b\u4e00\u773cMakefile\uff0c\u4e4b\u540e\u4f60\u4f1a\u770b\u5230\u5728\u5b83\u7684\u4e0b\u9762\uff0c\u6211\u7f29\u8fdb\u5e76\u4e14\u8f93\u5165\u4e86\u4e00\u4e9b\u60f3\u8981make\u4e3a\u6211\u8fd0\u884c\u7684shell\u547d\u4ee4\u3002\u4f60\u53ef\u4ee5\u5728\u6b64\u5904\u8f93\u5165\u4efb\u610f\u591a\u7684\u547d\u4ee4\uff0c\u6240\u4ee5\u5b83\u662f\u4e00\u4e2a\u975e\u5e38\u68d2\u7684\u81ea\u52a8\u5316\u5de5\u5177\u3002\n\n\u6ce8\n\n\n\u5982\u679c\u4f60\u4fee\u6539\u4e86ex1.c\uff0c\u6dfb\u52a0\u4e86#include&lt;stdio&gt;\uff0c\u8f93\u51fa\u4e2d\u7684\u5173\u4e8eputs\u7684\u8b66\u544a\u5c31\u4f1a\u6d88\u5931\uff08\u8fd9\u5176\u5b9e\u5e94\u8be5\u7b97\u4f5c\u4e00\u4e2a\u9519\u8bef\uff09\u3002\u6211\u8fd9\u91cc\u6709\u8b66\u544a\u662f\u56e0\u4e3a\u6211\u5e76\u6ca1\u6709\u53bb\u6389\u5b83\u3002\n\n\u540c\u65f6\u4e5f\u8981\u6ce8\u610f\uff0c\u5373\u4f7f\u6211\u4eec\u5728Makefile\u4e2d\u5e76\u6ca1\u6709\u63d0\u5230ex1\uff0cmake\u4ecd\u7136\u4f1a\u77e5\u9053\u5982\u4f55\u6784\u5efa\u5b83\uff0c\u4ee5\u53ca\u4f7f\u7528\u6211\u4eec\u6307\u5b9a\u7684\u8bbe\u7f6e\u3002\n\u5982\u4f55\u4f7f\u5b83\u5d29\u6e83\n\u4e0a\u9762\u90a3\u4e9b\u5df2\u7ecf\u8db3\u591f\u8ba9\u4f60\u8d77\u6b65\u4e86\uff0c\u4f46\u662f\u8ba9\u6211\u4eec\u4ee5\u4e00\u79cd\u7279\u5b9a\u7684\u65b9\u5f0f\u6765\u7834\u574fmake\u6587\u4ef6\uff0c\u4ee5\u4fbf\u4f60\u53ef\u4ee5\u770b\u5230\u53d1\u751f\u4e86\u4ec0\u4e48\u3002\u627e\u5230rm -f ex1\u7684\u90a3\u4e00\u884c\u5e76\u53bb\u6389\u7f29\u8fdb\uff08\u8ba9\u5b83\u5de6\u79fb\uff09\uff0c\u4e4b\u540e\u4f60\u53ef\u4ee5\u770b\u5230\u53d1\u751f\u4e86\u4ec0\u4e48\u3002\u518d\u6b21\u8fd0\u884cmake clean\uff0c\u4f60\u5c31\u4f1a\u5f97\u5230\u4e0b\u9762\u7684\u4fe1\u606f\uff1a\n$ make clean\nMakefile:4: *** missing separator.  Stop.\n\u6c38\u8fdc\u8bb0\u4f4f\u8981\u7f29\u8fdb\uff0c\u4ee5\u53ca\u5982\u679c\u4f60\u5f97\u5230\u4e86\u50cf\u8fd9\u79cd\u5947\u5947\u602a\u602a\u7684\u9519\u8bef\uff0c\u5e94\u8be5\u590d\u67e5\u4f60\u662f\u5426\u90fd\u4f7f\u7528\u4e86 TAB \u5b57\u7b26\uff0c\u7531\u4e8e\u4e00\u4e9bmake\u7684\u53d8\u79cd\u5341\u5206\u6311\u5254\u3002\n\u9644\u52a0\u9898\n\n\u521b\u5efa\u76ee\u6807all:ex1\uff0c\u53ef\u4ee5\u4ee5\u5355\u4e2a\u547d\u4ee4make\u6784\u5efaex1\u3002\n\u9605\u8bfbman make\u6765\u4e86\u89e3\u5173\u4e8e\u5982\u4f55\u6267\u884c\u5b83\u7684\u66f4\u591a\u4fe1\u606f\u3002\n\u9605\u8bfbman cc\u6765\u4e86\u89e3\u5173\u4e8e-Wall\u548c-g\u884c\u4e3a\u7684\u66f4\u591a\u4fe1\u606f\u3002\n\u5728\u4e92\u8054\u7f51\u4e0a\u641c\u7d22Makefile\u6587\u4ef6\uff0c\u770b\u770b\u4f60\u662f\u5426\u80fd\u6539\u8fdb\u4f60\u7684\u6587\u4ef6\u3002\n\u5728\u53e6\u4e00\u4e2aC\u8bed\u8a00\u9879\u76ee\u4e2d\u627e\u5230Makefile\u6587\u4ef6\uff0c\u5e76\u4e14\u5c1d\u8bd5\u7406\u89e3\u5b83\u505a\u4e86\u4ec0\u4e48\u3002\n","categories":"\u7ec3\u4e601","tags":["Python","\u89e3\u91ca\u5668","make"]},{"title":"\u683c\u5f0f\u5316\u8f93\u51fa","url":"https:\/\/naka507.github.io\/posts\/D3BE6C8A075EF92E.html","content":"\u683c\u5f0f\u5316\u8f93\u51fa\n\u4e0d\u8981\u5220\u9664Makefile\uff0c\u56e0\u4e3a\u5b83\u53ef\u4ee5\u5e2e\u4f60\u6307\u51fa\u9519\u8bef\uff0c\u4ee5\u53ca\u5f53\u6211\u4eec\u9700\u8981\u81ea\u52a8\u5316\u5904\u7406\u4e00\u4e9b\u4e8b\u60c5\u65f6\uff0c\u53ef\u4ee5\u5411\u5b83\u6dfb\u52a0\u65b0\u7684\u4e1c\u897f\u3002\n\u8bb8\u591a\u7f16\u7a0b\u8bed\u8a00\u90fd\u4f7f\u7528\u4e86C\u98ce\u683c\u7684\u683c\u5f0f\u5316\u8f93\u51fa\uff0c\u6240\u4ee5\u8ba9\u6211\u4eec\u5c1d\u8bd5\u4e00\u4e0b\uff1a\n#include &lt;stdio.h&gt;\n\nint main()\n{\n    int age = 10;\n    int height = 72;\n\n    printf(\"I am %d years old.\\n\", age);\n    printf(\"I am %d inches tall.\\n\", height);\n\n    return 0;\n}\n\u5199\u5b8c\u4e4b\u540e\uff0c\u6267\u884c\u901a\u5e38\u7684make ex3\u547d\u4ee4\u6765\u6784\u5efa\u5e76\u8fd0\u884c\u5b83\u3002\u4e00\u5b9a\u8981\u786e\u4fdd\u4f60\u5904\u7406\u4e86\u6240\u6709\u7684\u8b66\u544a\u3002\n\u8fd9\u4e2a\u7ec3\u4e60\u7684\u4ee3\u7801\u91cf\u5f88\u5c0f\uff0c\u4f46\u662f\u4fe1\u606f\u91cf\u5f88\u5927\uff0c\u6240\u4ee5\u8ba9\u6211\u4eec\u9010\u884c\u5206\u6790\u4e00\u4e0b\uff1a\n\n\u9996\u5148\u4f60\u5305\u542b\u4e86\u53e6\u4e00\u4e2a\u5934\u6587\u4ef6\u53eb\u505astdio.h\u3002\u8fd9\u544a\u8bc9\u4e86\u7f16\u8bd1\u5668\u4f60\u8981\u4f7f\u7528\u201c\u6807\u51c6\u7684\u8f93\u5165\/\u8f93\u51fa\u51fd\u6570\u201d\u3002\u5b83\u4eec\u4e4b\u4e00\u5c31\u662fprintf\u3002\n\u7136\u540e\u4f60\u4f7f\u7528\u4e86\u4e00\u4e2a\u53ebage\u7684\u53d8\u91cf\u5e76\u4e14\u5c06\u5b83\u8bbe\u7f6e\u4e3a10\u3002\n\u63a5\u7740\u4f60\u4f7f\u7528\u4e86\u4e00\u4e2a\u53ebheight\u7684\u53d8\u91cf\u5e76\u4e14\u8bbe\u7f6e\u4e3a72\u3002\n\u518d\u7136\u540e\u4f60\u4f7f\u7528printf\u51fd\u6570\u6765\u6253\u5370\u8fd9\u4e2a\u661f\u7403\u4e0a\u6700\u9ad8\u7684\u5341\u5c81\u7684\u4eba\u7684\u5e74\u9f84\u548c\u9ad8\u5ea6\u3002\n\u5728printf\u4e2d\u4f60\u4f1a\u6ce8\u610f\u5230\u4f60\u4f20\u5165\u4e86\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u8fd9\u5c31\u662f\u683c\u5f0f\u5b57\u7b26\u4e32\uff0c\u548c\u5176\u5b83\u8bed\u8a00\u4e2d\u4e00\u6837\u3002\n\u5728\u683c\u5f0f\u5b57\u7b26\u4e32\u4e4b\u540e\uff0c\u4f60\u4f20\u5165\u4e86\u4e00\u4e9b\u53d8\u91cf\uff0c\u5b83\u4eec\u5e94\u8be5\u88abprintf\u201c\u66ff\u6362\u201d\u8fdb\u683c\u5f0f\u5b57\u7b26\u4e32\u4e2d\u3002\n\n\u8fd9\u4e9b\u8bed\u53e5\u7684\u7ed3\u679c\u5c31\u662f\u4f60\u7528printf\u5904\u7406\u4e86\u4e00\u4e9b\u53d8\u91cf\uff0c\u5e76\u4e14\u5b83\u4f1a\u6784\u9020\u51fa\u4e00\u4e2a\u65b0\u7684\u5b57\u7b26\u4e32\uff0c\u4e4b\u540e\u5c06\u5b83\u6253\u5370\u5728\u7ec8\u7aef\u4e0a\u3002\n\u4f60\u4f1a\u770b\u5230\u4ec0\u4e48\n\u5f53\u4f60\u505a\u5b8c\u4e0a\u9762\u7684\u6574\u4e2a\u6b65\u9aa4\uff0c\u4f60\u5e94\u8be5\u770b\u5230\u8fd9\u4e9b\u4e1c\u897f\uff1a\n$ make ex3\ncc -Wall -g    ex3.c   -o ex3\n$ .\/ex3\nI am 10 years old.\nI am 72 inches tall.\n$\n\u4e0d\u4e45\u4e4b\u540e\u6211\u4f1a\u505c\u4e0b\u6765\u8ba9\u4f60\u8fd0\u884cmake\uff0c\u5e76\u4e14\u544a\u8bc9\u4f60\u6784\u5efa\u8fc7\u7a0b\u662f\u4ec0\u4e48\u6837\u5b50\u7684\u3002\u6240\u4ee5\u8bf7\u786e\u4fdd\u4f60\u6b63\u786e\u5f97\u5230\u4e86\u8fd9\u4e9b\u4fe1\u606f\u5e76\u4e14\u80fd\u6b63\u5e38\u6267\u884c\u3002\n\u5916\u90e8\u7814\u7a76\n\u5728\u9644\u52a0\u9898\u4e00\u8282\u6211\u53ef\u80fd\u4f1a\u8ba9\u4f60\u81ea\u5df1\u67e5\u627e\u4e00\u4e9b\u8d44\u6599\uff0c\u5e76\u4e14\u5f04\u660e\u767d\u5b83\u4eec\u3002\u8fd9\u5bf9\u4e8e\u4e00\u4e2a\u81ea\u6211\u5b66\u4e60\u7684\u7a0b\u5e8f\u5458\u6765\u8bf4\u76f8\u5f53\u91cd\u8981\u3002\u5982\u679c\u4f60\u4e00\u76f4\u5728\u81ea\u5df1\u5c1d\u8bd5\u4e86\u89e3\u95ee\u9898\u4e4b\u524d\u53bb\u95ee\u5176\u5b83\u4eba\uff0c\u4f60\u6c38\u8fdc\u90fd\u4e0d\u4f1a\u5b66\u5230\u72ec\u7acb\u89e3\u51b3\u95ee\u9898\u3002\u8fd9\u4f1a\u8ba9\u4f60\u6c38\u8fdc\u90fd\u4e0d\u4f1a\u5728\u81ea\u5df1\u7684\u6280\u80fd\u4e0a\u5efa\u7acb\u4fe1\u5fc3\uff0c\u5e76\u4e14\u603b\u662f\u4f9d\u8d56\u522b\u4eba\u53bb\u5b8c\u6210\u4f60\u7684\u5de5\u4f5c\u3002\n\u6253\u7834\u4f60\u8fd9\u4e00\u4e60\u60ef\u7684\u65b9\u6cd5\u5c31\u662f\u5f3a\u8feb\u4f60\u81ea\u5df1\u5148\u8bd5\u7740\u81ea\u5df1\u56de\u7b54\u95ee\u9898\uff0c\u5e76\u4e14\u786e\u8ba4\u4f60\u7684\u56de\u7b54\u662f\u6b63\u786e\u7684\u3002\u4f60\u53ef\u4ee5\u901a\u8fc7\u6253\u7834\u4e00\u4e9b\u4e8b\u60c5\uff0c\u7528\u5b9e\u9a8c\u9a8c\u8bc1\u53ef\u80fd\u7684\u7b54\u6848\uff0c\u4ee5\u53ca\u81ea\u5df1\u8fdb\u884c\u7814\u7a76\u6765\u5b8c\u6210\u5b83\u3002\n\u5bf9\u4e8e\u8fd9\u4e2a\u7ec3\u4e60\uff0c\u6211\u60f3\u8ba9\u4f60\u4e0a\u7f51\u641c\u7d22printf\u7684\u6240\u6709\u683c\u5f0f\u5316\u5360\u4f4d\u7b26\u548c\u8f6c\u4e49\u5e8f\u5217\u3002\u8f6c\u4e49\u5e8f\u5217\u7c7b\u4f3c\\n\u6216\u8005\\r\uff0c\u53ef\u4ee5\u8ba9\u4f60\u5206\u522b\u6253\u5370\u65b0\u7684\u4e00\u884c\u6216\u8005 tab \u3002\u683c\u5f0f\u5316\u5360\u4f4d\u7b26\u7c7b\u4f3c%s\u6216\u8005%d\uff0c\u53ef\u4ee5\u8ba9\u4f60\u6253\u5370\u5b57\u7b26\u4e32\u6216\u6574\u6570\u3002\u627e\u5230\u6240\u6709\u7684\u8fd9\u4e9b\u4e1c\u897f\uff0c\u4ee5\u53ca\u5982\u4f55\u4fee\u6539\u5b83\u4eec\uff0c\u548c\u53ef\u8bbe\u7f6e\u7684\u201c\u7cbe\u5ea6\u201d\u548c\u5bbd\u5ea6\u7684\u79cd\u7c7b\u3002\n\u4ece\u73b0\u5728\u5f00\u59cb\uff0c\u8fd9\u4e9b\u4efb\u52a1\u4f1a\u653e\u5230\u9644\u52a0\u9898\u91cc\u9762\uff0c\u4f60\u5e94\u8be5\u53bb\u5b8c\u6210\u5b83\u4eec\u3002\n\u5982\u4f55\u4f7f\u5b83\u5d29\u6e83\n\u5c1d\u8bd5\u4e0b\u9762\u7684\u4e00\u4e9b\u4e1c\u897f\u6765\u4f7f\u4f60\u7684\u7a0b\u5e8f\u5d29\u6e83\uff0c\u5728\u4f60\u7684\u7535\u8111\u4e0a\u5b83\u4eec\u53ef\u80fd\u4f1a\u5d29\u6e83\uff0c\u4e5f\u53ef\u80fd\u4e0d\u4f1a\u3002\n\n\u4ece\u7b2c\u4e00\u4e2aprintf\u4e2d\u53bb\u6389age\u5e76\u91cd\u65b0\u7f16\u8bd1\uff0c\u4f60\u5e94\u8be5\u4f1a\u5f97\u5230\u4e00\u5927\u4e32\u7684\u8b66\u544a\u3002\n\u8fd0\u884c\u65b0\u7684\u7a0b\u5e8f\uff0c\u5b83\u4f1a\u5d29\u6e83\uff0c\u6216\u8005\u6253\u5370\u51fa\u5947\u602a\u7684\u5e74\u9f84\u3002\n\u5c06printf\u6062\u590d\u539f\u6837\uff0c\u5e76\u4e14\u53bb\u6389age\u7684\u521d\u503c\uff0c\u5c06\u90a3\u4e00\u884c\u6539\u4e3aint age;\uff0c\u4e4b\u540e\u91cd\u65b0\u6784\u5efa\u5e76\u8fd0\u884c\u3002\n\n# edit ex3.c to break printf\n$ make ex3\ncc -Wall -g    ex3.c   -o ex3\nex3.c: In function 'main':\nex3.c:8: warning: too few arguments for format\nex3.c:5: warning: unused variable 'age'\n$ .\/ex3\nI am -919092456 years old.\nI am 72 inches tall.\n# edit ex3.c again to fix printf, but don't init age\n$ make ex3\ncc -Wall -g    ex3.c   -o ex3\nex3.c: In function 'main':\nex3.c:8: warning: 'age' is used uninitialized in this function\n$ .\/ex3\nI am 0 years old.\nI am 72 inches tall.\n$\n\u9644\u52a0\u9898\n\n\u627e\u5230\u5c3d\u53ef\u80fd\u591a\u7684\u65b9\u6cd5\u4f7fex3\u5d29\u6e83\u3002\n\u6267\u884cman 3 printf\u6765\u9605\u8bfb\u5176\u5b83\u53ef\u7528\u7684'%'\u683c\u5f0f\u5316\u5360\u4f4d\u7b26\u3002\u5982\u679c\u4f60\u5728\u5176\u5b83\u8bed\u8a00\u4e2d\u4f7f\u7528\u8fc7\u5b83\u4eec\uff0c\u5e94\u8be5\u770b\u7740\u975e\u5e38\u719f\u6089\uff08\u5b83\u4eec\u6765\u6e90\u4e8eprintf\uff09\u3002\n\u5c06ex3\u6dfb\u52a0\u5230\u4f60\u7684Makefile\u7684all\u5217\u8868\u4e2d\u3002\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u53ef\u4ee5\u4f7f\u7528make clean all\u6765\u6784\u5efa\u4f60\u6240\u6709\u7684\u7ec3\u4e60\u3002\n\u5c06ex3\u6dfb\u52a0\u5230\u4f60\u7684Makefile\u7684clean\u5217\u8868\u4e2d\u3002\u5f53\u4f60\u9700\u8981\u7684\u65f6\u5019\u4f7f\u7528make clean\u53ef\u4ee5\u5220\u9664\u5b83\u3002\n","categories":"\u7ec3\u4e601","tags":["Makefile","stdio","make"]},{"title":"Valgrind \u4ecb\u7ecd","url":"https:\/\/naka507.github.io\/posts\/B9CDA195B24A4F6A.html","content":"Valgrind \u4ecb\u7ecd\n\u73b0\u5728\u662f\u4ecb\u7ecd\u53e6\u4e00\u4e2a\u5de5\u5177\u7684\u65f6\u95f4\u4e86\uff0c\u5728\u4f60\u5b66\u4e60C\u7684\u8fc7\u7a0b\u4e2d\uff0c\u4f60\u4f1a\u65f6\u65f6\u523b\u523b\u7528\u5230\u5b83\uff0c\u5b83\u5c31\u662f Valgrind\u3002\u6211\u73b0\u5728\u5c31\u5411\u4f60\u4ecb\u7ecd Valgrind\uff0c\u662f\u56e0\u4e3a\u4ece\u73b0\u5728\u5f00\u59cb\u4f60\u5c06\u4f1a\u5728\u201c\u5982\u4f55\u4f7f\u5b83\u5d29\u6e83\u201d\u4e00\u8282\u4e2d\u7528\u5230\u5b83\u3002Valgrind\u662f\u4e00\u4e2a\u8fd0\u884c\u4f60\u7684\u7a0b\u5e8f\u7684\u7a0b\u5e8f\uff0c\u5e76\u4e14\u968f\u540e\u4f1a\u62a5\u544a\u6240\u6709\u4f60\u72af\u4e0b\u7684\u53ef\u6015\u9519\u8bef\u3002\u5b83\u662f\u4e00\u6b3e\u76f8\u5f53\u68d2\u7684\u81ea\u7531\u8f6f\u4ef6\uff0c\u6211\u5728\u7f16\u5199C\u4ee3\u7801\u65f6\u4e00\u76f4\u4f7f\u7528\u5b83\u3002\n\u56de\u5fc6\u4e00\u4e0b\u5728\u4e0a\u4e00\u7ae0\u4e2d\uff0c\u6211\u8ba9\u4f60\u79fb\u9664printf\u7684\u4e00\u4e2a\u53c2\u6570\uff0c\u6765\u4f7f\u4f60\u7684\u4ee3\u7801\u5d29\u6e83\u3002\u5b83\u6253\u5370\u51fa\u4e86\u4e00\u4e9b\u5947\u602a\u7684\u7ed3\u679c\uff0c\u4f46\u6211\u5e76\u6ca1\u6709\u544a\u8bc9\u4f60\u4e3a\u4ec0\u4e48\u5b83\u4f1a\u8fd9\u6837\u6253\u5370\u3002\u8fd9\u4e2a\u7ec3\u4e60\u4e2d\u6211\u4eec\u8981\u4f7f\u7528Valgrind\u6765\u641e\u6e05\u695a\u4e3a\u4ec0\u4e48\u3002\n\n\u6ce8\n\n\n\u8fd9\u672c\u4e66\u7684\u524d\u51e0\u7ae0\u8bb2\u89e3\u4e86\u4e00\u5c0f\u6bb5\u4ee3\u7801\uff0c\u540c\u65f6\u63ba\u6742\u4e86\u4e00\u4e9b\u5fc5\u8981\u7684\u5de5\u5177\uff0c\u5b83\u4eec\u5728\u672c\u4e66\u7684\u5269\u4f59\u7ae0\u8282\u4f1a\u7528\u5230\u3002\u8fd9\u6837\u505a\u7684\u539f\u56e0\u662f\uff0c\u9605\u8bfb\u8fd9\u672c\u4e66\u7684\u5927\u591a\u6570\u4eba\u90fd\u4e0d\u719f\u6089\u7f16\u8bd1\u8bed\u8a00\uff0c\u4e5f\u5fc5\u7136\u4e0d\u719f\u6089\u81ea\u52a8\u5316\u7684\u8f85\u52a9\u5de5\u5177\u3002\u901a\u8fc7\u5148\u8ba9\u4f60\u61c2\u5f97\u5982\u4f55\u4f7f\u7528make\u548cValgrind\uff0c\u6211\u53ef\u4ee5\u5728\u540e\u9762\u4f7f\u7528\u5b83\u4eec\u66f4\u5feb\u5730\u6559\u4f60C\u8bed\u8a00\uff0c\u4ee5\u53ca\u5e2e\u52a9\u4f60\u5c3d\u65e9\u627e\u51fa\u6240\u6709\u7684bug\u3002\n\n\n\u8fd9\u4e00\u7ae0\u4e4b\u540e\u6211\u5c31\u4e0d\u518d\u4ecb\u7ecd\u66f4\u591a\u7684\u5de5\u5177\u4e86\uff0c\u6bcf\u7ae0\u7684\u5185\u5bb9\u5927\u90e8\u5206\u662f\u4ee3\u7801\uff0c\u4ee5\u53ca\u5c11\u91cf\u7684\u8bed\u6cd5\u3002\u7136\u800c\uff0c\u6211\u4e5f\u4f1a\u63d0\u53ca\u5c11\u91cf\u5de5\u5177\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u5b83\u6765\u771f\u6b63\u4e86\u89e3\u53d1\u751f\u4e86\u4ec0\u4e48\uff0c\u4ee5\u53ca\u66f4\u597d\u5730\u4e86\u89e3\u5e38\u89c1\u7684\u9519\u8bef\u548c\u95ee\u9898\u3002\n\n\u5b89\u88c5 Valgrind\n\u4f60\u53ef\u4ee5\u7528OS\u4e0a\u7684\u5305\u7ba1\u7406\u5668\u6765\u5b89\u88c5Valgrind\uff0c\u4f46\u662f\u6211\u60f3\u8ba9\u4f60\u5b66\u4e60\u5982\u4f55\u4ece\u6e90\u7801\u5b89\u88c5\u7a0b\u5e8f\u3002\u8fd9\u6d89\u53ca\u5230\u4e0b\u9762\u51e0\u4e2a\u6b65\u9aa4\uff1a\n\n\u4e0b\u8f7d\u6e90\u7801\u7684\u5f52\u6863\u6587\u4ef6\u6765\u83b7\u5f97\u6e90\u7801\n\u89e3\u538b\u5f52\u6863\u6587\u4ef6\uff0c\u5c06\u6587\u4ef6\u63d0\u53d6\u5230\u4f60\u7684\u7535\u8111\u4e0a\n\u8fd0\u884c.\/configure\u6765\u5efa\u7acb\u6784\u5efa\u6240\u9700\u7684\u914d\u7f6e\n\u8fd0\u884cmake\u6765\u6784\u5efa\u6e90\u7801\uff0c\u5c31\u50cf\u4e4b\u524d\u6240\u505a\u7684\u90a3\u6837\n\u8fd0\u884csudo make install\u6765\u5c06\u5b83\u5b89\u88c5\u5230\u4f60\u7684\u7535\u8111\n\n\u4e0b\u9762\u662f\u6267\u884c\u4ee5\u4e0a\u6b65\u9aa4\u7684\u811a\u672c\uff0c\u6211\u60f3\u8ba9\u4f60\u590d\u5236\u5b83\uff1a\n# 1) Download it (use wget if you don't have curl)\ncurl -O http:\/\/valgrind.org\/downloads\/valgrind-3.6.1.tar.bz2\n\n# use md5sum to make sure it matches the one on the site\nmd5sum valgrind-3.6.1.tar.bz2\n\n# 2) Unpack it.\ntar -xjvf valgrind-3.6.1.tar.bz2\n\n# cd into the newly created directory\ncd valgrind-3.6.1\n\n# 3) configure it\n.\/configure\n\n# 4) make it\nmake\n\n# 5) install it (need root)\nsudo make install\n\u6309\u7167\u8fd9\u4efd\u811a\u672c\uff0c\u4f46\u662f\u5982\u679c Valgrind \u6709\u65b0\u7684\u7248\u672c\u8bf7\u66f4\u65b0\u5b83\u3002\u5982\u679c\u5b83\u4e0d\u80fd\u6b63\u5e38\u6267\u884c\uff0c\u4e5f\u8bf7\u8bd5\u7740\u6df1\u5165\u7814\u7a76\u539f\u56e0\u3002\n\u4f7f\u7528 Valgrind\n\u4f7f\u7528 Valgrind \u5341\u5206\u7b80\u5355\uff0c\u53ea\u8981\u6267\u884cvalgrind theprogram\uff0c\u5b83\u5c31\u4f1a\u8fd0\u884c\u4f60\u7684\u7a0b\u5e8f\uff0c\u968f\u540e\u6253\u5370\u51fa\u4f60\u7684\u7a0b\u5e8f\u8fd0\u884c\u65f6\u51fa\u73b0\u7684\u6240\u6709\u9519\u8bef\u3002\u5728\u8fd9\u4e2a\u7ec3\u4e60\u4e2d\uff0c\u6211\u4eec\u4f1a\u5d29\u6e83\u5728\u4e00\u4e2a\u9519\u8bef\u8f93\u51fa\u4e0a\uff0c\u7136\u540e\u4f1a\u4fee\u590d\u5b83\u3002\n\u9996\u5148\uff0c\u8fd9\u91cc\u6709\u4e00\u4e2aex3.c\u7684\u6545\u610f\u51fa\u9519\u7684\u7248\u672c\uff0c\u53eb\u505aex4.c\u3002\u51fa\u4e8e\u7ec3\u4e60\u76ee\u7684\uff0c\u5c06\u5b83\u518d\u6b21\u8f93\u5165\u5230\u6587\u4ef6\u4e2d\uff1a\n#include &lt;stdio.h&gt;\n\n\/* Warning: This program is wrong on purpose. *\/\n\nint main()\n{\n    int age = 10;\n    int height;\n\n    printf(\"I am %d years old.\\n\");\n    printf(\"I am %d inches tall.\\n\", height);\n\n    return 0;\n}\n\u4f60\u4f1a\u53d1\u73b0\uff0c\u9664\u4e86\u4e24\u4e2a\u7ecf\u5178\u7684\u9519\u8bef\u5916\uff0c\u5176\u4f59\u90e8\u5206\u90fd\u76f8\u540c\uff1a\n\n\u6ca1\u6709\u521d\u59cb\u5316height\u53d8\u91cf\n\u6ca1\u6709\u5c06age\u53d8\u91cf\u4f20\u5165\u7b2c\u4e00\u4e2aprintf\u51fd\u6570\n\n\u4f60\u4f1a\u770b\u5230\u4ec0\u4e48\n\u73b0\u5728\u6211\u4eec\u50cf\u901a\u5e38\u4e00\u6837\u6784\u5efa\u5b83\uff0c\u4f46\u662f\u4e0d\u8981\u76f4\u63a5\u8fd0\u884c\uff0c\u800c\u662f\u4f7f\u7528Valgrind\u6765\u8fd0\u884c\u5b83\uff08\u89c1\u6e90\u7801\uff1a\"\u4f7f\u7528Valgrind\u6784\u5efa\u5e76\u8fd0\u884c ex4.c\"\uff09\uff1a\n$ make ex4\ncc -Wall -g    ex4.c   -o ex4\nex4.c: In function 'main':\nex4.c:10: warning: too few arguments for format\nex4.c:7: warning: unused variable 'age'\nex4.c:11: warning: 'height' is used uninitialized in this function\n$ valgrind .\/ex4\n==3082== Memcheck, a memory error detector\n==3082== Copyright (C) 2002-2010, and GNU GPL'd, by Julian Seward et al.\n==3082== Using Valgrind-3.6.0.SVN-Debian and LibVEX; rerun with -h for copyright info\n==3082== Command: .\/ex4\n==3082==\nI am -16775432 years old.\n==3082== Use of uninitialised value of size 8\n==3082==    at 0x4E730EB: _itoa_word (_itoa.c:195)\n==3082==    by 0x4E743D8: vfprintf (vfprintf.c:1613)\n==3082==    by 0x4E7E6F9: printf (printf.c:35)\n==3082==    by 0x40052B: main (ex4.c:11)\n==3082==\n==3082== Conditional jump or move depends on uninitialised value(s)\n==3082==    at 0x4E730F5: _itoa_word (_itoa.c:195)\n==3082==    by 0x4E743D8: vfprintf (vfprintf.c:1613)\n==3082==    by 0x4E7E6F9: printf (printf.c:35)\n==3082==    by 0x40052B: main (ex4.c:11)\n==3082==\n==3082== Conditional jump or move depends on uninitialised value(s)\n==3082==    at 0x4E7633B: vfprintf (vfprintf.c:1613)\n==3082==    by 0x4E7E6F9: printf (printf.c:35)\n==3082==    by 0x40052B: main (ex4.c:11)\n==3082==\n==3082== Conditional jump or move depends on uninitialised value(s)\n==3082==    at 0x4E744C6: vfprintf (vfprintf.c:1613)\n==3082==    by 0x4E7E6F9: printf (printf.c:35)\n==3082==    by 0x40052B: main (ex4.c:11)\n==3082==\nI am 0 inches tall.\n==3082==\n==3082== HEAP SUMMARY:\n==3082==     in use at exit: 0 bytes in 0 blocks\n==3082==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated\n==3082==\n==3082== All heap blocks were freed -- no leaks are possible\n==3082==\n==3082== For counts of detected and suppressed errors, rerun with: -v\n==3082== Use --track-origins=yes to see where uninitialised values come from\n==3082== ERROR SUMMARY: 4 errors from 4 contexts (suppressed: 4 from 4)\n$\n\n\u6ce8\n\n\n\u5982\u679c\u4f60\u8fd0\u884c\u4e86Valgrind\uff0c\u5b83\u663e\u793a\u4e00\u4e9b\u7c7b\u4f3c\u4e8eby 0x4052112: (below main) (libc-start.c:226)\u7684\u4e1c\u897f\uff0c\u800c\u4e0d\u662fmain.c\u4e2d\u7684\u884c\u53f7\uff0c\u4f60\u9700\u8981\u4f7f\u7528valgrind --track-origins=yes .\/ex4\u547d\u4ee4\u6765\u8fd0\u884c\u4f60\u7684Valgrind\u3002\u7531\u4e8e\u67d0\u4e9b\u539f\u56e0\uff0cvalgrind\u7684Debian\u548cUbuntu\u4e0a\u7684\u7248\u672c\u4f1a\u8fd9\u6837\uff0c\u4f46\u662f\u5176\u5b83\u7684\u4e0d\u4f1a\u3002\n\n\u4e0a\u9762\u90a3\u6bb5\u8f93\u51fa\u975e\u5e38\u957f\uff0c\u56e0\u4e3aValgrind\u5728\u660e\u786e\u5730\u544a\u8bc9\u4f60\u7a0b\u5e8f\u4e2d\u7684\u6bcf\u4e2a\u9519\u8bef\u90fd\u5728\u54ea\u513f\u3002\u8ba9\u6211\u4eec\u4ece\u5f00\u5934\u9010\u884c\u5206\u6790\u4e00\u4e0b\uff08\u884c\u53f7\u5728\u5de6\u8fb9\uff0c\u4f60\u53ef\u4ee5\u53c2\u7167\uff09\uff1a\n1\n\u4f60\u6267\u884c\u4e86\u901a\u5e38\u7684make ex4\u6765\u6784\u5efa\u5b83\u3002\u786e\u4fdd\u4f60\u770b\u5230\u7684cc\u547d\u4ee4\u548c\u5b83\u4e00\u6837\uff0c\u5e76\u4e14\u5e26\u6709-g\u9009\u9879\uff0c\u5426\u5219Valgrind\u7684\u8f93\u51fa\u4e0d\u4f1a\u5e26\u4e0a\u884c\u53f7\u3002\n2~6\n\u8981\u6ce8\u610f\u7f16\u8bd1\u5668\u4e5f\u4f1a\u5411\u4f60\u62a5\u544a\u6e90\u7801\u7684\u9519\u8bef\uff0c\u5b83\u8b66\u544a\u4f60\u201c\u5411\u683c\u5f0f\u5316\u51fd\u6570\u4f20\u5165\u4e86\u8fc7\u5c11\u7684\u53d8\u91cf\u201d\uff0c\u56e0\u4e3a\u4f60\u5fd8\u8bb0\u5305\u542bage\u53d8\u91cf\u3002\n7\n\u7136\u540e\u4f7f\u7528valgrind .\/ex4\u6765\u8fd0\u884c\u7a0b\u5e8f\u3002\n8\n\u4e4b\u540eValgrind\u53d8\u5f97\u5341\u5206\u5947\u602a\uff0c\u5e76\u5411\u4f60\u62a5\u9519\uff1a\n14~18\n\u5728main (ex4.c:11)\uff08\u610f\u601d\u662f\u6587\u4ef6ex4.c\u7684main\u51fd\u6570\u7684\u7b2c11\u884c\uff09\u7684\u90a3\u884c\u4e2d\uff0c\u6709\u201c\u5927\u5c0f\u4e3a8\u7684\u672a\u521d\u59cb\u5316\u7684\u503c\u201d\u3002\u4f60\u901a\u8fc7\u67e5\u770b\u9519\u8bef\u627e\u5230\u4e86\u5b83\uff0c\u5e76\u4e14\u5728\u5b83\u4e0b\u9762\u770b\u5230\u4e86\u201c\u6808\u8e2a\u8ff9\u201d\u3002\u6700\u5f00\u59cb\u770b\u5230\u7684\u90a3\u884c(ex4.c:11)\u5728\u6700\u4e0b\u9762\uff0c\u5982\u679c\u4f60\u4e0d\u660e\u767d\u54ea\u91cc\u51fa\u9519\u4e86\uff0c\u4f60\u53ef\u4ee5\u5411\u4e0a\u770b\uff0c\u6bd4\u5982printf.c:35\u3002\u901a\u5e38\u6700\u4e0b\u9762\u7684\u4e00\u884c\u6700\u91cd\u8981\uff08\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\u662f\u7b2c18\u884c\uff09\u3002\n20~24\n\u4e0b\u4e00\u4e2a\u9519\u8bef\u4f4d\u4e8e main \u51fd\u6570\u4e2d\u7684 ex4.c:11\u3002Valgrind\u4e0d\u559c\u6b22\u8fd9\u4e00\u884c\uff0c\u5b83\u8bf4\u7684\u662f\u4e00\u4e9b if \u8bed\u53e5\u6216\u8005 while \u5faa\u73af\u57fa\u4e8e\u4e00\u4e2a\u672a\u521d\u59cb\u5316\u7684\u503c\uff0c\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\u662fheight\u3002\n25~35\n\u5269\u4e0b\u7684\u9519\u8bef\u90fd\u5927\u540c\u5c0f\u5f02\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u503c\u8fd8\u5728\u7ee7\u7eed\u4f7f\u7528\u3002\n37~46\n\u6700\u540e\u7a0b\u5e8f\u9000\u51fa\u4e86\uff0cValgrind\u663e\u793a\u51fa\u4e00\u4efd\u6458\u8981\uff0c\u544a\u8bc9\u4f60\u7a0b\u5e8f\u6709\u591a\u70c2\u3002\n\u8fd9\u6bb5\u4fe1\u606f\u8bfb\u8d77\u6765\u4f1a\u76f8\u5f53\u591a\uff0c\u4e0b\u9762\u662f\u4f60\u7684\u5904\u7406\u65b9\u6cd5\uff1a\n\n\u65e0\u8bba\u4ec0\u4e48\u65f6\u5019\u4f60\u8fd0\u884cC\u7a0b\u5e8f\u5e76\u4e14\u4f7f\u5b83\u5de5\u4f5c\uff0c\u90fd\u5e94\u8be5\u4f7f\u7528Valgrind\u91cd\u65b0\u8fd0\u884c\u5b83\u6765\u68c0\u67e5\u3002\n\u5bf9\u4e8e\u5f97\u5230\u7684\u6bcf\u4e2a\u9519\u8bef\uff0c\u627e\u5230\u201c\u6e90\u7801:\u884c\u6570\u201d\u63d0\u793a\u7684\u4f4d\u7f6e\uff0c\u7136\u540e\u4fee\u590d\u5b83\u3002\u4f60\u53ef\u4ee5\u4e0a\u7f51\u641c\u7d22\u9519\u8bef\u4fe1\u606f\uff0c\u6765\u5f04\u6e05\u695a\u5b83\u7684\u610f\u601d\u3002\n\u4e00\u65e6\u4f60\u7684\u7a0b\u5e8f\u5728Valgrind\u4e0b\u4e0d\u51fa\u73b0\u4efb\u4f55\u9519\u8bef\u4fe1\u606f\uff0c\u5e94\u8be5\u5c31\u597d\u4e86\u3002\u4f60\u53ef\u80fd\u5b66\u4f1a\u4e86\u5982\u4f55\u7f16\u5199\u4ee3\u7801\u7684\u4e00\u4e9b\u6280\u5de7\u3002\n\n\u5728\u8fd9\u4e2a\u7ec3\u4e60\u4e2d\u6211\u5e76\u4e0d\u671f\u5f85\u4f60\u9a6c\u4e0a\u5b8c\u5168\u638c\u63e1Valgrind\uff0c\u4f46\u662f\u4f60\u5e94\u8be5\u5b89\u88c5\u5e76\u4e14\u5b66\u4f1a\u5982\u4f55\u5feb\u901f\u4f7f\u7528\u5b83\uff0c\u4ee5\u4fbf\u6211\u4eec\u5c06\u5b83\u7528\u4e8e\u540e\u9762\u7684\u7ec3\u4e60\u3002\n\u9644\u52a0\u9898\n\n\u6309\u7167\u4e0a\u9762\u7684\u6307\u5bfc\uff0c\u4f7f\u7528Valgrind\u548c\u7f16\u8bd1\u5668\u4fee\u590d\u8fd9\u4e2a\u7a0b\u5e8f\u3002\n\u5728\u4e92\u8054\u7f51\u4e0a\u67e5\u8be2Valgrind\u76f8\u5173\u7684\u8d44\u6599\u3002\n\u4e0b\u8f7d\u53e6\u4e00\u4e2a\u7a0b\u5e8f\u5e76\u624b\u52a8\u6784\u5efa\u5b83\u3002\u5c1d\u8bd5\u4e00\u4e9b\u4f60\u5df2\u7ecf\u4f7f\u7528\uff0c\u4f46\u4ece\u6765\u6ca1\u6709\u624b\u52a8\u6784\u5efa\u7684\u7a0b\u5e8f\u3002\n\u770b\u770bValgrind\u7684\u6e90\u7801\u662f\u5982\u4f55\u5728\u76ee\u5f55\u4e0b\u7ec4\u7ec7\u7684\uff0c\u5e76\u4e14\u9605\u8bfb\u5b83\u7684Makefile\u6587\u4ef6\u3002\u4e0d\u8981\u62c5\u5fc3\uff0c\u8fd9\u5bf9\u6211\u6765\u8bf4\u6ca1\u6709\u4efb\u4f55\u610f\u4e49\u3002\n","categories":"\u7ec3\u4e601","tags":["Valgrind","make","\u6e90\u7801"]},{"title":"\u4e00\u4e2aC\u7a0b\u5e8f\u7684\u7ed3\u6784","url":"https:\/\/naka507.github.io\/posts\/624C7D3C62504470.html","content":"\u4e00\u4e2aC\u7a0b\u5e8f\u7684\u7ed3\u6784\n\u4f60\u5df2\u7ecf\u77e5\u9053\u4e86\u5982\u4f55\u4f7f\u7528printf\uff0c\u4e5f\u6709\u4e86\u53ef\u4ee5\u968f\u610f\u4f7f\u7528\u7684\u4e00\u4e9b\u5de5\u5177\uff0c\u73b0\u5728\u8ba9\u6211\u4eec\u9010\u884c\u5206\u6790\u4e00\u4e2a\u7b80\u5355\u7684C\u7a0b\u5e8f\uff0c\u4ee5\u4fbf\u4f60\u4e86\u89e3\u5b83\u662f\u5982\u4f55\u7ec4\u7ec7\u7684\u3002\u5728\u8fd9\u4e2a\u7a0b\u5e8f\u91cc\u4f60\u4f1a\u7f16\u5199\u4e00\u4e9b\u4e0d\u662f\u5f88\u719f\u6089\u7684\u4e1c\u897f\uff0c\u6211\u4f1a\u8f7b\u677e\u5730\u628a\u5b83\u4eec\u62c6\u5f00\u3002\u4e4b\u540e\u5728\u540e\u9762\u7684\u51e0\u7ae0\u6211\u4eec\u5c06\u4f1a\u5904\u7406\u8fd9\u4e9b\u6982\u5ff5\u3002\n#include &lt;stdio.h&gt;\n\n\/* This is a comment. *\/\nint main(int argc, char *argv[])\n{\n    int distance = 100;\n\n    \/\/ this is also a comment\n    printf(\"You are %d miles away.\\n\", distance);\n\n    return 0;\n}\n\u624b\u52a8\u8f93\u5165\u8fd9\u6bb5\u4ee3\u7801\u5e76\u8fd0\u884c\u5b83\uff0c\u4e4b\u540e\u786e\u4fdd\u5728Valgrind\u4e0b\u4e0d\u51fa\u73b0\u4efb\u4f55\u9519\u8bef\u3002\u4f60\u53ef\u80fd\u4e0d\u4f1a\u8fd9\u6837\u505a\uff0c\u4f46\u4f60\u5f97\u4e60\u60ef\u5b83\u3002\n\u4f60\u4f1a\u770b\u5230\u4ec0\u4e48\n\u8fd9\u771f\u662f\u4e00\u6bb5\u65e0\u804a\u7684\u8f93\u51fa\uff0c\u4f46\u662f\u8fd9\u4e2a\u7ec3\u4e60\u7684\u76ee\u7684\u662f\u8ba9\u4f60\u5206\u6790\u4ee3\u7801\uff1a\n$ make ex5\ncc -Wall -g    ex5.c   -o ex5\n$ .\/ex5\nYou are 100 miles away.\n$\n\u5206\u89e3\u4ee3\u7801\n\u5f53\u4f60\u8f93\u51fa\u8fd9\u6bb5\u4ee3\u7801\u65f6\uff0c\u53ef\u80fd\u4f60\u53ea\u5f04\u6e05\u695a\u4e86\u8fd9\u6bb5\u4ee3\u7801\u4e2d\u7684\u4e00\u5c0f\u90e8\u5206C\u8bed\u8a00\u7279\u6027\u3002\u8ba9\u6211\u4eec\u5feb\u901f\u5730\u9010\u884c\u5206\u89e3\u5b83\uff0c\u4e4b\u540e\u6211\u4eec\u53ef\u4ee5\u505a\u4e00\u4e9b\u7ec3\u4e60\u6765\u66f4\u597d\u5730\u4e86\u89e3\u6bcf\u4e00\u90e8\u5206\uff1a\n\u3000\u3000ex5.c:1\n\u3000\u3000\u8fd9\u662f\u4e00\u4e2ainclude\uff0c\u5b83\u662f\u5c06\u4e00\u4e2a\u6587\u4ef6\u7684\u5185\u5bb9\u5bfc\u5165\u5230\u8fd9\u4e2a\u6587\u4ef6\u7684\u65b9\u5f0f\u3002C\u5177\u6709\u4f7f\u7528.h\u6269\u5c55\u540d\u4f5c\u4e3a\u5934\u6587\u4ef6\u7684\u60ef\u4f8b\u3002\u5934\u6587\u4ef6\u4e2d\u62e5\u6709\u4e00\u4e9b\u51fd\u6570\u7684\u5217\u8868\uff0c\u8fd9\u4e9b\u90fd\u662f\u4f60\u60f3\u5728\u7a0b\u5e8f\u4e2d\u4f7f\u7528\u7684\u51fd\u6570\u3002\n\u3000\u3000ex5.c:3\n\u3000\u3000\u8fd9\u662f\u591a\u884c\u6ce8\u91ca\uff0c\u4f60\u53ef\u4ee5\u5728\/*\u548c*\/\u4e4b\u95f4\u653e\u7f6e\u4efb\u610f\u591a\u884c\u3002\n\u3000\u3000ex5.c:4\n\u3000\u3000\u8fd9\u662f\u4e00\u4e2a\u4f60\u9047\u5230\u7684\u66f4\u590d\u6742\u7684 main \u51fd\u6570\u3002\u64cd\u4f5c\u7cfb\u7edf\u52a0\u8f7d\u5b8c\u4f60\u7684\u7a0b\u5e8f\uff0c\u4e4b\u540e\u4f1a\u8fd0\u884c\u53eb\u505amain\u7684\u51fd\u6570\uff0c\u8fd9\u662fC\u7a0b\u5e8f\u7684\u5de5\u4f5c\u65b9\u5f0f\u3002\u8fd9\u4e2a\u51fd\u6570\u53ea\u9700\u8981\u8fd4\u56deint\uff0c\u5e76\u63a5\u53d7\u4e24\u4e2a\u53c2\u6570\uff0c\u4e00\u4e2a\u662fint\u4f5c\u4e3a\u547d\u4ee4\u884c\u53c2\u6570\u7684\u6570\u91cf\uff0c\u53e6\u4e00\u4e2a\u662fchar*\u5b57\u7b26\u4e32\u7684\u6570\u7ec4\u4f5c\u4e3a\u547d\u4ee4\u884c\u53c2\u6570\u3002\u8fd9\u662f\u4e0d\u662f\u8ba9\u4eba\u96be\u4ee5\u7406\u89e3\uff1f\u4e0d\u7528\u62c5\u5fc3\uff0c\u6211\u4eec\u7a0d\u540e\u4f1a\u8bb2\u89e3\u5b83\u3002\n\u3000\u3000ex5.c:5\n\u3000\u3000\u4efb\u4f55\u51fd\u6570\u90fd\u4ee5{\u5b57\u7b26\u5f00\u59cb\uff0c\u5b83\u8868\u793a\u201c\u7a0b\u5e8f\u5757\u201d\u7684\u5f00\u59cb\u3002\u5728Python\u4e2d\u7528\u4e00\u4e2a:\u6765\u8868\u793a\u3002\u5728\u5176\u5b83\u8bed\u8a00\u4e2d\uff0c\u53ef\u80fd\u9700\u8981\u7528begin\u6216\u8005do\u6765\u8868\u793a\u3002\n\u3000\u3000ex5.c:6\n\u3000\u3000\u4e00\u4e2a\u53d8\u91cf\u7684\u58f0\u660e\u548c\u540c\u65f6\u7684\u8d4b\u503c\u3002\u4f60\u53ef\u4ee5\u4f7f\u7528\u8bed\u6cd5type name = value;\u6765\u521b\u5efa\u53d8\u91cf\u3002\u5728C\u7684\u8bed\u53e5\u4e2d\uff0c\u9664\u4e86\u903b\u8f91\u8bed\u53e5\uff0c\u90fd\u4ee5\u4e00\u4e2a;\uff08\u5206\u53f7\uff09\u6765\u7ed3\u5c3e\u3002\n\u3000\u3000ex5.c:8\n\u3000\u3000\u6ce8\u91ca\u7684\u53e6\u4e00\u79cd\u5f62\u5f0f\uff0c\u5b83\u5c31\u50cfPython\u6216Ruby\u7684\u6ce8\u91ca\u3002\u5b83\u4ee5\/\/\u5f00\u5934\uff0c\u76f4\u5230\u884c\u672b\u7ed3\u675f\u3002\n\u3000\u3000ex5.c:9\n\u3000\u3000\u8c03\u7528\u4e86\u6211\u4eec\u7684\u8001\u670b\u53cbprintf\u3002\u5c31\u50cf\u8bb8\u591a\u8bed\u8a00\u4e2d\u7684\u51fd\u6570\u8c03\u7528\uff0c\u4f7f\u7528\u8bed\u6cd5name(arg1, arg2);\u3002\u51fd\u6570\u53ef\u4ee5\u4e0d\u5e26\u4efb\u4f55\u53c2\u6570\uff0c\u4e5f\u53ef\u4ee5\u62e5\u6709\u4efb\u4f55\u6570\u91cf\u7684\u53c2\u6570\u3002printf\u51fd\u6570\u662f\u4e00\u7c7b\u7279\u522b\u7684\u51fd\u6570\uff0c\u53ef\u4ee5\u5e26\u53ef\u53d8\u6570\u91cf\u7684\u53c2\u6570\u3002\u6211\u4eec\u4f1a\u5728\u4e4b\u540e\u8bf4\u660e\u3002\n\u3000\u3000ex5.c:11\n\u3000\u3000\u4e00\u4e2amain\u51fd\u6570\u7684\u8fd4\u56de\u8bed\u53e5\uff0c\u5b83\u4f1a\u5411OS\u63d0\u4f9b\u9000\u51fa\u503c\u3002\u4f60\u53ef\u80fd\u4e0d\u719f\u6089Unix\u8f6f\u4ef6\u7684\u8fd4\u56de\u4ee3\u7801\uff0c\u6240\u4ee5\u8fd9\u4e2a\u4e5f\u653e\u5230\u540e\u9762\u53bb\u8bb2\u3002\n\u3000\u3000ex5.c:12\n\u3000\u3000\u6700\u540e\uff0c\u6211\u4eec\u4ee5\u4e00\u4e2a\u95ed\u5408\u7684}\u82b1\u62ec\u53f7\u6765\u7ed3\u675f\u4e86main\u51fd\u6570\u3002\u5b83\u5c31\u662f\u6574\u4e2a\u7a0b\u5e8f\u7684\u7ed3\u5c3e\u4e86\u3002\n\u5728\u8fd9\u6b21\u5206\u89e3\u4e2d\u6709\u5927\u91cf\u7684\u4fe1\u606f\uff0c\u6240\u4ee5\u4f60\u5e94\u8be5\u9010\u884c\u6765\u5b66\u4e60\uff0c\u5e76\u4e14\u786e\u4fdd\u81f3\u5c11\u638c\u63e1\u4e86\u80cc\u540e\u53d1\u751f\u4e86\u4ec0\u4e48\u3002\u4f60\u4e0d\u4e00\u5b9a\u4e86\u89e3\u6240\u6709\u4e1c\u897f\uff0c\u4f46\u662f\u5728\u6211\u4eec\u7ee7\u7eed\u4e4b\u524d\uff0c\u4f60\u53ef\u4ee5\u731c\u731c\u5b83\u4eec\u7684\u610f\u601d\u3002\n\u9644\u52a0\u9898\n\n\u5bf9\u4e8e\u6bcf\u4e00\u884c\uff0c\u5199\u51fa\u4f60\u4e0d\u7406\u89e3\u7684\u7b26\u53f7\uff0c\u5e76\u4e14\u770b\u770b\u662f\u5426\u80fd\u731c\u51fa\u5b83\u4eec\u7684\u610f\u601d\u3002\u5728\u7eb8\u4e0a\u5199\u4e0b\u4f60\u7684\u731c\u6d4b\uff0c\u4f60\u53ef\u4ee5\u5728\u4ee5\u540e\u68c0\u67e5\u5b83\uff0c\u770b\u770b\u662f\u5426\u6b63\u786e\u3002\n\u56de\u5934\u53bb\u770b\u4e4b\u524d\u51e0\u4e2a\u7ec3\u4e60\u7684\u6e90\u4ee3\u7801\uff0c\u5e76\u4e14\u50cf\u8fd9\u6837\u5206\u89e3\u4ee3\u7801\uff0c\u6765\u770b\u770b\u4f60\u662f\u5426\u4e86\u89e3\u5b83\u4eec\u3002\u5199\u4e0b\u4f60\u4e0d\u4e86\u89e3\u548c\u4e0d\u80fd\u81ea\u5df1\u89e3\u91ca\u7684\u4e1c\u897f\u3002\n","categories":"\u7ec3\u4e601","tags":["printf","include","\u7a0b\u5e8f\u5757"]},{"title":"\u53d8\u91cf\u7c7b\u578b","url":"https:\/\/naka507.github.io\/posts\/33CC823F6781FDB9.html","content":"\u53d8\u91cf\u7c7b\u578b\n\u4f60\u5e94\u8be5\u638c\u63e1\u4e86\u4e00\u4e2a\u7b80\u5355\u7684C\u7a0b\u5e8f\u7684\u7ed3\u6784\uff0c\u6240\u4ee5\u8ba9\u6211\u4eec\u6267\u884c\u4e0b\u4e00\u6b65\u7b80\u5355\u7684\u64cd\u4f5c\uff0c\u58f0\u660e\u4e0d\u540c\u7c7b\u578b\u7684\u53d8\u91cf\u3002\ninclude &lt;stdio.h&gt;\n\nint main(int argc, char *argv[])\n{\n    int distance = 100;\n    float power = 2.345f;\n    double super_power = 56789.4532;\n    char initial = 'A';\n    char first_name[] = \"Zed\";\n    char last_name[] = \"Shaw\";\n\n    printf(\"You are %d miles away.\\n\", distance);\n    printf(\"You have %f levels of power.\\n\", power);\n    printf(\"You have %f awesome super powers.\\n\", super_power);\n    printf(\"I have an initial %c.\\n\", initial);\n    printf(\"I have a first name %s.\\n\", first_name);\n    printf(\"I have a last name %s.\\n\", last_name);\n    printf(\"My whole name is %s %c. %s.\\n\",\n            first_name, initial, last_name);\n\n    return 0;\n}\n\u5728\u8fd9\u4e2a\u7a0b\u5e8f\u4e2d\u6211\u4eec\u58f0\u660e\u4e86\u4e0d\u540c\u7c7b\u578b\u7684\u53d8\u91cf\uff0c\u5e76\u4e14\u4f7f\u7528\u4e86\u4e0d\u540c\u7684printf\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u6765\u6253\u5370\u5b83\u4eec\u3002\n\u4f60\u4f1a\u770b\u5230\u4ec0\u4e48\n\u4f60\u7684\u8f93\u51fa\u5e94\u8be5\u548c\u6211\u7684\u7c7b\u4f3c\uff0c\u4f60\u53ef\u4ee5\u770b\u5230C\u7684\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u76f8\u4f3c\u4e8ePython\u6216\u5176\u5b83\u8bed\u8a00\uff0c\u5f88\u957f\u4e00\u6bb5\u65f6\u95f4\u4e2d\u90fd\u662f\u8fd9\u6837\u3002\n$ make ex6\ncc -Wall -g    ex6.c   -o ex6\n$ .\/ex6\nYou are 100 miles away.\nYou have 2.345000 levels of power.\nYou have 56789.453200 awesome super powers.\nI have an initial A.\nI have a first name Zed.\nI have a last name Shaw.\nMy whole name is Zed A. Shaw.\n$\n\u4f60\u53ef\u4ee5\u770b\u5230\u6211\u4eec\u62e5\u6709\u4e00\u7cfb\u5217\u7684\u201c\u7c7b\u578b\u201d\uff0c\u5b83\u4eec\u544a\u8bc9\u7f16\u8bd1\u5668\u53d8\u91cf\u5e94\u8be5\u8868\u793a\u6210\u4ec0\u4e48\uff0c\u4e4b\u540e\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u4f1a\u5339\u914d\u4e0d\u540c\u7684\u7c7b\u578b\u3002\u4e0b\u9762\u89e3\u91ca\u4e86\u5b83\u4eec\u5982\u4f55\u5339\u914d\uff1a\n\u6574\u6570\n\u3000\u3000\u4f7f\u7528int\u58f0\u660e\uff0c\u4f7f\u7528%d\u6765\u6253\u5370\u3002\n\u6d6e\u70b9\n\u3000\u3000\u4f7f\u7528float\u6216double\u58f0\u660e\uff0c\u4f7f\u7528%f\u6765\u6253\u5370\u3002\n\u5b57\u7b26\n\u3000\u3000\u4f7f\u7528char\u6765\u58f0\u660e\uff0c\u4ee5\u5468\u56f4\u5e26\u6709'\uff08\u5355\u5f15\u53f7\uff09\u7684\u5355\u4e2a\u5b57\u7b26\u6765\u8868\u793a\uff0c\u4f7f\u7528%c\u6765\u6253\u5370\u3002\n\u5b57\u7b26\u4e32\uff08\u5b57\u7b26\u6570\u7ec4\uff09\n\u3000\u3000\u4f7f\u7528char name[]\u6765\u58f0\u660e\uff0c\u4ee5\u5468\u56f4\u5e26\u6709\"\u7684\u4e00\u4e9b\u5b57\u7b26\u6765\u8868\u793a\uff0c\u4f7f\u7528%s\u6765\u6253\u5370\u3002\n\u4f60\u4f1a\u6ce8\u610f\u5230C\u8bed\u8a00\u4e2d\u533a\u5206\u5355\u5f15\u53f7\u7684char\u548c\u53cc\u5f15\u53f7\u7684char[]\u6216\u5b57\u7b26\u4e32\u3002\n\n\u6ce8\n\n\n\u5f53\u6211\u63d0\u53caC\u8bed\u8a00\u7c7b\u578b\u65f6\uff0c\u6211\u901a\u5e38\u4f1a\u4f7f\u7528char[]\u6765\u4ee3\u66ff\u6574\u4e2a\u7684char SOMENAME[]\u3002\u8fd9\u4e0d\u662f\u6709\u6548\u7684C\u8bed\u8a00\u4ee3\u7801\uff0c\u53ea\u662f\u4e00\u4e2a\u7528\u4e8e\u8ba8\u8bba\u7c7b\u578b\u7684\u4e00\u4e2a\u7b80\u5316\u8868\u8fbe\u65b9\u5f0f\u3002\n\n\u5982\u4f55\u4f7f\u5b83\u5d29\u6e83\n\u4f60\u53ef\u4ee5\u901a\u8fc7\u5411printf\u4f20\u9012\u9519\u8bef\u7684\u53c2\u6570\u6765\u8f7b\u6613\u4f7f\u8fd9\u4e2a\u7a0b\u5e8f\u5d29\u6e83\u3002\u4f8b\u5982\uff0c\u5982\u679c\u4f60\u627e\u5230\u6253\u5370\u6211\u7684\u540d\u5b57\u7684\u90a3\u884c\uff0c\u628ainitial\u653e\u5230first_name\u524d\u9762\uff0c\u4f60\u5c31\u5236\u9020\u4e86\u4e00\u4e2abug\u3002\u6267\u884c\u4e0a\u8ff0\u4fee\u6539\u7f16\u8bd1\u5668\u5c31\u4f1a\u5411\u4f60\u62a5\u9519\uff0c\u4e4b\u540e\u8fd0\u884c\u7684\u65f6\u5019\u4f60\u53ef\u80fd\u4f1a\u5f97\u5230\u4e00\u4e2a\u201c\u6bb5\u9519\u8bef\u201d\uff0c\u5c31\u50cf\u8fd9\u6837\uff1a\n$ make ex6\ncc -Wall -g    ex6.c   -o ex6\nex6.c: In function 'main':\nex6.c:19: warning: format '%s' expects type 'char *', but argument 2 has type 'int'\nex6.c:19: warning: format '%c' expects type 'int', but argument 3 has type 'char *'\n$ .\/ex6\nYou are 100 miles away.\nYou have 2.345000 levels of power.\nYou have 56789.453125 awesome super powers.\nI have an initial A.\nI have a first name Zed.\nI have a last name Shaw.\nSegmentation fault\n$\n\u5728Valgrind\u4e0b\u8fd0\u884c\u4fee\u6539\u540e\u7684\u7a0b\u5e8f\uff0c\u6765\u89c2\u5bdf\u5b83\u4f1a\u544a\u8bc9\u4f60\u4ec0\u4e48\u5173\u4e8e\u9519\u8bef\u201cInvalid read of size 1\u201d\u7684\u4e8b\u60c5\u3002\n\u9644\u52a0\u9898\n\n\u5bfb\u627e\u5176\u4ed6\u901a\u8fc7\u4fee\u6539printf\u4f7f\u8fd9\u6bb5C\u4ee3\u7801\u5d29\u6e83\u7684\u65b9\u6cd5\u3002\n\u641c\u7d22\u201cprintf\u683c\u5f0f\u5316\u201d\uff0c\u8bd5\u7740\u4f7f\u7528\u4e00\u4e9b\u9ad8\u7ea7\u7684\u5360\u4f4d\u7b26\u3002\n\u7814\u7a76\u53ef\u4ee5\u7528\u51e0\u79cd\u65b9\u6cd5\u6253\u5370\u6570\u5b57\u3002\u5c1d\u8bd5\u4ee5\u516b\u8fdb\u5236\u6216\u5341\u516d\u8fdb\u5236\u6253\u5370\uff0c\u6216\u8005\u5176\u5b83\u4f60\u627e\u5230\u7684\u65b9\u6cd5\u3002\n\u8bd5\u7740\u6253\u5370\u7a7a\u5b57\u7b26\u4e32\uff0c\u5373\"\"\u3002\n","categories":"\u7ec3\u4e601","tags":["\u7ed3\u6784","printf","stdio"]},{"title":"\u66f4\u591a\u53d8\u91cf\u548c\u4e00\u4e9b\u7b97\u672f","url":"https:\/\/naka507.github.io\/posts\/171C2758259C8DE1.html","content":"\u66f4\u591a\u53d8\u91cf\u548c\u4e00\u4e9b\u7b97\u672f\n\u4f60\u53ef\u4ee5\u901a\u8fc7\u58f0\u660eint\uff0cfloat\uff0cchar\u548cdouble\u7c7b\u578b\u7684\u53d8\u91cf\uff0c\u6765\u5bf9\u5b83\u4eec\u505a\u66f4\u591a\u7684\u4e8b\u60c5\uff0c\u8ba9\u6211\u4eec\u6765\u719f\u6089\u5b83\u4eec\u5427\u3002\u63a5\u4e0b\u6765\u6211\u4eec\u4f1a\u5728\u5404\u79cd\u6570\u5b66\u8868\u8fbe\u5f0f\u4e2d\u4f7f\u7528\u5b83\u4eec\uff0c\u6240\u4ee5\u6211\u4f1a\u5411\u4f60\u4ecb\u7ecdC\u7684\u57fa\u672c\u7b97\u672f\u64cd\u4f5c\u3002\nint main(int argc, char *argv[])\n{\n    int bugs = 100;\n    double bug_rate = 1.2;\n\n    printf(\"You have %d bugs at the imaginary rate of %f.\\n\",\n            bugs, bug_rate);\n\n    long universe_of_defects = 1L * 1024L * 1024L * 1024L;\n    printf(\"The entire universe has %ld bugs.\\n\",\n            universe_of_defects);\n\n    double expected_bugs = bugs * bug_rate;\n    printf(\"You are expected to have %f bugs.\\n\",\n            expected_bugs);\n\n    double part_of_universe = expected_bugs \/ universe_of_defects;\n    printf(\"That is only a %e portion of the universe.\\n\",\n            part_of_universe);\n\n    \/\/ this makes no sense, just a demo of something weird\n    char nul_byte = '\\0';\n    int care_percentage = bugs * nul_byte;\n    printf(\"Which means you should care %d%%.\\n\",\n            care_percentage);\n\n    return 0;\n}\n\u4e0b\u9762\u662f\u8fd9\u4e00\u5c0f\u6bb5\u65e0\u610f\u4e49\u4ee3\u7801\u80cc\u540e\u53d1\u751f\u7684\u4e8b\u60c5\uff1a\n\u3000\u3000ex7.c:1-4\n\u3000\u3000C\u7a0b\u5e8f\u7684\u901a\u5e38\u5f00\u59cb\u3002\n\u3000\u3000ex7.c:5-6\n\u3000\u3000\u4e3a\u4e00\u4e9b\u4f2a\u9020\u7684bug\u6570\u636e\u58f0\u660e\u4e86\u4e00\u4e2aint\u548c\u4e00\u4e2adouble\u53d8\u91cf\u3002\n\u3000\u3000ex7.c:8-9\n\u3000\u3000\u6253\u5370\u8fd9\u4e24\u4e2a\u53d8\u91cf\uff0c\u6ca1\u6709\u4ec0\u4e48\u65b0\u4e1c\u897f\u3002\n\u3000\u3000ex7.c:11\n\u3000\u3000\u4f7f\u7528\u4e86\u4e00\u4e2a\u65b0\u7684\u7c7b\u578blong\u6765\u58f0\u660e\u4e00\u4e2a\u5927\u7684\u6570\u503c\uff0c\u5b83\u53ef\u4ee5\u50a8\u5b58\u6bd4\u8f83\u5927\u7684\u6570\u3002\n\u3000\u3000ex7.c:12-13\n\u3000\u3000\u4f7f\u7528%ld\u6253\u5370\u51fa\u8fd9\u4e2a\u53d8\u91cf\uff0c\u6211\u4eec\u6dfb\u52a0\u4e86\u4e2a\u4fee\u9970\u7b26\u5230%d\u4e0a\u9762\u3002\u6dfb\u52a0\u7684\"l\"\u8868\u793a\u5c06\u5b83\u5f53\u4f5c\u957f\u6574\u5f62\u6253\u5370\u3002\n\u3000\u3000ex7.c:15-17\n\u3000\u3000\u53ea\u662f\u66f4\u591a\u7684\u7b97\u672f\u8fd0\u7b97\u548c\u6253\u5370\u3002\n\u3000\u3000ex7.c:19-21\n\u3000\u3000\u7f16\u64b0\u4e86\u4e00\u6bb5\u4f60\u7684bug\u7387\u7684\u63cf\u8ff0\uff0c\u8fd9\u91cc\u7684\u8ba1\u7b97\u975e\u5e38\u4e0d\u7cbe\u786e\u3002\u7ed3\u679c\u975e\u5e38\u5c0f\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u4f7f\u7528%e\u4ee5\u79d1\u5b66\u8bb0\u6570\u6cd5\u7684\u5f62\u5f0f\u6253\u5370\u5b83\u3002\n\u3000\u3000ex7.c:24\n\u3000\u3000\u4ee5\u7279\u6b8a\u7684\u8bed\u6cd5'\\0'\u58f0\u660e\u4e86\u4e00\u4e2a\u5b57\u7b26\u3002\u8fd9\u6837\u521b\u5efa\u4e86\u4e00\u4e2a\u201c\u7a7a\u5b57\u8282\u201d\u5b57\u7b26\uff0c\u5b9e\u9645\u4e0a\u662f\u6570\u5b570\u3002\n\u3000\u3000ex7.c:25\n\u3000\u3000\u4f7f\u7528\u8fd9\u4e2a\u5b57\u7b26\u4e58\u4e0abug\u7684\u6570\u91cf\uff0c\u5b83\u4ea7\u751f\u4e860\uff0c\u4f5c\u4e3a\u201c\u6709\u591a\u5c11\u662f\u4f60\u9700\u8981\u5173\u5fc3\u7684\u201d\u7684\u7ed3\u679c\u3002\u8fd9\u6761\u8bed\u53e5\u5c55\u793a\u4e86\u4f60\u6709\u65f6\u4f1a\u78b0\u5230\u7684\u4e11\u964b\u505a\u6cd5\u3002\n\u3000\u3000ex7.c:26-27\n\u3000\u3000\u5c06\u5b83\u6253\u5370\u51fa\u6765\uff0c\u6ce8\u610f\u6211\u4f7f\u7528\u4e86%%\uff08\u4e24\u4e2a\u767e\u5206\u53f7\uff09\u6765\u6253\u5370\u4e00\u4e2a%\u5b57\u7b26\u3002\n\u3000\u3000ex7.c:28-30\n\u3000\u3000main\u51fd\u6570\u7684\u7ed3\u5c3e\u3002\n\u8fd9\u4e00\u6bb5\u4ee3\u7801\u53ea\u662f\u4e2a\u7ec3\u4e60\uff0c\u5b83\u6f14\u793a\u4e86\u8bb8\u591a\u7b97\u672f\u8fd0\u7b97\u3002\u5728\u6700\u540e\uff0c\u5b83\u4e5f\u5c55\u793a\u4e86\u8bb8\u591a\u4f60\u80fd\u5728C\u4e2d\u770b\u5230\uff0c\u4f46\u662f\u5176\u5b83\u8bed\u8a00\u4e2d\u6ca1\u6709\u7684\u6280\u5de7\u3002\u5bf9\u4e8eC\u6765\u8bf4\uff0c\u4e00\u4e2a\u201c\u5b57\u7b26\u201d\u540c\u65f6\u4e5f\u662f\u4e00\u4e2a\u6574\u6570\uff0c\u867d\u7136\u5b83\u5f88\u5c0f\uff0c\u4f46\u7684\u786e\u5982\u6b64\u3002\u8fd9\u610f\u5473\u7740\u4f60\u53ef\u4ee5\u5bf9\u5b83\u505a\u7b97\u672f\u8fd0\u7b97\uff0c\u65e0\u8bba\u662f\u597d\u662f\u574f\uff0c\u8bb8\u591a\u8f6f\u4ef6\u4e2d\u4e5f\u662f\u8fd9\u6837\u505a\u7684\u3002\n\u5728\u6700\u540e\u4e00\u90e8\u5206\u4e2d\uff0c\u4f60\u7b2c\u4e00\u6b21\u89c1\u5230C\u8bed\u8a00\u662f\u5982\u4f55\u76f4\u63a5\u8bbf\u95ee\u673a\u5668\u7684\u3002\u6211\u4eec\u4f1a\u5728\u540e\u9762\u7684\u7ae0\u8282\u4e2d\u6df1\u5165\u3002\n\u4f60\u4f1a\u770b\u5230\u4ec0\u4e48\n\u901a\u5e38\uff0c\u4f60\u5e94\u8be5\u770b\u5230\u5982\u4e0b\u8f93\u51fa\uff1a\n$ make ex7\ncc -Wall -g    ex7.c   -o ex7\n$ .\/ex7\nYou have 100 bugs at the imaginary rate of 1.200000.\nThe entire universe has 1073741824 bugs.\nYou are expected to have 120.000000 bugs.\nThat is only a 1.117587e-07 portion of the universe.\nWhich means you should care 0%.\n$\n\u5982\u4f55\u4f7f\u5b83\u5d29\u6e83\n\u50cf\u4e4b\u524d\u4e00\u6837\uff0c\u5411printf\u4f20\u5165\u9519\u8bef\u7684\u53c2\u6570\u6765\u4f7f\u5b83\u5d29\u6e83\u3002\u5bf9\u6bd4%c\uff0c\u770b\u770b\u5f53\u4f60\u4f7f\u7528%s\u6765\u6253\u5370nul_byte\u53d8\u91cf\u65f6\u4f1a\u53d1\u751f\u4ec0\u4e48\u3002\u505a\u5b8c\u8fd9\u4e9b\u4e4b\u540e\uff0c\u5728Valgrind\u4e0b\u8fd0\u884c\u5b83\u770b\u770b\u5173\u4e8e\u4f60\u7684\u8fd9\u6b21\u5c1d\u8bd5\u4f1a\u8f93\u51fa\u4ec0\u4e48\u3002\n\u9644\u52a0\u9898\n\n\u628a\u4e3auniverse_of_defects\u8d4b\u503c\u7684\u6570\u6539\u4e3a\u4e0d\u540c\u7684\u5927\u5c0f\uff0c\u89c2\u5bdf\u7f16\u8bd1\u5668\u7684\u8b66\u544a\u3002\n\u8fd9\u4e9b\u5de8\u5927\u7684\u6570\u5b57\u5b9e\u9645\u4e0a\u6253\u5370\u6210\u4e86\u4ec0\u4e48\uff1f\n\u5c06long\u6539\u4e3aunsigned long\uff0c\u5e76\u8bd5\u7740\u627e\u5230\u5bf9\u5b83\u6765\u8bf4\u592a\u5927\u7684\u6570\u5b57\u3002\n\u4e0a\u7f51\u641c\u7d22unsigned\u505a\u4e86\u4ec0\u4e48\u3002\n\u8bd5\u7740\u81ea\u5df1\u89e3\u91ca\uff08\u5728\u4e0b\u4e2a\u7ec3\u4e60\u4e4b\u524d\uff09\u4e3a\u4ec0\u4e48char\u53ef\u4ee5\u548cint\u76f8\u4e58\u3002\n","categories":"\u7ec3\u4e601","tags":["bug","\u5b57\u7b26","make"]},{"title":"\u5927\u5c0f\u548c\u6570\u7ec4","url":"https:\/\/naka507.github.io\/posts\/C2C3F49A54034E72.html","content":"\u5927\u5c0f\u548c\u6570\u7ec4\n\u5728\u4e0a\u4e00\u4e2a\u7ec3\u4e60\u4e2d\u4f60\u505a\u4e86\u4e00\u4e9b\u7b97\u672f\u8fd0\u7b97\uff0c\u5e76\u4e14\u4f7f\u7528\u4e86'\\0'\uff08\u7a7a\uff09\u5b57\u7b26\u3002\u8fd9\u5bf9\u4e8e\u5176\u5b83\u8bed\u8a00\u6765\u8bf4\u975e\u5e38\u5947\u602a\uff0c\u56e0\u4e3a\u5b83\u4eec\u628a\u201c\u5b57\u7b26\u4e32\u201d\u548c\u201c\u5b57\u8282\u6570\u7ec4\u201d\u770b\u505a\u4e0d\u540c\u7684\u4e1c\u897f\u3002\u4f46\u662fC\u4e2d\u7684\u5b57\u7b26\u4e32\u5c31\u662f\u5b57\u8282\u6570\u7ec4\uff0c\u5e76\u4e14\u53ea\u6709\u4e0d\u540c\u7684\u6253\u5370\u51fd\u6570\u624d\u77e5\u9053\u5b83\u4eec\u7684\u4e0d\u540c\u3002\n\u5728\u6211\u771f\u6b63\u89e3\u91ca\u5176\u91cd\u8981\u6027\u4e4b\u524d\uff0c\u6211\u5148\u8981\u4ecb\u7ecd\u4e00\u4e9b\u6982\u5ff5\uff1asizeof\u548c\u6570\u7ec4\u3002\u4e0b\u9762\u662f\u6211\u4eec\u5c06\u8981\u8ba8\u8bba\u7684\u4e00\u6bb5\u4ee3\u7801\uff1a\n#include &lt;stdio.h&gt;\n\nint main(int argc, char *argv[])\n{\n    int areas[] = {10, 12, 13, 14, 20};\n    char name[] = \"Zed\";\n    char full_name[] = {\n        'Z', 'e', 'd',\n         ' ', 'A', '.', ' ',\n         'S', 'h', 'a', 'w', '\\0'\n    };\n\n    \/\/ WARNING: On some systems you may have to change the\n    \/\/ %ld in this code to a %u since it will use unsigned ints\n    printf(\"The size of an int: %ld\\n\", sizeof(int));\n    printf(\"The size of areas (int[]): %ld\\n\",\n            sizeof(areas));\n    printf(\"The number of ints in areas: %ld\\n\",\n            sizeof(areas) \/ sizeof(int));\n    printf(\"The first area is %d, the 2nd %d.\\n\",\n            areas[0], areas[1]);\n\n    printf(\"The size of a char: %ld\\n\", sizeof(char));\n    printf(\"The size of name (char[]): %ld\\n\",\n            sizeof(name));\n    printf(\"The number of chars: %ld\\n\",\n            sizeof(name) \/ sizeof(char));\n\n    printf(\"The size of full_name (char[]): %ld\\n\",\n            sizeof(full_name));\n    printf(\"The number of chars: %ld\\n\",\n            sizeof(full_name) \/ sizeof(char));\n\n    printf(\"name=\\\"%s\\\" and full_name=\\\"%s\\\"\\n\",\n            name, full_name);\n\n    return 0;\n}\n\u8fd9\u6bb5\u4ee3\u7801\u4e2d\u6211\u4eec\u521b\u5efa\u4e86\u4e00\u4e9b\u4e0d\u540c\u6570\u636e\u7c7b\u578b\u7684\u6570\u7ec4\u3002\u7531\u4e8e\u6570\u7ec4\u662fC\u8bed\u8a00\u5de5\u4f5c\u673a\u5236\u7684\u6838\u5fc3\uff0c\u6709\u5927\u91cf\u7684\u65b9\u6cd5\u53ef\u4ee5\u7528\u6765\u521b\u5efa\u6570\u7ec4\u3002\u6211\u4eec\u6682\u4e14\u4f7f\u7528type name[] = {initializer};\u8bed\u6cd5\uff0c\u4e4b\u540e\u6211\u4eec\u4f1a\u6df1\u5165\u7814\u7a76\u3002\u8fd9\u4e2a\u8bed\u6cd5\u7684\u610f\u601d\u662f\uff0c\u201c\u6211\u60f3\u8981\u90a3\u4e2a\u7c7b\u578b\u7684\u6570\u7ec4\u5e76\u4e14\u521d\u59cb\u5316\u4e3a{..}\u201d\u3002C\u8bed\u8a00\u770b\u5230\u5b83\u65f6\uff0c\u4f1a\u505a\u8fd9\u4e9b\u4e8b\u60c5\uff1a\n\n\u67e5\u770b\u5b83\u7684\u7c7b\u578b\uff0c\u4ee5\u7b2c\u4e00\u4e2a\u6570\u7ec4\u4e3a\u4f8b\uff0c\u5b83\u662fint\u3002\n\u67e5\u770b[]\uff0c\u770b\u5230\u4e86\u6ca1\u6709\u63d0\u4f9b\u957f\u5ea6\u3002\n\u67e5\u770b\u521d\u59cb\u5316\u8868\u8fbe\u5f0f{10, 12, 13, 14, 20}\uff0c\u5e76\u4e14\u4e86\u89e3\u4f60\u60f3\u5728\u6570\u7ec4\u4e2d\u5b58\u653e\u8fd95\u4e2a\u6574\u6570\u3002\n\u5728\u7535\u8111\u4e2d\u5f00\u8f9f\u51fa\u4e00\u5757\u7a7a\u95f4\uff0c\u53ef\u4ee5\u4f9d\u6b21\u5b58\u653e\u8fd95\u4e2a\u6574\u6570\u3002\n\u5c06\u6570\u7ec4\u547d\u540d\u4e3aareas\uff0c\u4e5f\u5c31\u662f\u4f60\u60f3\u8981\u7684\u540d\u5b57\uff0c\u5e76\u4e14\u5728\u5f53\u524d\u4f4d\u7f6e\u7ed9\u5143\u7d20\u8d4b\u503c\u3002\n\n\u5728areas\u7684\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u521b\u5efa\u4e86\u4e00\u4e2a\u542b\u67095\u4e2a\u6574\u6570\u7684\u6570\u7ec4\u6765\u5b58\u653e\u90a3\u4e9b\u6570\u5b57\u3002\u5f53\u5b83\u770b\u5230char name[] = \"Zed\";\u65f6\uff0c\u5b83\u4f1a\u6267\u884c\u76f8\u540c\u7684\u6b65\u9aa4\u3002\u6211\u4eec\u5148\u5047\u8bbe\u5b83\u521b\u5efa\u4e86\u4e00\u4e2a\u542b\u67093\u4e2a\u5b57\u7b26\u7684\u6570\u7ec4\uff0c\u5e76\u4e14\u628a\u5b57\u7b26\u8d4b\u503c\u7ed9name\u3002\u6211\u4eec\u521b\u5efa\u7684\u6700\u540e\u4e00\u4e2a\u6570\u7ec4\u662ffull_name\uff0c\u4f46\u662f\u6211\u4eec\u7528\u4e86\u4e00\u4e2a\u6bd4\u8f83\u9ebb\u70e6\u7684\u8bed\u6cd5\uff0c\u6bcf\u6b21\u7528\u4e00\u4e2a\u5b57\u7b26\u5c06\u5176\u62fc\u5199\u51fa\u6765\u3002\u5bf9C\u6765\u8bf4\uff0cname\u548cfull_name\u7684\u65b9\u6cd5\u90fd\u53ef\u4ee5\u521b\u5efa\u5b57\u7b26\u6570\u7ec4\u3002\n\u5728\u6587\u4ef6\u7684\u5269\u4f59\u90e8\u5206\uff0c\u6211\u4eec\u4f7f\u7528\u4e86sizeof\u5173\u952e\u5b57\u6765\u95eeC\u8bed\u8a00\u8fd9\u4e9b\u4e1c\u897f\u5360\u591a\u5c11\u4e2a\u5b57\u8282\u3002C\u8bed\u8a00\u65e0\u975e\u662f\u5185\u5b58\u5757\u7684\u5927\u5c0f\u548c\u5730\u5740\u4ee5\u53ca\u5728\u4e0a\u9762\u6267\u884c\u7684\u64cd\u4f5c\u3002\u5b83\u5411\u4f60\u63d0\u4f9b\u4e86sizeof\u4fbf\u4e8e\u4f60\u7406\u89e3\u5b83\u4eec\uff0c\u6240\u4ee5\u4f60\u5728\u4f7f\u7528\u4e00\u4e2a\u4e1c\u897f\u4e4b\u524d\u53ef\u4ee5\u5148\u8be2\u95ee\u5b83\u5360\u591a\u5c11\u7a7a\u95f4\u3002\n\u8fd9\u662f\u6bd4\u8f83\u9ebb\u70e6\u7684\u5730\u65b9\uff0c\u6240\u4ee5\u6211\u4eec\u5148\u8fd0\u884c\u5b83\uff0c\u4e4b\u540e\u518d\u89e3\u91ca\u3002\n\u4f60\u4f1a\u770b\u5230\u4ec0\u4e48\n$ make ex8\ncc -Wall -g    ex8.c   -o ex8\n$ .\/ex8\nThe size of an int: 4\nThe size of areas (int[]): 20\nThe number of ints in areas: 5\nThe first area is 10, the 2nd 12.\nThe size of a char: 1\nThe size of name (char[]): 4\nThe number of chars: 4\nThe size of full_name (char[]): 12\nThe number of chars: 12\nname=\"Zed\" and full_name=\"Zed A. Shaw\"\n$\n\u73b0\u5728\u4f60\u53ef\u4ee5\u770b\u5230\u8fd9\u4e9b\u4e0d\u540cprintf\u8c03\u7528\u7684\u8f93\u51fa\uff0c\u5e76\u4e14\u77a5\u89c1C\u8bed\u8a00\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u3002\u4f60\u7684\u8f93\u51fa\u5b9e\u9645\u4e0a\u53ef\u80fd\u4f1a\u8ddf\u6211\u7684\u5b8c\u5168\u4e0d\u540c\uff0c\u56e0\u4e3a\u4f60\u7535\u8111\u4e0a\u7684\u6574\u6570\u5927\u5c0f\u53ef\u80fd\u4f1a\u4e0d\u4e00\u6837\u3002\u4e0b\u9762\u6211\u4f1a\u8fc7\u4e00\u904d\u6211\u7684\u8f93\u51fa\uff1a\n\n\u8bd1\u8005\u6ce8\uff1a16\u4f4d\u673a\u5668\u4e0a\u7684int\u662f16\u4f4d\u7684\uff0c\u4e0d\u8fc7\u73b0\u572816\u4f4d\u673a\u5f88\u5c11\u89c1\u4e86\u5427\u3002\n\n\u3000\u30005\n\u3000\u3000\u6211\u7684\u7535\u8111\u8ba4\u4e3aint\u7684\u5927\u5c0f\u662f4\u4e2a\u5b57\u8282\u3002\u4f60\u7684\u7535\u8111\u4e0a\u6839\u636e\u4f4d\u6570\u4e0d\u540c\u53ef\u80fd\u4f1a\u4f7f\u7528\u4e0d\u540c\u7684\u5927\u5c0f\u3002\n\u3000\u30006\n\u3000\u3000areas\u4e2d\u542b\u67095\u4e2a\u6574\u6570\uff0c\u6240\u4ee5\u6211\u7684\u7535\u8111\u81ea\u7136\u5c31\u9700\u898120\u4e2a\u5b57\u8282\u6765\u50a8\u5b58\u5b83\u3002\n\u3000\u30007\n\u3000\u3000\u5982\u679c\u6211\u4eec\u628aareas\u7684\u5927\u5c0f\u4e0eint\u7684\u5927\u5c0f\u76f8\u9664\uff0c\u6211\u4eec\u5c31\u4f1a\u5f97\u5230\u5143\u7d20\u6570\u91cf\u4e3a5\u3002\u8fd9\u4e5f\u7b26\u5408\u6211\u4eec\u5728\u521d\u59cb\u5316\u8bed\u53e5\u4e2d\u6240\u5199\u7684\u4e1c\u897f\u3002\n\u3000\u30008\n\u3000\u3000\u63a5\u7740\u6211\u4eec\u8bbf\u95ee\u4e86\u6570\u7ec4\uff0c\u8bfb\u51faareas[0]\u548careas[1]\uff0c\u8fd9\u4e5f\u610f\u5473\u7740C\u8bed\u8a00\u7684\u6570\u7ec4\u4e0b\u6807\u662f0\u5f00\u5934\u7684\uff0c\u50cfPython\u548cRuby\u4e00\u6837\u3002\n\u3000\u30009~11\n\u3000\u3000\u6211\u4eec\u5bf9name\u6570\u7ec4\u6267\u884c\u540c\u6837\u7684\u64cd\u4f5c\uff0c\u4f46\u662f\u6ce8\u610f\u5230\u6570\u7ec4\u7684\u5927\u5c0f\u6709\u4e9b\u5947\u602a\uff0c\u5b83\u53604\u4e2a\u5b57\u8282\uff0c\u4f46\u662f\u6211\u4eec\u7528\u4e86\u4e09\u4e2a\u5b57\u7b26\u6765\u6253\u51fa\"Zed\"\u3002\u90a3\u4e48\u7b2c\u56db\u4e2a\u5b57\u7b26\u662f\u54ea\u513f\u6765\u7684\u5462\uff1f\n\u3000\u300012~13\n\u3000\u3000\u6211\u4eec\u5bf9full_name\u6570\u7ec4\u6267\u884c\u4e86\u76f8\u540c\u7684\u64cd\u4f5c\uff0c\u4f46\u5b83\u662f\u6b63\u5e38\u7684\u3002\n\u3000\u300013\n\u3000\u3000\u6700\u540e\u6211\u4eec\u6253\u5370\u51faname\u548cfull_name\uff0c\u6839\u636eprintf\u8bc1\u660e\u5b83\u4eec\u5b9e\u9645\u4e0a\u5c31\u662f\u201c\u5b57\u7b26\u4e32\u201d\u3002\n\u786e\u4fdd\u4f60\u7406\u89e3\u4e86\u4e0a\u9762\u8fd9\u4e9b\u4e1c\u897f\uff0c\u5e76\u4e14\u77e5\u9053\u8fd9\u4e9b\u8f93\u51fa\u5bf9\u5e94\u54ea\u4e9b\u521b\u5efa\u7684\u53d8\u91cf\u3002\u540e\u9762\u6211\u4eec\u4f1a\u5728\u5b83\u7684\u57fa\u7840\u4e0a\u63a2\u7d22\u66f4\u591a\u5173\u4e8e\u6570\u7ec4\u548c\u5b58\u50a8\u7a7a\u95f4\u7684\u4e8b\u60c5\u3002\n\u5982\u4f55\u4f7f\u5b83\u5d29\u6e83\n\u4f7f\u8fd9\u4e2a\u7a0b\u5e8f\u5d29\u6e83\u975e\u5e38\u5bb9\u6613\uff0c\u53ea\u9700\u8981\u5c1d\u8bd5\u4e0b\u9762\u8fd9\u4e9b\u4e8b\u60c5\uff1a\n\n\u5c06full_name\u6700\u540e\u7684'\\0'\u53bb\u6389\uff0c\u5e76\u91cd\u65b0\u8fd0\u884c\u5b83\uff0c\u5728valgrind\u4e0b\u518d\u8fd0\u884c\u4e00\u904d\u3002\u73b0\u5728\u5c06full_name\u7684\u5b9a\u4e49\u4ecemain\u51fd\u6570\u4e2d\u79fb\u5230\u5b83\u7684\u4e0a\u9762\uff0c\u5c1d\u8bd5\u5728Valgrind\u4e0b\u8fd0\u884c\u5b83\u6765\u770b\u770b\u662f\u5426\u80fd\u5f97\u5230\u4e00\u4e9b\u65b0\u7684\u9519\u8bef\u3002\u6709\u4e9b\u60c5\u51b5\u4e0b\uff0c\u4f60\u4f1a\u8db3\u591f\u5e78\u8fd0\uff0c\u4e0d\u4f1a\u5f97\u5230\u4efb\u4f55\u9519\u8bef\u3002\n\u5c06areas[0]\u6539\u4e3aareas[10]\u5e76\u6253\u5370\uff0c\u6765\u770b\u770bValgrind\u4f1a\u8f93\u51fa\u4ec0\u4e48\u3002\n\u5c1d\u8bd5\u4e0a\u8ff0\u64cd\u4f5c\u7684\u4e0d\u540c\u53d8\u5f0f\uff0c\u4e5f\u5bf9name\u548cfull_name\u6267\u884c\u4e00\u904d\u3002\n\n\u9644\u52a0\u9898\n\n\u5c1d\u8bd5\u4f7f\u7528areas[0] = 100;\u4ee5\u53ca\u76f8\u4f3c\u7684\u64cd\u4f5c\u5bf9areas\u7684\u5143\u7d20\u8d4b\u503c\u3002\n\u5c1d\u8bd5\u5bf9name\u548cfull_name\u7684\u5143\u7d20\u8d4b\u503c\u3002\n\u5c1d\u8bd5\u5c06areas\u7684\u4e00\u4e2a\u5143\u7d20\u8d4b\u503c\u4e3aname\u4e2d\u7684\u5b57\u7b26\u3002\n\u4e0a\u7f51\u641c\u7d22\u5728\u4e0d\u540c\u7684CPU\u4e0a\u6574\u6570\u6240\u5360\u7684\u4e0d\u540c\u5927\u5c0f\u3002\n","categories":"\u7ec3\u4e601","tags":["\u5b57\u8282","\u6570\u7ec4","\u51fd\u6570"]},{"title":"\u6570\u7ec4\u548c\u5b57\u7b26\u4e32","url":"https:\/\/naka507.github.io\/posts\/3046A11FC869E5C2.html","content":"\u6570\u7ec4\u548c\u5b57\u7b26\u4e32\n\u4e0a\u4e00\u4e2a\u7ec3\u4e60\u4e2d\uff0c\u6211\u4eec\u5b66\u4e60\u4e86\u5982\u4f55\u521b\u5efa\u57fa\u672c\u7684\u6570\u7ec4\uff0c\u4ee5\u53ca\u6570\u7ec4\u5982\u4f55\u6620\u5c04\u4e3a\u5b57\u7b26\u4e32\u3002\u8fd9\u4e2a\u7ec3\u4e60\u4e2d\u6211\u4eec\u4f1a\u66f4\u52a0\u5168\u9762\u5730\u5c55\u793a\u6570\u7ec4\u548c\u5b57\u7b26\u4e32\u7684\u76f8\u4f3c\u4e4b\u5904\uff0c\u5e76\u4e14\u6df1\u5165\u4e86\u89e3\u66f4\u591a\u5185\u5b58\u5e03\u5c40\u7684\u77e5\u8bc6\u3002\n\u8fd9\u4e2a\u7ec3\u4e60\u5411\u4f60\u5c55\u793a\u4e86C\u53ea\u662f\u7b80\u5355\u5730\u5c06\u5b57\u7b26\u4e32\u50a8\u5b58\u4e3a\u5b57\u7b26\u6570\u7ec4\uff0c\u5e76\u4e14\u5728\u7ed3\u5c3e\u52a0\u4e0a'\\0'\uff08\u7a7a\u5b57\u7b26\uff09\u3002\u4f60\u53ef\u80fd\u5728\u4e0a\u4e2a\u7ec3\u4e60\u4e2d\u5f97\u5230\u4e86\u6697\u793a\uff0c\u56e0\u4e3a\u6211\u4eec\u624b\u52a8\u8fd9\u6837\u505a\u4e86\u3002\u4e0b\u9762\u6211\u4f1a\u901a\u8fc7\u5c06\u5b83\u4e0e\u6570\u5b57\u6570\u7ec4\u6bd4\u8f83\uff0c\u7528\u53e6\u4e00\u79cd\u65b9\u6cd5\u66f4\u6e05\u695a\u5730\u5b9e\u73b0\u5b83\u3002\n#include &lt;stdio.h&gt;\n\nint main(int argc, char *argv[])\n{\n    int numbers[4] = {0};\n    char name[4] = {'a'};\n\n    \/\/ first, print them out raw\n    printf(\"numbers: %d %d %d %d\\n\",\n            numbers[0], numbers[1],\n            numbers[2], numbers[3]);\n\n    printf(\"name each: %c %c %c %c\\n\",\n            name[0], name[1],\n            name[2], name[3]);\n\n    printf(\"name: %s\\n\", name);\n\n    \/\/ setup the numbers\n    numbers[0] = 1;\n    numbers[1] = 2;\n    numbers[2] = 3;\n    numbers[3] = 4;\n\n    \/\/ setup the name\n    name[0] = 'Z';\n    name[1] = 'e';\n    name[2] = 'd';\n    name[3] = '\\0';\n\n    \/\/ then print them out initialized\n    printf(\"numbers: %d %d %d %d\\n\",\n            numbers[0], numbers[1],\n            numbers[2], numbers[3]);\n\n    printf(\"name each: %c %c %c %c\\n\",\n            name[0], name[1],\n            name[2], name[3]);\n\n    \/\/ print the name like a string\n    printf(\"name: %s\\n\", name);\n\n    \/\/ another way to use name\n    char *another = \"Zed\";\n\n    printf(\"another: %s\\n\", another);\n\n    printf(\"another each: %c %c %c %c\\n\",\n            another[0], another[1],\n            another[2], another[3]);\n\n    return 0;\n}\n\u5728\u8fd9\u6bb5\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u521b\u5efa\u4e86\u4e00\u4e9b\u6570\u7ec4\uff0c\u5e76\u5bf9\u6570\u7ec4\u5143\u7d20\u8d4b\u503c\u3002\u5728numbers\u4e2d\u6211\u4eec\u8bbe\u7f6e\u4e86\u4e00\u4e9b\u6570\u5b57\uff0c\u7136\u800c\u5728names\u4e2d\u6211\u4eec\u5b9e\u9645\u4e0a\u624b\u52a8\u6784\u9020\u4e86\u4e00\u4e2a\u5b57\u7b26\u4e32\u3002\n\u4f60\u4f1a\u770b\u5230\u4ec0\u4e48\n\u5f53\u4f60\u8fd0\u884c\u8fd9\u6bb5\u4ee3\u7801\u7684\u65f6\u5019\uff0c\u4f60\u5e94\u8be5\u9996\u5148\u770b\u5230\u6240\u6253\u5370\u7684\u6570\u7ec4\u7684\u5185\u5bb9\u521d\u59cb\u5316\u4e3a0\u503c\uff0c\u4e4b\u540e\u6253\u5370\u521d\u59cb\u5316\u540e\u7684\u5185\u5bb9\uff1a\n$ make ex9\ncc -Wall -g    ex9.c   -o ex9\n$ .\/ex9\nnumbers: 0 0 0 0\nname each: a   \nname: a\nnumbers: 1 2 3 4\nname each: Z e d\nname: Zed\nanother: Zed\nanother each: Z e d\n$\n\u4f60\u4f1a\u6ce8\u610f\u5230\u8fd9\u4e2a\u7a0b\u5e8f\u4e2d\u6709\u4e00\u4e9b\u5f88\u6709\u8da3\u7684\u4e8b\u60c5\uff1a\n\n\u6211\u5e76\u6ca1\u6709\u63d0\u4f9b\u5168\u90e8\u76844\u4e2a\u53c2\u6570\u6765\u521d\u59cb\u5316\u5b83\u3002\u8fd9\u662fC\u7684\u4e00\u4e2a\u7b80\u5199\uff0c\u5982\u679c\u4f60\u53ea\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5143\u7d20\uff0c\u5269\u4e0b\u7684\u90fd\u4f1a\u4e3a0\u3002\nnumbers\u7684\u6bcf\u4e2a\u5143\u7d20\u88ab\u6253\u5370\u65f6\uff0c\u5b83\u4eec\u90fd\u8f93\u51fa0\u3002\nnames\u7684\u6bcf\u4e2a\u5143\u7d20\u88ab\u6253\u5370\u65f6\uff0c\u53ea\u663e\u793a\u4e86\u7b2c\u4e00\u4e2a\u5143\u7d20'a'\uff0c\u56e0\u4e3a'\\0'\u662f\u7279\u6b8a\u5b57\u7b26\u800c\u4e0d\u4f1a\u663e\u793a\u3002\n\u7136\u540e\u6211\u4eec\u9996\u6b21\u6253\u5370names\uff0c\u6253\u5370\u51fa\u4e86\"a\"\uff0c\u56e0\u4e3a\u5728\u521d\u59cb\u5316\u8868\u8fbe\u5f0f\u4e2d\uff0c'a'\u5b57\u7b26\u4e4b\u540e\u7684\u7a7a\u95f4\u90fd\u7528'\\0'\u586b\u5145\uff0c\u662f\u4ee5'\\0'\u7ed3\u5c3e\u7684\u6709\u6548\u5b57\u7b26\u4e32\u3002\n\u6211\u4eec\u63a5\u7740\u901a\u8fc7\u624b\u52a8\u4e3a\u6bcf\u4e2a\u5143\u7d20\u8d4b\u503c\u6765\u5efa\u7acb\u6570\u7ec4\uff0c\u5e76\u4e14\u518d\u6b21\u628a\u5b83\u6253\u5370\u51fa\u6765\u3002\u770b\u770b\u4ed6\u4eec\u53d1\u751f\u4e86\u4ec0\u4e48\u6539\u53d8\u3002\u73b0\u5728numbers\u5df2\u7ecf\u8bbe\u7f6e\u597d\u4e86\uff0c\u770b\u770bnames\u5b57\u7b26\u4e32\u5982\u4f55\u6b63\u786e\u6253\u5370\u51fa\u6211\u7684\u540d\u5b57\u3002\n\u521b\u5efa\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e5f\u6709\u4e24\u79cd\u8bed\u6cd5\uff1a\u7b2c\u516d\u884c\u7684char name[4] = {'a'}\uff0c\u6216\u8005\u7b2c44\u884c\u7684char *another = \"name\"\u3002\u524d\u8005\u4e0d\u600e\u4e48\u5e38\u7528\uff0c\u4f60\u5e94\u8be5\u5c06\u540e\u8005\u7528\u4e8e\u5b57\u7b26\u4e32\u5b57\u9762\u503c\u3002\n\n\u6ce8\u610f\u6211\u4f7f\u7528\u4e86\u76f8\u540c\u7684\u8bed\u6cd5\u548c\u4ee3\u7801\u98ce\u683c\u6765\u548c\u6574\u6570\u6570\u7ec4\u548c\u5b57\u7b26\u6570\u7ec4\u4ea4\u4e92\uff0c\u4f46\u662fprintf\u8ba4\u4e3aname\u662f\u4e2a\u5b57\u7b26\u4e32\u3002\u518d\u6b21\u5f3a\u8c03\uff0c\u8fd9\u662f\u56e0\u4e3a\u5bf9C\u8bed\u8a00\u6765\u8bf4\uff0c\u5b57\u7b26\u6570\u7ec4\u548c\u5b57\u7b26\u4e32\u6ca1\u6709\u4ec0\u4e48\u4e0d\u540c\u3002\n\u6700\u540e\uff0c\u5f53\u4f60\u4f7f\u7528\u5b57\u7b26\u4e32\u5b57\u9762\u503c\u65f6\u4f60\u5e94\u8be5\u7528char *another = \"Literal\"\u8bed\u6cd5\uff0c\u5b83\u4f1a\u4ea7\u751f\u76f8\u540c\u7684\u4e1c\u897f\uff0c\u4f46\u662f\u66f4\u52a0\u7b26\u5408\u8bed\u8a00\u4e60\u60ef\uff0c\u4e5f\u66f4\u7701\u4e8b\u3002\n\u5982\u4f55\u4f7f\u5b83\u5d29\u6e83\nC\u4e2d\u6240\u6709bug\u7684\u5927\u591a\u6570\u6765\u6e90\u90fd\u662f\u5fd8\u4e86\u9884\u7559\u51fa\u8db3\u591f\u7684\u7a7a\u95f4\uff0c\u6216\u8005\u5fd8\u4e86\u5728\u5b57\u7b26\u4e32\u672b\u5c3e\u52a0\u4e0a\u4e00\u4e2a'\\0'\u3002\u4e8b\u5b9e\u4e0a\uff0c\u8fd9\u4e9bbug\u662f\u975e\u5e38\u666e\u904d\u5e76\u4e14\u96be\u4ee5\u6539\u6b63\u7684\uff0c\u5927\u90e8\u5206\u4f18\u79c0\u7684C\u4ee3\u7801\u90fd\u4e0d\u4f1a\u4f7f\u7528C\u98ce\u683c\u5b57\u7b26\u4e32\u3002\u4e0b\u4e00\u4e2a\u7ec3\u4e60\u4e2d\u6211\u4eec\u4f1a\u5b66\u5230\u5982\u4f55\u5f7b\u5e95\u907f\u514dC\u98ce\u683c\u5b57\u7b26\u4e32\u3002\n\u4f7f\u8fd9\u4e2a\u7a0b\u5e8f\u5d29\u6e83\u7684\u7684\u5173\u952e\u5c31\u662f\u62ff\u6389\u5b57\u7b26\u4e32\u7ed3\u5c3e\u7684'\\0'\u3002\u4e0b\u9762\u662f\u5b9e\u73b0\u5b83\u7684\u4e00\u4e9b\u9014\u5f84\uff1a\n\n\u5220\u6389name\u7684\u521d\u59cb\u5316\u8868\u8fbe\u5f0f\u3002\n\u65e0\u610f\u4e2d\u8bbe\u7f6ename[3] = 'A'\uff0c\u4e8e\u662f\u5b83\u5c31\u6ca1\u6709\u7ec8\u6b62\u5b57\u7b26\u4e86\u3002\n\u5c06\u521d\u59cb\u5316\u8868\u8fbe\u5f0f\u8bbe\u7f6e\u4e3a{'a','a','a','a'}\uff0c\u4e8e\u662f\u5c31\u6709\u8fc7\u591a\u7684'a'\u5b57\u7b26\uff0c\u6ca1\u6709\u529e\u6cd5\u7ed9'\\0'\u7559\u51fa\u4f4d\u7f6e\u3002\n\n\u8bd5\u7740\u60f3\u51fa\u4e00\u4e9b\u5176\u5b83\u7684\u529e\u6cd5\u8ba9\u5b83\u5d29\u6e83\uff0c\u5e76\u4e14\u5728Valgrind\u4e0b\u50cf\u5f80\u5e38\u4e00\u6837\u8fd0\u884c\u8fd9\u4e2a\u7a0b\u5e8f\uff0c\u4f60\u53ef\u4ee5\u770b\u5230\u5177\u4f53\u53d1\u751f\u4e86\u4ec0\u4e48\uff0c\u4ee5\u53ca\u9519\u8bef\u53eb\u4ec0\u4e48\u540d\u5b57\u3002\u6709\u65f6Valgrind\u5e76\u4e0d\u80fd\u53d1\u73b0\u4f60\u72af\u7684\u9519\u8bef\uff0c\u5219\u9700\u8981\u79fb\u52a8\u58f0\u660e\u8fd9\u4e9b\u53d8\u91cf\u7684\u5730\u65b9\u770b\u770b\u662f\u5426\u80fd\u627e\u51fa\u9519\u8bef\u3002\u8fd9\u662fC\u7684\u9ed1\u9b54\u6cd5\u7684\u4e00\u90e8\u5206\uff0c\u6709\u65f6\u53d8\u91cf\u7684\u4f4d\u7f6e\u4f1a\u6539\u53d8bug\u3002\n\u9644\u52a0\u9898\n\n\u5c06\u4e00\u4e9b\u5b57\u7b26\u8d4b\u7ed9numbers\u7684\u5143\u7d20\uff0c\u4e4b\u540e\u7528printf\u4e00\u6b21\u6253\u5370\u4e00\u4e2a\u5b57\u7b26\uff0c\u4f60\u4f1a\u5f97\u5230\u4ec0\u4e48\u7f16\u8bd1\u5668\u8b66\u544a\uff1f\n\u5bf9names\u6267\u884c\u4e0a\u8ff0\u7684\u76f8\u53cd\u64cd\u4f5c\uff0c\u628anames\u5f53\u6210int\u6570\u7ec4\uff0c\u5e76\u4e00\u6b21\u6253\u5370\u4e00\u4e2aint\uff0cValgrind\u4f1a\u63d0\u793a\u4ec0\u4e48\uff1f\n\u6709\u591a\u5c11\u79cd\u5176\u5b83\u7684\u65b9\u5f0f\u53ef\u4ee5\u7528\u6765\u6253\u5370\u5b83\uff1f\n\u5982\u679c\u4e00\u4e2a\u5b57\u7b26\u6570\u7ec4\u5360\u56db\u4e2a\u5b57\u8282\uff0c\u4e00\u4e2a\u6574\u6570\u4e5f\u53604\u4e2a\u5b57\u8282\uff0c\u4f60\u53ef\u4ee5\u50cf\u6574\u6570\u4e00\u6837\u4f7f\u7528\u6574\u4e2aname\u5417\uff1f\u4f60\u5982\u4f55\u7528\u9ed1\u9b54\u6cd5\u5b9e\u73b0\u5b83\uff1f\n\u62ff\u51fa\u4e00\u5f20\u7eb8\uff0c\u5c06\u6bcf\u4e2a\u6570\u7ec4\u753b\u6210\u4e00\u6392\u65b9\u6846\uff0c\u4e4b\u540e\u5728\u7eb8\u4e0a\u753b\u51fa\u4ee3\u7801\u4e2d\u7684\u64cd\u4f5c\uff0c\u770b\u770b\u662f\u5426\u6b63\u786e\u3002\n\u5c06name\u8f6c\u6362\u6210another\u7684\u5f62\u5f0f\uff0c\u770b\u770b\u4ee3\u7801\u662f\u5426\u80fd\u6b63\u5e38\u5de5\u4f5c\u3002\n","categories":"\u7ec3\u4e601","tags":["\u6570\u7ec4","\u5b57\u7b26\u4e32","\u5185\u5b58"]},{"title":"\u5b57\u7b26\u4e32\u6570\u7ec4\u548c\u5faa\u73af","url":"https:\/\/naka507.github.io\/posts\/3018A6B457AE4FF5.html","content":"\u5b57\u7b26\u4e32\u6570\u7ec4\u548c\u5faa\u73af\n\u4f60\u73b0\u5728\u53ef\u4ee5\u521b\u5efa\u4e0d\u540c\u7c7b\u578b\u7684\u6570\u7ec4\uff0c\u5e76\u4e14\u4e5f\u77e5\u9053\u4e86\u201c\u5b57\u7b26\u4e32\u201d\u548c\u201c\u5b57\u8282\u6570\u7ec4\u201d\u662f\u76f8\u540c\u7684\u4e1c\u897f\u3002\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u8981\u66f4\u8fdb\u4e00\u6b65\uff0c\u521b\u5efa\u4e00\u4e2a\u5305\u542b\u5b57\u7b26\u4e32\u7684\u6570\u7ec4\u3002\u6211\u4e5f\u4f1a\u4ecb\u7ecd\u7b2c\u4e00\u4e2a\u5faa\u73af\u7ed3\u6784\uff0cfor\u5faa\u73af\u6765\u5e2e\u6211\u4eec\u6253\u5370\u51fa\u8fd9\u4e00\u65b0\u7684\u6570\u636e\u7ed3\u6784\u3002\n\u8fd9\u4e00\u7ae0\u7684\u6709\u8da3\u4e4b\u5904\u5c31\u662f\u4f60\u7684\u7a0b\u5e8f\u4e2d\u5df2\u7ecf\u6709\u4e00\u4e2a\u73b0\u6210\u7684\u5b57\u7b26\u4e32\u6570\u7ec4\uff0cmain\u51fd\u6570\u53c2\u6570\u4e2d\u7684char *argv[]\u3002\u4e0b\u9762\u8fd9\u6bb5\u4ee3\u7801\u6253\u5370\u51fa\u4e86\u6240\u6709\u4f60\u4f20\u5165\u7684\u547d\u4ee4\u884c\u53c2\u6570\uff1a\n#include &lt;stdio.h&gt;\n\nint main(int argc, char *argv[])\n{\n    int i = 0;\n\n    \/\/ go through each string in argv\n    \/\/ why am I skipping argv[0]?\n    for(i = 1; i &lt; argc; i++) {\n        printf(\"arg %d: %s\\n\", i, argv[i]);\n    }\n\n    \/\/ let's make our own array of strings\n    char *states[] = {\n        \"California\", \"Oregon\",\n        \"Washington\", \"Texas\"\n    };\n    int num_states = 4;\n\n    for(i = 0; i &lt; num_states; i++) {\n        printf(\"state %d: %s\\n\", i, states[i]);\n    }\n\n    return 0;\n}\nfor\u5faa\u73af\u7684\u683c\u5f0f\u662f\u8fd9\u6837\u7684\uff1a\nfor(INITIALIZER; TEST; INCREMENTER) {\n    CODE;\n}\n\u4e0b\u9762\u662ffor\u5faa\u73af\u7684\u5de5\u4f5c\u673a\u5236\uff1a\n\nINITIALIZER\u4e2d\u662f\u7528\u6765\u521d\u59cb\u5316\u5faa\u73af\u7684\u4ee3\u7801\uff0c\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\u5b83\u662fi = 0\u3002\n\u63a5\u4e0b\u6765\u4f1a\u68c0\u67e5TEST\u5e03\u5c14\u8868\u8fbe\u5f0f\uff0c\u5982\u679c\u4e3afalse\uff080\uff09\u5219\u8df3\u8fc7CODE\uff0c\u4e0d\u505a\u4efb\u4f55\u4e8b\u60c5\u3002\n\u6267\u884cCODE\uff0c\u505a\u5b83\u8981\u505a\u7684\u4efb\u4f55\u4e8b\u60c5\u3002\n\u5728CODE\u6267\u884c\u4e4b\u540e\u4f1a\u6267\u884cINCREMENTER\u90e8\u5206\uff0c\u901a\u5e38\u60c5\u51b5\u4f1a\u589e\u52a0\u4e00\u4e9b\u4e1c\u897f\uff0c\u6bd4\u5982\u8fd9\u4e2a\u4f8b\u5b50\u662fi++\u3002\n\u7136\u540e\u8df3\u5230\u7b2c\u4e8c\u6b65\u7ee7\u7eed\u6267\u884c\uff0c\u76f4\u5230TEST\u4e3afalse\uff080\uff09\u4e3a\u6b62\u3002\n\n\u4f8b\u5b50\u4e2d\u7684for\u5faa\u73af\u4f7f\u7528argc\u548cargv\uff0c\u904d\u5386\u4e86\u547d\u4ee4\u884c\u53c2\u6570\uff0c\u50cf\u8fd9\u6837\uff1a\n\nOS\u5c06\u6bcf\u4e2a\u547d\u4ee4\u884c\u53c2\u6570\u4f5c\u4e3a\u5b57\u7b26\u4e32\u4f20\u5165argv\u6570\u7ec4\uff0c\u7a0b\u5e8f\u540d\u79f0.\/ex10\u5728\u4e0b\u6807\u4e3a0\u7684\u4f4d\u7f6e\uff0c\u5269\u4f59\u7684\u53c2\u6570\u7d27\u968f\u5176\u540e\u3002\nOS\u5c06argc\u7f6e\u4e3aargv\u6570\u7ec4\u4e2d\u53c2\u6570\u7684\u6570\u91cf\uff0c\u6240\u4ee5\u4f60\u53ef\u4ee5\u904d\u5386\u5b83\u4eec\u800c\u4e0d\u4f1a\u8d8a\u754c\u3002\u8981\u8bb0\u4f4f\u5982\u679c\u4f60\u63d0\u4f9b\u4e86\u4e00\u4e2a\u53c2\u6570\uff0c\u7a0b\u5e8f\u540d\u79f0\u662f\u7b2c\u4e00\u4e2a\uff0c\u53c2\u6570\u5e94\u8be5\u5728\u7b2c\u4e8c\u4e2a\u3002\n\u63a5\u4e0b\u6765\u7a0b\u5e8f\u4f7f\u7528i &lt; argc\u6d4b\u8bd5i\u662f\u5426\u4f7f\u7528argc\uff0c\u7531\u4e8e\u6700\u5f00\u59cb1 &lt; 2\uff0c\u6d4b\u8bd5\u901a\u8fc7\u3002\n\u4e4b\u540e\u5b83\u4f1a\u6267\u884c\u4ee3\u7801\uff0c\u8f93\u51fai\uff0c\u5e76\u4e14\u5c06i\u7528\u505aargv\u7684\u4e0b\u6807\u3002\n\u7136\u540e\u4f7f\u7528i++\u6765\u8fd0\u884c\u81ea\u589e\u8bed\u53e5\uff0c\u5b83\u662fi = i + 1\u7684\u4fbf\u6377\u5f62\u5f0f\u3002\n\u7a0b\u5e8f\u4e00\u76f4\u91cd\u590d\u4e0a\u9762\u7684\u6b65\u9aa4\uff0c\u76f4\u5230i &lt; argc\u503c\u4e3afalse\uff080\uff09\uff0c\u8fd9\u65f6\u9000\u51fa\u5faa\u73af\u4f46\u7a0b\u5e8f\u4ecd\u7136\u7ee7\u7eed\u6267\u884c\u3002\n\n\u4f60\u4f1a\u770b\u5230\u4ec0\u4e48\n\u4f60\u9700\u8981\u7528\u4e24\u79cd\u65b9\u6cd5\u8fd0\u884c\u5b83\u6765\u73a9\u8f6c\u8fd9\u4e2a\u7a0b\u5e8f\u3002\u7b2c\u4e00\u79cd\u65b9\u6cd5\u662f\u5411\u547d\u4ee4\u884c\u53c2\u6570\u4f20\u9012\u4e00\u4e9b\u4e1c\u897f\u6765\u8bbe\u7f6eargc\u548cargv\u3002\u7b2c\u4e8c\u79cd\u662f\u4e0d\u4f20\u5165\u4efb\u4f55\u53c2\u6570\uff0c\u4e8e\u662f\u4f60\u53ef\u4ee5\u770b\u5230\u7b2c\u4e00\u6b21\u7684for\u5faa\u73af\u6ca1\u6709\u88ab\u6267\u884c\uff0c\u7531\u4e8ei &lt; argc\u503c\u4e3afalse\u3002\n\u7406\u89e3\u5b57\u7b26\u4e32\u6570\u7ec4\n\u4f60\u5e94\u8be5\u53ef\u4ee5\u4ece\u8fd9\u4e2a\u7ec3\u4e60\u4e2d\u5f04\u660e\u767d\uff0c\u4f60\u5728C\u8bed\u8a00\u4e2d\u901a\u8fc7\u6df7\u5408char *str = \"blah\"\u548cchar str[] = {'b','l','a','h'}\u8bed\u6cd5\u6784\u5efa\u4e8c\u7ef4\u6570\u7ec4\u6765\u6784\u5efa\u5b57\u7b26\u4e32\u6570\u7ec4\u3002\u7b2c\u5341\u56db\u884c\u7684char *states[] = {...}\u8bed\u6cd5\u5c31\u662f\u8fd9\u6837\u7684\u4e8c\u7ef4\u6df7\u5408\u7ed3\u6784\uff0c\u5176\u4e2d\u6bcf\u4e2a\u5b57\u7b26\u4e32\u90fd\u662f\u6570\u7ec4\u7684\u4e00\u4e2a\u5143\u7d20\uff0c\u5b57\u7b26\u4e32\u7684\u6bcf\u4e2a\u5b57\u7b26\u53c8\u662f\u5b57\u7b26\u4e32\u7684\u4e00\u4e2a\u5143\u7d20\u3002\n\u611f\u5230\u56f0\u60d1\u5417\uff1f\u591a\u7ef4\u7684\u6982\u5ff5\u662f\u5f88\u591a\u4eba\u4ece\u6765\u90fd\u4e0d\u4f1a\u53bb\u60f3\u7684\uff0c\u6240\u4ee5\u4f60\u5e94\u8be5\u5728\u7eb8\u4e0a\u6784\u5efa\u8fd9\u4e00\u5b57\u7b26\u4e32\u6570\u7ec4\uff1a\n\n\u5728\u7eb8\u7684\u5de6\u8fb9\u4e3a\u6bcf\u4e2a\u5b57\u7b26\u4e32\u753b\u4e00\u4e2a\u5c0f\u65b9\u683c\uff0c\u5e26\u6709\u5b83\u4eec\u7684\u4e0b\u6807\u3002\n\u7136\u540e\u5728\u65b9\u683c\u4e0a\u65b9\u5199\u4e0a\u6bcf\u4e2a\u5b57\u7b26\u7684\u4e0b\u6807\u3002\n\u63a5\u7740\u5c06\u5b57\u7b26\u4e32\u4e2d\u7684\u5b57\u7b26\u586b\u5145\u5230\u65b9\u683c\u5185\u3002\n\u753b\u5b8c\u4e4b\u540e\uff0c\u5728\u7eb8\u4e0a\u6a21\u62df\u4ee3\u7801\u7684\u6267\u884c\u8fc7\u7a0b\u3002\n\n\u7406\u89e3\u5b83\u7684\u53e6\u4e00\u79cd\u65b9\u6cd5\u662f\u5728\u4f60\u719f\u6089\u7684\u8bed\u8a00\uff0c\u6bd4\u5982Python\u6216Ruby\u4e2d\u6784\u5efa\u76f8\u540c\u7684\u7ed3\u6784\u3002\n\u5982\u4f55\u4f7f\u5b83\u5d29\u6e83\n\n\u4f7f\u7528\u4f60\u559c\u6b22\u7684\u53e6\u4e00\u79cd\u8bed\u8a00\uff0c\u6765\u5199\u8fd9\u4e2a\u7a0b\u5e8f\u3002\u4f20\u5165\u5c3d\u53ef\u80fd\u591a\u7684\u547d\u4ee4\u884c\u53c2\u6570\uff0c\u770b\u770b\u662f\u5426\u80fd\u901a\u8fc7\u4f20\u5165\u8fc7\u591a\u53c2\u6570\u4f7f\u5176\u5d29\u6e83\u3002\n\u5c06i\u521d\u59cb\u5316\u4e3a0\u770b\u770b\u4f1a\u53d1\u751f\u4ec0\u4e48\u3002\u662f\u5426\u4e5f\u9700\u8981\u6539\u52a8argc\uff0c\u4e0d\u6539\u52a8\u7684\u8bdd\u5b83\u80fd\u6b63\u5e38\u5de5\u4f5c\u5417\uff1f\u4e3a\u4ec0\u4e48\u4e0b\u6807\u4ece0\u5f00\u59cb\u53ef\u4ee5\u6b63\u5e38\u5de5\u4f5c\uff1f\n\u5c06num_states\u6539\u4e3a\u9519\u8bef\u7684\u503c\u4f7f\u5b83\u53d8\u5927\uff0c\u6765\u770b\u770b\u4f1a\u53d1\u751f\u4ec0\u4e48\u3002\n\n\u9644\u52a0\u9898\n\n\u5f04\u6e05\u695a\u5728for\u5faa\u73af\u7684\u6bcf\u4e00\u90e8\u5206\u4f60\u90fd\u53ef\u4ee5\u653e\u7f6e\u4ec0\u4e48\u6837\u7684\u4ee3\u7801\u3002\n\u67e5\u8be2\u5982\u4f55\u4f7f\u7528','\uff08\u9017\u53f7\uff09\u5b57\u7b26\u6765\u5728for\u5faa\u73af\u7684\u6bcf\u4e00\u90e8\u5206\u4e2d\uff0c';'\uff08\u5206\u53f7\uff09\u4e4b\u95f4\u5206\u9694\u591a\u6761\u8bed\u53e5\u3002\n\u67e5\u8be2NULL\u662f\u4ec0\u4e48\u4e1c\u897f\uff0c\u5c1d\u8bd5\u5c06\u5b83\u7528\u505astates\u7684\u4e00\u4e2a\u5143\u7d20\uff0c\u770b\u770b\u5b83\u4f1a\u6253\u5370\u51fa\u4ec0\u4e48\u3002\n\u770b\u770b\u4f60\u662f\u5426\u80fd\u5728\u6253\u5370\u4e4b\u524d\u5c06states\u7684\u4e00\u4e2a\u5143\u7d20\u8d4b\u503c\u7ed9argv\u4e2d\u7684\u5143\u7d20\uff0c\u518d\u8bd5\u8bd5\u76f8\u53cd\u7684\u64cd\u4f5c\u3002\n","categories":"\u7ec3\u4e601","tags":["\u5b57\u7b26\u4e32","\u5b57\u8282","\u7ed3\u6784"]},{"title":"While\u5faa\u73af\u548c\u5e03\u5c14\u8868\u8fbe\u5f0f","url":"https:\/\/naka507.github.io\/posts\/F552B2B9C8E36656.html","content":"While\u5faa\u73af\u548c\u5e03\u5c14\u8868\u8fbe\u5f0f\n\u4f60\u5df2\u7ecf\u521d\u6b65\u4e86\u89e3C\u8bed\u8a00\u5982\u4f55\u5904\u7406\u5faa\u73af\uff0c\u4f46\u662f\u4f60\u53ef\u80fd\u4e0d\u662f\u5f88\u6e05\u695a\u5e03\u5c14\u8868\u8fbe\u5f0fi &lt; argc\u662f\u4ec0\u4e48\u3002\u5728\u5b66\u4e60while\u5faa\u73af\u4e4b\u524d\uff0c\u8ba9\u6211\u5148\u6765\u5bf9\u5e03\u5c14\u8868\u8fbe\u5f0f\u505a\u4e00\u4e9b\u89e3\u91ca\u3002\n\u5728C\u8bed\u8a00\u4e2d\uff0c\u5b9e\u9645\u4e0a\u6ca1\u6709\u771f\u6b63\u7684\u201c\u5e03\u5c14\u201d\u7c7b\u578b\uff0c\u800c\u662f\u7528\u4e00\u4e2a\u6574\u6570\u6765\u4ee3\u66ff\uff0c0\u4ee3\u8868false\uff0c\u5176\u5b83\u503c\u4ee3\u8868true\u3002\u4e0a\u4e00\u4e2a\u7ec3\u4e60\u4e2d\u8868\u8fbe\u5f0fi &lt; argc\u5b9e\u9645\u4e0a\u503c\u4e3a1\u6216\u80050\uff0c\u5e76\u4e0d\u50cfPython\u662f\u663e\u5f0f\u7684Ture\u6216\u8005False\u3002\u8fd9\u662fC\u8bed\u8a00\u66f4\u63a5\u8fd1\u8ba1\u7b97\u673a\u5de5\u4f5c\u65b9\u5f0f\u7684\u53e6\u4e00\u4e2a\u4f8b\u5b50\uff0c\u56e0\u4e3a\u8ba1\u7b97\u673a\u53ea\u628a\u503c\u5f53\u6210\u6570\u5b57\u3002\n\u73b0\u5728\u7528while\u5faa\u73af\u6765\u5b9e\u73b0\u548c\u4e0a\u4e00\u4e2a\u7ec3\u4e60\u76f8\u540c\u7684\u51fd\u6570\u3002\u8fd9\u4f1a\u8ba9\u4f60\u4f7f\u7528\u4e24\u79cd\u5faa\u73af\uff0c\u6765\u89c2\u5bdf\u4e24\u79cd\u5faa\u73af\u662f\u4ec0\u4e48\u5173\u7cfb\u3002\n#include &lt;stdio.h&gt;\n\nint main(int argc, char *argv[])\n{\n    \/\/ go through each string in argv\n\n    int i = 0;\n    while(i &lt; argc) {\n        printf(\"arg %d: %s\\n\", i, argv[i]);\n        i++;\n    }\n\n    \/\/ let's make our own array of strings\n    char *states[] = {\n        \"California\", \"Oregon\",\n        \"Washington\", \"Texas\"\n    };\n\n    int num_states = 4;\n    i = 0;  \/\/ watch for this\n    while(i &lt; num_states) {\n        printf(\"state %d: %s\\n\", i, states[i]);\n        i++;\n    }\n\n    return 0;\n}\n\u4f60\u53ef\u4ee5\u770b\u5230while\u5faa\u73af\u7684\u8bed\u6cd5\u66f4\u52a0\u7b80\u5355\uff1a\nwhile(TEST) {\n    CODE;\n}\n\u53ea\u8981TEST\u4e3atrue\uff08\u975e0\uff09\uff0c\u5c31\u4f1a\u4e00\u76f4\u8fd0\u884cCODE\u4e2d\u7684\u4ee3\u7801\u3002\u8fd9\u610f\u5473\u7740\u5982\u679c\u8981\u8fbe\u5230\u548cfor\u5faa\u73af\u540c\u6837\u7684\u6548\u679c\uff0c\u6211\u4eec\u9700\u8981\u81ea\u5df1\u5199\u521d\u59cb\u5316\u8bed\u53e5\uff0c\u4ee5\u53ca\u81ea\u5df1\u6765\u4f7fi\u589e\u52a0\u3002\n\u4f60\u4f1a\u770b\u5230\u4ec0\u4e48\n\u8f93\u51fa\u57fa\u672c\u76f8\u540c\uff0c\u6240\u4ee5\u6211\u505a\u4e86\u4e00\u70b9\u4fee\u6539\uff0c\u4f7f\u4f60\u53ef\u4ee5\u770b\u5230\u5b83\u8fd0\u884c\u7684\u53e6\u4e00\u79cd\u65b9\u5f0f\u3002\n$ make ex11\ncc -Wall -g    ex11.c   -o ex11\n$ .\/ex11\narg 0: .\/ex11\nstate 0: California\nstate 1: Oregon\nstate 2: Washington\nstate 3: Texas\n$\n$ .\/ex11 test it\narg 0: .\/ex11\narg 1: test\narg 2: it\nstate 0: California\nstate 1: Oregon\nstate 2: Washington\nstate 3: Texas\n$\n\u5982\u4f55\u4f7f\u5b83\u5d29\u6e83\n\u5728\u4f60\u81ea\u5df1\u7684\u4ee3\u7801\u4e2d\uff0c\u5e94\u4f18\u5148\u9009\u62e9for\u5faa\u73af\u800c\u4e0d\u662fwhile\u5faa\u73af\uff0c\u56e0\u4e3afor\u5faa\u73af\u4e0d\u5bb9\u6613\u5d29\u6e83\u3002\u4e0b\u9762\u662f\u51e0\u70b9\u666e\u904d\u7684\u539f\u56e0\uff1a\n\n\u5fd8\u8bb0\u521d\u59cb\u5316int i\uff0c\u4f7f\u5faa\u73af\u53d1\u751f\u9519\u8bef\u3002\n\u5fd8\u8bb0\u521d\u59cb\u5316\u7b2c\u4e8c\u4e2a\u5faa\u73af\u7684i\uff0c\u4e8e\u662fi\u8fd8\u4fdd\u7559\u7740\u7b2c\u4e00\u4e2a\u5faa\u73af\u7ed3\u675f\u65f6\u7684\u503c\u3002\u4f60\u7684\u7b2c\u4e8c\u4e2a\u5faa\u73af\u53ef\u80fd\u6267\u884c\u4e5f\u53ef\u80fd\u4e0d\u4f1a\u6267\u884c\u3002\n\u5fd8\u8bb0\u5728\u6700\u540e\u6267\u884ci++\u81ea\u589e\uff0c\u4f60\u4f1a\u5f97\u5230\u4e00\u4e2a\u201c\u6b7b\u5faa\u73af\u201d\uff0c\u5b83\u662f\u5728\u4f60\u5f00\u59cb\u7f16\u7a0b\u7684\u7b2c\u4e00\u4e2a\u6216\u524d\u4e24\u4e2a\u5341\u5e74\u4e2d\uff0c\u6700\u53ef\u6015\u7684\u95ee\u9898\u4e4b\u4e00\u3002\n\n\u9644\u52a0\u9898\n\n\u8ba9\u8fd9\u4e9b\u5faa\u73af\u5012\u5e8f\u6267\u884c\uff0c\u901a\u8fc7\u4f7f\u7528i--\u4eceargc\u5f00\u59cb\u9012\u51cf\u76f4\u52300\u3002\u4f60\u53ef\u80fd\u9700\u8981\u505a\u4e00\u4e9b\u7b97\u6570\u64cd\u4f5c\u8ba9\u6570\u7ec4\u7684\u4e0b\u6807\u6b63\u5e38\u5de5\u4f5c\u3002\n\u4f7f\u7528while\u5faa\u73af\u5c06argv\u4e2d\u7684\u503c\u590d\u5236\u5230states\u3002\n\u8ba9\u8fd9\u4e2a\u590d\u5236\u5faa\u73af\u4e0d\u4f1a\u6267\u884c\u5931\u8d25\uff0c\u5373\u4f7fargv\u4e4b\u4e2d\u6709\u5f88\u591a\u5143\u7d20\u4e5f\u4e0d\u4f1a\u5168\u90e8\u653e\u8fdbstates\u3002\n\u7814\u7a76\u4f60\u662f\u5426\u771f\u6b63\u590d\u5236\u4e86\u8fd9\u4e9b\u5b57\u7b26\u4e32\u3002\u7b54\u6848\u53ef\u80fd\u4f1a\u8ba9\u4f60\u611f\u5230\u610f\u5916\u548c\u56f0\u60d1\u3002\n","categories":"\u7ec3\u4e601","tags":["while","\u5e03\u5c14","\u8868\u8fbe\u5f0f"]},{"title":"If\uff0cElse If\uff0cElse","url":"https:\/\/naka507.github.io\/posts\/71D0E364C2783A96.html","content":"If\uff0cElse If\uff0cElse\nif\u8bed\u53e5\u662f\u6bcf\u4e2a\u7f16\u7a0b\u8bed\u8a00\u4e2d\u5171\u6709\u7684\u7279\u6027\uff0c\u5305\u62ecC\u8bed\u8a00\u3002\u4e0b\u9762\u662f\u4e00\u6bb5\u4ee3\u7801\uff0c\u4f7f\u7528\u4e86if\u8bed\u53e5\u6765\u786e\u4fdd\u53ea\u4f20\u5165\u4e86\u4e00\u4e2a\u6216\u4e24\u4e2a\u547d\u4ee4\u884c\u53c2\u6570\uff1a\n#include &lt;stdio.h&gt;\n\nint main(int argc, char *argv[])\n{\n    int i = 0;\n\n    if(argc == 1) {\n        printf(\"You only have one argument. You suck.\\n\");\n    } else if(argc &gt; 1 &amp;&amp; argc &lt; 4) {\n        printf(\"Here's your arguments:\\n\");\n\n        for(i = 0; i &lt; argc; i++) {\n            printf(\"%s \", argv[i]);\n        }\n        printf(\"\\n\");\n    } else {\n        printf(\"You have too many arguments. You suck.\\n\");\n    }\n\n    return 0;\n}\nif\u8bed\u53e5\u7684\u683c\u5f0f\u4e3a\uff1a\nif(TEST) {\n    CODE;\n} else if(TEST) {\n    CODE;\n} else {\n    CODE;\n}\n\u4e0b\u9762\u662f\u5176\u5b83\u8bed\u8a00\u548cC\u7684\u5dee\u5f02\uff1a\n\n\u50cf\u4e4b\u524d\u63d0\u5230\u7684\u90a3\u6837\uff0cTEST\u8868\u8fbe\u5f0f\u503c\u4e3a0\u65f6\u4e3afalse\uff0c\u5176\u5b83\u60c5\u51b5\u4e3atrue\u3002\n\u4f60\u9700\u8981\u5728TEST\u5468\u56f4\u5199\u4e0a\u5706\u62ec\u53f7\uff0c\u5176\u5b83\u8bed\u8a00\u53ef\u80fd\u4e0d\u7528\u3002\n\uff08\u53ea\u6709\u5355\u6761\u8bed\u53e5\u65f6\uff09\u4f60\u5e76\u4e0d\u9700\u8981\u4f7f\u7528\u82b1\u62ec\u53f7{}\u6765\u95ed\u5408\u4ee3\u7801\uff0c\u4f46\u662f\u8fd9\u662f\u4e00\u79cd\u975e\u5e38\u4e0d\u597d\u7684\u683c\u5f0f\uff0c\u4e0d\u8981\u8fd9\u4e48\u5199\u3002\u82b1\u62ec\u53f7\u8ba9\u4e00\u4e2a\u5206\u652f\u7684\u4ee3\u7801\u7684\u5f00\u59cb\u548c\u7ed3\u675f\u53d8\u5f97\u6e05\u6670\u3002\u5982\u679c\u4f60\u4e0d\u628a\u4ee3\u7801\u5199\u5728\u91cc\u9762\u4f1a\u51fa\u73b0\u9519\u8bef\u3002\n\n\u9664\u4e86\u4e0a\u9762\u90a3\u4e9b\uff0c\u5c31\u548c\u5176\u5b83\u8bed\u8a00\u4e00\u6837\u4e86\u3002else if\u6216\u8005else\u7684\u90e8\u5206\u5e76\u4e0d\u5fc5\u987b\u51fa\u73b0\u3002\n\u4f60\u4f1a\u770b\u5230\u4ec0\u4e48\n\u8fd9\u6bb5\u4ee3\u7801\u975e\u5e38\u6613\u4e8e\u8fd0\u884c\u548c\u5c1d\u8bd5\uff1a\n$ make ex12\ncc -Wall -g    ex12.c   -o ex12\n$ .\/ex12\nYou only have one argument. You suck.\n$ .\/ex12 one\nHere's your arguments:\n.\/ex12 one\n$ .\/ex12 one two\nHere's your arguments:\n.\/ex12 one two\n$ .\/ex12 one two three\nYou have too many arguments. You suck.\n$\n\u5982\u4f55\u4f7f\u5b83\u5d29\u6e83\n\u4f7f\u8fd9\u6bb5\u4ee3\u7801\u5d29\u6e83\u5e76\u4e0d\u5bb9\u6613\uff0c\u56e0\u4e3a\u5b83\u592a\u7b80\u5355\u4e86\u3002\u5c1d\u8bd5\u628aif\u8bed\u53e5\u7684\u6d4b\u8bd5\u8868\u8fbe\u5f0f\u641e\u4e71\uff1a\n\n\u79fb\u9664else\u90e8\u5206\uff0c\u4f7f\u5b83\u4e0d\u80fd\u5904\u7406\u8fb9\u754c\u60c5\u51b5\u3002\n\u5c06&amp;&amp;\u6539\u4e3a||\uff0c\u4e8e\u662f\u4f60\u4f1a\u628a\u201c\u4e0e\u201d\u64cd\u4f5c\u53d8\u6210\u201c\u6216\u201d\u64cd\u4f5c\uff0c\u5e76\u4e14\u770b\u770b\u4f1a\u53d1\u751f\u4ec0\u4e48\u3002\n\n\u9644\u52a0\u9898\n\n\u6211\u5df2\u7ecf\u5411\u4f60\u7b80\u77ed\u5730\u4ecb\u7ecd\u4e86&amp;&amp;\uff0c\u5b83\u6267\u884c\u201c\u4e0e\u201d\u64cd\u4f5c\u3002\u4e0a\u7f51\u641c\u7d22\u4e0e\u4e4b\u4e0d\u540c\u7684\u201c\u5e03\u5c14\u8fd0\u7b97\u7b26\u201d\u3002\n\u4e3a\u8fd9\u4e2a\u7a0b\u5e8f\u7f16\u5199\u66f4\u591a\u7684\u6d4b\u8bd5\u7528\u4f8b\uff0c\u770b\u770b\u4f60\u4f1a\u5199\u51fa\u4ec0\u4e48\u3002\n\u56de\u5230\u7ec3\u4e6010\u548c11\uff0c\u4f7f\u7528if\u8bed\u53e5\u4f7f\u5faa\u73af\u63d0\u524d\u9000\u51fa\u3002\u4f60\u9700\u8981break\u8bed\u53e5\u6765\u5b9e\u73b0\u5b83\uff0c\u641c\u7d22\u5b83\u7684\u6709\u5173\u8d44\u6599\u3002\n\u7b2c\u4e00\u4e2a\u5224\u65ad\u6240\u8f93\u51fa\u7684\u8bdd\u771f\u7684\u6b63\u786e\u5417\uff1f\u7531\u4e8e\u4f60\u7684\u201c\u7b2c\u4e00\u4e2a\u53c2\u6570\u201d\u4e0d\u662f\u7528\u6237\u8f93\u5165\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\uff0c\u628a\u5b83\u6539\u6b63\u3002\n","categories":"\u7ec3\u4e601","tags":["\u7f16\u7a0b","\u4ee3\u7801","\u547d\u4ee4\u884c"]},{"title":"Switch\u8bed\u53e5","url":"https:\/\/naka507.github.io\/posts\/0E9AB6AD5C029EF6.html","content":"Switch\u8bed\u53e5\n\u5728\u5176\u5b83\u7c7b\u4f3cRuby\u7684\u8bed\u8a00\u4e2d\uff0cswitch\u8bed\u53e5\u53ef\u4ee5\u5904\u7406\u4efb\u610f\u7c7b\u578b\u7684\u8868\u8fbe\u5f0f\u3002\u4e00\u4e9b\u8bed\u8a00\u6bd4\u5982Python\u6ca1\u6709switch\u8bed\u53e5\uff0c\u56e0\u4e3a\u5e26\u6709\u5e03\u5c14\u8868\u8fbe\u5f0f\u7684if\u8bed\u53e5\u53ef\u4ee5\u505a\u76f8\u540c\u7684\u4e8b\u60c5\u3002\u5bf9\u4e8e\u8fd9\u4e9b\u8bed\u8a00\uff0cswitch\u8bed\u53e5\u6bd4if\u8bed\u53e5\u66f4\u52a0\u7075\u6d3b\uff0c\u7136\u800c\u5185\u90e8\u7684\u673a\u5236\u662f\u4e00\u6837\u7684\u3002\nC\u4e2d\u7684switch\u8bed\u53e5\u4e0e\u5b83\u4eec\u4e0d\u540c\uff0c\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a\u201c\u8df3\u8f6c\u8868\u201d\u3002\u4f60\u53ea\u80fd\u591f\u653e\u7f6e\u7ed3\u679c\u4e3a\u6574\u6570\u7684\u8868\u8fbe\u5f0f\uff0c\u800c\u4e0d\u662f\u4e00\u4e9b\u968f\u673a\u7684\u5e03\u5c14\u8868\u8fbe\u5f0f\uff0c\u8fd9\u4e9b\u6574\u6570\u7528\u4e8e\u8ba1\u7b97\u4eceswicth\u9876\u90e8\u5230\u5339\u914d\u90e8\u5206\u7684\u8df3\u8f6c\u3002\u4e0b\u9762\u6709\u4e00\u6bb5\u4ee3\u7801\uff0c\u6211\u8981\u5206\u89e3\u5b83\u6765\u8ba9\u4f60\u7406\u89e3\u201c\u8df3\u8f6c\u8868\u201d\u7684\u6982\u5ff5\uff1a\n#include &lt;stdio.h&gt;\n\nint main(int argc, char *argv[])\n{\n    if(argc != 2) {\n        printf(\"ERROR: You need one argument.\\n\");\n        \/\/ this is how you abort a program\n        return 1;\n    }\n\n    int i = 0;\n    for(i = 0; argv[1][i] != '\\0'; i++) {\n        char letter = argv[1][i];\n\n        switch(letter) {\n            case 'a':\n            case 'A':\n                printf(\"%d: 'A'\\n\", i);\n                break;\n\n            case 'e':\n            case 'E':\n                printf(\"%d: 'E'\\n\", i);\n                break;\n\n            case 'i':\n            case 'I':\n                printf(\"%d: 'I'\\n\", i);\n                break;\n\n            case 'o':\n            case 'O':\n                printf(\"%d: 'O'\\n\", i);\n                break;\n\n            case 'u':\n            case 'U':\n                printf(\"%d: 'U'\\n\", i);\n                break;\n\n            case 'y':\n            case 'Y':\n                if(i &gt; 2) {\n                    \/\/ it's only sometimes Y\n                    printf(\"%d: 'Y'\\n\", i);\n                }\n                break;\n\n            default:\n                printf(\"%d: %c is not a vowel\\n\", i, letter);\n        }\n    }\n\n    return 0;\n}\n\u5728\u8fd9\u4e2a\u7a0b\u5e8f\u4e2d\u6211\u4eec\u63a5\u53d7\u4e86\u5355\u4e00\u7684\u547d\u4ee4\u884c\u53c2\u6570\uff0c\u5e76\u4e14\u7528\u4e00\u79cd\u6781\u5176\u590d\u6742\u7684\u65b9\u5f0f\u6253\u5370\u51fa\u6240\u6709\u539f\u56e0\uff0c\u6765\u5411\u4f60\u6f14\u793aswitch\u8bed\u53e5\u3002\u4e0b\u9762\u662fswicth\u8bed\u53e5\u7684\u5de5\u4f5c\u539f\u7406\uff1a\n\n\u7f16\u8bd1\u5668\u4f1a\u6807\u8bb0swicth\u8bed\u53e5\u7684\u9876\u7aef\uff0c\u6211\u4eec\u5148\u628a\u5b83\u8bb0\u4e3a\u5730\u5740Y\u3002\n\u63a5\u7740\u5bf9switch\u4e2d\u7684\u8868\u8fbe\u5f0f\u6c42\u503c\uff0c\u4ea7\u751f\u4e00\u4e2a\u6570\u5b57\u3002\u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u6570\u5b57\u4e3aargv[1]\u4e2d\u5b57\u6bcd\u7684\u539f\u59cb\u7684ASCLL\u7801\u3002\n\u7f16\u8bd1\u5668\u4e5f\u4f1a\u628a\u6bcf\u4e2a\u7c7b\u4f3ccase 'A'\u7684case\u4ee3\u7801\u5757\u7ffb\u8bd1\u6210\u8fd9\u4e2a\u7a0b\u5e8f\u4e2d\u8ddd\u79bb\u8bed\u53e5\u9876\u7aef\u7684\u5730\u5740\uff0c\u6240\u4ee5case 'A'\u5c31\u5728Y + 'A'\u5904\u3002\n\u63a5\u7740\u8ba1\u7b97\u662f\u5426Y+letter\u4f4d\u4e8eswitch\u8bed\u53e5\u4e2d\uff0c\u5982\u679c\u8ddd\u79bb\u592a\u8fdc\u5219\u4f1a\u5c06\u5176\u8c03\u6574\u4e3aY+Default\u3002\n\u4e00\u65e6\u8ba1\u7b97\u51fa\u4e86\u5730\u5740\uff0c\u7a0b\u5e8f\u5c31\u4f1a\u201c\u8df3\u201d\u5230\u4ee3\u7801\u7684\u90a3\u4e2a\u4f4d\u7f6e\u5e76\u7ee7\u7eed\u6267\u884c\u3002\u8fd9\u5c31\u662f\u4e00\u4e9bcase\u4ee3\u7801\u5757\u4e2d\u6709break\u800c\u53e6\u5916\u4e00\u4e9b\u6ca1\u6709\u7684\u539f\u56e0\u3002\n\u5982\u679c\u8f93\u51fa\u4e86'a'\uff0c\u90a3\u5b83\u5c31\u4f1a\u8df3\u5230case 'a'\uff0c\u5b83\u91cc\u9762\u6ca1\u6709break\u8bed\u53e5\uff0c\u6240\u4ee5\u5b83\u4f1a\u8d2f\u7a7f\u6267\u884c\u5e95\u4e0b\u5e26\u6709\u4ee3\u7801\u548cbreak\u7684case 'A'\u3002\n\u6700\u540e\u5b83\u6267\u884c\u8fd9\u6bb5\u4ee3\u7801\uff0c\u6267\u884cbreak\u5b8c\u5168\u8df3\u51faswitch\u8bed\u53e5\u5757\u3002\n\n\n\u8bd1\u8005\u6ce8\uff1a\u66f4\u5e38\u89c1\u7684\u60c5\u51b5\u662f\uff0cgcc\u4f1a\u5728\u7a7a\u767d\u5904\u5355\u72ec\u6784\u5efa\u4e00\u5f20\u8df3\u8f6c\u8868\uff0c\u5404\u4e2a\u504f\u79fb\u5904\u5b58\u653e\u5bf9\u5e94\u7684case\u8bed\u53e5\u7684\u5730\u5740\u3002Y\u4e0d\u662fswitch\u8bed\u53e5\u7684\u8d77\u59cb\u5730\u5740\uff0c\u800c\u662f\u8fd9\u5f20\u8868\u7684\u8d77\u59cb\u5730\u5740\u3002\u7a0b\u5e8f\u4f1a\u8df3\u8f6c\u5230*(Y + 'A')\u800c\u4e0d\u662fY + 'A'\u5904\u3002\n\n\u8fd9\u662f\u5bf9swicth\u8bed\u53e5\u5de5\u4f5c\u539f\u7406\u7684\u4e00\u4e2a\u6df1\u7a76\uff0c\u7136\u800c\u5b9e\u9645\u64cd\u4f5c\u4e2d\u4f60\u53ea\u9700\u8981\u8bb0\u4f4f\u4e0b\u9762\u51e0\u6761\u7b80\u5355\u7684\u539f\u5219\uff1a\n\n\u603b\u662f\u8981\u5305\u542b\u4e00\u4e2adefault:\u5206\u652f\uff0c\u53ef\u4ee5\u8ba9\u4f60\u63a5\u4f4f\u88ab\u5ffd\u7565\u7684\u8f93\u5165\u3002\n\u4e0d\u8981\u5141\u8bb8\u201c\u8d2f\u7a7f\u201d\u6267\u884c\uff0c\u9664\u975e\u4f60\u771f\u7684\u60f3\u8fd9\u4e48\u505a\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b\u6700\u597d\u6dfb\u52a0\u4e00\u4e2a\/\/fallthrough\u7684\u6ce8\u91ca\u3002\n\u4e00\u5b9a\u8981\u5148\u7f16\u5199case\u548cbreak\uff0c\u518d\u7f16\u5199\u5176\u4e2d\u7684\u4ee3\u7801\u3002\n\u5982\u679c\u80fd\u591f\u7b80\u5316\u7684\u8bdd\uff0c\u7528if\u8bed\u53e5\u4ee3\u66ff\u3002\n\n\u4f60\u4f1a\u770b\u5230\u4ec0\u4e48\n\u4e0b\u9762\u662f\u6211\u8fd0\u884c\u5b83\u7684\u4e00\u4e2a\u4f8b\u5b50\uff0c\u4e5f\u6f14\u793a\u4e86\u4f20\u5165\u547d\u4ee4\u884c\u53c2\u6570\u7684\u4e0d\u540c\u65b9\u6cd5\uff1a\n$ make ex13\ncc -Wall -g    ex13.c   -o ex13\n$ .\/ex13\nERROR: You need one argument.\n$\n$ .\/ex13 Zed\n0: Z is not a vowel\n1: 'E'\n2: d is not a vowel\n$\n$ .\/ex13 Zed Shaw\nERROR: You need one argument.\n$\n$ .\/ex13 \"Zed Shaw\"\n0: Z is not a vowel\n1: 'E'\n2: d is not a vowel\n3:   is not a vowel\n4: S is not a vowel\n5: h is not a vowel\n6: 'A'\n7: w is not a vowel\n$\n\u8bb0\u4f4f\u5728\u4ee3\u7801\u7684\u5f00\u59cb\u6709\u4e2aif\u8bed\u53e5\uff0c\u5f53\u6ca1\u6709\u63d0\u4f9b\u8db3\u591f\u7684\u53c2\u6570\u65f6\u4f7f\u7528return 1\u8fd4\u56de\u3002\u8fd4\u56de\u975e0\u662f\u4f60\u63d0\u793a\u64cd\u4f5c\u7cfb\u7edf\u7a0b\u5e8f\u51fa\u9519\u7684\u529e\u6cd5\u3002\u4efb\u4f55\u5927\u4e8e0\u7684\u503c\u90fd\u53ef\u4ee5\u5728\u811a\u672c\u4e2d\u6d4b\u8bd5\uff0c\u5176\u5b83\u7a0b\u5e8f\u4f1a\u7531\u6b64\u77e5\u9053\u53d1\u751f\u4e86\u4ec0\u4e48\u3002\n\u5982\u4f55\u4f7f\u5b83\u5d29\u6e83\n\u7834\u574f\u4e00\u4e2aswitch\u8bed\u53e5\u5757\u592a\u5bb9\u6613\u4e86\u3002\u4e0b\u9762\u662f\u4e00\u4e9b\u65b9\u6cd5\uff0c\u4f60\u53ef\u4ee5\u6311\u4e00\u4e2a\u6765\u7528\uff1a\n\n\u5fd8\u8bb0\u5199break\uff0c\u7a0b\u5e8f\u5c31\u4f1a\u8fd0\u884c\u4e24\u4e2a\u6216\u591a\u4e2a\u4ee3\u7801\u5757\uff0c\u8fd9\u4e9b\u90fd\u662f\u4f60\u4e0d\u60f3\u8fd0\u884c\u7684\u3002\n\u5fd8\u8bb0\u5199default\uff0c\u7a0b\u5e8f\u4f1a\u5728\u9759\u9ed8\u4e2d\u5ffd\u7565\u4f60\u6240\u5fd8\u8bb0\u7684\u503c\u3002\n\u65e0\u610f\u4e2d\u5c06\u4e00\u4e9b\u5e26\u6709\u9884\u6599\u4e4b\u5916\u7684\u503c\u7684\u53d8\u91cf\u653e\u5165switch\u4e2d\uff0c\u6bd4\u5982\u5e26\u6709\u5947\u602a\u7684\u503c\u7684int\u3002\n\u5728switch\u4e2d\u662f\u5426\u672a\u521d\u59cb\u5316\u7684\u503c\u3002\n\n\u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e9b\u522b\u7684\u65b9\u6cd5\u4f7f\u8fd9\u4e2a\u7a0b\u5e8f\u5d29\u6e83\u3002\u8bd5\u7740\u770b\u4f60\u80fd\u4e0d\u80fd\u81ea\u5df1\u505a\u5230\u5b83\u3002\n\u9644\u52a0\u9898\n\n\u7f16\u5199\u53e6\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u5728\u5b57\u6bcd\u4e0a\u505a\u7b97\u672f\u8fd0\u7b97\u5c06\u5b83\u4eec\u8f6c\u6362\u4e3a\u5c0f\u5199\uff0c\u5e76\u4e14\u5728switch\u4e2d\u79fb\u9664\u6240\u6709\u989d\u5916\u7684\u5927\u5199\u5b57\u6bcd\u3002\n\u4f7f\u7528','\uff08\u9017\u53f7\uff09\u5728for\u5faa\u73af\u4e2d\u521d\u59cb\u5316letter\u3002\n\u4f7f\u7528\u53e6\u4e00\u4e2afor\u5faa\u73af\u6765\u8ba9\u5b83\u5904\u7406\u4f60\u4f20\u5165\u7684\u6240\u6709\u547d\u4ee4\u884c\u53c2\u6570\u3002\n\u5c06\u8fd9\u4e2aswitch\u8bed\u53e5\u8f6c\u4e3aif\u8bed\u53e5\uff0c\u4f60\u66f4\u559c\u6b22\u54ea\u4e2a\u5462\uff1f\n\u5728\u201cY\u201d\u7684\u4f8b\u5b50\u4e2d\uff0c\u6211\u5728if\u4ee3\u7801\u5757\u5916\u9762\u5199\u4e86\u4e2abreak\u3002\u8fd9\u6837\u4f1a\u4ea7\u751f\u4ec0\u4e48\u6548\u679c\uff1f\u5982\u679c\u628a\u5b83\u79fb\u8fdbif\u4ee3\u7801\u5757\uff0c\u4f1a\u53d1\u751f\u4ec0\u4e48\uff1f\u81ea\u5df1\u8bd5\u7740\u89e3\u7b54\u5b83\uff0c\u5e76\u8bc1\u660e\u4f60\u662f\u6b63\u786e\u7684\u3002\n","categories":"\u7ec3\u4e602","tags":["Ruby","switch"]},{"title":"\u7f16\u5199\u5e76\u4f7f\u7528\u51fd\u6570","url":"https:\/\/naka507.github.io\/posts\/5D2945A8677CE165.html","content":"\u7f16\u5199\u5e76\u4f7f\u7528\u51fd\u6570\n\u5230\u73b0\u5728\u4e3a\u6b62\uff0c\u4f60\u53ea\u4f7f\u7528\u4e86\u4f5c\u4e3astdio.h\u5934\u6587\u4ef6\u4e00\u90e8\u5206\u7684\u51fd\u6570\u3002\u5728\u8fd9\u4e2a\u7ec3\u4e60\u4e2d\u4f60\u5c06\u8981\u7f16\u5199\u5e76\u4f7f\u7528\u81ea\u5df1\u7684\u51fd\u6570\u3002\n#include &lt;stdio.h&gt;\n#include &lt;ctype.h&gt;\n\n\/\/ forward declarations\nint can_print_it(char ch);\nvoid print_letters(char arg[]);\n\nvoid print_arguments(int argc, char *argv[])\n{\n    int i = 0;\n\n    for(i = 0; i &lt; argc; i++) {\n        print_letters(argv[i]);\n    }\n}\n\nvoid print_letters(char arg[])\n{\n    int i = 0;\n\n    for(i = 0; arg[i] != '\\0'; i++) {\n        char ch = arg[i];\n\n        if(can_print_it(ch)) {\n            printf(\"'%c' == %d \", ch, ch);\n        }\n    }\n\n    printf(\"\\n\");\n}\n\nint can_print_it(char ch)\n{\n    return isalpha(ch) || isblank(ch);\n}\n\n\nint main(int argc, char *argv[])\n{\n    print_arguments(argc, argv);\n    return 0;\n}\n\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\u4f60\u521b\u5efa\u4e86\u51fd\u6570\u6765\u6253\u5370\u4efb\u4f55\u5c5e\u4e8e\u201c\u5b57\u6bcd\u201d\u548c\u201c\u7a7a\u767d\u201d\u7684\u5b57\u7b26\u3002\u4e0b\u9762\u662f\u4e00\u4e2a\u5206\u89e3\uff1a\nex14.c:2\n\u5305\u542b\u4e86\u65b0\u7684\u5934\u6587\u4ef6\uff0c\u6240\u4ee5\u4f60\u53ef\u4ee5\u8bbf\u95eeisalpha\u548cisblank\u3002\nex14.c:5-6\n\u544a\u8bc9C\u8bed\u8a00\u4f60\u7a0d\u540e\u4f1a\u5728\u4f60\u7684\u7a0b\u5e8f\u4e2d\u4f7f\u7528\u4e00\u4e9b\u51fd\u6570\uff0c\u5b83\u4eec\u5b9e\u9645\u4e0a\u5e76\u6ca1\u6709\u88ab\u5b9a\u4e49\u3002\u8fd9\u53eb\u505a\u201c\u524d\u5411\u58f0\u660e\u201d\uff0c\u5b83\u89e3\u51b3\u4e86\u8981\u60f3\u4f7f\u7528\u51fd\u6570\u5148\u8981\u5b9a\u4e49\u7684\u9e21\u548c\u86cb\u7684\u95ee\u9898\u3002\nex14.c:8-15\n\u5b9a\u4e49print_arguments\uff0c\u5b83\u77e5\u9053\u5982\u4f55\u6253\u5370\u901a\u5e38\u7531main\u51fd\u6570\u83b7\u5f97\u7684\u76f8\u540c\u5b57\u7b26\u4e32\u6570\u7ec4\u3002\nex14.c:17-30\n\u5b9a\u4e49\u4e86can_print_it\uff0c\u5b83\u53ea\u662f\u7b80\u5355\u5730\u5c06isalpha(ch) || isblank(ch)\u7684\u771f\u503c\uff080\u62161\uff09\u8fd4\u56de\u7ed9\u5b83\u7684\u8c03\u7528\u8005print_letters\u3002\nex14.c:38-42\n\u6700\u540emain\u51fd\u6570\u7b80\u5355\u5730\u8c03\u7528print_arguments\uff0c\u6765\u542f\u52a8\u6574\u4e2a\u51fd\u6570\u94fe\u3002\n\u6211\u4e0d\u5e94\u8be5\u63cf\u8ff0\u6bcf\u4e2a\u51fd\u6570\u91cc\u90fd\u6709\u4ec0\u4e48\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u90fd\u662f\u4f60\u4e4b\u524d\u9047\u5230\u8fc7\u7684\u4e1c\u897f\u3002\u4f60\u5e94\u8be5\u770b\u5230\u7684\u662f\uff0c\u6211\u53ea\u662f\u50cf\u4f60\u5b9a\u4e49main\u51fd\u6570\u4e00\u6837\u6765\u5b9a\u4e49\u5176\u5b83\u51fd\u6570\u3002\u552f\u4e00\u7684\u4e0d\u540c\u5c31\u662f\u5982\u679c\u4f60\u6253\u7b97\u4f7f\u7528\u5f53\u524d\u6587\u4ef6\u4e2d\u6ca1\u6709\u78b0\u5230\u8fc7\u7684\u51fd\u6570\uff0c\u4f60\u5e94\u8be5\u4e8b\u5148\u544a\u8bc9C\u3002\u8fd9\u5c31\u662f\u4ee3\u7801\u9876\u90e8\u7684\u201c\u524d\u5411\u58f0\u660e\u201d\u7684\u4f5c\u7528\u3002\n\u4f60\u4f1a\u770b\u5230\u4ec0\u4e48\n\u5411\u8fd9\u4e2a\u7a0b\u5e8f\u4f20\u5165\u4e0d\u540c\u7684\u547d\u4ee4\u884c\u53c2\u6570\u6765\u73a9\u8f6c\u5b83\uff0c\u8fd9\u6837\u4f1a\u904d\u5386\u4f60\u51fd\u6570\u4e2d\u7684\u6240\u6709\u8def\u5f84\u3002\u8fd9\u91cc\u6f14\u793a\u4e86\u6211\u548c\u5b83\u7684\u4ea4\u4e92\uff1a\n$ make ex14\ncc -Wall -g    ex14.c   -o ex14\n\n$ .\/ex14\n'e' == 101 'x' == 120\n\n$ .\/ex14 hi this is cool\n'e' == 101 'x' == 120\n'h' == 104 'i' == 105\n't' == 116 'h' == 104 'i' == 105 's' == 115\n'i' == 105 's' == 115\n'c' == 99 'o' == 111 'o' == 111 'l' == 108\n\n$ .\/ex14 \"I go 3 spaces\"\n'e' == 101 'x' == 120\n'I' == 73 ' ' == 32 'g' == 103 'o' == 111 ' ' == 32 ' ' == 32 's' == 115 'p' == 112 'a' == 97 'c' == 99 'e' == 101 's' == 115\n$\nisalpha\u548cisblank\u505a\u4e86\u68c0\u67e5\u63d0\u4f9b\u7684\u5b57\u7b26\u662f\u5426\u662f\u5b57\u6bcd\u6216\u8005\u7a7a\u767d\u5b57\u7b26\u7684\u6240\u6709\u5de5\u4f5c\u3002\u5f53\u6211\u6700\u540e\u4e00\u6b21\u8fd0\u884c\u65f6\uff0c\u5b83\u6253\u5370\u51fa\u9664\u4e86'3'\u4e4b\u5916\u7684\u4efb\u4f55\u4e1c\u897f\uff0c\u56e0\u4e3a\u5b83\u662f\u4e00\u4e2a\u6570\u5b57\u3002\n\u5982\u4f55\u4f7f\u5b83\u5d29\u6e83\n\u4e0b\u9762\u662f\u4f7f\u5b83\u5d29\u6e83\u7684\u4e24\u79cd\u4e0d\u540c\u7684\u65b9\u6cd5\uff1a\n\n\u901a\u8fc7\u79fb\u9664\u524d\u5411\u58f0\u660e\u6765\u628a\u7f16\u8bd1\u5668\u641e\u6655\u3002\u5b83\u4f1a\u62a5\u544acan_print_it \u548c print_letters\u7684\u9519\u8bef\u3002\n\u5f53\u4f60\u5728main\u4e2d\u8c03\u7528print_arguments\u65f6\uff0c\u8bd5\u7740\u4f7fargc\u52a01\uff0c\u4e8e\u662f\u5b83\u4f1a\u8d8a\u8fc7argv\u6570\u7ec4\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u3002\n\n\u9644\u52a0\u9898\n\n\u91cd\u65b0\u7f16\u5199\u8fd9\u4e9b\u51fd\u6570\uff0c\u4f7f\u5b83\u4eec\u7684\u6570\u91cf\u51cf\u5c11\u3002\u6bd4\u5982\uff0c\u4f60\u771f\u7684\u9700\u8981can_print_it\u5417\uff1f\n\u4f7f\u7528strlen\u51fd\u6570\uff0c\u8ba9print_arguments\u77e5\u9053\u6bcf\u4e2a\u5b57\u7b26\u4e32\u53c2\u6570\u90fd\u6709\u591a\u957f\uff0c\u4e4b\u540e\u5c06\u957f\u5ea6\u4f20\u5165print_letters\u3002\u7136\u540e\u91cd\u5199print_letters\uff0c\u8ba9\u5b83\u53ea\u5904\u7406\u56fa\u5b9a\u7684\u957f\u5ea6\uff0c\u4e0d\u6309\u7167'\\0'\u7ec8\u6b62\u7b26\u3002\u4f60\u9700\u8981#include &lt;string.h&gt;\u6765\u5b9e\u73b0\u5b83\u3002\n\u4f7f\u7528man\u6765\u67e5\u8be2isalpha\u548cisblank\u7684\u4fe1\u606f\u3002\u4f7f\u7528\u5176\u5b83\u76f8\u4f3c\u7684\u51fd\u6570\u6765\u53ea\u6253\u5370\u51fa\u6570\u5b57\u6216\u8005\u5176\u5b83\u5b57\u7b26\u3002\n\u4e0a\u7f51\u6d4f\u89c8\u4e0d\u540c\u7684\u4eba\u559c\u6b22\u4ec0\u4e48\u6837\u7684\u51fd\u6570\u683c\u5f0f\u3002\u6c38\u8fdc\u4e0d\u8981\u4f7f\u7528\u201cK&amp;R\u201d\u8bed\u6cd5\uff0c\u56e0\u4e3a\u5b83\u8fc7\u65f6\u4e86\uff0c\u800c\u4e14\u5bb9\u6613\u4f7f\u4eba\u6df7\u4e71\uff0c\u4f46\u662f\u5f53\u4f60\u78b0\u5230\u4e00\u4e9b\u4eba\u4f7f\u7528\u8fd9\u79cd\u683c\u5f0f\u65f6\uff0c\u8981\u7406\u89e3\u4ee3\u7801\u505a\u4e86\u4ec0\u4e48\u3002\n","categories":"\u7ec3\u4e602","tags":["stdio","\u51fd\u6570"]},{"title":"\u6307\u9488\uff0c\u53ef\u6015\u7684\u6307\u9488","url":"https:\/\/naka507.github.io\/posts\/8B5745CD2156FCC3.html","content":"\u6307\u9488\uff0c\u53ef\u6015\u7684\u6307\u9488\n\u6307\u9488\u662fC\u4e2d\u7684\u4e00\u4e2a\u8457\u540d\u7684\u8c1c\u4e4b\u7279\u6027\uff0c\u6211\u4f1a\u8bd5\u7740\u901a\u8fc7\u6559\u6388\u4f60\u4e00\u4e9b\u7528\u4e8e\u5904\u7406\u5b83\u4eec\u7684\u8bcd\u6c47\uff0c\u4f7f\u4e4b\u53bb\u795e\u79d8\u5316\u3002\u6307\u9488\u5b9e\u9645\u4e0a\u5e76\u4e0d\u590d\u6742\uff0c\u53ea\u4e0d\u8fc7\u5b83\u4eec\u7ecf\u5e38\u4ee5\u4e00\u4e9b\u5947\u602a\u7684\u65b9\u5f0f\u88ab\u6ee5\u7528\uff0c\u8fd9\u6837\u4f7f\u5b83\u4eec\u53d8\u5f97\u96be\u4ee5\u4f7f\u7528\u3002\u5982\u679c\u4f60\u907f\u514d\u8fd9\u4e9b\u611a\u8822\u7684\u65b9\u6cd5\u6765\u4f7f\u7528\u6307\u9488\uff0c\u4f60\u4f1a\u53d1\u73b0\u5b83\u4eec\u96be\u4ee5\u7f6e\u4fe1\u7684\u7b80\u5355\u3002\n\u8981\u60f3\u4ee5\u4e00\u79cd\u6211\u4eec\u53ef\u4ee5\u8c08\u8bba\u7684\u65b9\u5f0f\u6765\u8bb2\u89e3\u6307\u9488\uff0c\u6211\u4f1a\u7f16\u5199\u4e00\u4e2a\u65e0\u610f\u4e49\u7684\u7a0b\u5e8f\uff0c\u5b83\u4ee5\u4e09\u79cd\u65b9\u5f0f\u6253\u5370\u4e86\u4e00\u7ec4\u4eba\u7684\u5e74\u9f84\uff1a\n#include &lt;stdio.h&gt;\n\nint main(int argc, char *argv[])\n{\n    \/\/ create two arrays we care about\n    int ages[] = {23, 43, 12, 89, 2};\n    char *names[] = {\n        \"Alan\", \"Frank\",\n        \"Mary\", \"John\", \"Lisa\"\n    };\n\n    \/\/ safely get the size of ages\n    int count = sizeof(ages) \/ sizeof(int);\n    int i = 0;\n\n    \/\/ first way using indexing\n    for(i = 0; i &lt; count; i++) {\n        printf(\"%s has %d years alive.\\n\",\n                names[i], ages[i]);\n    }\n\n    printf(\"---\\n\");\n\n    \/\/ setup the pointers to the start of the arrays\n    int *cur_age = ages;\n    char **cur_name = names;\n\n    \/\/ second way using pointers\n    for(i = 0; i &lt; count; i++) {\n        printf(\"%s is %d years old.\\n\",\n                *(cur_name+i), *(cur_age+i));\n    }\n\n    printf(\"---\\n\");\n\n    \/\/ third way, pointers are just arrays\n    for(i = 0; i &lt; count; i++) {\n        printf(\"%s is %d years old again.\\n\",\n                cur_name[i], cur_age[i]);\n    }\n\n    printf(\"---\\n\");\n\n    \/\/ fourth way with pointers in a stupid complex way\n    for(cur_name = names, cur_age = ages;\n            (cur_age - ages) &lt; count;\n            cur_name++, cur_age++)\n    {\n        printf(\"%s lived %d years so far.\\n\",\n                *cur_name, *cur_age);\n    }\n\n    return 0;\n}\n\u5728\u89e3\u91ca\u6307\u9488\u5982\u4f55\u5de5\u4f5c\u4e4b\u524d\uff0c\u8ba9\u6211\u4eec\u9010\u884c\u5206\u89e3\u8fd9\u4e2a\u7a0b\u5e8f\uff0c\u8fd9\u6837\u4f60\u53ef\u4ee5\u5bf9\u53d1\u751f\u4e86\u4ec0\u4e48\u6709\u6240\u4e86\u89e3\u3002\u5f53\u4f60\u6d4f\u89c8\u8fd9\u4e2a\u8be6\u7ec6\u8bf4\u660e\u65f6\uff0c\u8bd5\u7740\u81ea\u5df1\u5728\u7eb8\u4e0a\u56de\u7b54\u95ee\u9898\uff0c\u4e4b\u540e\u770b\u770b\u4f60\u731c\u6d4b\u7684\u7ed3\u679c\u7b26\u5408\u6211\u5bf9\u6307\u9488\u7684\u63cf\u8ff0\u3002\nex15.c:6-10\n\u521b\u5efa\u4e86\u4e24\u4e2a\u6570\u7ec4\uff0cages\u50a8\u5b58\u4e86\u4e00\u4e9bint\u6570\u636e\uff0cnames\u50a8\u5b58\u4e86\u4e00\u4e2a\u5b57\u7b26\u4e32\u6570\u7ec4\u3002\nex15.c:12-13\n\u4e3a\u4e4b\u540e\u7684for\u5faa\u73af\u521b\u5efa\u4e86\u4e00\u4e9b\u53d8\u91cf\u3002\nex15.c:16-19\n\u4f60\u77e5\u9053\u8fd9\u53ea\u662f\u904d\u5386\u4e86\u4e24\u4e2a\u6570\u7ec4\uff0c\u5e76\u4e14\u6253\u5370\u51fa\u6bcf\u4e2a\u4eba\u7684\u5e74\u9f84\u3002\u5b83\u4f7f\u7528\u4e86i\u6765\u5bf9\u6570\u7ec4\u7d22\u5f15\u3002\nex15.c:24\n\u521b\u5efa\u4e86\u4e00\u4e2a\u6307\u5411ages\u7684\u6307\u9488\u3002\u6ce8\u610fint *\u521b\u5efa\u201c\u6307\u5411\u6574\u6570\u7684\u6307\u9488\u201d\u7684\u6307\u9488\u7c7b\u578b\u7684\u7528\u6cd5\u3002\u5b83\u5f88\u50cfchar *\uff0c\u610f\u4e49\u662f\u201c\u6307\u5411\u5b57\u7b26\u7684\u6307\u9488\u201d\uff0c\u800c\u4e14\u5b57\u7b26\u4e32\u662f\u5b57\u7b26\u7684\u6570\u7ec4\u3002\u662f\u4e0d\u662f\u5f88\u76f8\u4f3c\u5462\uff1f\nex15.c:25\n\u521b\u5efa\u4e86\u6307\u5411names\u7684\u6307\u9488\u3002char *\u5df2\u7ecf\u662f\u201c\u6307\u5411char\u7684\u6307\u9488\u201d\u4e86\uff0c\u6240\u4ee5\u5b83\u53ea\u662f\u4e2a\u5b57\u7b26\u4e32\u3002\u4f60\u9700\u8981\u4e24\u4e2a\u5c42\u7ea7\uff0c\u56e0\u4e3anames\u662f\u4e8c\u7ef4\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u4f60\u9700\u8981char **\u4f5c\u4e3a\u201c\u6307\u5411\u2018\u6307\u5411\u5b57\u7b26\u7684\u6307\u9488\u2019\u7684\u6307\u9488\u201d\u3002\u628a\u5b83\u5b66\u4f1a\uff0c\u5e76\u4e14\u81ea\u5df1\u89e3\u91ca\u5b83\u3002\nex15.c:28-31\n\u904d\u5386ages\u548cnames\uff0c\u4f46\u662f\u4f7f\u7528\u201c\u6307\u9488\u52a0\u504f\u79fbi\u201d\u3002*(cur_name+i)\u548cname[i]\u662f\u4e00\u6837\u7684\uff0c\u4f60\u5e94\u8be5\u628a\u5b83\u8bfb\u4f5c\u201c\u2018cur_name\u6307\u9488\u52a0i\u2019\u7684\u503c\u201d\u3002\nex15.c:35-39\n\u8fd9\u91cc\u5c55\u793a\u4e86\u8bbf\u95ee\u6570\u7ec4\u5143\u7d20\u7684\u8bed\u6cd5\u548c\u6307\u9488\u662f\u76f8\u540c\u7684\u3002\nex15.c:44-50\n\u53e6\u4e00\u4e2a\u5341\u5206\u611a\u8822\u7684\u5faa\u73af\u548c\u5176\u5b83\u4e24\u4e2a\u5faa\u73af\u505a\u7740\u76f8\u540c\u7684\u4e8b\u60c5\uff0c\u4f46\u662f\u5b83\u7528\u4e86\u5404\u79cd\u6307\u9488\u7b97\u672f\u8fd0\u7b97\u6765\u4ee3\u66ff\uff1a\nex15.c:44\n\u901a\u8fc7\u5c06cur_name\u548ccur_age\u7f6e\u4e3anames\u548cage\u6570\u7ec4\u7684\u8d77\u59cb\u4f4d\u7f6e\u6765\u521d\u59cb\u5316for\u5faa\u73af\u3002\nex15.c:45\nfor\u5faa\u73af\u7684\u6d4b\u8bd5\u90e8\u5206\u6bd4\u8f83cur_age\u6307\u9488\u548cages\u8d77\u59cb\u4f4d\u7f6e\u7684\u8ddd\u79bb\uff0c\u4e3a\u4ec0\u4e48\u53ef\u4ee5\u8fd9\u6837\u5199\u5462\uff1f\nex15.c:46\nfor\u5faa\u73af\u7684\u589e\u52a0\u90e8\u5206\u589e\u52a0\u4e86cur_name\u548ccur_age\u7684\u503c\uff0c\u8fd9\u6837\u5b83\u4eec\u53ef\u4ee5\u53ea\u60f3names\u548cages\u7684\u4e0b\u4e00\u4e2a\u5143\u7d20\u3002\nex15.c:48-49\ncur_name\u548ccur_age\u7684\u503c\u73b0\u5728\u6307\u5411\u4e86\u76f8\u5e94\u6570\u7ec4\u4e2d\u7684\u4e00\u4e2a\u5143\u7d20\uff0c\u6211\u4eec\u6211\u53ef\u4ee5\u901a\u8fc7*cur_name\u548c*cur_age\u6765\u6253\u5370\u5b83\u4eec\uff0c\u8fd9\u91cc\u7684\u610f\u601d\u662f\u201ccur_name\u548ccur_age\u6307\u5411\u7684\u503c\u201d\u3002\n\u8fd9\u4e2a\u770b\u4f3c\u7b80\u5355\u7684\u7a0b\u5e8f\u5374\u5305\u542b\u4e86\u5927\u91cf\u7684\u4fe1\u606f\uff0c\u5176\u76ee\u7684\u662f\u5728\u6211\u5411\u4f60\u8bb2\u89e3\u4e4b\u524d\u5c1d\u8bd5\u8ba9\u4f60\u81ea\u5df1\u5f04\u6e05\u695a\u6307\u9488\u3002\u76f4\u5230\u4f60\u5199\u4e0b\u4f60\u8ba4\u4e3a\u6307\u9488\u505a\u4e86\u4ec0\u4e48\u4e4b\u524d\uff0c\u4e0d\u8981\u5f80\u4e0b\u9605\u8bfb\u3002\n\u4f60\u4f1a\u770b\u5230\u4ec0\u4e48\n\u5728\u4f60\u8fd0\u884c\u8fd9\u4e2a\u7a0b\u5e8f\u4e4b\u540e\uff0c\u5c1d\u8bd5\u6839\u636e\u6253\u5370\u51fa\u7684\u6bcf\u4e00\u884c\u8ffd\u6eaf\u5230\u4ee3\u7801\u4e2d\u4ea7\u751f\u5b83\u4eec\u7684\u90a3\u4e00\u884c\u3002\u5728\u5fc5\u8981\u60c5\u51b5\u4e0b\uff0c\u4fee\u6539printf\u8c03\u7528\u6765\u786e\u8ba4\u4f60\u5f97\u5230\u4e86\u6b63\u786e\u7684\u884c\u53f7\uff1a\n$ make ex15\ncc -Wall -g    ex15.c   -o ex15\n$ .\/ex15\nAlan has 23 years alive.\nFrank has 43 years alive.\nMary has 12 years alive.\nJohn has 89 years alive.\nLisa has 2 years alive.\n---\nAlan is 23 years old.\nFrank is 43 years old.\nMary is 12 years old.\nJohn is 89 years old.\nLisa is 2 years old.\n---\nAlan is 23 years old again.\nFrank is 43 years old again.\nMary is 12 years old again.\nJohn is 89 years old again.\nLisa is 2 years old again.\n---\nAlan lived 23 years so far.\nFrank lived 43 years so far.\nMary lived 12 years so far.\nJohn lived 89 years so far.\nLisa lived 2 years so far.\n$\n\u89e3\u91ca\u6307\u9488\n\u5f53\u4f60\u5199\u4e0b\u4e00\u4e9b\u7c7b\u4f3cages[i]\u7684\u4e1c\u897f\u65f6\uff0c\u4f60\u5b9e\u9645\u4e0a\u5728\u7528i\u4e2d\u7684\u6570\u5b57\u6765\u7d22\u5f15ages\u3002\u5982\u679ci\u7684\u503c\u4e3a0\uff0c\u90a3\u4e48\u5c31\u7b49\u540c\u4e8e\u5199\u4e0bages[0]\u3002\u6211\u4eec\u628ai\u53eb\u505a\u4e0b\u6807\uff0c\u56e0\u4e3a\u5b83\u662fages\u4e2d\u7684\u4e00\u4e2a\u4f4d\u7f6e\u3002\u5b83\u4e5f\u80fd\u79f0\u4e3a\u5730\u5740\uff0c\u8fd9\u662f\u201c\u6211\u60f3\u8981ages\u4f4d\u4e8e\u5730\u5740i\u5904\u7684\u6574\u6570\u201d\u4e2d\u7684\u8bf4\u6cd5\u3002\n\u5982\u679ci\u662f\u4e2a\u4e0b\u6807\uff0c\u90a3\u4e48ages\u53c8\u662f\u4ec0\u4e48\uff1f\u5bf9C\u6765\u8bf4ages\u662f\u5728\u8ba1\u7b97\u673a\u4e2d\u90a3\u4e9b\u6574\u6570\u7684\u8d77\u59cb\u4f4d\u7f6e\u3002\u5f53\u7136\u5b83\u4e5f\u662f\u4e2a\u5730\u5740\uff0cC\u7f16\u8bd1\u5668\u4f1a\u628a\u4efb\u4f55\u4f60\u952e\u5165ages\u7684\u5730\u65b9\u66ff\u6362\u4e3a\u6570\u7ec4\u4e2d\u7b2c\u4e00\u4e2a\u6574\u6570\u7684\u5730\u5740\u3002\u53e6\u4e00\u4e2a\u7406\u89e3\u5b83\u7684\u529e\u6cd5\u5c31\u662f\u628aages\u5f53\u4f5c\u201c\u6570\u7ec4\u5185\u90e8\u7b2c\u4e00\u4e2a\u6574\u6570\u7684\u5730\u5740\u201d\uff0c\u4f46\u662f\u5b83\u662f\u6574\u4e2a\u8ba1\u7b97\u673a\u4e2d\u7684\u5730\u5740\uff0c\u800c\u4e0d\u662f\u50cfi\u4e00\u6837\u7684ages\u4e2d\u7684\u5730\u5740\u3002ages\u6570\u7ec4\u7684\u540d\u5b57\u5728\u8ba1\u7b97\u673a\u4e2d\u5b9e\u9645\u4e0a\u662f\u4e2a\u5730\u5740\u3002\n\u8fd9\u5c31\u4ea7\u751f\u4e86\u4e00\u79cd\u7279\u5b9a\u7684\u5b9e\u73b0\uff1aC\u628a\u4f60\u7684\u8ba1\u7b97\u673a\u770b\u6210\u4e00\u4e2a\u5e9e\u5927\u7684\u5b57\u8282\u6570\u7ec4\u3002\u663e\u7136\u8fd9\u6837\u4e0d\u4f1a\u6709\u4ec0\u4e48\u7528\u5904\uff0c\u4e8e\u662fC\u5c31\u5728\u5b83\u7684\u57fa\u7840\u4e0a\u6784\u5efa\u51fa\u7c7b\u578b\u548c\u5927\u5c0f\u7684\u6982\u5ff5\u3002\u4f60\u5df2\u7ecf\u5728\u524d\u9762\u7684\u7ec3\u4e60\u4e2d\u770b\u5230\u4e86\u5b83\u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff0c\u4f46\u73b0\u5728\u4f60\u53ef\u4ee5\u5f00\u59cb\u4e86\u89e3C\u5bf9\u4f60\u7684\u6570\u7ec4\u505a\u4e86\u4e0b\u9762\u4e00\u4e9b\u4e8b\u60c5\uff1a\n\n\u5728\u4f60\u7684\u8ba1\u7b97\u673a\u4e2d\u5f00\u8f9f\u4e00\u5757\u5185\u5b58\u3002\n\u5c06ages\u8fd9\u4e2a\u540d\u5b57\u201c\u6307\u5411\u201d\u5b83\u7684\u8d77\u59cb\u4f4d\u7f6e\u3002\n\u901a\u8fc7\u9009\u53d6ages\u4f5c\u4e3a\u57fa\u5740\uff0c\u5e76\u4e14\u83b7\u53d6\u4f4d\u7f6e\u4e3ai\u7684\u5143\u7d20\uff0c\u6765\u5bf9\u5185\u5b58\u5757\u8fdb\u884c\u7d22\u5f15\u3002\n\u5c06ages+i\u5904\u7684\u5143\u7d20\u8f6c\u6362\u6210\u5927\u5c0f\u6b63\u786e\u7684\u6709\u6548\u7684int\uff0c\u8fd9\u6837\u5c31\u8fd4\u56de\u4e86\u4f60\u60f3\u8981\u7684\u7ed3\u679c\uff1a\u4e0b\u6807i\u5904\u7684int\u3002\n\n\u5982\u679c\u4f60\u53ef\u4ee5\u9009\u53d6ages\u4f5c\u4e3a\u57fa\u5740\uff0c\u4e4b\u540e\u52a0\u4e0a\u6bd4\u5982i\u7684\u53e6\u4e00\u4e2a\u5730\u5740\uff0c\u4f60\u662f\u5426\u5c31\u80fd\u968f\u65f6\u6784\u9020\u51fa\u6307\u5411\u8fd9\u4e00\u5730\u5740\u7684\u6307\u9488\u5462\uff1f\u662f\u7684\uff0c\u8fd9\u79cd\u4e1c\u897f\u5c31\u53eb\u505a\u6307\u9488\u3002\u8fd9\u4e5f\u662fcur_age\u548ccur_name\u6240\u505a\u7684\u4e8b\u60c5\uff0c\u5b83\u4eec\u662f\u6307\u5411\u8ba1\u7b97\u673a\u4e2d\u8fd9\u4e00\u4f4d\u7f6e\u7684\u53d8\u91cf\uff0cages\u548cnames\u5c31\u5904\u4e8e\u8fd9\u4e00\u4f4d\u7f6e\u3002\u4e4b\u540e\uff0c\u793a\u4f8b\u7a0b\u5e8f\u79fb\u52a8\u5b83\u4eec\uff0c\u6216\u8005\u505a\u4e86\u4e00\u4e9b\u7b97\u6570\u8fd0\u7b97\uff0c\u6765\u4ece\u5185\u5b58\u4e2d\u83b7\u53d6\u503c\u3002\u5728\u5176\u4e2d\u4e00\u4e2a\u5b9e\u4f8b\u4e2d\uff0c\u53ea\u662f\u7b80\u5355\u5730\u5c06cur_age\u52a0\u4e0ai\uff0c\u8fd9\u6837\u7b49\u540c\u4e8earray[i]\u3002\u5728\u6700\u540e\u4e00\u4e2afor\u5faa\u73af\u4e2d\uff0c\u8fd9\u4e24\u4e2a\u6307\u9488\u5728\u6ca1\u6709i\u8f85\u52a9\u7684\u60c5\u51b5\u4e0b\u81ea\u5df1\u79fb\u52a8\uff0c\u88ab\u5f53\u505a\u6570\u7ec4\u57fa\u5740\u548c\u6574\u6570\u504f\u79fb\u5408\u5e76\u5230\u4e00\u8d77\u7684\u7ec4\u5408\u3002\n\u6307\u9488\u4ec5\u4ec5\u662f\u6307\u5411\u8ba1\u7b97\u673a\u4e2d\u7684\u67d0\u4e2a\u5730\u5740\uff0c\u5e76\u5e26\u6709\u7c7b\u578b\u9650\u5b9a\u7b26\uff0c\u6240\u4ee5\u4f60\u53ef\u4ee5\u901a\u8fc7\u5b83\u5f97\u5230\u6b63\u786e\u5927\u5c0f\u7684\u6570\u636e\u3002\u5b83\u7c7b\u4f3c\u4e8e\u5c06ages\u548ci\u7ec4\u5408\u4e3a\u4e00\u4e2a\u6570\u636e\u7c7b\u578b\u7684\u4e1c\u897f\u3002C\u4e86\u89e3\u6307\u9488\u6307\u5411\u4ec0\u4e48\u5730\u65b9\uff0c\u6240\u6307\u5411\u7684\u6570\u636e\u7c7b\u578b\uff0c\u8fd9\u4e9b\u7c7b\u578b\u7684\u5927\u5c0f\uff0c\u4ee5\u53ca\u5982\u4f55\u4e3a\u4f60\u83b7\u53d6\u6570\u636e\u3002\u4f60\u53ef\u4ee5\u50cfi\u4e00\u6837\u589e\u52a0\u5b83\u4eec\uff0c\u51cf\u5c11\u5b83\u4eec\uff0c\u5bf9\u4ed6\u4eec\u505a\u52a0\u51cf\u8fd0\u7b97\u3002\u7136\u800c\u5b83\u4eec\u4e5f\u50cf\u662fages\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u5b83\u83b7\u53d6\u503c\uff0c\u653e\u5165\u65b0\u7684\u503c\uff0c\u6216\u6267\u884c\u5168\u90e8\u7684\u6570\u7ec4\u64cd\u4f5c\u3002\n\u6307\u9488\u7684\u7528\u9014\u5c31\u662f\u8ba9\u4f60\u624b\u52a8\u5bf9\u5185\u5b58\u5757\u8fdb\u884c\u7d22\u5f15\uff0c\u4e00\u4e9b\u60c5\u51b5\u4e0b\u6570\u7ec4\u5e76\u4e0d\u80fd\u505a\u5230\u3002\u7edd\u5927\u591a\u6570\u60c5\u51b5\u4e2d\uff0c\u4f60\u53ef\u80fd\u6253\u7b97\u4f7f\u7528\u6570\u7ec4\uff0c\u4f46\u662f\u4e00\u4e9b\u5904\u7406\u539f\u59cb\u5185\u5b58\u5757\u7684\u60c5\u51b5\uff0c\u662f\u6307\u9488\u7684\u7528\u6b66\u4e4b\u5730\u3002\u6307\u9488\u5411\u4f60\u63d0\u4f9b\u4e86\u539f\u59cb\u7684\u3001\u76f4\u63a5\u7684\u5185\u5b58\u5757\u8bbf\u95ee\u9014\u5f84\uff0c\u8ba9\u4f60\u80fd\u591f\u5904\u7406\u5b83\u4eec\u3002\n\u5728\u8fd9\u4e00\u9636\u6bb5\u9700\u8981\u638c\u63e1\u7684\u6700\u540e\u4e00\u4ef6\u4e8b\uff0c\u5c31\u662f\u4f60\u53ef\u4ee5\u5bf9\u6570\u7ec4\u548c\u6307\u9488\u64cd\u4f5c\u6df7\u7528\u5b83\u4eec\u7edd\u5927\u591a\u6570\u7684\u8bed\u6cd5\u3002\u4f60\u53ef\u4ee5\u5bf9\u4e00\u4e2a\u6307\u9488\u4f7f\u7528\u6570\u7ec4\u7684\u8bed\u6cd5\u6765\u8bbf\u95ee\u6307\u5411\u7684\u4e1c\u897f\uff0c\u4e5f\u53ef\u4ee5\u5bf9\u6570\u7ec4\u7684\u540d\u5b57\u505a\u6307\u9488\u7684\u7b97\u6570\u8fd0\u7b97\u3002\n\u5b9e\u7528\u7684\u6307\u9488\u7528\u6cd5\n\u4f60\u53ef\u4ee5\u7528\u6307\u9488\u505a\u4e0b\u9762\u56db\u4e2a\u6700\u57fa\u672c\u7684\u64cd\u4f5c\uff1a\n\n\u5411OS\u7533\u8bf7\u4e00\u5757\u5185\u5b58\uff0c\u5e76\u4e14\u7528\u6307\u9488\u5904\u7406\u5b83\u3002\u8fd9\u5305\u62ec\u5b57\u7b26\u4e32\uff0c\u548c\u4e00\u4e9b\u4f60\u4ece\u6765\u6ca1\u89c1\u8fc7\u7684\u4e1c\u897f\uff0c\u6bd4\u5982\u7ed3\u6784\u4f53\u3002\n\u901a\u8fc7\u6307\u9488\u5411\u51fd\u6570\u4f20\u9012\u5927\u5757\u7684\u5185\u5b58\uff08\u6bd4\u5982\u5f88\u5927\u7684\u7ed3\u6784\u4f53\uff09\uff0c\u8fd9\u6837\u4e0d\u5fc5\u628a\u5168\u90e8\u6570\u636e\u90fd\u4f20\u9012\u8fdb\u53bb\u3002\n\u83b7\u53d6\u51fd\u6570\u7684\u5730\u5740\u7528\u4e8e\u52a8\u6001\u8c03\u7528\u3002\n\u5bf9\u4e00\u5757\u5185\u5b58\u505a\u590d\u6742\u7684\u641c\u7d22\uff0c\u6bd4\u5982\uff0c\u8f6c\u6362\u7f51\u7edc\u5957\u63a5\u5b57\u4e2d\u7684\u5b57\u8282\uff0c\u6216\u8005\u89e3\u6790\u6587\u4ef6\u3002\n\n\u5bf9\u4e8e\u4f60\u770b\u5230\u7684\u5176\u5b83\u6240\u6709\u60c5\u51b5\uff0c\u5b9e\u9645\u4e0a\u5e94\u5f53\u4f7f\u7528\u6570\u7ec4\u3002\u5728\u65e9\u671f\uff0c\u7531\u4e8e\u7f16\u8bd1\u5668\u4e0d\u64c5\u957f\u4f18\u5316\u6570\u7ec4\uff0c\u4eba\u4eec\u4f7f\u7528\u6307\u9488\u6765\u52a0\u901f\u5b83\u4eec\u7684\u7a0b\u5e8f\u3002\u7136\u800c\uff0c\u73b0\u5728\u8bbf\u95ee\u6570\u7ec4\u548c\u6307\u9488\u7684\u8bed\u6cd5\u90fd\u4f1a\u7ffb\u8bd1\u6210\u76f8\u540c\u7684\u673a\u5668\u7801\uff0c\u5e76\u4e14\u8868\u73b0\u4e00\u81f4\u3002\u7531\u6b64\uff0c\u4f60\u5e94\u8be5\u6bcf\u6b21\u5c3d\u53ef\u80fd\u4f7f\u7528\u6570\u7ec4\uff0c\u5e76\u4e14\u6309\u9700\u5c06\u6307\u9488\u7528\u4f5c\u63d0\u5347\u6027\u80fd\u7684\u624b\u6bb5\u3002\n\u6307\u9488\u8bcd\u5e93\n\u73b0\u5728\u6211\u6253\u7b97\u5411\u4f60\u63d0\u4f9b\u4e00\u4e2a\u8bcd\u5e93\uff0c\u7528\u4e8e\u8bfb\u5199\u6307\u9488\u3002\u5f53\u4f60\u9047\u5230\u590d\u6742\u7684\u6307\u9488\u8bed\u53e5\u65f6\uff0c\u8bd5\u7740\u53c2\u8003\u5b83\u5e76\u4e14\u9010\u5b57\u62c6\u5206\u8bed\u53e5\uff08\u6216\u8005\u4e0d\u8981\u4f7f\u7528\u8fd9\u4e2a\u8bed\u53e5\uff0c\u56e0\u4e3a\u6709\u53ef\u80fd\u5e76\u4e0d\u597d\uff09\uff1a\ntype *ptr\ntype\u7c7b\u578b\u7684\u6307\u9488\uff0c\u540d\u4e3aptr\u3002\n*ptr\nptr\u6240\u6307\u5411\u4f4d\u7f6e\u7684\u503c\u3002\n*(ptr + i)\n\uff08ptr\u6240\u6307\u5411\u4f4d\u7f6e\u52a0\u4e0ai\uff09\u7684\u503c\u3002\n\n\u8bd1\u8005\u6ce8\uff1a\u4ee5\u5b57\u8282\u4e3a\u5355\u4f4d\u7684\u8bdd\uff0c\u5e94\u8be5\u662fptr\u6240\u6307\u5411\u7684\u4f4d\u7f6e\u518d\u52a0\u4e0asizeof(type) * i\u3002\n\n&amp;thing\nthing\u7684\u5730\u5740\u3002\ntype *ptr = &amp;thing\n\u540d\u4e3aptr\uff0ctype\u7c7b\u578b\u7684\u6307\u9488\uff0c\u503c\u8bbe\u7f6e\u4e3athing\u7684\u5730\u5740\u3002\nptr++\n\u81ea\u589eptr\u6307\u5411\u7684\u4f4d\u7f6e\u3002\n\u6211\u4eec\u5c06\u4f1a\u4f7f\u7528\u8fd9\u4efd\u7b80\u5355\u7684\u8bcd\u5e93\u6765\u62c6\u89e3\u8fd9\u672c\u4e66\u4e2d\u6240\u6709\u7684\u6307\u9488\u7528\u4f8b\u3002\n\u6307\u9488\u5e76\u4e0d\u662f\u6570\u7ec4\n\u65e0\u8bba\u600e\u4e48\u6837\uff0c\u4f60\u90fd\u4e0d\u5e94\u8be5\u628a\u6307\u9488\u548c\u6570\u7ec4\u6df7\u4e3a\u4e00\u8c08\u3002\u5b83\u4eec\u5e76\u4e0d\u662f\u76f8\u540c\u7684\u4e1c\u897f\uff0c\u5373\u4f7fC\u8ba9\u4f60\u4ee5\u4e00\u4e9b\u76f8\u540c\u7684\u65b9\u6cd5\u6765\u4f7f\u7528\u5b83\u4eec\u3002\u4f8b\u5982\uff0c\u5982\u679c\u4f60\u8bbf\u95ee\u4e0a\u9762\u4ee3\u7801\u4e2d\u7684sizeof(cur_age)\uff0c\u4f60\u4f1a\u5f97\u5230\u6307\u9488\u7684\u5927\u5c0f\uff0c\u800c\u4e0d\u662f\u5b83\u6307\u5411\u6570\u7ec4\u7684\u5927\u5c0f\u3002\u5982\u679c\u4f60\u60f3\u5f97\u5230\u6574\u4e2a\u6570\u7ec4\u7684\u5927\u5c0f\uff0c\u4f60\u5e94\u8be5\u4f7f\u7528\u6570\u7ec4\u7684\u540d\u79f0age\uff0c\u5c31\u50cf\u7b2c12\u884c\u90a3\u6837\u3002\n\n\u8bd1\u8005\u6ce8\uff0c\u9664\u4e86sizeof\u3001&amp;\u64cd\u4f5c\u548c\u58f0\u660e\u4e4b\u5916\uff0c\u6570\u7ec4\u540d\u79f0\u90fd\u4f1a\u88ab\u7f16\u8bd1\u5668\u63a8\u5bfc\u4e3a\u6307\u5411\u5176\u9996\u4e2a\u5143\u7d20\u7684\u6307\u9488\u3002\u5bf9\u4e8e\u8fd9\u4e9b\u60c5\u51b5\uff0c\u4e0d\u8981\u7528\u201c\u662f\u201d\u8fd9\u4e2a\u8bcd\uff0c\u800c\u662f\u8981\u7528\u201c\u63a8\u5bfc\u201d\u3002\n\n\u5982\u4f55\u4f7f\u5b83\u5d29\u6e83\n\u4f60\u53ef\u4ee5\u901a\u8fc7\u5c06\u6307\u9488\u6307\u5411\u9519\u8bef\u7684\u4f4d\u7f6e\u6765\u4f7f\u7a0b\u5e8f\u5d29\u6e83\uff1a\n\n\u8bd5\u7740\u5c06cur_age\u6307\u5411names\u3002\u53ef\u4ee5\u9700\u8981C\u98ce\u683c\u8f6c\u6362\u6765\u5f3a\u5236\u6267\u884c\uff0c\u8bd5\u7740\u67e5\u9605\u76f8\u5173\u8d44\u6599\u628a\u5b83\u5f04\u660e\u767d\u3002\n\u5728\u6700\u540e\u7684for\u5faa\u73af\u4e2d\uff0c\u7528\u4e00\u4e9b\u53e4\u602a\u7684\u65b9\u5f0f\u4f7f\u8ba1\u7b97\u53d1\u751f\u9519\u8bef\u3002\n\u8bd5\u7740\u91cd\u5199\u5faa\u73af\uff0c\u8ba9\u5b83\u4eec\u4ece\u6570\u7ec4\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u5f00\u59cb\u904d\u5386\u5230\u9996\u4e2a\u5143\u7d20\u3002\u8fd9\u6bd4\u770b\u4e0a\u53bb\u8981\u56f0\u96be\u3002\n\n\u9644\u52a0\u9898\n\n\u4f7f\u7528\u8bbf\u95ee\u6307\u9488\u7684\u65b9\u5f0f\u91cd\u5199\u6240\u6709\u4f7f\u7528\u6570\u7ec4\u7684\u5730\u65b9\u3002\n\u4f7f\u7528\u8bbf\u95ee\u6570\u7ec4\u7684\u65b9\u5f0f\u91cd\u5199\u6240\u6709\u4f7f\u7528\u6307\u9488\u7684\u5730\u65b9\u3002\n\u5728\u5176\u5b83\u7a0b\u5e8f\u4e2d\u4f7f\u7528\u6307\u9488\u6765\u4ee3\u66ff\u6570\u7ec4\u8bbf\u95ee\u3002\n\u4f7f\u7528\u6307\u9488\u6765\u5904\u7406\u547d\u4ee4\u884c\u53c2\u6570\uff0c\u5c31\u50cf\u5904\u7406names\u90a3\u6837\u3002\n\u5c06\u83b7\u53d6\u503c\u548c\u83b7\u53d6\u5730\u5740\u7ec4\u5408\u5230\u4e00\u8d77\u3002\n\u5728\u7a0b\u5e8f\u672b\u5c3e\u6dfb\u52a0\u4e00\u4e2afor\u5faa\u73af\uff0c\u6253\u5370\u51fa\u8fd9\u4e9b\u6307\u9488\u6240\u6307\u5411\u7684\u5730\u5740\u3002\u4f60\u9700\u8981\u5728printf\u4e2d\u4f7f\u7528%p\u3002\n\u5bf9\u4e8e\u6bcf\u4e00\u79cd\u6253\u5370\u6570\u7ec4\u7684\u65b9\u6cd5\uff0c\u4f7f\u7528\u51fd\u6570\u6765\u91cd\u5199\u7a0b\u5e8f\u3002\u8bd5\u7740\u5411\u51fd\u6570\u4f20\u9012\u6307\u9488\u6765\u5904\u7406\u6570\u636e\u3002\u8bb0\u4f4f\u4f60\u53ef\u4ee5\u58f0\u660e\u63a5\u53d7\u6307\u9488\u7684\u51fd\u6570\uff0c\u4f46\u662f\u53ef\u4ee5\u50cf\u6570\u7ec4\u90a3\u6837\u7528\u5b83\u3002\n\u5c06for\u5faa\u73af\u6539\u4e3awhile\u5faa\u73af\uff0c\u5e76\u4e14\u89c2\u5bdf\u5bf9\u4e8e\u6bcf\u79cd\u6307\u9488\u7528\u6cd5\u54ea\u79cd\u5faa\u73af\u66f4\u65b9\u4fbf\u3002\n","categories":"\u7ec3\u4e602","tags":["\u6307\u9488","stdio"]},{"title":"\u7ed3\u6784\u4f53\u548c\u6307\u5411\u5b83\u4eec\u7684\u6307\u9488","url":"https:\/\/naka507.github.io\/posts\/CDCC108031940336.html","content":"\u7ed3\u6784\u4f53\u548c\u6307\u5411\u5b83\u4eec\u7684\u6307\u9488\n\u5728\u8fd9\u4e2a\u7ec3\u4e60\u4e2d\u4f60\u5c06\u4f1a\u5b66\u5230\u5982\u4f55\u521b\u5efastruct\uff0c\u5c06\u4e00\u4e2a\u6307\u9488\u6307\u5411\u5b83\u4eec\uff0c\u4ee5\u53ca\u4f7f\u7528\u5b83\u4eec\u6765\u7406\u89e3\u5185\u5b58\u7684\u5185\u90e8\u7ed3\u6784\u3002\u6211\u4e5f\u4f1a\u501f\u52a9\u4e0a\u4e00\u8282\u8bfe\u4e2d\u7684\u6307\u9488\u77e5\u8bc6\uff0c\u5e76\u4e14\u8ba9\u4f60\u4f7f\u7528malloc\u4ece\u539f\u59cb\u5185\u5b58\u4e2d\u6784\u9020\u8fd9\u4e9b\u7ed3\u6784\u4f53\u3002\n\u50cf\u5f80\u5e38\u4e00\u6837\uff0c\u4e0b\u9762\u662f\u6211\u4eec\u5c06\u8981\u8ba8\u8bba\u7684\u7a0b\u5e8f\uff0c\u4f60\u5e94\u8be5\u628a\u5b83\u6253\u4e0b\u6765\u5e76\u4e14\u4f7f\u5b83\u6b63\u5e38\u5de5\u4f5c\uff1a\n#include &lt;stdio.h&gt;\n#include &lt;assert.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;string.h&gt;\n\nstruct Person {\n    char *name;\n    int age;\n    int height;\n    int weight;\n};\n\nstruct Person *Person_create(char *name, int age, int height, int weight)\n{\n    struct Person *who = malloc(sizeof(struct Person));\n    assert(who != NULL);\n\n    who-&gt;name = strdup(name);\n    who-&gt;age = age;\n    who-&gt;height = height;\n    who-&gt;weight = weight;\n\n    return who;\n}\n\nvoid Person_destroy(struct Person *who)\n{\n    assert(who != NULL);\n\n    free(who-&gt;name);\n    free(who);\n}\n\nvoid Person_print(struct Person *who)\n{\n    printf(\"Name: %s\\n\", who-&gt;name);\n    printf(\"\\tAge: %d\\n\", who-&gt;age);\n    printf(\"\\tHeight: %d\\n\", who-&gt;height);\n    printf(\"\\tWeight: %d\\n\", who-&gt;weight);\n}\n\nint main(int argc, char *argv[])\n{\n    \/\/ make two people structures\n    struct Person *joe = Person_create(\n            \"Joe Alex\", 32, 64, 140);\n\n    struct Person *frank = Person_create(\n            \"Frank Blank\", 20, 72, 180);\n\n    \/\/ print them out and where they are in memory\n    printf(\"Joe is at memory location %p:\\n\", joe);\n    Person_print(joe);\n\n    printf(\"Frank is at memory location %p:\\n\", frank);\n    Person_print(frank);\n\n    \/\/ make everyone age 20 years and print them again\n    joe-&gt;age += 20;\n    joe-&gt;height -= 2;\n    joe-&gt;weight += 40;\n    Person_print(joe);\n\n    frank-&gt;age += 20;\n    frank-&gt;weight += 20;\n    Person_print(frank);\n\n    \/\/ destroy them both so we clean up\n    Person_destroy(joe);\n    Person_destroy(frank);\n\n    return 0;\n}\n\u6211\u6253\u7b97\u4f7f\u7528\u4e00\u79cd\u548c\u4e4b\u524d\u4e0d\u4e00\u6837\u7684\u65b9\u6cd5\u6765\u63cf\u8ff0\u8fd9\u6bb5\u7a0b\u5e8f\u3002\u6211\u5e76\u4e0d\u4f1a\u5bf9\u7a0b\u5e8f\u505a\u9010\u884c\u7684\u62c6\u5206\uff0c\u800c\u662f\u7531\u4f60\u81ea\u5df1\u5199\u51fa\u6765\u3002\u6211\u4f1a\u57fa\u4e8e\u7a0b\u5e8f\u6240\u5305\u542b\u7684\u90e8\u5206\u6765\u7ed9\u4f60\u63d0\u793a\uff0c\u4f60\u7684\u4efb\u52a1\u5c31\u662f\u5199\u51fa\u6bcf\u884c\u662f\u5e72\u4ec0\u4e48\u7684\u3002\n\u5305\u542b\uff08include\uff09\n\u6211\u5305\u542b\u4e86\u4e00\u4e9b\u65b0\u7684\u5934\u6587\u4ef6\uff0c\u6765\u8bbf\u95ee\u4e00\u4e9b\u65b0\u7684\u51fd\u6570\u3002\u6bcf\u4e2a\u5934\u6587\u4ef6\u90fd\u63d0\u4f9b\u4e86\u4ec0\u4e48\u4e1c\u897f\uff1f\nstruct Person\n\u8fd9\u5c31\u662f\u6211\u521b\u5efa\u7ed3\u6784\u4f53\u7684\u5730\u65b9\u4e86\uff0c\u7ed3\u6784\u4f53\u542b\u6709\u56db\u4e2a\u6210\u5458\u6765\u63cf\u8ff0\u4e00\u4e2a\u4eba\u3002\u6700\u540e\u6211\u4eec\u5f97\u5230\u4e86\u4e00\u4e2a\u590d\u5408\u7c7b\u578b\uff0c\u8ba9\u6211\u4eec\u901a\u8fc7\u4e00\u4e2a\u540d\u5b57\u6765\u6574\u4f53\u5f15\u7528\u8fd9\u4e9b\u6210\u5458\uff0c\u6216\u5b83\u4eec\u7684\u6bcf\u4e00\u4e2a\u3002\u8fd9\u5c31\u50cf\u6570\u636e\u5e93\u8868\u4e2d\u7684\u4e00\u884c\u6216\u8005OOP\u8bed\u8a00\u4e2d\u7684\u4e00\u4e2a\u7c7b\u90a3\u6837\u3002\nPearson_create \u51fd\u6570\n\u6211\u9700\u8981\u4e00\u4e2a\u65b9\u6cd5\u6765\u521b\u5efa\u8fd9\u4e9b\u7ed3\u6784\u4f53\uff0c\u4e8e\u662f\u6211\u5b9a\u4e49\u4e86\u4e00\u4e2a\u51fd\u6570\u6765\u5b9e\u73b0\u3002\u4e0b\u9762\u662f\u8fd9\u4e2a\u51fd\u6570\u505a\u7684\u51e0\u4ef6\u91cd\u8981\u7684\u4e8b\u60c5\uff1a\n\n\u4f7f\u7528\u7528\u4e8e\u5185\u5b58\u5206\u914d\u7684malloc\u6765\u5411OS\u7533\u8bf7\u4e00\u5757\u539f\u59cb\u7684\u5185\u5b58\u3002\n\u5411malloc\u4f20\u9012sizeof(struct Person)\u53c2\u6570\uff0c\u5b83\u8ba1\u7b97\u7ed3\u6784\u4f53\u7684\u5927\u5c0f\uff0c\u5305\u542b\u5176\u4e2d\u7684\u6240\u6709\u6210\u5458\u3002\n\u4f7f\u7528\u4e86assert\u6765\u786e\u4fdd\u4ecemalloc\u5f97\u5230\u4e00\u5757\u6709\u6548\u7684\u5185\u5b58\u3002\u6709\u4e00\u4e2a\u7279\u6b8a\u7684\u5e38\u91cf\u53eb\u505aNULL\uff0c\u8868\u793a\u201c\u672a\u8bbe\u7f6e\u6216\u65e0\u6548\u7684\u6307\u9488\u201d\u3002\u8fd9\u4e2aassert\u5927\u81f4\u68c0\u67e5\u4e86malloc\u662f\u5426\u4f1a\u8fd4\u56deNULL\u3002\n\u4f7f\u7528x-&gt;y\u8bed\u6cd5\u6765\u521d\u59cb\u5316struct Person\u7684\u6bcf\u4e2a\u6210\u5458\uff0c\u5b83\u6307\u660e\u4e86\u6240\u521d\u59cb\u5316\u7684\u6210\u5458\u3002\n\u4f7f\u7528strdup\u6765\u590d\u5236\u5b57\u7b26\u4e32name\uff0c\u662f\u4e3a\u4e86\u786e\u4fdd\u7ed3\u6784\u4f53\u771f\u6b63\u62e5\u6709\u5b83\u3002strdup\u7684\u884c\u4e3a\u5b9e\u9645\u4e0a\u7c7b\u4f3cmalloc\u4f46\u662f\u5b83\u540c\u65f6\u4f1a\u5c06\u539f\u6765\u7684\u5b57\u7b26\u4e32\u590d\u5236\u5230\u65b0\u521b\u5efa\u7684\u5185\u5b58\u3002\n\n\n\u8bd1\u8005\u6ce8\uff1ax-&gt;y\u662f(*x).y\u7684\u7b80\u5199\u3002\n\nPerson_destroy \u51fd\u6570\n\u5982\u679c\u5b9a\u4e49\u4e86\u521b\u5efa\u51fd\u6570\uff0c\u90a3\u4e48\u4e00\u5b9a\u9700\u8981\u4e00\u4e2a\u9500\u6bc1\u51fd\u6570\uff0c\u5b83\u4f1a\u9500\u6bc1Person\u7ed3\u6784\u4f53\u3002\u6211\u518d\u4e00\u6b21\u4f7f\u7528\u4e86assert\u6765\u786e\u4fdd\u4e0d\u4f1a\u5f97\u5230\u9519\u8bef\u7684\u8f93\u5165\u3002\u63a5\u7740\u6211\u4f7f\u7528\u4e86free\u51fd\u6570\u6765\u4ea4\u8fd8\u901a\u8fc7malloc\u548cstrdup\u5f97\u5230\u7684\u5185\u5b58\u3002\u5982\u679c\u4f60\u4e0d\u8fd9\u4e48\u505a\u5219\u4f1a\u51fa\u73b0\u201c\u5185\u5b58\u6cc4\u9732\u201d\u3002\n\n\u8bd1\u8005\u6ce8\uff1a\u4e0d\u60f3\u663e\u5f0f\u91ca\u653e\u5185\u5b58\u53c8\u80fd\u907f\u514d\u5185\u5b58\u6cc4\u9732\u7684\u529e\u6cd5\u662f\u5f15\u5165libGC\u5e93\u3002\u4f60\u9700\u8981\u628a\u6240\u6709\u7684malloc\u6362\u6210GC_malloc\uff0c\u7136\u540e\u628a\u6240\u6709\u7684free\u5220\u6389\u3002\n\nPerson_print \u51fd\u6570\n\u63a5\u4e0b\u6765\u6211\u9700\u8981\u4e00\u4e2a\u65b9\u6cd5\u6765\u6253\u5370\u51fa\u4eba\u4eec\u7684\u4fe1\u606f\uff0c\u8fd9\u5c31\u662f\u8fd9\u4e2a\u51fd\u6570\u6240\u505a\u7684\u4e8b\u60c5\u3002\u5b83\u7528\u4e86\u76f8\u540c\u7684x-&gt;y\u8bed\u6cd5\u4ece\u7ed3\u6784\u4f53\u4e2d\u83b7\u53d6\u6210\u5458\u6765\u6253\u5370\u3002\nmain \u51fd\u6570\n\u6211\u5728main\u51fd\u6570\u4e2d\u4f7f\u7528\u4e86\u6240\u6709\u524d\u9762\u7684\u51fd\u6570\u548cstruct Person\u6765\u6267\u884c\u4e0b\u9762\u7684\u4e8b\u60c5\uff1a\n\n\u521b\u5efa\u4e86\u4e24\u4e2a\u4eba\uff1ajoe\u548cfrank\u3002\n\u628a\u5b83\u4eec\u6253\u5370\u51fa\u6765\uff0c\u6ce8\u610f\u6211\u7528\u4e86%p\u5360\u4f4d\u7b26\uff0c\u6240\u4ee5\u4f60\u53ef\u4ee5\u770b\u5230\u7a0b\u5e8f\u5b9e\u9645\u4e0a\u628a\u7ed3\u6784\u4f53\u653e\u5230\u4e86\u54ea\u91cc\u3002\n\u628a\u5b83\u4eec\u7684\u5e74\u9f84\u589e\u52a020\u5c81\uff0c\u540c\u65f6\u589e\u52a0\u5b83\u4eec\u7684\u4f53\u91cd\u3002\n\u4e4b\u540e\u6253\u5370\u51fa\u6bcf\u4e2a\u4eba\u3002\n\u6700\u540e\u9500\u6bc1\u7ed3\u6784\u4f53\uff0c\u4ee5\u6b63\u786e\u7684\u65b9\u5f0f\u6e05\u7406\u5b83\u4eec\u3002\n\n\u8bf7\u4ed4\u7ec6\u9605\u8bfb\u4e0a\u9762\u7684\u63cf\u8ff0\uff0c\u7136\u540e\u505a\u4e0b\u9762\u7684\u4e8b\u60c5\uff1a\n\n\u67e5\u8be2\u6bcf\u4e2a\u4f60\u4e0d\u4e86\u89e3\u7684\u51fd\u6570\u6216\u5934\u6587\u4ef6\u3002\u8bb0\u4f4f\u4f60\u901a\u5e38\u53ef\u4ee5\u4f7f\u7528man 2 function\u6216\u8005man 3 function\u6765\u8ba9\u5b83\u544a\u8bc9\u4f60\u3002\u4f60\u4e5f\u53ef\u4ee5\u4e0a\u7f51\u641c\u7d22\u8d44\u6599\u3002\n\u5728\u6bcf\u4e00\u884c\u4e0a\u65b9\u7f16\u5199\u6ce8\u91ca\uff0c\u5199\u4e0b\u8fd9\u4e00\u884c\u4ee3\u7801\u505a\u4e86\u4ec0\u4e48\u3002\n\u8ddf\u8e2a\u6bcf\u4e00\u4e2a\u51fd\u6570\u8c03\u7528\u548c\u53d8\u91cf\uff0c\u4f60\u4f1a\u77e5\u9053\u5b83\u5728\u7a0b\u5e8f\u4e2d\u662f\u5728\u54ea\u91cc\u51fa\u73b0\u7684\u3002\n\u540c\u65f6\u4e5f\u67e5\u8be2\u4f60\u4e0d\u6e05\u695a\u7684\u4efb\u4f55\u7b26\u53f7\u3002\n\n\u4f60\u4f1a\u770b\u5230\u4ec0\u4e48\n\u5728\u4f60\u4f7f\u7528\u63cf\u8ff0\u6027\u6ce8\u91ca\u6269\u5c55\u7a0b\u5e8f\u4e4b\u540e\uff0c\u8981\u786e\u4fdd\u5b83\u5b9e\u9645\u4e0a\u80fd\u591f\u8fd0\u884c\uff0c\u5e76\u4e14\u4ea7\u751f\u4e0b\u9762\u7684\u8f93\u51fa\uff1a\n$ make ex16\ncc -Wall -g    ex16.c   -o ex16\n\n$ .\/ex16\nJoe is at memory location 0xeba010:\nName: Joe Alex\n    Age: 32\n    Height: 64\n    Weight: 140\nFrank is at memory location 0xeba050:\nName: Frank Blank\n   Age: 20\n   Height: 72\n   Weight: 180\nName: Joe Alex\n   Age: 52\n   Height: 62\n   Weight: 180\nName: Frank Blank\n   Age: 40\n   Height: 72\n   Weight: 200\n\u89e3\u91ca\u7ed3\u6784\u4f53\n\u5982\u679c\u4f60\u5b8c\u6210\u4e86\u6211\u8981\u6c42\u7684\u4efb\u52a1\uff0c\u4f60\u5e94\u8be5\u7406\u89e3\u4e86\u7ed3\u6784\u4f53\u3002\u4e0d\u8fc7\u8ba9\u6211\u6765\u505a\u4e00\u4e2a\u660e\u786e\u7684\u89e3\u91ca\uff0c\u786e\u4fdd\u4f60\u771f\u6b63\u7406\u89e3\u4e86\u5b83\u3002\nC\u4e2d\u7684\u7ed3\u6784\u4f53\u662f\u5176\u5b83\u6570\u636e\u7c7b\u578b\uff08\u53d8\u91cf\uff09\u7684\u4e00\u4e2a\u96c6\u5408\uff0c\u5b83\u4eec\u50a8\u5b58\u5728\u4e00\u5757\u5185\u5b58\u4e2d\uff0c\u7136\u800c\u4f60\u53ef\u4ee5\u901a\u8fc7\u72ec\u7acb\u7684\u540d\u5b57\u6765\u8bbf\u95ee\u6bcf\u4e2a\u53d8\u91cf\u3002\u5b83\u4eec\u5c31\u7c7b\u4f3c\u4e8e\u6570\u636e\u5e93\u8868\u4e2d\u7684\u4e00\u884c\u8bb0\u5f55\uff0c\u6216\u8005\u9762\u5411\u5bf9\u8c61\u8bed\u8a00\u4e2d\u7684\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684\u7c7b\u3002\u8ba9\u6211\u4eec\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u6765\u7406\u89e3\u5b83\uff1a\n\n\u5728\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\uff0c\u4f60\u521b\u5efa\u4e86\u4e00\u4e2a\u7ed3\u6784\u4f53\uff0c\u5b83\u4eec\u7684\u6210\u5458\u7528\u4e8e\u63cf\u8ff0\u4e00\u4e2a\u4eba\uff1a\u540d\u79f0\u3001\u5e74\u9f84\u3001\u4f53\u91cd\u3001\u8eab\u9ad8\u3002\n\u6bcf\u4e2a\u6210\u5458\u90fd\u6709\u4e00\u4e2a\u7c7b\u578b\uff0c\u6bd4\u5982\u662fint\u3002\nC\u4f1a\u5c06\u5b83\u4eec\u6253\u5305\u5230\u4e00\u8d77\uff0c\u4e8e\u662f\u5b83\u4eec\u53ef\u4ee5\u7528\u5355\u4e2a\u7684\u7ed3\u6784\u4f53\u6765\u5b58\u653e\u3002\nstruct Person\u662f\u4e00\u4e2a\u590d\u5408\u7c7b\u578b\uff0c\u8fd9\u610f\u5473\u7740\u4f60\u53ef\u4ee5\u5728\u540c\u79cd\u8868\u8fbe\u5f0f\u4e2d\u5c06\u5176\u5f15\u7528\u4e3a\u5176\u5b83\u7684\u6570\u636e\u7c7b\u578b\u3002\n\u4f60\u53ef\u4ee5\u5c06\u8fd9\u4e00\u7d27\u5bc6\u7684\u7ec4\u5408\u4f20\u9012\u7ed9\u5176\u5b83\u51fd\u6570\uff0c\u5c31\u50cfPerson_print\u90a3\u6837\u3002\n\u5982\u679c\u7ed3\u6784\u4f53\u662f\u6307\u9488\u7684\u5f62\u5f0f\uff0c\u63a5\u7740\u4f60\u53ef\u4ee5\u4f7f\u7528x-&gt;y\u901a\u8fc7\u5b83\u4eec\u7684\u540d\u5b57\u6765\u8bbf\u95ee\u7ed3\u6784\u4f53\u4e2d\u72ec\u7acb\u7684\u90e8\u5206\u3002\n\u8fd8\u6709\u4e00\u79cd\u521b\u5efa\u7ed3\u6784\u4f53\u7684\u65b9\u6cd5\uff0c\u4e0d\u9700\u8981\u6307\u9488\uff0c\u901a\u8fc7x.y\u6765\u8bbf\u95ee\u3002\u4f60\u5c06\u4f1a\u5728\u9644\u52a0\u9898\u91cc\u9762\u89c1\u5230\u5b83\u3002\n\n\u5982\u679c\u4f60\u4e0d\u4f7f\u7528\u7ed3\u6784\u4f53\uff0c\u5219\u9700\u8981\u81ea\u5df1\u8ba1\u7b97\u51fa\u5927\u5c0f\u3001\u6253\u5305\u4ee5\u53ca\u5b9a\u4f4d\u51fa\u6307\u5b9a\u5185\u5bb9\u7684\u5185\u5b58\u7247\u4f4d\u7f6e\u3002\u5b9e\u9645\u4e0a\uff0c\u5728\u5927\u591a\u6570\u65e9\u671f\uff08\u751a\u81f3\u73b0\u5728\u7684\u4e00\u4e9b\uff09\u7684\u6c47\u7f16\u4ee3\u7801\u4e2d\uff0c\u8fd9\u5c31\u662f\u552f\u4e00\u7684\u65b9\u5f0f\u3002\u5728C\u4e2d\u4f60\u5c31\u53ef\u4ee5\u8ba9C\u6765\u5904\u7406\u8fd9\u4e9b\u590d\u5408\u6570\u636e\u7c7b\u578b\u7684\u5185\u5b58\u6784\u9020\uff0c\u5e76\u4e14\u4e13\u6ce8\u4e8e\u548c\u5b83\u4eec\u4ea4\u4e92\u3002\n\u5982\u4f55\u4f7f\u5b83\u5d29\u6e83\n\u4f7f\u8fd9\u4e2a\u7a0b\u5e8f\u5d29\u6e83\u7684\u529e\u6cd5\u6d89\u53ca\u5230\u4f7f\u7528\u6307\u9488\u548cmalloc\u7cfb\u7edf\u7684\u65b9\u6cd5\uff1a\n\n\u8bd5\u7740\u4f20\u9012NULL\u7ed9Person_destroy\u6765\u770b\u770b\u4f1a\u53d1\u751f\u4ec0\u4e48\u3002\u5982\u679c\u5b83\u6ca1\u6709\u5d29\u6e83\uff0c\u4f60\u5fc5\u987b\u79fb\u9664Makefile\u7684CFLAGS\u4e2d\u7684-g\u9009\u9879\u3002\n\u5728\u7ed3\u5c3e\u5904\u5fd8\u8bb0\u8c03\u7528Person_destroy\uff0c\u5728Valgrind\u4e0b\u8fd0\u884c\u7a0b\u5e8f\uff0c\u4f60\u4f1a\u770b\u5230\u5b83\u62a5\u544a\u51fa\u4f60\u5fd8\u8bb0\u91ca\u653e\u5185\u5b58\u3002\u5f04\u6e05\u695a\u4f60\u5e94\u8be5\u5411valgrind\u4f20\u9012\u4ec0\u4e48\u53c2\u6570\u6765\u8ba9\u5b83\u5411\u4f60\u62a5\u544a\u5185\u5b58\u5982\u4f55\u6cc4\u9732\u3002\n\u5fd8\u8bb0\u5728Person_destroy\u4e2d\u91ca\u653ewho-&gt;name\uff0c\u5e76\u4e14\u5bf9\u6bd4\u4e24\u6b21\u7684\u8f93\u51fa\u3002\u540c\u65f6\uff0c\u4f7f\u7528\u6b63\u786e\u7684\u9009\u9879\u6765\u8ba9Valgrind\u544a\u8bc9\u4f60\u54ea\u91cc\u9519\u4e86\u3002\n\u8fd9\u4e00\u6b21\uff0c\u5411Person_print\u4f20\u9012NULL\uff0c\u5e76\u4e14\u89c2\u5bdfValgrind\u4f1a\u8f93\u51fa\u4ec0\u4e48\u3002\n\u4f60\u5e94\u8be5\u660e\u767d\u4e86NULL\u662f\u4e2a\u4f7f\u7a0b\u5e8f\u5d29\u6e83\u7684\u5feb\u901f\u65b9\u6cd5\u3002\n\n\u9644\u52a0\u9898\n\u5728\u8fd9\u4e2a\u7ec3\u4e60\u7684\u9644\u52a0\u9898\u4e2d\u6211\u60f3\u8ba9\u4f60\u5c1d\u8bd5\u4e00\u4e9b\u6709\u96be\u5ea6\u7684\u4e1c\u897f\uff1a\u5c06\u8fd9\u4e2a\u7a0b\u5e8f\u6539\u4e3a\u4e0d\u7528\u6307\u9488\u548cmalloc\u7684\u7248\u672c\u3002\u8fd9\u53ef\u80fd\u5f88\u56f0\u96be\uff0c\u6240\u4ee5\u4f60\u9700\u8981\u7814\u7a76\u4e0b\u9762\u8fd9\u4e9b\u4e1c\u897f\uff1a\n\n\u5982\u4f55\u5728\u6808\u4e0a\u521b\u5efa\u7ed3\u6784\u4f53\uff0c\u5c31\u50cf\u4f60\u521b\u5efa\u4efb\u4f55\u5176\u5b83\u53d8\u91cf\u90a3\u6837\u3002\n\u5982\u4f55\u4f7f\u7528x.y\u800c\u4e0d\u662fx-&gt;y\u6765\u521d\u59cb\u5316\u7ed3\u6784\u4f53\u3002\n\u5982\u4f55\u4e0d\u4f7f\u7528\u6307\u9488\u6765\u5c06\u7ed3\u6784\u4f53\u4f20\u7ed9\u5176\u5b83\u51fd\u6570\u3002\n","categories":"\u7ec3\u4e602","tags":["struct","\u7ed3\u6784","malloc"]},{"title":"\u5806\u548c\u6808\u7684\u5185\u5b58\u5206\u914d","url":"https:\/\/naka507.github.io\/posts\/178F8DDE733AD0DD.html","content":"\u5806\u548c\u6808\u7684\u5185\u5b58\u5206\u914d\n\u5728\u8fd9\u4e2a\u7ec3\u4e60\u4e2d\uff0c\u4f60\u4f1a\u5728\u96be\u5ea6\u4e0a\u505a\u4e00\u4e2a\u5927\u7684\u8df3\u8dc3\uff0c\u5e76\u4e14\u521b\u5efa\u51fa\u7528\u4e8e\u7ba1\u7406\u6570\u636e\u5e93\u7684\u5b8c\u6574\u7684\u5c0f\u578b\u7cfb\u7edf\u3002\u8fd9\u4e2a\u6570\u636e\u5e93\u5e76\u4e0d\u5b9e\u7528\u4e5f\u5b58\u50a8\u4e0d\u4e86\u592a\u591a\u4e1c\u897f\uff0c\u7136\u800c\u5b83\u5c55\u793a\u4e86\u5927\u591a\u6570\u5230\u76ee\u524d\u4e3a\u6b62\u4f60\u5b66\u5230\u7684\u4e1c\u897f\u3002\u5b83\u4e5f\u4ee5\u66f4\u52a0\u6b63\u89c4\u7684\u65b9\u6cd5\u4ecb\u7ecd\u4e86\u5185\u5b58\u5206\u914d\uff0c\u4ee5\u53ca\u5e26\u9886\u4f60\u719f\u6089\u6587\u4ef6\u5904\u7406\u3002\u6211\u4eec\u4f7f\u7528\u4e86\u4e00\u4e9b\u6587\u4ef6IO\u51fd\u6570\uff0c\u4f46\u662f\u6211\u5e76\u4e0d\u60f3\u8fc7\u591a\u89e3\u91ca\u5b83\u4eec\uff0c\u4f60\u53ef\u4ee5\u5148\u8bd5\u7740\u81ea\u5df1\u7406\u89e3\u3002\n\u50cf\u901a\u5e38\u4e00\u6837\uff0c\u8f93\u5165\u4e0b\u9762\u6574\u4e2a\u7a0b\u5e8f\uff0c\u5e76\u4e14\u4f7f\u4e4b\u6b63\u5e38\u5de5\u4f5c\uff0c\u4e4b\u540e\u6211\u4eec\u4f1a\u8fdb\u884c\u8ba8\u8bba\uff1a\n#include &lt;stdio.h&gt;\n#include &lt;assert.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;errno.h&gt;\n#include &lt;string.h&gt;\n\n#define MAX_DATA 512\n#define MAX_ROWS 100\n\nstruct Address {\n    int id;\n    int set;\n    char name[MAX_DATA];\n    char email[MAX_DATA];\n};\n\nstruct Database {\n    struct Address rows[MAX_ROWS];\n};\n\nstruct Connection {\n    FILE *file;\n    struct Database *db;\n};\n\nvoid die(const char *message)\n{\n    if(errno) {\n        perror(message);\n    } else {\n        printf(\"ERROR: %s\\n\", message);\n    }\n\n    exit(1);\n}\n\nvoid Address_print(struct Address *addr)\n{\n    printf(\"%d %s %s\\n\",\n            addr-&gt;id, addr-&gt;name, addr-&gt;email);\n}\n\nvoid Database_load(struct Connection *conn)\n{\n    int rc = fread(conn-&gt;db, sizeof(struct Database), 1, conn-&gt;file);\n    if(rc != 1) die(\"Failed to load database.\");\n}\n\nstruct Connection *Database_open(const char *filename, char mode)\n{\n    struct Connection *conn = malloc(sizeof(struct Connection));\n    if(!conn) die(\"Memory error\");\n\n    conn-&gt;db = malloc(sizeof(struct Database));\n    if(!conn-&gt;db) die(\"Memory error\");\n\n    if(mode == 'c') {\n        conn-&gt;file = fopen(filename, \"w\");\n    } else {\n        conn-&gt;file = fopen(filename, \"r+\");\n\n        if(conn-&gt;file) {\n            Database_load(conn);\n        }\n    }\n\n    if(!conn-&gt;file) die(\"Failed to open the file\");\n\n    return conn;\n}\n\nvoid Database_close(struct Connection *conn)\n{\n    if(conn) {\n        if(conn-&gt;file) fclose(conn-&gt;file);\n        if(conn-&gt;db) free(conn-&gt;db);\n        free(conn);\n    }\n}\n\nvoid Database_write(struct Connection *conn)\n{\n    rewind(conn-&gt;file);\n\n    int rc = fwrite(conn-&gt;db, sizeof(struct Database), 1, conn-&gt;file);\n    if(rc != 1) die(\"Failed to write database.\");\n\n    rc = fflush(conn-&gt;file);\n    if(rc == -1) die(\"Cannot flush database.\");\n}\n\nvoid Database_create(struct Connection *conn)\n{\n    int i = 0;\n\n    for(i = 0; i &lt; MAX_ROWS; i++) {\n        \/\/ make a prototype to initialize it\n        struct Address addr = {.id = i, .set = 0};\n        \/\/ then just assign it\n        conn-&gt;db-&gt;rows[i] = addr;\n    }\n}\n\nvoid Database_set(struct Connection *conn, int id, const char *name, const char *email)\n{\n    struct Address *addr = &amp;conn-&gt;db-&gt;rows[id];\n    if(addr-&gt;set) die(\"Already set, delete it first\");\n\n    addr-&gt;set = 1;\n    \/\/ WARNING: bug, read the \"How To Break It\" and fix this\n    char *res = strncpy(addr-&gt;name, name, MAX_DATA);\n    \/\/ demonstrate the strncpy bug\n    if(!res) die(\"Name copy failed\");\n\n    res = strncpy(addr-&gt;email, email, MAX_DATA);\n    if(!res) die(\"Email copy failed\");\n}\n\nvoid Database_get(struct Connection *conn, int id)\n{\n    struct Address *addr = &amp;conn-&gt;db-&gt;rows[id];\n\n    if(addr-&gt;set) {\n        Address_print(addr);\n    } else {\n        die(\"ID is not set\");\n    }\n}\n\nvoid Database_delete(struct Connection *conn, int id)\n{\n    struct Address addr = {.id = id, .set = 0};\n    conn-&gt;db-&gt;rows[id] = addr;\n}\n\nvoid Database_list(struct Connection *conn)\n{\n    int i = 0;\n    struct Database *db = conn-&gt;db;\n\n    for(i = 0; i &lt; MAX_ROWS; i++) {\n        struct Address *cur = &amp;db-&gt;rows[i];\n\n        if(cur-&gt;set) {\n            Address_print(cur);\n        }\n    }\n}\n\nint main(int argc, char *argv[])\n{\n    if(argc &lt; 3) die(\"USAGE: ex17 &lt;dbfile&gt; &lt;action&gt; [action params]\");\n\n    char *filename = argv[1];\n    char action = argv[2][0];\n    struct Connection *conn = Database_open(filename, action);\n    int id = 0;\n\n    if(argc &gt; 3) id = atoi(argv[3]);\n    if(id &gt;= MAX_ROWS) die(\"There's not that many records.\");\n\n    switch(action) {\n        case 'c':\n            Database_create(conn);\n            Database_write(conn);\n            break;\n\n        case 'g':\n            if(argc != 4) die(\"Need an id to get\");\n\n            Database_get(conn, id);\n            break;\n\n        case 's':\n            if(argc != 6) die(\"Need id, name, email to set\");\n\n            Database_set(conn, id, argv[4], argv[5]);\n            Database_write(conn);\n            break;\n\n        case 'd':\n            if(argc != 4) die(\"Need id to delete\");\n\n            Database_delete(conn, id);\n            Database_write(conn);\n            break;\n\n        case 'l':\n            Database_list(conn);\n            break;\n        default:\n            die(\"Invalid action, only: c=create, g=get, s=set, d=del, l=list\");\n    }\n\n    Database_close(conn);\n\n    return 0;\n}\n\u5728\u8fd9\u4e2a\u7a0b\u5e8f\u4e2d\u6211\u4f7f\u7528\u4e86\u4e00\u7cfb\u5217\u7684\u7ed3\u6784\u6765\u521b\u5efa\u7528\u4e8e\u5730\u5740\u8584\u7684\u5c0f\u578b\u6570\u636e\u5e93\u3002\u5176\u4e2d\uff0c\u6211\u662f\u7528\u4e86\u4e00\u4e9b\u4f60\u4ece\u6765\u6ca1\u89c1\u8fc7\u7684\u4e1c\u897f\uff0c\u6240\u4ee5\u4f60\u5e94\u8be5\u9010\u884c\u6d4f\u89c8\u8fd9\u6bb5\u4ee3\u7801\uff0c\u89e3\u91ca\u6bcf\u4e00\u884c\u505a\u4e86\u4ec0\u4e48\uff0c\u5e76\u4e14\u67e5\u8be2\u4f60\u4e0d\u8ba4\u8bc6\u7684\u4efb\u4f55\u51fd\u6570\u3002\u4e0b\u9762\u662f\u4f60\u9700\u8981\u6ce8\u610f\u7684\u51e0\u4e2a\u5173\u952e\u90e8\u5206\uff1a\n#define \u5e38\u91cf\n\u6211\u4f7f\u7528\u4e86\u201cC\u9884\u5904\u7406\u5668\u201d\u7684\u53e6\u5916\u4e00\u90e8\u5206\uff0c\u6765\u521b\u5efaMAX_DATA\u548cMAX_ROWS\u7684\u8bbe\u7f6e\u5e38\u91cf\u3002\u6211\u4e4b\u540e\u4f1a\u66f4\u591a\u5730\u8bb2\u89e3\u9884\u5904\u7406\u5668\u7684\u529f\u80fd\uff0c\u4e0d\u8fc7\u8fd9\u662f\u4e00\u4e2a\u521b\u5efa\u53ef\u9760\u7684\u5e38\u91cf\u7684\u7b80\u6613\u65b9\u6cd5\u3002\u9664\u6b64\u4e4b\u5916\u8fd8\u6709\u53e6\u4e00\u79cd\u65b9\u6cd5\uff0c\u4f46\u662f\u5728\u7279\u5b9a\u573a\u666f\u4e0b\u5e76\u4e0d\u9002\u7528\u3002\n\u5b9a\u957f\u7ed3\u6784\u4f53\nAddress\u7ed3\u6784\u4f53\u63a5\u7740\u4f7f\u7528\u8fd9\u4e9b\u5e38\u91cf\u6765\u521b\u5efa\u6570\u636e\uff0c\u8fd9\u4e9b\u6570\u636e\u662f\u5b9a\u957f\u7684\uff0c\u5b83\u4eec\u5e76\u4e0d\u9ad8\u6548\uff0c\u4f46\u662f\u4fbf\u4e8e\u5b58\u50a8\u548c\u8bfb\u53d6\u3002Database\u7ed3\u6784\u4f53\u4e5f\u662f\u5b9a\u957f\u7684\uff0c\u56e0\u4e3a\u5b83\u6709\u4e00\u4e2a\u5b9a\u957f\u7684Address\u7ed3\u6784\u4f53\u6570\u7ec4\u3002\u8fd9\u6837\u4f60\u5c31\u53ef\u4ee5\u7a0d\u540e\u628a\u6574\u4e2a\u6570\u636e\u4e00\u6b65\u5199\u5230\u78c1\u76d8\u3002\n\u51fa\u73b0\u9519\u8bef\u65f6\u7ec8\u6b62\u7684die\u51fd\u6570\n\u5728\u50cf\u8fd9\u6837\u7684\u5c0f\u578b\u7a0b\u5e8f\u4e2d\uff0c\u4f60\u53ef\u4ee5\u7f16\u5199\u4e00\u4e2a\u5355\u4e2a\u51fd\u6570\u5728\u51fa\u73b0\u9519\u8bef\u65f6\u6740\u6389\u7a0b\u5e8f\u3002\u6211\u628a\u5b83\u53eb\u505adie\u3002\u800c\u4e14\u5728\u4efb\u4f55\u5931\u8d25\u7684\u51fd\u6570\u8c03\u7528\uff0c\u6216\u9519\u8bef\u8f93\u51fa\u4e4b\u540e\uff0c\u5b83\u4f1a\u8c03\u7528exit\u5e26\u7740\u9519\u8bef\u9000\u51fa\u7a0b\u5e8f\u3002\n\u7528\u4e8e\u9519\u8bef\u62a5\u544a\u7684 errno\u548cperror\n\u5f53\u51fd\u6570\u8fd4\u56de\u4e86\u4e00\u4e2a\u9519\u8bef\u65f6\uff0c\u5b83\u901a\u5e38\u8bbe\u7f6e\u4e00\u4e2a\u53eb\u505aerrno\u7684\u201c\u5916\u90e8\u201d\u53d8\u91cf\uff0c\u6765\u63cf\u8ff0\u53d1\u751f\u4e86\u4ec0\u4e48\u9519\u8bef\u3002\u5b83\u4eec\u53ea\u662f\u6570\u5b57\uff0c\u6240\u4ee5\u4f60\u53ef\u4ee5\u4f7f\u7528perror\u6765\u201c\u6253\u5370\u51fa\u9519\u8bef\u4fe1\u606f\u201d\u3002\n\u6587\u4ef6\u51fd\u6570\n\u6211\u4f7f\u7528\u4e86\u4e00\u4e9b\u65b0\u7684\u51fd\u6570\uff0c\u6bd4\u5982fopen\uff0cfread\uff0cfclose\uff0c\u548crewind\u6765\u5904\u7406\u6587\u4ef6\u3002\u8fd9\u4e9b\u51fd\u6570\u4e2d\u6bcf\u4e2a\u90fd\u4f5c\u7528\u4e8eFILE\u7ed3\u6784\u4f53\u4e0a\uff0c\u5c31\u50cf\u4f60\u7684\u7ed3\u6784\u4f53\u4f3c\u7684\uff0c\u4f46\u662f\u5b83\u7531C\u6807\u51c6\u5e93\u5b9a\u4e49\u3002\n\u5d4c\u5957\u7ed3\u6784\u4f53\u6307\u9488\n\u4f60\u5e94\u8be5\u5b66\u4e60\u8fd9\u91cc\u7684\u5d4c\u5957\u7ed3\u6784\u5668\u548c\u83b7\u53d6\u6570\u7ec4\u5143\u7d20\u5730\u5740\u7684\u7528\u6cd5\uff0c\u5b83\u8bfb\u4f5c\u201c\u8bfb\u53d6db\u4e2d\u7684conn\u4e2d\u7684rows\u7684\u7b2ci\u4e2a\u5143\u7d20\uff0c\u5e76\u8fd4\u56de\u5730\u5740\uff08&amp;\uff09\u201d\u3002\n\n\u8bd1\u8005\u6ce8\uff1a\u8fd9\u91cc\u6709\u4e2a\u66f4\u7b80\u4fbf\u7684\u5199\u6cd5\u662fdb-&gt;conn-&gt;row + i\u3002\n\n\u7ed3\u6784\u4f53\u539f\u578b\u7684\u590d\u5236\n\u5b83\u5728Database_delete\u4e2d\u4f53\u73b0\u5f97\u6700\u6e05\u695a\uff0c\u4f60\u53ef\u4ee5\u770b\u5230\u6211\u662f\u7528\u4e86\u4e34\u65f6\u7684\u5c40\u90e8Address\u53d8\u91cf\uff0c\u521d\u59cb\u5316\u4e86\u5b83\u7684id\u548cset\u5b57\u6bb5\uff0c\u63a5\u7740\u901a\u8fc7\u628a\u5b83\u8d4b\u503c\u7ed9rows\u6570\u7ec4\u4e2d\u7684\u5143\u7d20\uff0c\u7b80\u5355\u5730\u590d\u5236\u5230\u6570\u7ec4\u4e2d\u3002\u8fd9\u4e2a\u5c0f\u6280\u5de7\u786e\u4fdd\u4e86\u6240\u6709\u9664\u4e86set\u548cid\u7684\u5b57\u6bb5\u90fd\u521d\u59cb\u5316\u4e3a0\uff0c\u800c\u4e14\u5f88\u5bb9\u6613\u7f16\u5199\u3002\u987a\u4fbf\u8bf4\u4e00\u53e5\uff0c\u4f60\u4e0d\u5e94\u8be5\u5728\u8fd9\u79cd\u6570\u7ec4\u590d\u5236\u64cd\u4f5c\u4e2d\u4f7f\u7528memcpy\u3002\u73b0\u4ee3C\u8bed\u8a00\u4e2d\u4f60\u53ef\u4ee5\u53ea\u662f\u5c06\u4e00\u4e2a\u8d4b\u503c\u7ed9\u53e6\u4e00\u4e2a\uff0c\u5b83\u4f1a\u81ea\u52a8\u5e2e\u4f60\u5904\u7406\u590d\u5236\u3002\n\u5904\u7406\u590d\u6742\u53c2\u6570\n\u6211\u6267\u884c\u4e86\u4e00\u4e9b\u66f4\u590d\u6742\u7684\u53c2\u6570\u89e3\u6790\uff0c\u4f46\u662f\u8fd9\u4e0d\u662f\u5904\u7406\u5b83\u4eec\u7684\u6700\u597d\u65b9\u6cd5\u3002\u5728\u8fd9\u672c\u4e66\u7684\u540e\u9762\u6211\u4eec\u5c06\u4f1a\u4e86\u89e3\u4e00\u4e9b\u7528\u4e8e\u89e3\u6790\u7684\u66f4\u597d\u65b9\u6cd5\u3002\n\u5c06\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u6574\u6570\n\u6211\u4f7f\u7528\u4e86atoi\u51fd\u6570\u5728\u547d\u4ee4\u884c\u4e2d\u63a5\u53d7\u4f5c\u4e3aid\u7684\u5b57\u7b26\u4e32\u5e76\u628a\u5b83\u8f6c\u6362\u4e3aint id\u53d8\u91cf\u3002\u53bb\u67e5\u8be2\u8fd9\u4e2a\u51fd\u6570\u4ee5\u53ca\u76f8\u4f3c\u7684\u51fd\u6570\u3002\n\u5728\u5806\u4e0a\u5206\u914d\u5927\u5757\u6570\u636e\n\u8fd9\u4e2a\u7a0b\u5e8f\u7684\u8981\u70b9\u5c31\u662f\u5728\u6211\u521b\u5efaDatabase\u7684\u65f6\u5019\uff0c\u6211\u4f7f\u7528\u4e86malloc\u6765\u5411OS\u8bf7\u6c42\u4e00\u5757\u5927\u5bb9\u91cf\u7684\u5185\u5b58\u3002\u7a0d\u540e\u6211\u4f1a\u8bb2\u5f97\u66f4\u7ec6\u81f4\u4e00\u4e9b\u3002\nNULL\u5c31\u662f0\uff0c\u6240\u4ee5\u53ef\u8f6c\u6210\u5e03\u5c14\u503c\n\u5728\u8bb8\u591a\u68c0\u67e5\u4e2d\uff0c\u6211\u7b80\u5355\u5730\u901a\u8fc7if(!ptr) die(\"fail!\")\u68c0\u6d4b\u4e86\u4e00\u4e2a\u6307\u9488\u662f\u4e0d\u662fNULL\u3002\u8fd9\u662f\u6709\u6548\u7684\uff0c\u56e0\u4e3aNULL\u4f1a\u88ab\u8ba1\u7b97\u6210\u5047\u3002\u5728\u4e00\u4e9b\u5c11\u89c1\u7684\u7cfb\u7edf\u4e2d\uff0cNULL\u4f1a\u50a8\u5b58\u5728\u8ba1\u7b97\u673a\u4e2d\uff0c\u5e76\u4e14\u8868\u793a\u4e3a\u4e00\u4e9b\u4e0d\u662f0\u7684\u4e1c\u897f\u3002\u4f46\u5728C\u6807\u51c6\u4e2d\uff0c\u4f60\u53ef\u4ee5\u628a\u5b83\u5f53\u62100\u6765\u7f16\u5199\u4ee3\u7801\u3002\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u5f53\u6211\u8bf4\u201cNULL\u5c31\u662f0\u201d\u7684\u65f6\u5019\uff0c\u6211\u90fd\u662f\u5bf9\u4e00\u4e9b\u8fc2\u8150\u7684\u4eba\u8bf4\u7684\u3002\n\u4f60\u4f1a\u770b\u5230\u4ec0\u4e48\n\u4f60\u5e94\u8be5\u4e3a\u6b64\u82b1\u8d39\u5927\u91cf\u65f6\u95f4\uff0c\u77e5\u9053\u4f60\u53ef\u4ee5\u6d4b\u8bd5\u5b83\u80fd\u6b63\u5e38\u5de5\u4f5c\u4e86\u3002\u5e76\u4e14\u4f60\u5e94\u5f53\u7528Valgrind\u6765\u786e\u4fdd\u4f60\u5728\u6240\u6709\u5730\u65b9\u90fd\u6b63\u786e\u4f7f\u7528\u5185\u5b58\u3002\u4e0b\u9762\u662f\u6211\u7684\u6d4b\u8bd5\u8bb0\u5f55\uff0c\u5e76\u4e14\u968f\u540e\u4f7f\u7528\u4e86Valgrind\u6765\u68c0\u67e5\u64cd\u4f5c\uff1a\n$ make ex17\ncc -Wall -g    ex17.c   -o ex17\n$ .\/ex17 db.dat c\n$ .\/ex17 db.dat s 1 zed zed@zedshaw.com\n$ .\/ex17 db.dat s 2 frank frank@zedshaw.com\n$ .\/ex17 db.dat s 3 joe joe@zedshaw.com\n$\n$ .\/ex17 db.dat l\n1 zed zed@zedshaw.com\n2 frank frank@zedshaw.com\n3 joe joe@zedshaw.com\n$ .\/ex17 db.dat d 3\n$ .\/ex17 db.dat l\n1 zed zed@zedshaw.com\n2 frank frank@zedshaw.com\n$ .\/ex17 db.dat g 2\n2 frank frank@zedshaw.com\n$\n$ valgrind --leak-check=yes .\/ex17 db.dat g 2\n# cut valgrind output...\n$\nValgrind\u5b9e\u9645\u7684\u8f93\u51fa\u6ca1\u6709\u663e\u5f0f\uff0c\u56e0\u4e3a\u4f60\u5e94\u8be5\u80fd\u591f\u53d1\u73b0\u5b83\u3002\n\n\u6ce8\n\n\nVagrind\u53ef\u4ee5\u62a5\u544a\u51fa\u4f60\u6cc4\u9732\u7684\u5c0f\u5757\u5185\u5b58\uff0c\u4f46\u662f\u5b83\u6709\u65f6\u4f1a\u8fc7\u5ea6\u62a5\u544aOSX\u5185\u90e8\u7684API\u3002\u5982\u679c\u4f60\u53d1\u73b0\u5b83\u663e\u793a\u4e86\u4e0d\u5c5e\u4e8e\u4f60\u4ee3\u7801\u4e2d\u7684\u6cc4\u9732\uff0c\u53ef\u4ee5\u5ffd\u7565\u5b83\u4eec\u3002\n\n\u5806\u548c\u6808\u7684\u5185\u5b58\u5206\u914d\n\u5bf9\u4e8e\u73b0\u5728\u4f60\u4eec\u8fd9\u4e9b\u5e74\u8f7b\u4eba\u6765\u8bf4\uff0c\u7f16\u7a0b\u7b80\u76f4\u592a\u5bb9\u6613\u4e86\u3002\u5982\u679c\u4f60\u73a9\u73a9Ruby\u6216\u8005Python\u7684\u8bdd\uff0c\u53ea\u8981\u521b\u5efa\u5bf9\u8c61\u6216\u53d8\u91cf\u5c31\u597d\u4e86\uff0c\u4e0d\u7528\u7ba1\u5b83\u4eec\u5b58\u653e\u5728\u54ea\u91cc\u3002\u4f60\u5e76\u4e0d\u5173\u5fc3\u5b83\u4eec\u662f\u5426\u5b58\u653e\u5728\u6808\u4e0a\u6216\u5806\u4e0a\u3002\u4f60\u7684\u7f16\u7a0b\u8bed\u8a00\u751a\u81f3\u5b8c\u5168\u4e0d\u4f1a\u628a\u53d8\u91cf\u653e\u5728\u6808\u4e0a\uff0c\u5b83\u4eec\u90fd\u5728\u5806\u4e0a\uff0c\u5e76\u4e14\u4f60\u4e5f\u4e0d\u77e5\u9053\u662f\u5426\u662f\u8fd9\u6837\u3002\n\u7136\u800cC\u5b8c\u5168\u4e0d\u4e00\u6837\uff0c\u56e0\u4e3a\u5b83\u4f7f\u7528\u4e86CPU\u771f\u5b9e\u7684\u673a\u5236\u6765\u5b8c\u6210\u5de5\u4f5c\uff0c\u8fd9\u6d89\u53ca\u5230RAM\u4e2d\u7684\u4e00\u5757\u53eb\u505a\u6808\u7684\u533a\u57df\uff0c\u4ee5\u53ca\u53e6\u5916\u4e00\u5757\u53eb\u505a\u5806\u7684\u533a\u57df\u3002\u5b83\u4eec\u7684\u5dee\u5f02\u53d6\u51b3\u4e8e\u53d6\u5f97\u50a8\u5b58\u7a7a\u95f4\u7684\u4f4d\u7f6e\u3002\n\u5806\u66f4\u5bb9\u6613\u89e3\u91ca\uff0c\u56e0\u4e3a\u5b83\u5c31\u662f\u4f60\u7535\u8111\u4e2d\u7684\u5269\u4f59\u5185\u5b58\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7malloc\u8bbf\u95ee\u5b83\u6765\u83b7\u53d6\u66f4\u591a\u5185\u5b58\uff0cOS\u4f1a\u4f7f\u7528\u5185\u90e8\u51fd\u6570\u4e3a\u4f60\u6ce8\u518c\u4e00\u5757\u5185\u5b58\u533a\u57df\uff0c\u5e76\u4e14\u8fd4\u56de\u6307\u5411\u5b83\u7684\u6307\u9488\u3002\u5f53\u4f60\u4f7f\u7528\u5b8c\u8fd9\u7247\u533a\u57df\u65f6\uff0c\u4f60\u5e94\u8be5\u4f7f\u7528free\u628a\u5b83\u4ea4\u8fd8\u7ed9OS\uff0c\u4f7f\u4e4b\u80fd\u88ab\u5176\u5b83\u7a0b\u5e8f\u590d\u7528\u3002\u5982\u679c\u4f60\u4e0d\u8fd9\u6837\u505a\u5c31\u4f1a\u5bfc\u81f4\u7a0b\u5e8f\u201c\u6cc4\u9732\u201d\u5185\u5b58\uff0c\u4f46\u662fValgrind\u4f1a\u5e2e\u4f60\u76d1\u6d4b\u8fd9\u4e9b\u5185\u5b58\u6cc4\u9732\u3002\n\u6808\u662f\u4e00\u4e2a\u7279\u6b8a\u7684\u5185\u5b58\u533a\u57df\uff0c\u5b83\u50a8\u5b58\u4e86\u6bcf\u4e2a\u51fd\u6570\u7684\u521b\u5efa\u7684\u4e34\u65f6\u53d8\u91cf\uff0c\u5b83\u4eec\u5bf9\u4e8e\u8be5\u51fd\u6570\u4e3a\u5c40\u90e8\u53d8\u91cf\u3002\u5b83\u7684\u5de5\u4f5c\u673a\u5236\u662f\uff0c\u51fd\u6570\u7684\u6bcf\u4e2a\u51fd\u6570\u90fd\u4f1a\u201c\u538b\u5165\u201d\u6808\u4e2d\uff0c\u5e76\u4e14\u53ef\u5728\u51fd\u6570\u5185\u90e8\u4f7f\u7528\u3002\u5b83\u662f\u4e00\u4e2a\u771f\u6b63\u7684\u6808\u6570\u636e\u7ed3\u6784\uff0c\u6240\u4ee5\u662f\u540e\u8fdb\u5148\u51fa\u7684\u3002\u8fd9\u5bf9\u4e8emain\u4e2d\u6240\u6709\u7c7b\u4f3cchar section\u548cint id\u7684\u5c40\u90e8\u53d8\u91cf\u4e5f\u662f\u76f8\u540c\u7684\u3002\u4f7f\u7528\u6808\u7684\u4f18\u70b9\u662f\uff0c\u5f53\u51fd\u6570\u9000\u51fa\u65f6C\u7f16\u8bd1\u5668\u4f1a\u4ece\u6808\u4e2d\u201c\u5f39\u51fa\u201d\u6240\u6709\u53d8\u91cf\u6765\u6e05\u7406\u3002\u8fd9\u975e\u5e38\u7b80\u5355\uff0c\u4e5f\u9632\u6b62\u4e86\u6808\u4e0a\u53d8\u91cf\u7684\u5185\u5b58\u6cc4\u9732\u3002\n\u7406\u6e05\u5185\u5b58\u7684\u6700\u7b80\u5355\u7684\u65b9\u5f0f\u662f\u9075\u5b88\u8fd9\u6761\u539f\u5219\uff1a\u5982\u679c\u4f60\u7684\u53d8\u91cf\u5e76\u4e0d\u662f\u4ecemalloc\u4e2d\u83b7\u53d6\u7684\uff0c\u4e5f\u4e0d\u662f\u4ece\u4e00\u4e2a\u4ecemalloc\u83b7\u53d6\u7684\u51fd\u6570\u4e2d\u83b7\u53d6\u7684\uff0c\u90a3\u4e48\u5b83\u5728\u6808\u4e0a\u3002\n\u4e0b\u9762\u662f\u4e09\u4e2a\u503c\u5f97\u5173\u6ce8\u7684\u5173\u4e8e\u6808\u548c\u5806\u7684\u4e3b\u8981\u95ee\u9898\uff1a\n\n\u5982\u679c\u4f60\u4ecemalloc\u83b7\u53d6\u4e86\u4e00\u5757\u5185\u5b58\uff0c\u5e76\u4e14\u628a\u6307\u9488\u653e\u5728\u4e86\u6808\u4e0a\uff0c\u90a3\u4e48\u5f53\u51fd\u6570\u9000\u51fa\u65f6\uff0c\u6307\u9488\u4f1a\u88ab\u5f39\u51fa\u800c\u4e22\u5931\u3002\n\u5982\u679c\u4f60\u5728\u6808\u4e0a\u5b58\u653e\u4e86\u5927\u91cf\u6570\u636e\uff08\u6bd4\u5982\u5927\u7ed3\u6784\u4f53\u548c\u6570\u7ec4\uff09\uff0c\u90a3\u4e48\u4f1a\u4ea7\u751f\u201c\u6808\u6ea2\u51fa\u201d\u5e76\u4e14\u7a0b\u5e8f\u4f1a\u4e2d\u6b62\u3002\u8fd9\u79cd\u60c5\u51b5\u4e0b\u5e94\u8be5\u901a\u8fc7malloc\u653e\u5728\u5806\u4e0a\u3002\n\u5982\u679c\u4f60\u83b7\u53d6\u4e86\u6307\u5411\u6808\u4e0a\u53d8\u91cf\u7684\u6307\u9488\uff0c\u5e76\u4e14\u5c06\u5b83\u7528\u4e8e\u4f20\u53c2\u6216\u4ece\u51fd\u6570\u8fd4\u56de\uff0c\u63a5\u6536\u5b83\u7684\u51fd\u6570\u4f1a\u4ea7\u751f\u201c\u6bb5\u9519\u8bef\u201d\u3002\u56e0\u4e3a\u5b9e\u9645\u7684\u6570\u636e\u88ab\u5f39\u51fa\u800c\u6d88\u5931\uff0c\u6307\u9488\u4e5f\u4f1a\u6307\u5411\u88ab\u91ca\u653e\u7684\u5185\u5b58\u3002\n\n\u8fd9\u5c31\u662f\u6211\u5728\u7a0b\u5e8f\u4e2d\u4f7f\u7528Database_open\u6765\u5206\u914d\u5185\u5b58\u6216\u9000\u51fa\u7684\u539f\u56e0\uff0c\u76f8\u5e94\u7684Database_close\u7528\u4e8e\u91ca\u653e\u5185\u5b58\u3002\u5982\u679c\u4f60\u521b\u5efa\u4e86\u4e00\u4e2a\u201c\u521b\u5efa\u201d\u51fd\u6570\uff0c\u5b83\u521b\u5efa\u4e86\u4e00\u4e9b\u4e1c\u897f\uff0c\u90a3\u4e48\u4e00\u4e2a\u201c\u9500\u6bc1\u201d\u51fd\u6570\u53ef\u4ee5\u5b89\u5168\u5730\u6e05\u7406\u8fd9\u4e9b\u4e1c\u897f\u3002\u8fd9\u6837\u4f1a\u66f4\u5bb9\u6613\u7406\u6e05\u5185\u5b58\u3002\n\u6700\u540e\uff0c\u5f53\u4e00\u4e2a\u7a0b\u5e8f\u9000\u51fa\u65f6\uff0cOS\u4f1a\u4e3a\u4f60\u6e05\u7406\u6240\u6709\u7684\u8d44\u6e90\uff0c\u4f46\u662f\u6709\u65f6\u4e0d\u4f1a\u7acb\u5373\u6267\u884c\u3002\u4e00\u4e2a\u60ef\u7528\u6cd5\uff08\u4e5f\u662f\u672c\u6b21\u7ec3\u4e60\u4e2d\u7528\u5230\u7684\uff09\u662f\u7acb\u5373\u7ec8\u6b62\u5e76\u4e14\u8ba9OS\u6e05\u7406\u9519\u8bef\u3002\n\u5982\u4f55\u4f7f\u5b83\u5d29\u6e83\n\u8fd9\u4e2a\u7a0b\u5e8f\u6709\u5f88\u591a\u53ef\u4ee5\u4f7f\u4e4b\u5d29\u6e83\u7684\u5730\u65b9\uff0c\u5c1d\u8bd5\u4e0b\u9762\u8fd9\u4e9b\u4e1c\u897f\uff0c\u540c\u65f6\u4e5f\u60f3\u51fa\u81ea\u5df1\u7684\u529e\u6cd5\u3002\n\n\u6700\u7ecf\u5178\u7684\u65b9\u6cd5\u662f\u79fb\u9664\u4e00\u4e9b\u5b89\u5168\u68c0\u67e5\uff0c\u4f60\u5c31\u53ef\u4ee5\u4f20\u5165\u4efb\u610f\u6570\u636e\u3002\u4f8b\u5982\uff0c\u7b2c160\u884c\u7684\u68c0\u67e5\u9632\u6b62\u4f60\u4f20\u5165\u4efb\u4f55\u8bb0\u5f55\u5e8f\u53f7\u3002\n\u4f60\u4e5f\u53ef\u4ee5\u5c1d\u8bd5\u5f04\u4e71\u6570\u636e\u6587\u4ef6\u3002\u4f7f\u7528\u4efb\u4f55\u7f16\u8f91\u5668\u6253\u5f00\u5b83\u5e76\u4e14\u968f\u673a\u4fee\u6539\u51e0\u4e2a\u5b57\u8282\u5e76\u5173\u95ed\u3002\n\u4f60\u4e5f\u53ef\u4ee5\u5bfb\u627e\u5728\u8fd0\u884c\u4e2d\u5411\u7a0b\u5e8f\u4f20\u9012\u975e\u6cd5\u53c2\u6570\u7684\u529e\u6cd5\u3002\u4f8b\u5982\u5c06\u6587\u4ef6\u53c2\u6570\u653e\u5230\u52a8\u4f5c\u540e\u9762\uff0c\u5c31\u4f1a\u521b\u5efa\u4e00\u4e2a\u4ee5\u52a8\u4f5c\u547d\u540d\u7684\u6587\u4ef6\uff0c\u5e76\u4e14\u6309\u7167\u6587\u4ef6\u540d\u7684\u7b2c\u4e00\u4e2a\u5b57\u7b26\u6267\u884c\u52a8\u4f5c\u3002\n\u8fd9\u4e2a\u7a0b\u5e8f\u4e2d\u6709\u4e2abug\uff0c\u56e0\u4e3astrncpy\u6709\u8bbe\u8ba1\u7f3a\u9677\u3002\u67e5\u8be2strncpy\u7684\u76f8\u5173\u8d44\u6599\uff0c\u7136\u540e\u8bd5\u7740\u5f04\u6e05\u695a\u5982\u679cname\u6216\u8005address\u8d85\u8fc7512\u4e2a\u5b57\u8282\u4f1a\u53d1\u751f\u4ec0\u4e48\u3002\u53ef\u4ee5\u901a\u8fc7\u7b80\u5355\u628a\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\u8bbe\u7f6e\u6210'\\0'\u6765\u4fee\u590d\u5b83\uff0c\u4f60\u5e94\u8be5\u65e0\u8bba\u5982\u4f55\u90fd\u8fd9\u6837\u505a\uff08\u8fd9\u4e5f\u662f\u51fd\u6570\u539f\u672c\u5e94\u8be5\u505a\u7684\uff09\u3002\n\u5728\u9644\u52a0\u9898\u4e2d\u6211\u4f1a\u8ba9\u4f60\u4f20\u9012\u53c2\u6570\u6765\u521b\u5efa\u4efb\u610f\u5927\u5c0f\u7684\u6570\u636e\u5e93\u3002\u5728\u4f60\u9020\u6210\u7a0b\u5e8f\u9000\u51fa\u6216malloc\u7684\u5185\u5b58\u4e0d\u8db3\u4e4b\u524d\uff0c\u5c1d\u8bd5\u627e\u51fa\u6700\u5927\u7684\u6570\u636e\u5e93\u5c3a\u5bf8\u662f\u591a\u5c11\u3002\n\n\u9644\u52a0\u9898\n\ndie\u51fd\u6570\u9700\u8981\u63a5\u6536conn\u53d8\u91cf\u4f5c\u4e3a\u53c2\u6570\uff0c\u4ee5\u4fbf\u6267\u884c\u6e05\u7406\u5e76\u5173\u95ed\u5b83\u3002\n\u4fee\u6539\u4ee3\u7801\uff0c\u4f7f\u5176\u63a5\u6536\u53c2\u6570\u4f5c\u4e3aMAX_DATA\u548cMAX_ROWS\uff0c\u5c06\u5b83\u4eec\u50a8\u5b58\u5728Database\u7ed3\u6784\u4f53\u4e2d\uff0c\u5e76\u4e14\u5c06\u5b83\u4eec\u5199\u5230\u6587\u4ef6\u3002\u8fd9\u6837\u5c31\u53ef\u4ee5\u521b\u5efa\u4efb\u610f\u5927\u5c0f\u7684\u6570\u636e\u5e93\u3002\n\u5411\u6570\u636e\u5e93\u6dfb\u52a0\u66f4\u591a\u64cd\u4f5c\uff0c\u6bd4\u5982find\u3002\n\u67e5\u8be2C\u5982\u4f55\u6253\u5305\u7ed3\u6784\u4f53\uff0c\u5e76\u4e14\u8bd5\u7740\u5f04\u6e05\u695a\u4e3a\u4ec0\u4e48\u4f60\u7684\u6587\u4ef6\u662f\u76f8\u5e94\u7684\u5927\u5c0f\u3002\u770b\u770b\u4f60\u662f\u5426\u53ef\u4ee5\u8ba1\u7b97\u51fa\u7ed3\u6784\u4f53\u6dfb\u52a0\u4e00\u4e9b\u5b57\u6bb5\u4e4b\u540e\u7684\u65b0\u5927\u5c0f\u3002\n\u5411Address\u6dfb\u52a0\u4e00\u4e9b\u5b57\u6bb5\uff0c\u4f7f\u5b83\u4eec\u53ef\u88ab\u641c\u7d22\u3002\n\u7f16\u5199\u4e00\u4e2ashell\u811a\u672c\u6765\u901a\u8fc7\u4ee5\u6b63\u786e\u987a\u5e8f\u8fd0\u884c\u547d\u4ee4\u6267\u884c\u81ea\u52a8\u5316\u6d4b\u8bd5\u3002\u63d0\u793a\uff1a\u5728bash\u9876\u7aef\u4f7f\u7528\u4f7f\u7528set -e\uff0c\u4f7f\u4e4b\u5728\u4efb\u4f55\u547d\u4ee4\u53d1\u751f\u9519\u8bef\u65f6\u9000\u51fa\u3002\n\u8bd1\u8005\u6ce8\uff1a\u4f7f\u7528Python\u7f16\u5199\u591a\u884c\u811a\u672c\u6216\u8bb8\u66f4\u65b9\u4fbf\u4e00\u4e9b\u3002\n\n\n\u5c1d\u8bd5\u91cd\u6784\u7a0b\u5e8f\uff0c\u4f7f\u7528\u5355\u4e00\u7684\u5168\u5c40\u53d8\u91cf\u6765\u50a8\u5b58\u6570\u636e\u5e93\u8fde\u63a5\u3002\u8fd9\u4e2a\u65b0\u7248\u672c\u548c\u65e7\u7248\u672c\u6bd4\u8d77\u6765\u5982\u4f55\uff1f\n\u641c\u7d22\u201c\u6808\u6570\u636e\u7ed3\u6784\u201d\uff0c\u5e76\u4e14\u5728\u4f60\u6700\u559c\u6b22\u7684\u8bed\u8a00\u4e2d\u5b9e\u73b0\u5b83\uff0c\u7136\u540e\u5c1d\u8bd5\u5728C\u4e2d\u5b9e\u73b0\u3002\n","categories":"\u7ec3\u4e602","tags":["\u51fd\u6570","IO"]},{"title":"\u51fd\u6570\u6307\u9488","url":"https:\/\/naka507.github.io\/posts\/DC3B5E7AC8CF3946.html","content":"\u51fd\u6570\u6307\u9488\n\u51fd\u6570\u5728C\u4e2d\u5b9e\u9645\u4e0a\u53ea\u662f\u6307\u5411\u7a0b\u5e8f\u4e2d\u67d0\u4e00\u4e2a\u4ee3\u7801\u5b58\u5728\u4f4d\u7f6e\u7684\u6307\u9488\u3002\u5c31\u50cf\u4f60\u521b\u5efa\u8fc7\u7684\u7ed3\u6784\u4f53\u6307\u9488\u3001\u5b57\u7b26\u4e32\u548c\u6570\u7ec4\u90a3\u6837\uff0c\u4f60\u4e5f\u53ef\u4ee5\u521b\u5efa\u6307\u5411\u51fd\u6570\u7684\u6307\u9488\u3002\u51fd\u6570\u6307\u9488\u7684\u4e3b\u8981\u7528\u9014\u662f\u5411\u5176\u4ed6\u51fd\u6570\u4f20\u9012\u201c\u56de\u8c03\u201d\uff0c\u6216\u8005\u6a21\u62df\u7c7b\u548c\u5bf9\u8c61\u3002\u5728\u8fd9\u4e2a\u7ec3\u4e60\u4e2d\u6211\u4eec\u4f1a\u521b\u5efa\u4e00\u4e9b\u56de\u8c03\uff0c\u5e76\u4e14\u4e0b\u4e00\u8282\u6211\u4eec\u4f1a\u5236\u4f5c\u4e00\u4e2a\u7b80\u5355\u7684\u5bf9\u8c61\u7cfb\u7edf\u3002\n\u51fd\u6570\u6307\u9488\u7684\u683c\u5f0f\u7c7b\u4f3c\u8fd9\u6837\uff1a\nint (*POINTER_NAME)(int a, int b)\n\u8bb0\u4f4f\u5982\u4f55\u7f16\u5199\u5b83\u7684\u4e00\u4e2a\u65b9\u6cd5\u662f\uff1a\n\n\u7f16\u5199\u4e00\u4e2a\u666e\u901a\u7684\u51fd\u6570\u58f0\u660e\uff1aint callme(int a, int b)\n\u5c06\u51fd\u6570\u7528\u6307\u9488\u8bed\u6cd5\u5305\u88c5\uff1aint (*callme)(int a, int b)\n\u5c06\u540d\u79f0\u6539\u6210\u6307\u9488\u540d\u79f0\uff1aint (*compare_cb)(int a, int b)\n\n\u8fd9\u4e2a\u65b9\u6cd5\u7684\u5173\u952e\u662f\uff0c\u5f53\u4f60\u5b8c\u6210\u8fd9\u4e9b\u4e4b\u540e\uff0c\u6307\u9488\u7684\u53d8\u91cf\u540d\u79f0\u4e3acompare_cb\uff0c\u800c\u4f60\u53ef\u4ee5\u5c06\u5b83\u7528\u4f5c\u51fd\u6570\u3002\u8fd9\u7c7b\u4f3c\u4e8e\u6307\u5411\u6570\u7ec4\u7684\u6307\u9488\u53ef\u4ee5\u8868\u793a\u6240\u6307\u5411\u7684\u6570\u7ec4\u3002\u6307\u5411\u51fd\u6570\u7684\u6307\u9488\u4e5f\u53ef\u4ee5\u7528\u4f5c\u8868\u793a\u6240\u6307\u5411\u7684\u51fd\u6570\uff0c\u53ea\u4e0d\u8fc7\u662f\u4e0d\u540c\u7684\u540d\u5b57\u3002\nint (*tester)(int a, int b) = sorted_order;\nprintf(\"TEST: %d is same as %d\\n\", tester(2, 3), sorted_order(2, 3));\n\u5373\u4f7f\u662f\u5bf9\u4e8e\u8fd4\u56de\u6307\u9488\u7684\u51fd\u6570\u6307\u9488\uff0c\u4e0a\u8ff0\u65b9\u6cd5\u4f9d\u7136\u6709\u6548\uff1a\n\n\u7f16\u5199\uff1achar *make_coolness(int awesome_levels)\n\u5305\u88c5\uff1achar *(*make_coolness)(int awesome_levels)\n\u91cd\u547d\u540d\uff1achar *(*coolness_cb)(int awesome_levels)\n\n\u9700\u8981\u89e3\u51b3\u7684\u4e0b\u4e00\u4e2a\u95ee\u9898\u662f\u4f7f\u7528\u51fd\u6570\u6307\u9488\u5411\u5176\u5b83\u51fd\u6570\u63d0\u4f9b\u53c2\u6570\u6bd4\u8f83\u56f0\u96be\uff0c\u6bd4\u5982\u5f53\u4f60\u6253\u7b97\u5411\u5176\u5b83\u51fd\u6570\u4f20\u9012\u56de\u8c03\u51fd\u6570\u7684\u65f6\u5019\u3002\u89e3\u51b3\u65b9\u6cd5\u662f\u4f7f\u7528typedef\uff0c\u5b83\u662fC\u7684\u4e00\u4e2a\u5173\u952e\u5b57\uff0c\u53ef\u4ee5\u7ed9\u5176\u5b83\u66f4\u590d\u6742\u7684\u7c7b\u578b\u8d77\u4e2a\u65b0\u7684\u540d\u5b57\u3002\u4f60\u9700\u8981\u8bb0\u4f4f\u7684\u4e8b\u60c5\u662f\uff0c\u5c06typedef\u6dfb\u52a0\u5230\u76f8\u540c\u7684\u6307\u9488\u8bed\u6cd5\u4e4b\u524d\uff0c\u7136\u540e\u4f60\u5c31\u53ef\u4ee5\u5c06\u90a3\u4e2a\u540d\u5b57\u7528\u4f5c\u7c7b\u578b\u4e86\u3002\u6211\u4f7f\u7528\u4e0b\u9762\u7684\u4ee3\u7801\u6765\u6f14\u793a\u8fd9\u4e00\u7279\u6027\uff1a\n#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;errno.h&gt;\n#include &lt;string.h&gt;\n\n\/** Our old friend die from ex17. *\/\nvoid die(const char *message)\n{\n    if(errno) {\n        perror(message);\n    } else {\n        printf(\"ERROR: %s\\n\", message);\n    }\n\n    exit(1);\n}\n\n\/\/ a typedef creates a fake type, in this\n\/\/ case for a function pointer\ntypedef int (*compare_cb)(int a, int b);\n\n\/**\n * A classic bubble sort function that uses the\n * compare_cb to do the sorting.\n *\/\nint *bubble_sort(int *numbers, int count, compare_cb cmp)\n{\n    int temp = 0;\n    int i = 0;\n    int j = 0;\n    int *target = malloc(count * sizeof(int));\n\n    if(!target) die(\"Memory error.\");\n\n    memcpy(target, numbers, count * sizeof(int));\n\n    for(i = 0; i &lt; count; i++) {\n        for(j = 0; j &lt; count - 1; j++) {\n            if(cmp(target[j], target[j+1]) &gt; 0) {\n                temp = target[j+1];\n                target[j+1] = target[j];\n                target[j] = temp;\n            }\n        }\n    }\n\n    return target;\n}\n\nint sorted_order(int a, int b)\n{\n    return a - b;\n}\n\nint reverse_order(int a, int b)\n{\n    return b - a;\n}\n\nint strange_order(int a, int b)\n{\n    if(a == 0 || b == 0) {\n        return 0;\n    } else {\n        return a % b;\n    }\n}\n\n\/**\n * Used to test that we are sorting things correctly\n * by doing the sort and printing it out.\n *\/\nvoid test_sorting(int *numbers, int count, compare_cb cmp)\n{\n    int i = 0;\n    int *sorted = bubble_sort(numbers, count, cmp);\n\n    if(!sorted) die(\"Failed to sort as requested.\");\n\n    for(i = 0; i &lt; count; i++) {\n        printf(\"%d \", sorted[i]);\n    }\n    printf(\"\\n\");\n\n    free(sorted);\n}\n\n\nint main(int argc, char *argv[])\n{\n    if(argc &lt; 2) die(\"USAGE: ex18 4 3 1 5 6\");\n\n    int count = argc - 1;\n    int i = 0;\n    char **inputs = argv + 1;\n\n    int *numbers = malloc(count * sizeof(int));\n    if(!numbers) die(\"Memory error.\");\n\n    for(i = 0; i &lt; count; i++) {\n        numbers[i] = atoi(inputs[i]);\n    }\n\n    test_sorting(numbers, count, sorted_order);\n    test_sorting(numbers, count, reverse_order);\n    test_sorting(numbers, count, strange_order);\n\n    free(numbers);\n\n    return 0;\n}\n\u5728\u8fd9\u6bb5\u7a0b\u5e8f\u4e2d\uff0c\u4f60\u5c06\u521b\u5efa\u52a8\u6001\u6392\u5e8f\u7684\u7b97\u6cd5\uff0c\u5b83\u4f1a\u4f7f\u7528\u6bd4\u8f83\u56de\u8c03\u5bf9\u6574\u6570\u6570\u7ec4\u6392\u5e8f\u3002\u4e0b\u9762\u662f\u8fd9\u4e2a\u7a0b\u5e8f\u7684\u5206\u89e3\uff0c\u4f60\u5e94\u8be5\u80fd\u591f\u6e05\u6670\u5730\u7406\u89e3\u5b83\u3002\nex18.c:1~6\n\u901a\u5e38\u7684\u5305\u542b\uff0c\u7528\u4e8e\u6240\u8c03\u7528\u7684\u6240\u6709\u51fd\u6570\u3002\nex18.c:7~17\n\u8fd9\u5c31\u662f\u4e4b\u524d\u7ec3\u4e60\u7684die\u51fd\u6570\uff0c\u6211\u5c06\u5b83\u7528\u4e8e\u9519\u8bef\u68c0\u67e5\u3002\nex18.c:21\n\u8fd9\u662f\u4f7f\u7528typedef\u7684\u5730\u65b9\uff0c\u5728\u540e\u9762\u6211\u50cfint\u6216char\u7c7b\u578b\u90a3\u6837\uff0c\u5728bubble_sort\u548ctest_sorting\u4e2d\u4f7f\u7528\u4e86compare_cb\u3002\nex18.c:27~49\n\u4e00\u4e2a\u5192\u6ce1\u6392\u5e8f\u7684\u5b9e\u73b0\uff0c\u5b83\u662f\u6574\u6570\u6392\u5e8f\u7684\u4e00\u79cd\u4e0d\u9ad8\u6548\u7684\u65b9\u6cd5\u3002\u8fd9\u4e2a\u51fd\u6570\u5305\u542b\u4e86\uff1a\nex18.c:27\n\u8fd9\u91cc\u662f\u5c06typedef\u7528\u4e8ecompare_cb\u4f5c\u4e3acmp\u6700\u540e\u4e00\u4e2a\u53c2\u6570\u7684\u5730\u65b9\u3002\u73b0\u5728\u5b83\u662f\u4e00\u4e2a\u4f1a\u8fd4\u56de\u4e24\u4e2a\u6574\u6570\u6bd4\u8f83\u7ed3\u679c\u7528\u4e8e\u6392\u5e8f\u7684\u51fd\u6570\u3002\nex18.c:29~34\n\u6808\u4e0a\u53d8\u91cf\u7684\u901a\u5e38\u521b\u5efa\u8bed\u53e5\uff0c\u524d\u9762\u662f\u4f7f\u7528malloc\u521b\u5efa\u7684\u5806\u4e0a\u6574\u6570\u6570\u7ec4\u3002\u786e\u4fdd\u4f60\u7406\u89e3\u4e86count * sizeof(int)\u505a\u4e86\u4ec0\u4e48\u3002\nex18.c:38\n\u5192\u6ce1\u6392\u5e8f\u7684\u5916\u5faa\u73af\u3002\nex18.c:39\n\u5192\u6ce1\u6392\u5e8f\u7684\u5185\u5faa\u73af\u3002\nex18.c:40\n\u73b0\u5728\u6211\u8c03\u7528\u4e86cmp\u56de\u8c03\uff0c\u5c31\u50cf\u4e00\u4e2a\u666e\u901a\u51fd\u6570\u90a3\u6837\uff0c\u4f46\u662f\u4e0d\u901a\u8fc7\u9884\u5148\u5b9a\u4e49\u597d\u7684\u51fd\u6570\u540d\uff0c\u800c\u662f\u4e00\u4e2a\u6307\u5411\u5b83\u7684\u6307\u9488\u3002\u8c03\u7528\u8005\u53ef\u4ee5\u50cf\u5b83\u4f20\u9012\u4efb\u4f55\u53c2\u6570\uff0c\u53ea\u8981\u8fd9\u4e9b\u53c2\u6570\u7b26\u5408compare_cb typedef\u7684\u7b7e\u540d\u3002\nex18.c:41-43\n\u5192\u6ce1\u6392\u5e8f\u6240\u9700\u7684\u5b9e\u9645\u4ea4\u6362\u64cd\u4f5c\u3002\nex18.c:48\n\u6700\u540e\u8fd4\u56de\u65b0\u521b\u5efa\u548c\u6392\u5e8f\u8fc7\u7684\u7ed3\u679c\u6570\u636etarget\u3002\nex18.c:51-68\ncompare_cb\u51fd\u6570\u7c7b\u578b\u4e09\u4e2a\u4e0d\u540c\u7248\u672c\uff0c\u5b83\u4eec\u9700\u8981\u548c\u6211\u4eec\u6240\u521b\u5efa\u7684typedef\u5177\u6709\u76f8\u540c\u7684\u5b9a\u4e49\u3002\u5426\u5219C\u7f16\u8f91\u5668\u4f1a\u62a5\u9519\u8bf4\u7c7b\u578b\u4e0d\u5339\u914d\u3002\nex18.c:74-87\n\u8fd9\u662fbubble_sort\u51fd\u6570\u7684\u6d4b\u8bd5\u3002\u4f60\u53ef\u4ee5\u770b\u5230\u6211\u540c\u65f6\u5c06compare_cb\u4f20\u7ed9\u4e86bubble_sort\u6765\u6f14\u793a\u5b83\u662f\u5982\u4f55\u50cf\u5176\u5b83\u6307\u9488\u4e00\u6837\u4f20\u9012\u7684\u3002\nex18.c:90-103\n\u4e00\u4e2a\u7b80\u5355\u7684\u4e3b\u51fd\u6570\uff0c\u57fa\u4e8e\u4f60\u901a\u8fc7\u547d\u4ee4\u884c\u4f20\u9012\u8fdb\u6765\u7684\u6574\u6570\uff0c\u521b\u5efa\u4e86\u4e00\u4e2a\u6570\u7ec4\u3002\u7136\u540e\u8c03\u7528\u4e86test_sorting\u51fd\u6570\u3002\nex18.c:105-107\n\u6700\u540e\uff0c\u4f60\u4f1a\u770b\u5230compare_cb\u51fd\u6570\u6307\u9488\u7684typedef\u662f\u5982\u4f55\u4f7f\u7528\u7684\u3002\u6211\u4ec5\u4ec5\u4f20\u9012\u4e86sorted_order\u3001reverse_order\u548cstrange_order\u7684\u540d\u5b57\u4f5c\u4e3a\u51fd\u6570\u6765\u8c03\u7528test_sorting\u3002C\u7f16\u8bd1\u5668\u4f1a\u627e\u5230\u8fd9\u4e9b\u51fd\u6570\u7684\u5730\u5740\uff0c\u5e76\u4e14\u751f\u6210\u6307\u9488\u7528\u4e8etest_sorting\u3002\u5982\u679c\u4f60\u770b\u4e00\u773ctest_sorting\u4f60\u4f1a\u53d1\u73b0\u5b83\u628a\u8fd9\u4e9b\u51fd\u6570\u4f20\u7ed9\u4e86bubble_sort\uff0c\u5e76\u4e0d\u5173\u5fc3\u5b83\u4eec\u662f\u505a\u4e86\u4ec0\u4e48\u3002\u53ea\u8981\u7b26\u5408compare_cb\u539f\u578b\u7684\u4e1c\u897f\u90fd\u6709\u6548\u3002\nex18.c:109\n\u6211\u4eec\u5728\u6700\u540e\u91ca\u653e\u4e86\u6211\u4eec\u521b\u5efa\u7684\u6574\u6570\u6570\u7ec4\u3002\n\u4f60\u4f1a\u770b\u5230\u4ec0\u4e48\n\u8fd0\u884c\u8fd9\u4e2a\u7a0b\u5e8f\u975e\u5e38\u7b80\u5355\uff0c\u4f46\u662f\u4f60\u8981\u5c1d\u8bd5\u4e0d\u540c\u7684\u6570\u5b57\u7ec4\u5408\uff0c\u751a\u81f3\u8981\u5c1d\u8bd5\u8f93\u5165\u975e\u6570\u5b57\u6765\u770b\u770b\u5b83\u505a\u4e86\u4ec0\u4e48\uff1a\n$ make ex18\ncc -Wall -g    ex18.c   -o ex18\n$ .\/ex18 4 1 7 3 2 0 8\n0 1 2 3 4 7 8\n8 7 4 3 2 1 0\n3 4 2 7 1 0 8\n$\n\u5982\u4f55\u4f7f\u5b83\u5d29\u6e83\n\u6211\u6253\u7b97\u8ba9\u4f60\u505a\u4e00\u4e9b\u5947\u602a\u7684\u4e8b\u60c5\u6765\u4f7f\u5b83\u5d29\u6e83\uff0c\u8fd9\u4e9b\u51fd\u6570\u6307\u9488\u90fd\u662f\u7c7b\u4f3c\u4e8e\u5176\u5b83\u6307\u9488\u7684\u6307\u9488\uff0c\u4ed6\u4eec\u90fd\u6307\u5411\u5185\u5b58\u7684\u4e00\u5757\u533a\u57df\u3002C\u4e2d\u53ef\u4ee5\u5c06\u4e00\u79cd\u6307\u9488\u7684\u6307\u9488\u8f6c\u6362\u4e3a\u53e6\u4e00\u79cd\uff0c\u4ee5\u4fbf\u4ee5\u4e0d\u540c\u65b9\u5f0f\u5904\u7406\u6570\u636e\u3002\u8fd9\u4e9b\u901a\u5e38\u662f\u4e0d\u5fc5\u8981\u7684\uff0c\u4f46\u662f\u4e3a\u4e86\u60f3\u4f60\u5c55\u793a\u5982\u4f55\u4fb5\u5165\u4f60\u7684\u7535\u8111\uff0c\u6211\u5e0c\u671b\u4f60\u628a\u8fd9\u6bb5\u4ee3\u7801\u6dfb\u52a0\u5728test_sorting\u4e0b\u9762\uff1a\nunsigned char *data = (unsigned char *)cmp;\n\nfor(i = 0; i &lt; 25; i++) {\n    printf(\"%02x:\", data[i]);\n}\n\nprintf(\"\\n\");\n\u8fd9\u4e2a\u5faa\u73af\u5c06\u4f60\u7684\u51fd\u6570\u8f6c\u6362\u6210\u5b57\u7b26\u4e32\uff0c\u5e76\u4e14\u6253\u5370\u51fa\u6765\u5b83\u7684\u5185\u5bb9\u3002\u8fd9\u5e76\u4e0d\u4f1a\u4e2d\u65ad\u4f60\u7684\u7a0b\u5e8f\uff0c\u9664\u975eCPU\u548cOS\u5728\u6267\u884c\u8fc7\u7a0b\u4e2d\u9047\u5230\u4e86\u95ee\u9898\u3002\u5728\u5b83\u6253\u5370\u6392\u5e8f\u8fc7\u7684\u6570\u7ec4\u4e4b\u540e\uff0c\u4f60\u6240\u770b\u5230\u7684\u662f\u4e00\u4e2a\u5341\u516d\u8fdb\u5236\u6570\u5b57\u7684\u5b57\u7b26\u4e32\uff1a\n55:48:89:e5:89:7d:fc:89:75:f8:8b:55:fc:8b:45:f8:29:d0:c9:c3:55:48:89:e5:89:\n\u8fd9\u5c31\u5e94\u8be5\u662f\u51fd\u6570\u7684\u539f\u59cb\u7684\u6c47\u7f16\u5b57\u8282\u7801\u4e86\uff0c\u4f60\u5e94\u8be5\u80fd\u770b\u5230\u5b83\u4eec\u6709\u76f8\u540c\u7684\u8d77\u59cb\u548c\u4e0d\u540c\u7684\u7ed3\u5c3e\u3002\u4e5f\u6709\u53ef\u80fd\u8fd9\u4e2a\u5faa\u73af\u5e76\u6ca1\u6709\u83b7\u5f97\u51fd\u6570\u7684\u5168\u90e8\uff0c\u6216\u8005\u83b7\u5f97\u4e86\u8fc7\u591a\u7684\u4ee3\u7801\u800c\u8dd1\u5230\u7a0b\u5e8f\u7684\u53e6\u5916\u4e00\u7247\u7a7a\u95f4\u3002\u8fd9\u4e9b\u4e0d\u901a\u8fc7\u66f4\u591a\u5206\u6790\u662f\u4e0d\u53ef\u80fd\u77e5\u9053\u7684\u3002\n\u9644\u52a0\u9898\n\n\u7528\u5341\u516d\u8fdb\u5236\u7f16\u8f91\u5668\u6253\u5f00ex18\uff0c\u63a5\u7740\u627e\u5230\u51fd\u6570\u8d77\u59cb\u5904\u7684\u5341\u516d\u8fdb\u5236\u4ee3\u7801\u5e8f\u5217\uff0c\u770b\u770b\u662f\u5426\u80fd\u5728\u539f\u59cb\u7a0b\u5e8f\u4e2d\u627e\u5230\u51fd\u6570\u3002\n\u5728\u4f60\u7684\u5341\u516d\u8fdb\u5236\u7f16\u8f91\u5668\u4e2d\u627e\u5230\u66f4\u591a\u968f\u673a\u51fa\u73b0\u7684\u4e1c\u897f\u5e76\u4fee\u6539\u5b83\u4eec\u3002\u91cd\u65b0\u8fd0\u884c\u4f60\u7684\u7a0b\u5e8f\u770b\u770b\u53d1\u751f\u4e86\u4ec0\u4e48\u3002\u5b57\u7b26\u4e32\u662f\u4f60\u6700\u5bb9\u6613\u4fee\u6539\u7684\u4e1c\u897f\u3002\n\u5c06\u9519\u8bef\u7684\u51fd\u6570\u4f20\u7ed9compare_cb\uff0c\u5e76\u770b\u770bC\u7f16\u8f91\u5668\u4f1a\u62a5\u544a\u4ec0\u4e48\u9519\u8bef\u3002\n\u5c06NULL\u4f20\u7ed9\u5b83\uff0c\u770b\u770b\u7a0b\u5e8f\u4e2d\u4f1a\u53d1\u751f\u4ec0\u4e48\u3002\u7136\u540e\u8fd0\u884cValgrind\u6765\u770b\u770b\u5b83\u4f1a\u62a5\u544a\u4ec0\u4e48\u3002\n\u7f16\u5199\u53e6\u4e00\u4e2a\u6392\u5e8f\u7b97\u6cd5\uff0c\u4fee\u6539test_sorting\u4f7f\u5b83\u63a5\u6536\u4efb\u610f\u7684\u6392\u5e8f\u51fd\u6570\u548c\u6392\u5e8f\u51fd\u6570\u7684\u6bd4\u8f83\u56de\u8c03\u3002\u5e76\u4f7f\u7528\u5b83\u6765\u6d4b\u8bd5\u4e24\u79cd\u6392\u5e8f\u7b97\u6cd5\u3002\n","categories":"\u7ec3\u4e602","tags":["\u51fd\u6570","\u6307\u9488","\u5b57\u7b26\u4e32"]},{"title":"\u4e00\u4e2a\u7b80\u5355\u7684\u5bf9\u8c61\u7cfb\u7edf","url":"https:\/\/naka507.github.io\/posts\/746ADCFC76734882.html","content":"\u4e00\u4e2a\u7b80\u5355\u7684\u5bf9\u8c61\u7cfb\u7edf\n\u6211\u5728\u5b66\u4e60\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u4e4b\u524d\u5b66\u4e86C\uff0c\u6240\u4ee5\u5b83\u6709\u52a9\u4e8e\u6211\u5728C\u4e2d\u6784\u5efa\u9762\u5411\u5bf9\u8c61\u7cfb\u7edf\uff0c\u6765\u7406\u89e3OOP\u7684\u57fa\u672c\u542b\u4e49\u3002\u4f60\u53ef\u80fd\u5728\u5b66\u4e60C\u4e4b\u524d\u5c31\u5b66\u4e86OOP\u8bed\u8a00\uff0c\u6240\u4ee5\u8fd9\u7ae0\u4e5f\u53ef\u80fd\u4f1a\u8d77\u5230\u4e00\u79cd\u8854\u63a5\u4f5c\u7528\u3002\u8fd9\u4e2a\u8054\u7cfb\u4e2d\uff0c\u4f60\u5c06\u4f1a\u6784\u5efa\u4e00\u4e2a\u7b80\u5355\u7684\u5bf9\u8c61\u7cfb\u7edf\uff0c\u4f46\u662f\u4e5f\u4f1a\u4e86\u89e3\u66f4\u591a\u5173\u4e8eC\u9884\u5904\u7406\u5668\u7684\u4e8b\u60c5\u3002\n\u8fd9\u4e2a\u7ec3\u4e60\u4f1a\u6784\u5efa\u4e00\u4e2a\u7b80\u5355\u7684\u6e38\u620f\uff0c\u5728\u6e38\u620f\u4e2d\u4f60\u4f1a\u5728\u4e00\u4e2a\u5c0f\u578b\u7684\u57ce\u5821\u4e2d\u6740\u6b7b\u5f25\u8bfa\u9676\u6d1b\u65af\uff0c\u5e76\u6ca1\u6709\u4efb\u4f55\u795e\u5947\u4e4b\u5904\uff0c\u53ea\u662f\u56db\u4e2a\u623f\u95f4\u548c\u4e00\u4e2a\u574f\u5bb6\u4f19\u3002\u8fd9\u4e2a\u7ec3\u4e60\u540c\u65f6\u662f\u4e00\u4e2a\u591a\u6587\u4ef6\u7684\u9879\u76ee\uff0c\u5e76\u4e14\u6bd4\u8d77\u4e4b\u524d\u7684\u4e00\u4e9b\u7a0b\u5e8f\u770b\u8d77\u6765\u66f4\u50cf\u4e00\u4e2a\u771f\u6b63\u7684C\u7a0b\u5e8f\u3002\u6211\u5728\u8fd9\u91cc\u4ecb\u7ecdC\u9884\u5904\u7406\u5668\u7684\u539f\u56e0\uff0c\u662f\u4f60\u9700\u8981\u5b83\u6765\u5728\u4f60\u81ea\u5df1\u7684\u7a0b\u5e8f\u4e2d\u521b\u5efa\u591a\u4e2a\u6587\u4ef6\u3002\nC\u9884\u5904\u7406\u5668\u5982\u4f55\u5de5\u4f5c\nC\u9884\u5904\u7406\u5668\u662f\u4e2a\u6a21\u677f\u5904\u7406\u7cfb\u7edf\uff0c\u5b83\u4e3b\u8981\u7684\u7528\u9014\u662f\u8ba9C\u4ee3\u7801\u7684\u7f16\u7a0b\u66f4\u52a0\u5bb9\u6613\uff0c\u4f46\u662f\u5b83\u901a\u8fc7\u4e00\u4e2a\u8bed\u6cd5\u611f\u77e5\u7684\u6a21\u677f\u673a\u5236\u6765\u5b9e\u73b0\u3002\u4ee5\u524d\u4eba\u4eec\u4e3b\u8981\u4f7f\u7528C\u9884\u5904\u7406\u5668\u6765\u50a8\u5b58\u5e38\u91cf\uff0c\u4ee5\u53ca\u521b\u5efa\u201c\u5b8f\u201d\u6765\u7b80\u5316\u590d\u6742\u7684\u4ee3\u7801\u3002\u5728\u73b0\u4ee3C\u8bed\u8a00\u4e2d\u4f60\u4f1a\u5b9e\u9645\u4e0a\u4f7f\u7528\u5b83\u4f5c\u4e3a\u4ee3\u7801\u751f\u6210\u5668\u6765\u521b\u5efa\u6a21\u677f\u5316\u7684\u4ee3\u7801\u7247\u6bb5\u3002\nC\u9884\u5904\u7406\u5668\u7684\u5de5\u4f5c\u539f\u7406\u662f\uff0c\u5982\u679c\u4f60\u7ed9\u5b83\u4e00\u4e2a\u6587\u4ef6\uff0c\u6bd4\u5982.c\u6587\u4ef6\uff0c\u5b83\u4f1a\u5904\u7406\u4ee5#\uff08\u4e95\u53f7\uff09\u5b57\u7b26\u5f00\u5934\u7684\u5404\u79cd\u6587\u672c\u3002\u5f53\u5b83\u9047\u5230\u4e00\u4e2a\u8fd9\u6837\u7684\u6587\u672c\u65f6\uff0c\u5b83\u4f1a\u5bf9\u8f93\u5165\u6587\u4ef6\u4e2d\u7684\u6587\u672c\u505a\u7279\u5b9a\u7684\u66ff\u6362\u3002C\u9884\u5904\u7406\u5668\u7684\u4e3b\u8981\u4f18\u70b9\u662f\u4ed6\u53ef\u4ee5\u5305\u542b\u5176\u4ed6\u6587\u4ef6\uff0c\u5e76\u4e14\u57fa\u4e8e\u8be5\u6587\u4ef6\u7684\u5185\u5bb9\u5bf9\u5b83\u7684\u5b8f\u5217\u8868\u8fdb\u884c\u6269\u5c55\u3002\n\u4e00\u4e2a\u5feb\u901f\u67e5\u770b\u9884\u5904\u7406\u5668\u6240\u505a\u4e8b\u60c5\u7684\u65b9\u6cd5\uff0c\u662f\u5bf9\u4e0a\u4e2a\u7ec3\u4e60\u4e2d\u7684\u4ee3\u7801\u6267\u884c\u4e0b\u5217\u547d\u4ee4\uff1a\ncpp ex18.c | less\n\u8fd9\u4f1a\u4ea7\u751f\u5927\u91cf\u8f93\u51fa\uff0c\u4f46\u662f\u5982\u679c\u4f60\u6eda\u52a8\u5b83\uff0c\u4f1a\u770b\u5230\u4f60\u4f7f\u7528#include\u5305\u542b\u7684\u5176\u4ed6\u6587\u4ef6\u7684\u5185\u5bb9\u3002\u5728\u539f\u59cb\u7684\u4ee3\u7801\u4e2d\u5411\u4e0b\u6eda\u52a8\uff0c\u4f60\u53ef\u4ee5\u770b\u5230cpp\u5982\u4f55\u57fa\u4e8e\u5934\u6587\u4ef6\u4e2d\u4e0d\u540c\u7684#define\u5b8f\u6765\u8f6c\u6362\u4ee3\u7801\u3002\nC\u7f16\u8bd1\u5668\u4e0ecpp\u7684\u96c6\u6210\u5341\u5206\u7d27\u5bc6\uff0c\u8fd9\u4e2a\u4f8b\u5b50\u53ea\u662f\u5411\u4f60\u5c55\u793a\u5b83\u662f\u5982\u4f55\u5728\u80cc\u540e\u5de5\u4f5c\u7684\u3002\u5728\u73b0\u4ee3C\u8bed\u8a00\u4e2d\uff0ccpp\u7cfb\u7edf\u4e5f\u96c6\u6210\u5230C\u7684\u51fd\u6570\u4e2d\uff0c\u4f60\u6216\u8bb8\u53ef\u4ee5\u5c06\u5b83\u5f53\u505aC\u8bed\u8a00\u7684\u4e00\u90e8\u5206\u3002\n\u5728\u5269\u4f59\u7684\u7ae0\u8282\u4e2d\uff0c\u6211\u4eec\u4f1a\u4f7f\u7528\u66f4\u591a\u9884\u5904\u7406\u5668\u7684\u8bed\u6cd5\uff0c\u5e76\u4e14\u50cf\u5f80\u5e38\u4e00\u6837\u89e3\u91ca\u5b83\u4eec\u3002\n\u539f\u578b\u5bf9\u8c61\u7cfb\u7edf\n\u6211\u4eec\u6240\u521b\u5efa\u7684OOP\u7cfb\u7edf\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u201c\u539f\u578b\u201d\u98ce\u683c\u7684\u5bf9\u8c61\u7cfb\u7edf\uff0c\u5f88\u50cfJavaScript\u3002\u4f60\u5c06\u4ee5\u8bbe\u7f6e\u4e3a\u5b57\u6bb5\u7684\u539f\u578b\u6765\u5f00\u59cb\uff0c\u800c\u4e0d\u662f\u7c7b\uff0c\u63a5\u7740\u5c06\u4ed6\u4eec\u7528\u4f5c\u521b\u5efa\u5176\u5b83\u5bf9\u8c61\u5b9e\u4f8b\u7684\u57fa\u7840\u3002\u8fd9\u4e2a\u201c\u6ca1\u6709\u7c7b\u201d\u7684\u8bbe\u8ba1\u6bd4\u8d77\u4f20\u7edf\u7684\u57fa\u4e8e\u7c7b\u7684\u5bf9\u8c61\u7cfb\u7edf\u66f4\u52a0\u6613\u4e8e\u5b9e\u73b0\u548c\u4f7f\u7528\u3002\nObject\u5934\u6587\u4ef6\n\u6211\u6253\u7b97\u5c06\u6570\u636e\u7c7b\u578b\u548c\u51fd\u6570\u58f0\u660e\u653e\u5728\u4e00\u4e2a\u5355\u72ec\u7684\u5934\u6587\u4ef6\u4e2d\uff0c\u53eb\u505aobject.h\u3002\u8fd9\u4e2a\u662f\u4e00\u4e2a\u6807\u51c6\u7684C\u6280\u5de7\uff0c\u53ef\u4ee5\u8ba9\u4f60\u96c6\u6210\u4e8c\u8fdb\u5236\u5e93\uff0c\u4f46\u5176\u5b83\u7a0b\u5e8f\u5458\u4efb\u7136\u9700\u8981\u7f16\u8bd1\u3002\u5728\u8fd9\u4e2a\u6587\u4ef6\u4e2d\uff0c\u6211\u4f7f\u7528\u4e86\u591a\u4e2a\u9ad8\u7ea7\u7684C\u9884\u5904\u7406\u5668\u6280\u5de7\uff0c\u6211\u63a5\u4e0b\u6765\u51c6\u5907\u7b80\u7565\u5730\u63cf\u8ff0\u5b83\u4eec\uff0c\u5e76\u4e14\u4f60\u4f1a\u5728\u540e\u7eed\u7684\u6b65\u9aa4\u4e2d\u770b\u5230\u3002\n#ifndef _object_h\n#define _object_h\n\ntypedef enum {\n    NORTH, SOUTH, EAST, WEST\n} Direction;\n\ntypedef struct {\n    char *description;\n    int (*init)(void *self);\n    void (*describe)(void *self);\n    void (*destroy)(void *self);\n    void *(*move)(void *self, Direction direction);\n    int (*attack)(void *self, int damage);\n} Object;\n\nint Object_init(void *self);\nvoid Object_destroy(void *self);\nvoid Object_describe(void *self);\nvoid *Object_move(void *self, Direction direction);\nint Object_attack(void *self, int damage);\nvoid *Object_new(size_t size, Object proto, char *description);\n\n#define NEW(T, N) Object_new(sizeof(T), T##Proto, N)\n#define _(N) proto.N\n\n#endif\n\u770b\u4e00\u770b\u8fd9\u4e2a\u6587\u4ef6\uff0c\u4f60\u4f1a\u53d1\u73b0\u6211\u4f7f\u7528\u4e86\u51e0\u4e2a\u65b0\u7684\u8bed\u6cd5\u7247\u6bb5\uff0c\u4f60\u4e4b\u524d\u4ece\u6765\u6ca1\u89c1\u8fc7\u5b83\u4eec\uff1a\n#ifndef\n\u4f60\u5df2\u7ecf\u89c1\u8fc7\u4e86\u7528\u4e8e\u521b\u5efa\u7b80\u5355\u5e38\u91cf\u7684#define\uff0c\u4f46\u662fC\u9884\u5904\u7406\u5668\u53ef\u4ee5\u6839\u636e\u6761\u4ef6\u5224\u65ad\u6765\u5ffd\u7565\u4e00\u90e8\u5206\u4ee3\u7801\u3002\u8fd9\u91cc\u7684#ifndef\u662f\u201c\u5982\u679c\u6ca1\u6709\u88ab\u5b9a\u4e49\u201d\u7684\u610f\u601d\uff0c\u5b83\u4f1a\u68c0\u67e5\u662f\u5426\u5df2\u7ecf\u51fa\u73b0\u8fc7#define _object_h\uff0c\u5982\u679c\u5df2\u51fa\u73b0\uff0c\u5c31\u8df3\u8fc7\u8fd9\u6bb5\u4ee3\u7801\u3002\u6211\u4e4b\u6240\u4ee5\u8fd9\u6837\u5199\uff0c\u662f\u56e0\u4e3a\u6211\u4eec\u53ef\u4ee5\u5c06\u8fd9\u4e2a\u6587\u4ef6\u5305\u542b\u4efb\u610f\u6b21\uff0c\u800c\u65e0\u9700\u62c5\u5fc3\u591a\u6b21\u5b9a\u4e49\u91cc\u9762\u7684\u4e1c\u897f\u3002\n#define\n\u6709\u4e86\u4e0a\u9762\u4fdd\u62a4\u8be5\u6587\u4ef6\u7684#ifndef\uff0c\u6211\u4eec\u63a5\u7740\u6dfb\u52a0_object_h\u7684\u5b9a\u4e49\uff0c\u56e0\u6b64\u4e4b\u540e\u4efb\u4f55\u8bd5\u56fe\u5305\u542b\u6b64\u6587\u4ef6\u7684\u884c\u4e3a\uff0c\u90fd\u4f1a\u7531\u4e8e\u4e0a\u9762\u7684\u8bed\u53e5\u800c\u8df3\u8fc7\u8fd9\u6bb5\u4ee3\u7801\u3002\n#define NEW(T,N)\n\u8fd9\u6761\u8bed\u53e5\u521b\u5efa\u4e86\u4e00\u4e2a\u5b8f\uff0c\u5c31\u50cf\u6a21\u677f\u51fd\u6570\u4e00\u6837\uff0c\u65e0\u8bba\u4f60\u5728\u54ea\u91cc\u7f16\u5199\u5de6\u8fb9\u7684\u4ee3\u7801\uff0c\u90fd\u4f1a\u5c55\u5f00\u6210\u53f3\u8fb9\u7684\u4ee3\u7801\u3002\u8fd9\u6761\u8bed\u53e5\u4ec5\u4ec5\u662f\u5bf9\u6211\u4eec\u901a\u5e38\u8c03\u7528\u7684Object_new\u5236\u4f5c\u4e86\u4e00\u4e2a\u5feb\u6377\u65b9\u5f0f\uff0c\u5e76\u4e14\u907f\u514d\u4e86\u6f5c\u5728\u7684\u8c03\u7528\u9519\u8bef\u3002\u5728\u5b8f\u8fd9\u79cd\u5de5\u4f5c\u65b9\u5f0f\u4e0b\uff0cT\u3001N\u8fd8\u6709New\u90fd\u88ab\u201c\u6ce8\u5165\u201d\u8fdb\u4e86\u53f3\u8fb9\u7684\u4ee3\u7801\u4e2d\u3002T##Proto\u8bed\u6cd5\u8868\u793a\u201c\u5c06Proto\u8fde\u63a5\u5230T\u7684\u672b\u5c3e\u201d\uff0c\u6240\u4ee5\u5982\u679c\u4f60\u5199\u4e0bNEW(Room, \"Hello.\")\uff0c\u5c31\u4f1a\u5728\u8fd9\u91cc\u53d8\u6210RoomProto\u3002\n#define _(N)\n\u8fd9\u4e2a\u5b8f\u662f\u4e00\u79cd\u4e3a\u5bf9\u8c61\u7cfb\u7edf\u8bbe\u8ba1\u7684\u201c\u8bed\u6cd5\u7cd6\u201d\uff0c\u5c06obj-&gt;proto.blah\u7b80\u5199\u4e3aobj-&gt;_(blah)\u3002\u5b83\u4e0d\u662f\u5fc5\u9700\u7684\uff0c\u4f46\u662f\u5b83\u662f\u4e00\u4e2a\u63a5\u4e0b\u6765\u4f1a\u7528\u5230\u7684\u6709\u8da3\u7684\u5c0f\u6280\u5de7\u3002\nObject\u6e90\u6587\u4ef6\nobject.h\u662f\u58f0\u660e\u51fd\u6570\u548c\u6570\u636e\u7c7b\u578b\u7684\u5730\u65b9\uff0c\u5b83\u4eec\u5728object.c\u4e2d\u88ab\u5b9a\u4e49\uff08\u521b\u5efa\uff09\uff0c\u6240\u4ee5\u63a5\u4e0b\u6765\uff1a\n#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\n#include &lt;stdlib.h&gt;\n#include \"object.h\"\n#include &lt;assert.h&gt;\n\nvoid Object_destroy(void *self)\n{\n    Object *obj = self;\n\n    if(obj) {\n        if(obj-&gt;description) free(obj-&gt;description);\n        free(obj);\n    }\n}\n\nvoid Object_describe(void *self)\n{\n    Object *obj = self;\n    printf(\"%s.\\n\", obj-&gt;description);\n}\n\nint Object_init(void *self)\n{\n    \/\/ do nothing really\n    return 1;\n}\n\nvoid *Object_move(void *self, Direction direction)\n{\n    printf(\"You can't go that direction.\\n\");\n    return NULL;\n}\n\nint Object_attack(void *self, int damage)\n{\n    printf(\"You can't attack that.\\n\");\n    return 0;\n}\n\nvoid *Object_new(size_t size, Object proto, char *description)\n{\n    \/\/ setup the default functions in case they aren't set\n    if(!proto.init) proto.init = Object_init;\n    if(!proto.describe) proto.describe = Object_describe;\n    if(!proto.destroy) proto.destroy = Object_destroy;\n    if(!proto.attack) proto.attack = Object_attack;\n    if(!proto.move) proto.move = Object_move;\n\n    \/\/ this seems weird, but we can make a struct of one size,\n    \/\/ then point a different pointer at it to \"cast\" it\n    Object *el = calloc(1, size);\n    *el = proto;\n\n    \/\/ copy the description over\n    el-&gt;description = strdup(description);\n\n    \/\/ initialize it with whatever init we were given\n    if(!el-&gt;init(el)) {\n        \/\/ looks like it didn't initialize properly\n        el-&gt;destroy(el);\n        return NULL;\n    } else {\n        \/\/ all done, we made an object of any type\n        return el;\n    }\n}\n\u8fd9\u4e2a\u6587\u4ef6\u4e2d\u5e76\u6ca1\u6709\u4ec0\u4e48\u65b0\u4e1c\u897f\uff0c\u9664\u4e86\u4e00\u4e2a\u5c0f\u6280\u5de7\u4e4b\u5916\u3002Object_new\u51fd\u6570\u901a\u8fc7\u628a\u539f\u578b\u653e\u5230\u7ed3\u6784\u4f53\u7684\u5f00\u5934\uff0c\u5229\u7528\u4e86structs\u5de5\u4f5c\u673a\u5236\u7684\u4e00\u4e2a\u65b9\u9762\u3002\u5f53\u4f60\u5728\u4e4b\u540e\u770b\u5230ex19.h\u5934\u6587\u4ef6\u65f6\uff0c\u4f60\u4f1a\u660e\u767d\u4e3a\u4ec0\u4e48\u6211\u5c06Object\u4f5c\u4e3a\u7ed3\u6784\u4f53\u7684\u7b2c\u4e00\u4e2a\u5b57\u6bb5\u3002\u7531\u4e8eC\u6309\u987a\u5e8f\u5c06\u5b57\u6bb5\u653e\u5165\u7ed3\u6784\u4f53\uff0c\u5e76\u4e14\u7531\u4e8e\u6307\u9488\u53ef\u4ee5\u6307\u5411\u4e00\u5757\u5185\u5b58\uff0c\u6211\u5c31\u53ef\u4ee5\u5c06\u6307\u9488\u8f6c\u6362\u4e3a\u4efb\u4f55\u6211\u60f3\u8981\u7684\u4e1c\u897f\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5373\u4f7f\u6211\u901a\u8fc7calloc\u83b7\u53d6\u4e86\u4e00\u5927\u5757\u5185\u5b58\uff0c\u6211\u4ecd\u7136\u53ef\u4ee5\u4f7f\u7528Object\u6307\u9488\u6765\u6307\u5411\u5b83\u3002\n\u5f53\u6211\u5f00\u59cb\u7f16\u5199ex19.h\u6587\u4ef6\u65f6\uff0c\u6211\u4f1a\u628a\u5b83\u89e3\u91ca\u5f97\u66f4\u8be6\u7ec6\u4e00\u4e9b\uff0c\u56e0\u4e3a\u5f53\u4f60\u770b\u5230\u5b83\u600e\u4e48\u7528\u7684\u65f6\u5019\u624d\u80fd\u66f4\u5bb9\u6613\u53bb\u7406\u89e3\u5b83\u3002\n\u4e0a\u9762\u7684\u4ee3\u7801\u521b\u5efa\u4e86\u57fa\u672c\u7684\u5bf9\u8c61\u7cfb\u7edf\uff0c\u4f46\u662f\u4f60\u9700\u8981\u7f16\u8bd1\u5b83\u548c\u5c06\u5b83\u94fe\u63a5\u5230ex19.c\u6587\u4ef6\uff0c\u6765\u521b\u5efa\u51fa\u5b8c\u6574\u7684\u7a0b\u5e8f\u3002object.c\u6587\u4ef6\u672c\u8eab\u5e76\u6ca1\u6709main\u51fd\u6570\uff0c\u6240\u4ee5\u5b83\u4e0d\u53ef\u80fd\u88ab\u7f16\u8bd1\u4e3a\u5b8c\u6574\u7684\u7a0b\u5e8f\u3002\u4e0b\u9762\u662f\u4e00\u4e2aMakefile\u6587\u4ef6\uff0c\u5b83\u57fa\u4e8e\u5df2\u7ecf\u5b8c\u6210\u7684\u4e8b\u60c5\u6765\u6784\u5efa\u7a0b\u5e8f\uff1a\nCFLAGS=-Wall -g\n\nall: ex19\n\nex19: object.o\n\nclean:\n  rm -f ex19\n\u8fd9\u4e2aMakefile\u6240\u505a\u7684\u4e8b\u60c5\u4ec5\u4ec5\u662f\u8ba9ex19\u4f9d\u8d56\u4e8eobject.o\u3002\u8fd8\u8bb0\u5f97make\u53ef\u4ee5\u6839\u636e\u6269\u5c55\u540d\u6784\u5efa\u4e0d\u540c\u7684\u6587\u4ef6\u5417\uff1f\u8fd9\u76f8\u5f53\u4e8e\u544a\u8bc9make\u6267\u884c\u4e0b\u5217\u4e8b\u60c5\uff1a\n\n\u5f53\u6211\u8fd0\u884cmake\u65f6\uff0c\u9ed8\u8ba4\u7684all\u4f1a\u6784\u5efaex19\u3002\n\u5f53\u5b83\u6784\u5efaex19\u65f6\uff0c\u4e5f\u9700\u8981\u6784\u5efaobject.o\uff0c\u5e76\u4e14\u5c06\u5b83\u5305\u542b\u5728\u5176\u4e2d\u3002\nmake\u5e76\u4e0d\u80fd\u627e\u5230object.o\uff0c\u4f46\u662f\u5b83\u80fd\u53d1\u73b0object.c\u6587\u4ef6\uff0c\u5e76\u4e14\u77e5\u9053\u5982\u4f55\u628a.c\u6587\u4ef6\u53d8\u6210.o\u6587\u4ef6\uff0c\u6240\u4ee5\u5b83\u5c31\u8fd9\u4e48\u505a\u4e86\u3002\n\u4e00\u65e6object.o\u6587\u4ef6\u6784\u5efa\u5b8c\u6210\uff0c\u5b83\u5c31\u4f1a\u8fd0\u884c\u6b63\u786e\u7684\u7f16\u8bd1\u547d\u4ee4\uff0c\u4eceex19.c\u548cobject.o\u4e2d\u6784\u5efaex19\u3002\n\n\u6e38\u620f\u5b9e\u73b0\n\u4e00\u65e6\u4f60\u7f16\u5199\u5b8c\u6210\u4e86\u90a3\u4e9b\u6587\u4ef6\uff0c\u4f60\u9700\u8981\u4f7f\u7528\u5bf9\u8c61\u7cfb\u7edf\u6765\u5b9e\u73b0\u5b9e\u9645\u7684\u6e38\u620f\uff0c\u7b2c\u4e00\u6b65\u5c31\u662f\u628a\u6240\u6709\u6570\u636e\u7c7b\u578b\u548c\u51fd\u6570\u58f0\u660e\u653e\u5728ex19.h\u6587\u4ef6\u4e2d\uff1a\n#ifndef _ex19_h\n#define _ex19_h\n\n#include \"object.h\"\n\nstruct Monster {\n    Object proto;\n    int hit_points;\n};\n\ntypedef struct Monster Monster;\n\nint Monster_attack(void *self, int damage);\nint Monster_init(void *self);\n\nstruct Room {\n    Object proto;\n\n    Monster *bad_guy;\n\n    struct Room *north;\n    struct Room *south;\n    struct Room *east;\n    struct Room *west;\n};\n\ntypedef struct Room Room;\n\nvoid *Room_move(void *self, Direction direction);\nint Room_attack(void *self, int damage);\nint Room_init(void *self);\n\n\nstruct Map {\n    Object proto;\n    Room *start;\n    Room *location;\n};\n\ntypedef struct Map Map;\n\nvoid *Map_move(void *self, Direction direction);\nint Map_attack(void *self, int damage);\nint Map_init(void *self);\n\n#endif\n\u5b83\u521b\u5efa\u4e86\u4e09\u4e2a\u4f60\u5c06\u4f1a\u7528\u5230\u7684\u65b0\u5bf9\u8c61\uff1aMonster\uff0cRoom\uff0c\u548cMap\u3002\n\u770b\u4e00\u773cobject.c:52\uff0c\u4f60\u53ef\u4ee5\u770b\u5230\u8fd9\u662f\u6211\u4f7f\u7528Object *el = calloc(1, size)\u7684\u5730\u65b9\u3002\u56de\u53bb\u770bobject.h\u7684NEW\u5b8f\uff0c\u4f60\u53ef\u4ee5\u53d1\u73b0\u5b83\u83b7\u5f97\u4e86\u53e6\u4e00\u4e2a\u7ed3\u6784\u4f53\u7684sizeof\uff0c\u6bd4\u5982Room\uff0c\u5e76\u4e14\u5206\u914d\u4e86\u8fd9\u4e48\u591a\u7684\u7a7a\u95f4\u3002\u7136\u800c\uff0c\u7531\u4e8e\u6211\u50cf\u4e00\u4e2aObject\u6307\u9488\u6307\u5411\u4e86\u8fd9\u5757\u5185\u5b58\uff0c\u5e76\u4e14\u6211\u5728Room\u7684\u5f00\u5934\u653e\u7f6e\u4e86Object proto\uff0c\u6240\u4ee5\u5c31\u53ef\u4ee5\u5c06Room\u5f53\u6210Object\u6765\u7528\u3002\n\u8be6\u7ec6\u5206\u89e3\u8bf7\u89c1\u4e0b\u9762\uff1a\n\n\u6211\u8c03\u7528\u4e86NEW(Room, \"Hello.\")\uff0cC\u9884\u5904\u7406\u5668\u4f1a\u5c06\u5176\u5c55\u5f00\u4e3aObject_new(sizeof(Room), RoomProto, \"Hello.\")\u3002\n\u6267\u884c\u8fc7\u7a0b\u4e2d\uff0c\u5728Object_new\u7684\u5185\u90e8\u6211\u5206\u914d\u4e86Room\u5927\u5c0f\u7684\u4e00\u5757\u5185\u5b58\uff0c\u4f46\u662f\u7528Object *el\u6765\u6307\u5411\u5b83\u3002\n\u7531\u4e8eC\u5c06Room.proto\u5b57\u6bb5\u653e\u5728\u5f00\u5934\uff0c\u8fd9\u610f\u5473\u7740el\u6307\u9488\u5b9e\u9645\u4e0a\u6307\u5411\u4e86\u80fd\u8bbf\u95ee\u5230\u5b8c\u6574Object\u7ed3\u6784\u4f53\u7684\uff0c\u8db3\u591f\u5927\u5c0f\u7684\u4e00\u5757\u5185\u5b58\u3002\u5b83\u4e0d\u77e5\u9053\u8fd9\u5757\u5185\u5b58\u53eb\u505aproto\u3002\n\u63a5\u4e0b\u6765\u5b83\u4f7f\u7528Object *el\u6307\u9488\uff0c\u901a\u8fc7*el = proto\u6765\u8bbe\u7f6e\u8fd9\u5757\u5185\u5b58\u7684\u5185\u5bb9\u3002\u8981\u8bb0\u4f4f\u4f60\u53ef\u4ee5\u590d\u5236\u7ed3\u6784\u4f53\uff0c\u800c\u4e14*el\u7684\u610f\u601d\u662f\u201cel\u6240\u6307\u5411\u5bf9\u8c61\u7684\u503c\u201d\uff0c\u6240\u4ee5\u6574\u6761\u8bed\u53e5\u610f\u601d\u662f\u201c\u5c06el\u6240\u6307\u5411\u5bf9\u8c61\u7684\u503c\u8d4b\u4e3aproto\u201d\u3002\n\u7531\u4e8e\u8fd9\u4e2a\u8c1c\u4e4b\u7ed3\u6784\u4f53\u88ab\u586b\u5145\u4e3a\u6765\u81eaproto\u7684\u6b63\u786e\u6570\u636e\uff0c\u8fd9\u4e2a\u51fd\u6570\u63a5\u4e0b\u6765\u53ef\u4ee5\u5728Object\u4e0a\u8c03\u7528init\uff0c\u6216\u8005destroy\u3002\u4f46\u662f\u6700\u795e\u5947\u7684\u4e00\u90e8\u5206\u662f\u65e0\u8bba\u8c01\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\u90fd\u53ef\u4ee5\u5c06\u5b83\u4eec\u6539\u4e3a\u60f3\u8981\u7684\u4e1c\u897f\u3002\n\n\u7ed3\u5408\u4e0a\u9762\u8fd9\u4e9b\u4e1c\u897f\uff0c\u6211\u5c31\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e00\u4e2a\u51fd\u6570\u6765\u521b\u5efa\u65b0\u7684\u7c7b\u578b\uff0c\u5e76\u4e14\u5411\u5b83\u4eec\u63d0\u4f9b\u65b0\u7684\u51fd\u6570\u6765\u4fee\u6539\u5b83\u4eec\u7684\u884c\u4e3a\u3002\u8fd9\u770b\u8d77\u6765\u50cf\u662f\u201c\u9ed1\u9b54\u6cd5\u201d\uff0c\u4f46\u5b83\u662f\u5b8c\u5168\u6709\u6548\u7684C\u4ee3\u7801\u3002\u5b9e\u9645\u4e0a\uff0c\u6709\u5c11\u6570\u6807\u51c6\u7684\u7cfb\u7edf\u51fd\u6570\u4e5f\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u5de5\u4f5c\uff0c\u6211\u4eec\u5c06\u4f1a\u7528\u5230\u4e00\u4e9b\u8fd9\u6837\u7684\u51fd\u6570\u5728\u7f51\u7edc\u7a0b\u5e8f\u4e2d\u8f6c\u6362\u5730\u5740\u3002\n\u7f16\u5199\u5b8c\u51fd\u6570\u5b9a\u4e49\u548c\u6570\u636e\u7ed3\u6784\u4e4b\u540e\uff0c\u6211\u73b0\u5728\u5c31\u53ef\u4ee5\u5b9e\u73b0\u5e26\u6709\u56db\u4e2a\u623f\u95f4\u548c\u4e00\u4e2a\u725b\u5934\u4eba\u7684\u6e38\u620f\u4e86\u3002\n#include &lt;stdio.h&gt;\n#include &lt;errno.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;string.h&gt;\n#include &lt;time.h&gt;\n#include \"ex19.h\"\n\n\nint Monster_attack(void *self, int damage)\n{\n    Monster *monster = self;\n\n    printf(\"You attack %s!\\n\", monster-&gt;_(description));\n\n    monster-&gt;hit_points -= damage;\n\n    if(monster-&gt;hit_points &gt; 0) {\n        printf(\"It is still alive.\\n\");\n        return 0;\n    } else {\n        printf(\"It is dead!\\n\");\n        return 1;\n    }\n}\n\nint Monster_init(void *self)\n{\n    Monster *monster = self;\n    monster-&gt;hit_points = 10;\n    return 1;\n}\n\nObject MonsterProto = {\n    .init = Monster_init,\n    .attack = Monster_attack\n};\n\n\nvoid *Room_move(void *self, Direction direction)\n{\n    Room *room = self;\n    Room *next = NULL;\n\n    if(direction == NORTH &amp;&amp; room-&gt;north) {\n        printf(\"You go north, into:\\n\");\n        next = room-&gt;north;\n    } else if(direction == SOUTH &amp;&amp; room-&gt;south) {\n        printf(\"You go south, into:\\n\");\n        next = room-&gt;south;\n    } else if(direction == EAST &amp;&amp; room-&gt;east) {\n        printf(\"You go east, into:\\n\");\n        next = room-&gt;east;\n    } else if(direction == WEST &amp;&amp; room-&gt;west) {\n        printf(\"You go west, into:\\n\");\n        next = room-&gt;west;\n    } else {\n        printf(\"You can't go that direction.\");\n        next = NULL;\n    }\n\n    if(next) {\n        next-&gt;_(describe)(next);\n    }\n\n    return next;\n}\n\n\nint Room_attack(void *self, int damage)\n{\n    Room *room = self;\n    Monster *monster = room-&gt;bad_guy;\n\n    if(monster) {\n        monster-&gt;_(attack)(monster, damage);\n        return 1;\n    } else {\n        printf(\"You flail in the air at nothing. Idiot.\\n\");\n        return 0;\n    }\n}\n\n\nObject RoomProto = {\n    .move = Room_move,\n    .attack = Room_attack\n};\n\n\nvoid *Map_move(void *self, Direction direction)\n{\n    Map *map = self;\n    Room *location = map-&gt;location;\n    Room *next = NULL;\n\n    next = location-&gt;_(move)(location, direction);\n\n    if(next) {\n        map-&gt;location = next;\n    }\n\n    return next;\n}\n\nint Map_attack(void *self, int damage)\n{\n    Map* map = self;\n    Room *location = map-&gt;location;\n\n    return location-&gt;_(attack)(location, damage);\n}\n\n\nint Map_init(void *self)\n{\n    Map *map = self;\n\n    \/\/ make some rooms for a small map\n    Room *hall = NEW(Room, \"The great Hall\");\n    Room *throne = NEW(Room, \"The throne room\");\n    Room *arena = NEW(Room, \"The arena, with the minotaur\");\n    Room *kitchen = NEW(Room, \"Kitchen, you have the knife now\");\n\n    \/\/ put the bad guy in the arena\n    arena-&gt;bad_guy = NEW(Monster, \"The evil minotaur\");\n\n    \/\/ setup the map rooms\n    hall-&gt;north = throne;\n\n    throne-&gt;west = arena;\n    throne-&gt;east = kitchen;\n    throne-&gt;south = hall;\n\n    arena-&gt;east = throne;\n    kitchen-&gt;west = throne;\n\n    \/\/ start the map and the character off in the hall\n    map-&gt;start = hall;\n    map-&gt;location = hall;\n\n    return 1;\n}\n\nObject MapProto = {\n    .init = Map_init,\n    .move = Map_move,\n    .attack = Map_attack\n};\n\nint process_input(Map *game)\n{\n    printf(\"\\n&gt; \");\n\n    char ch = getchar();\n    getchar(); \/\/ eat ENTER\n\n    int damage = rand() % 4;\n\n    switch(ch) {\n        case -1:\n            printf(\"Giving up? You suck.\\n\");\n            return 0;\n            break;\n\n        case 'n':\n            game-&gt;_(move)(game, NORTH);\n            break;\n\n        case 's':\n            game-&gt;_(move)(game, SOUTH);\n            break;\n\n        case 'e':\n            game-&gt;_(move)(game, EAST);\n            break;\n\n        case 'w':\n            game-&gt;_(move)(game, WEST);\n            break;\n\n        case 'a':\n\n            game-&gt;_(attack)(game, damage);\n            break;\n        case 'l':\n            printf(\"You can go:\\n\");\n            if(game-&gt;location-&gt;north) printf(\"NORTH\\n\");\n            if(game-&gt;location-&gt;south) printf(\"SOUTH\\n\");\n            if(game-&gt;location-&gt;east) printf(\"EAST\\n\");\n            if(game-&gt;location-&gt;west) printf(\"WEST\\n\");\n            break;\n\n        default:\n            printf(\"What?: %d\\n\", ch);\n    }\n\n    return 1;\n}\n\nint main(int argc, char *argv[])\n{\n    \/\/ simple way to setup the randomness\n    srand(time(NULL));\n\n    \/\/ make our map to work with\n    Map *game = NEW(Map, \"The Hall of the Minotaur.\");\n\n    printf(\"You enter the \");\n    game-&gt;location-&gt;_(describe)(game-&gt;location);\n\n    while(process_input(game)) {\n    }\n\n    return 0;\n}\n\u8bf4\u5b9e\u8bdd\u8fd9\u91cc\u9762\u5e76\u6ca1\u6709\u5f88\u591a\u4f60\u6ca1\u6709\u89c1\u8fc7\u7684\u4e1c\u897f\uff0c\u5e76\u4e14\u4f60\u53ea\u9700\u8981\u7406\u89e3\u6211\u4f7f\u7528\u5934\u6587\u4ef6\u4e2d\u5b8f\u7684\u65b9\u6cd5\u3002\u4e0b\u9762\u662f\u9700\u8981\u5b66\u4e60\u548c\u7406\u89e3\u7684\u4e00\u4e9b\u91cd\u8981\u7684\u6838\u5fc3\u77e5\u8bc6\uff1a\n\n\u5b9e\u73b0\u4e00\u4e2a\u539f\u578b\u6d89\u53ca\u5230\u521b\u5efa\u5b83\u7684\u51fd\u6570\u7248\u672c\uff0c\u4ee5\u53ca\u968f\u540e\u521b\u5efa\u4e00\u4e2a\u4ee5\u201cProto\u201d\u7ed3\u5c3e\u7684\u5355\u4e00\u7ed3\u6784\u4f53\u3002\u8bf7\u53c2\u7167MonsterProto\uff0cRoomProto\u548cMapProto\u3002\n\u7531\u4e8eObject_new\u7684\u5b9e\u73b0\u65b9\u5f0f\uff0c\u5982\u679c\u4f60\u6ca1\u6709\u5728\u4f60\u7684\u539f\u578b\u4e2d\u8bbe\u7f6e\u4e00\u4e2a\u51fd\u6570\uff0c\u5b83\u4f1a\u83b7\u5f97\u5728object.c\u4e2d\u521b\u5efa\u7684\u9ed8\u8ba4\u5b9e\u73b0\u3002\n\u5728Map_init\u4e2d\u6211\u521b\u5efa\u4e86\u4e00\u4e2a\u5fae\u578b\u4e16\u754c\uff0c\u7136\u800c\u66f4\u91cd\u8981\u7684\u662f\u6211\u4f7f\u7528\u4e86object.h\u4e2d\u7684NEW\u5b8f\u6765\u521b\u5efa\u5168\u90e8\u5bf9\u8c61\u3002\u8981\u628a\u8fd9\u4e00\u6982\u5ff5\u8bb0\u5728\u8111\u5b50\u91cc\uff0c\u53ef\u4ee5\u8bd5\u7740\u628a\u4f7f\u7528NEW\u7684\u5730\u65b9\u66ff\u6362\u6210Object_new\u7684\u76f4\u63a5\u8c03\u7528\uff0c\u6765\u89c2\u5bdf\u5b83\u5982\u4f55\u88ab\u66ff\u6362\u3002\n\u4f7f\u7528\u8fd9\u4e9b\u5bf9\u8c61\u6d89\u53ca\u5230\u5728\u5b83\u4eec\u4e0a\u9762\u8c03\u7528\u51fd\u6570\uff0c_(N)\u4e3a\u6211\u505a\u4e86\u8fd9\u4e9b\u4e8b\u60c5\u3002\u5982\u679c\u4f60\u89c2\u5bdf\u4ee3\u7801monster-&gt;_(attack)(monster, damage)\uff0c\u4f60\u4f1a\u770b\u5230\u6211\u4f7f\u7528\u4e86\u5b8f\u5c06\u5176\u66ff\u6362\u6210monster-&gt;proto.attack(monster, damage)\u3002\u901a\u8fc7\u91cd\u65b0\u5c06\u8fd9\u4e9b\u8c03\u7528\u5199\u6210\u539f\u59cb\u5f62\u5f0f\u6765\u518d\u6b21\u5b66\u4e60\u8fd9\u4e2a\u8f6c\u6362\u3002\u53e6\u5916\uff0c\u5982\u679c\u4f60\u88ab\u5361\u4f4f\u4e86\uff0c\u624b\u52a8\u8fd0\u884ccpp\u6765\u67e5\u770b\u7a76\u7adf\u53d1\u751f\u4e86\u4ec0\u4e48\u3002\n\u6211\u4f7f\u7528\u4e86\u4e24\u4e2a\u65b0\u7684\u51fd\u6570srand\u548crand\uff0c\u5b83\u4eec\u53ef\u4ee5\u8bbe\u7f6e\u4e00\u4e2a\u7b80\u5355\u7684\u968f\u673a\u6570\u751f\u6210\u5668\uff0c\u5bf9\u4e8e\u6e38\u620f\u5df2\u7ecf\u591f\u7528\u4e86\u3002\u6211\u4e5f\u4f7f\u7528\u4e86time\u6765\u521d\u59cb\u5316\u968f\u673a\u6570\u751f\u6210\u5668\u3002\u8bd5\u7740\u7814\u7a76\u5b83\u4eec\u3002\n\u6211\u4f7f\u7528\u4e86\u4e00\u4e2a\u65b0\u7684\u51fd\u6570getchar\u6765\u4ece\u6807\u51c6\u8f93\u5165\u4e2d\u8bfb\u53d6\u5355\u4e2a\u5b57\u7b26\u3002\u8bd5\u7740\u7814\u7a76\u5b83\u3002\n\n\u4f60\u4f1a\u770b\u5230\u4ec0\u4e48\n\u4e0b\u9762\u662f\u6211\u81ea\u5df1\u7684\u6e38\u620f\u7684\u8f93\u51fa\uff1a\n$ make ex19\ncc -Wall -g   -c -o object.o object.c\ncc -Wall -g    ex19.c object.o   -o ex19\n$ .\/ex19\nYou enter the The great Hall.\n\n&gt; l\nYou can go:\nNORTH\n\n&gt; n\nYou go north, into:\nThe throne room.\n\n&gt; l\nYou can go:\nSOUTH\nEAST\nWEST\n\n&gt; e\nYou go east, into:\nKitchen, you have the knife now.\n\n&gt; w\nYou go west, into:\nThe throne room.\n\n&gt; s\nYou go south, into:\nThe great Hall.\n\n&gt; n\nYou go north, into:\nThe throne room.\n\n&gt; w\nYou go west, into:\nThe arena, with the minotaur.\n\n&gt; a\nYou attack The evil minotaur!\nIt is still alive.\n\n&gt; a\nYou attack The evil minotaur!\nIt is dead!\n\n&gt; ^D\nGiving up? You suck.\n$\n\u5ba1\u8ba1\u8be5\u6e38\u620f\n\u6211\u628a\u6240\u6709assert\u68c0\u67e5\u7559\u7ed9\u4f60\u4f5c\u4e3a\u7ec3\u4e60\uff0c\u6211\u901a\u5e38\u628a\u5b83\u4eec\u4f5c\u4e3a\u8f6f\u4ef6\u7684\u4e00\u90e8\u5206\u3002\u4f60\u5df2\u7ecf\u770b\u5230\u4e86\u6211\u5982\u4f55\u4f7f\u7528assert\u6765\u4fdd\u8bc1\u7a0b\u5e8f\u6b63\u786e\u8fd0\u884c\u3002\u7136\u800c\u73b0\u5728\u6211\u5e0c\u671b\u4f60\u8fd4\u56de\u53bb\u5e76\u5b8c\u6210\u4e0b\u5217\u4e8b\u60c5\uff1a\n\n\u67e5\u770b\u4f60\u5b9a\u4e49\u7684\u6bcf\u4e2a\u51fd\u6570\uff0c\u4e00\u6b21\u4e00\u4e2a\u6587\u4ef6\u3002\n\u5728\u6bcf\u4e2a\u51fd\u6570\u7684\u6700\u4e0a\u9762\uff0c\u6dfb\u52a0assert\u6765\u4fdd\u8bc1\u53c2\u6570\u6b63\u786e\u3002\u4f8b\u5982\u5728Object_new\u4e2d\u8981\u6dfb\u52a0assert(description != NULL)\u3002\n\u6d4f\u89c8\u51fd\u6570\u7684\u6bcf\u4e00\u884c\uff0c\u627e\u5230\u6240\u8c03\u7528\u7684\u4efb\u4f55\u51fd\u6570\u3002\u9605\u8bfb\u5b83\u4eec\u7684\u6587\u6863\uff08\u6216\u624b\u518c\u9875\uff09\uff0c\u786e\u8ba4\u5b83\u4eec\u5728\u9519\u8bef\u4e0b\u8fd4\u56de\u4ec0\u4e48\u3002\u6dfb\u52a0\u53e6\u4e00\u4e2a\u65ad\u8a00\u6765\u68c0\u67e5\u9519\u8bef\u662f\u5426\u53d1\u751f\u3002\u4f8b\u5982\uff0cObject_new\u5728\u8c03\u7528calloc\u4e4b\u540e\u5e94\u8be5\u8fdb\u884cassert(el != NULL)\u7684\u68c0\u67e5\u3002\n\u5982\u679c\u51fd\u6570\u5e94\u8be5\u8fd4\u56de\u4e00\u4e2a\u503c\uff0c\u4e5f\u786e\u4fdd\u5b83\u8fd4\u56de\u4e86\u4e00\u4e2a\u9519\u8bef\u503c\uff08\u6bd4\u5982NULL\uff09\uff0c\u6216\u8005\u6dfb\u52a0\u4e00\u4e2a\u65ad\u8a00\u6765\u786e\u4fdd\u8fd4\u56de\u503c\u662f\u6709\u6548\u7684\u3002\u4f8b\u5982\uff0cObject_new\u4e2d\uff0c\u4f60\u9700\u8981\u5728\u6700\u540e\u7684\u8fd4\u56de\u4e4b\u524d\u6dfb\u52a0assert(el != NULL)\uff0c\u7531\u4e8e\u5b83\u4e0d\u5e94\u8be5\u4e3aNULL\u3002\n\u5bf9\u4e8e\u6bcf\u4e2a\u4f60\u7f16\u5199\u7684if\u8bed\u53e5\uff0c\u786e\u4fdd\u90fd\u6709\u5bf9\u5e94\u7684else\u8bed\u53e5\uff0c\u9664\u975e\u5b83\u7528\u4e8e\u9519\u8bef\u68c0\u67e5\u5e76\u9000\u51fa\u3002\n\u5bf9\u4e8e\u6bcf\u4e2a\u4f60\u7f16\u5199\u7684switch\u8bed\u53e5\uff0c\u786e\u4fdd\u90fd\u6709\u4e00\u4e2adefault\u5206\u652f\uff0c\u6765\u5904\u7406\u975e\u9884\u671f\u7684\u4efb\u4f55\u60c5\u51b5\u3002\n\n\u82b1\u8d39\u4e00\u4e9b\u65f6\u95f4\u6d4f\u89c8\u51fd\u6570\u7684\u6bcf\u4e00\u884c\uff0c\u5e76\u4e14\u627e\u5230\u4f60\u72af\u4e0b\u7684\u4efb\u4f55\u9519\u8bef\u3002\u8bb0\u4f4f\u8fd9\u4e2a\u7ec3\u4e60\u7684\u8981\u70b9\u662f\u4ece\u201c\u7801\u519c\u201d\u8f6c\u53d8\u4e3a\u201c\u9ed1\u5ba2\u201d\u3002\u8bd5\u7740\u627e\u5230\u4f7f\u5b83\u5d29\u6e83\u7684\u529e\u6cd5\uff0c\u7136\u540e\u5c3d\u53ef\u80fd\u7f16\u5199\u4ee3\u7801\u6765\u9632\u6b62\u5d29\u6e83\u6216\u8005\u8fc7\u65e9\u9000\u51fa\u3002\n\u9644\u52a0\u9898\n\n\u4fee\u6539Makefile\u6587\u4ef6\uff0c\u4f7f\u4e4b\u5728\u6267\u884cmake clean\u65f6\u80fd\u591f\u540c\u65f6\u6e05\u7406object.o\u3002\n\u7f16\u5199\u4e00\u4e2a\u6d4b\u8bd5\u811a\u672c\uff0c\u80fd\u591f\u4ee5\u591a\u79cd\u65b9\u5f0f\u6765\u8c03\u7528\u8be5\u6e38\u620f\uff0c\u5e76\u4e14\u6269\u5c55Makefile\u4f7f\u4e4b\u80fd\u591f\u901a\u8fc7\u8fd0\u884cmake test\u6765\u6d4b\u8bd5\u8be5\u6e38\u620f\u3002\n\u5728\u6e38\u620f\u4e2d\u6dfb\u52a0\u66f4\u591a\u623f\u95f4\u548c\u602a\u7269\u3002\n\u628a\u6e38\u620f\u7684\u903b\u8f91\u653e\u5728\u5176\u5b83\u6587\u4ef6\u4e2d\uff0c\u5e76\u628a\u5b83\u7f16\u8bd1\u4e3a.o\u3002\u7136\u540e\uff0c\u4f7f\u7528\u5b83\u6765\u7f16\u5199\u53e6\u4e00\u4e2a\u5c0f\u6e38\u620f\u3002\u5982\u679c\u4f60\u6b63\u786e\u7f16\u5199\u7684\u8bdd\uff0c\u4f60\u4f1a\u5728\u65b0\u6e38\u620f\u4e2d\u521b\u5efa\u65b0\u7684Map\u548cmain\u51fd\u6570\u3002\n","categories":"\u7ec3\u4e602","tags":["OOP","\u7f16\u7a0b","\u5bf9\u8c61"]},{"title":"Zed\u7684\u5f3a\u5927\u7684\u8c03\u8bd5\u5b8f","url":"https:\/\/naka507.github.io\/posts\/8BBFC8E0CA1C348B.html","content":"Zed\u7684\u5f3a\u5927\u7684\u8c03\u8bd5\u5b8f\n\u5728C\u4e2d\u6709\u4e00\u4e2a\u6c38\u6052\u7684\u95ee\u9898\uff0c\u5b83\u4f34\u968f\u4e86\u4f60\u5f88\u957f\u65f6\u95f4\uff0c\u7136\u800c\u5728\u8fd9\u4e2a\u7ec3\u4e60\u6211\u6253\u7b97\u4f7f\u7528\u4e00\u7cfb\u5217\u6211\u5f00\u53d1\u7684\u5b8f\u6765\u89e3\u51b3\u5b83\u3002\u5230\u73b0\u5728\u4e3a\u6b62\u4f60\u90fd\u4e0d\u77e5\u9053\u5b83\u4eec\u7684\u5f3a\u5927\u4e4b\u5904\uff0c\u6240\u4ee5\u4f60\u5fc5\u987b\u4f7f\u7528\u5b83\u4eec\uff0c\u603b\u6709\u4e00\u5929\u4f60\u4f1a\u6765\u627e\u6211\u8bf4\uff0c\u201cZed\uff0c\u8fd9\u4e9b\u8c03\u8bd5\u5b8f\u771f\u662f\u592a\u4f1f\u5927\u4e86\uff0c\u6211\u5e94\u8be5\u628a\u6211\u7684\u7b2c\u4e00\u4e2a\u5b69\u5b50\u7684\u51fa\u751f\u5f52\u529f\u4e8e\u4f60\uff0c\u56e0\u4e3a\u4f60\u6cbb\u597d\u4e86\u6211\u5341\u5e74\u7684\u5fc3\u810f\u75c5\uff0c\u5e76\u4e14\u6253\u6d88\u4e86\u6211\u6570\u6b21\u60f3\u8981\u81ea\u6740\u7684\u5ff5\u5934\u3002\u771f\u662f\u8981\u8c22\u8c22\u4f60\u8fd9\u6837\u4e00\u4e2a\u597d\u4eba\uff0c\u8fd9\u91cc\u6709\u4e00\u767e\u4e07\u7f8e\u5143\uff0c\u548cLeo Fender\u8bbe\u8ba1\u7684Snakehead Telecaster\u7535\u5409\u4ed6\u7684\u539f\u578b\u3002\u201d\n\u662f\u7684\uff0c\u5b83\u4eec\u7684\u786e\u5f88\u5f3a\u5927\u3002\nC\u7684\u9519\u8bef\u5904\u7406\u95ee\u9898\n\u51e0\u4e4e\u6bcf\u4e2a\u7f16\u7a0b\u8bed\u8a00\u4e2d\uff0c\u9519\u8bef\u5904\u7406\u90fd\u975e\u5e38\u96be\u3002\u6709\u4e9b\u8bed\u8a00\u5c3d\u53ef\u80fd\u8bd5\u56fe\u907f\u514d\u9519\u8bef\u8fd9\u4e2a\u6982\u5ff5\uff0c\u800c\u53e6\u4e00\u4e9b\u8bed\u8a00\u53d1\u660e\u4e86\u590d\u6742\u4e86\u63a7\u5236\u7ed3\u6784\uff0c\u6bd4\u5982\u5f02\u5e38\u6765\u4f20\u9012\u9519\u8bef\u72b6\u6001\u3002\u5f53\u7136\u7684\u9519\u8bef\u5927\u591a\u662f\u56e0\u4e3a\u7a0b\u5e8f\u5458\u5047\u5b9a\u9519\u8bef\u4e0d\u4f1a\u53d1\u751f\uff0c\u5e76\u4e14\u8fd9\u4e00\u4e50\u89c2\u7684\u601d\u60f3\u5f71\u54cd\u4e86\u4ed6\u4eec\u6240\u7528\u548c\u6240\u521b\u9020\u7684\u8bed\u8a00\u3002\nC\u901a\u8fc7\u8fd4\u56de\u9519\u8bef\u7801\u6216\u8bbe\u7f6e\u5168\u5c40\u7684errno\u503c\u6765\u89e3\u51b3\u8fd9\u4e9b\u95ee\u9898\uff0c\u5e76\u4e14\u4f60\u9700\u8981\u68c0\u67e5\u8fd9\u4e9b\u503c\u3002\u8fd9\u79cd\u673a\u5236\u53ef\u4ee5\u68c0\u67e5\u73b0\u5b58\u7684\u590d\u6742\u4ee3\u7801\u4e2d\uff0c\u4f60\u6267\u884c\u7684\u4e1c\u897f\u662f\u5426\u53d1\u751f\u9519\u8bef\u3002\u5f53\u4f60\u7f16\u5199\u66f4\u591a\u7684C\u4ee3\u7801\u65f6\uff0c\u4f60\u5e94\u8be5\u6309\u7167\u4e0b\u5217\u6a21\u5f0f\uff1a\n\n\u8c03\u7528\u51fd\u6570\u3002\n\u5982\u679c\u8fd4\u56de\u503c\u51fa\u73b0\u9519\u8bef\uff08\u6bcf\u6b21\u90fd\u5fc5\u987b\u68c0\u67e5\uff09\u3002\n\u6e05\u7406\u521b\u5efa\u7684\u6240\u6709\u8d44\u6e90\u3002\n\u6253\u5370\u51fa\u6240\u6709\u53ef\u80fd\u6709\u5e2e\u52a9\u7684\u9519\u8bef\u4fe1\u606f\u3002\n\n\u8fd9\u610f\u5473\u7740\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u51fd\u6570\u8c03\u7528\uff08\u662f\u7684\uff0c\u6bcf\u4e2a\u51fd\u6570\uff09\u4f60\u90fd\u53ef\u80fd\u9700\u8981\u591a\u7f16\u51993~4\u884c\u4ee3\u7801\u6765\u786e\u4fdd\u5b83\u6b63\u5e38\u529f\u80fd\u3002\u8fd9\u4e9b\u8fd8\u4e0d\u5305\u62ec\u6e05\u7406\u4f60\u5230\u76ee\u524d\u521b\u5efa\u7684\u6240\u6709\u5783\u573e\u3002\u5982\u679c\u4f60\u670910\u4e2a\u4e0d\u540c\u7684\u7ed3\u6784\u4f53\uff0c3\u4e2a\u65b9\u5f0f\u3002\u548c\u4e00\u4e2a\u6570\u636e\u5e93\u94fe\u63a5\uff0c\u5f53\u4f60\u53d1\u73b0\u9519\u8bef\u65f6\u4f60\u5e94\u8be5\u5199\u989d\u5916\u768414\u884c\u3002\n\u4e4b\u524d\u8fd9\u5e76\u4e0d\u662f\u4e2a\u95ee\u9898\uff0c\u56e0\u4e3a\u53d1\u751f\u9519\u8bef\u65f6\uff0cC\u7a0b\u5e8f\u4f1a\u50cf\u4f60\u4ee5\u524d\u505a\u7684\u90a3\u6837\u76f4\u63a5\u9000\u51fa\u3002\u4f60\u4e0d\u9700\u8981\u6e05\u7406\u4efb\u4f55\u4e1c\u897f\uff0c\u56e0\u4e3aOS\u4f1a\u4e3a\u4f60\u81ea\u52a8\u53bb\u505a\u3002\u7136\u800c\u73b0\u5728\u5f88\u591aC\u7a0b\u5e8f\u9700\u8981\u6301\u7eed\u8fd0\u884c\u6570\u5468\u3001\u6570\u6708\u6216\u8005\u6570\u5e74\uff0c\u5e76\u4e14\u9700\u8981\u4f18\u96c5\u5730\u5904\u7406\u6765\u81ea\u4e8e\u591a\u79cd\u8d44\u6e90\u7684\u9519\u8bef\u3002\u4f60\u5e76\u4e0d\u80fd\u4ec5\u4ec5\u8ba9\u4f60\u7684\u670d\u52a1\u5668\u5728\u9996\u6b21\u8fd0\u884c\u5c31\u9000\u51fa\uff0c\u4f60\u4e5f\u4e0d\u80fd\u8ba9\u4f60\u5199\u7684\u5e93\u4f7f\u4f7f\u7528\u5b83\u7684\u7a0b\u5e8f\u9000\u51fa\u3002\u8fd9\u975e\u5e38\u7cdf\u7cd5\u3002\n\u5176\u5b83\u8bed\u8a00\u901a\u8fc7\u5f02\u5e38\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u4f46\u662f\u8fd9\u4e9b\u95ee\u9898\u4e5f\u4f1a\u5728C\u4e2d\u51fa\u73b0\uff08\u5176\u5b83\u8bed\u8a00\u4e5f\u4e00\u6837\uff09\u3002\u5728C\u4e2d\u4f60\u53ea\u80fd\u591f\u8fd4\u56de\u4e00\u4e2a\u503c\uff0c\u4f46\u662f\u5f02\u5e38\u662f\u57fa\u4e8e\u6808\u7684\u8fd4\u56de\u7cfb\u7edf\uff0c\u53ef\u4ee5\u8fd4\u56de\u4efb\u610f\u503c\u3002C\u8bed\u8a00\u4e2d\uff0c\u5c1d\u8bd5\u5728\u6808\u4e0a\u6a21\u62df\u5f02\u5e38\u975e\u5e38\u56f0\u96be\uff0c\u5e76\u4e14\u5176\u5b83\u5e93\u4e5f\u4e0d\u4f1a\u517c\u5bb9\u3002\n\u8c03\u8bd5\u5b8f\n\u6211\u4f7f\u7528\u7684\u89e3\u51b3\u65b9\u6848\u662f\uff0c\u4f7f\u7528\u4e00\u7cfb\u5217\u201c\u8c03\u8bd5\u5b8f\u201d\uff0c\u5b83\u4eec\u5728C\u4e2d\u5b9e\u73b0\u4e86\u57fa\u672c\u7684\u8c03\u8bd5\u548c\u9519\u8bef\u5904\u7406\u7cfb\u7edf\u3002\u8fd9\u4e2a\u7cfb\u7edf\u975e\u5e38\u6613\u4e8e\u7406\u89e3\uff0c\u517c\u5bb9\u4e8e\u6bcf\u4e2a\u5e93\uff0c\u5e76\u4e14\u4f7fC\u4ee3\u7801\u66f4\u52a0\u5065\u58ee\u548c\u7b80\u6d01\u3002\n\u5b83\u901a\u8fc7\u5b9e\u73b0\u4e00\u7cfb\u5217\u8f6c\u6362\u6765\u5904\u7406\u9519\u8bef\uff0c\u4efb\u4f55\u65f6\u5019\u53d1\u751f\u4e86\u9519\u8bef\uff0c\u4f60\u7684\u51fd\u6570\u90fd\u4f1a\u8df3\u5230\u6267\u884c\u6e05\u7406\u548c\u8fd4\u56de\u9519\u8bef\u4ee3\u7801\u7684\u201cerror:\u201d\u533a\u57df\u3002\u4f60\u53ef\u4ee5\u4f7f\u7528check\u5b8f\u6765\u68c0\u67e5\u9519\u8bef\u4ee3\u7801\uff0c\u6253\u5370\u9519\u8bef\u4fe1\u606f\uff0c\u7136\u540e\u8df3\u5230\u6e05\u7406\u533a\u57df\u3002\u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528\u4e00\u7cfb\u5217\u65e5\u5fd7\u51fd\u6570\u6765\u6253\u5370\u51fa\u6709\u7528\u7684\u8c03\u8bd5\u4fe1\u606f\u3002\n\u6211\u73b0\u5728\u4f1a\u5411\u4f60\u5c55\u793a\u4f60\u76ee\u524d\u6240\u89c1\u8fc7\u7684\uff0c\u6700\u5f3a\u5927\u4e14\u5353\u8d8a\u7684\u4ee3\u7801\u7684\u5168\u90e8\u5185\u5bb9\u3002\n#ifndef __dbg_h__\n#define __dbg_h__\n\n#include &lt;stdio.h&gt;\n#include &lt;errno.h&gt;\n#include &lt;string.h&gt;\n\n#ifdef NDEBUG\n#define debug(M, ...)\n#else\n#define debug(M, ...) fprintf(stderr, \"DEBUG %s:%d: \" M \"\\n\", __FILE__, __LINE__, ##__VA_ARGS__)\n#endif\n\n#define clean_errno() (errno == 0 ? \"None\" : strerror(errno))\n\n#define log_err(M, ...) fprintf(stderr, \"[ERROR] (%s:%d: errno: %s) \" M \"\\n\", __FILE__, __LINE__, clean_errno(), ##__VA_ARGS__)\n\n#define log_warn(M, ...) fprintf(stderr, \"[WARN] (%s:%d: errno: %s) \" M \"\\n\", __FILE__, __LINE__, clean_errno(), ##__VA_ARGS__)\n\n#define log_info(M, ...) fprintf(stderr, \"[INFO] (%s:%d) \" M \"\\n\", __FILE__, __LINE__, ##__VA_ARGS__)\n\n#define check(A, M, ...) if(!(A)) { log_err(M, ##__VA_ARGS__); errno=0; goto error; }\n\n#define sentinel(M, ...)  { log_err(M, ##__VA_ARGS__); errno=0; goto error; }\n\n#define check_mem(A) check((A), \"Out of memory.\")\n\n#define check_debug(A, M, ...) if(!(A)) { debug(M, ##__VA_ARGS__); errno=0; goto error; }\n\n#endif\n\u662f\u7684\uff0c\u8fd9\u5c31\u662f\u5168\u90e8\u4ee3\u7801\u4e86\uff0c\u4e0b\u9762\u662f\u5b83\u6bcf\u4e00\u884c\u6240\u505a\u7684\u4e8b\u60c5\u3002\ndbg.h:1-2\n\u9632\u6b62\u610f\u5916\u5305\u542b\u591a\u6b21\u7684\u4fdd\u62a4\u63aa\u65bd\uff0c\u4f60\u5df2\u7ecf\u5728\u4e0a\u4e00\u4e2a\u7ec3\u4e60\u4e2d\u89c1\u8fc7\u4e86\u3002\ndbg.h:4-6\n\u5305\u542b\u8fd9\u4e9b\u5b8f\u6240\u9700\u7684\u51fd\u6570\u3002\ndbg.h:8\n#ifdef\u7684\u8d77\u59cb\uff0c\u5b83\u53ef\u4ee5\u8ba9\u4f60\u91cd\u65b0\u7f16\u8bd1\u7a0b\u5e8f\u6765\u79fb\u9664\u6240\u6709\u8c03\u8bd5\u65e5\u5fd7\u4fe1\u606f\u3002\ndbg.h:9\n\u5982\u679c\u4f60\u5b9a\u4e49\u4e86NDEBUG\u4e4b\u540e\u7f16\u8bd1\uff0c\u6ca1\u6709\u4efb\u4f55\u8c03\u8bd5\u4fe1\u606f\u4f1a\u8f93\u51fa\u3002\u4f60\u53ef\u4ee5\u770b\u5230#define debug()\u88ab\u66ff\u6362\u4e3a\u7a7a\uff08\u53f3\u8fb9\u6ca1\u6709\u4efb\u4f55\u4e1c\u897f\uff09\u3002\ndbg.h:10\n\u4e0a\u9762\u7684#ifdef\u6240\u5339\u914d\u7684#else\u3002\ndbg.h:11\n\u7528\u4e8e\u66ff\u4ee3\u7684#define debug\uff0c\u5b83\u5c06\u4efb\u4f55\u4f7f\u7528debug(\"format\", arg1, arg2)\u7684\u5730\u65b9\u66ff\u6362\u6210fprintf\u5bf9stderr\u7684\u8c03\u7528\u3002\u8bb8\u591a\u7a0b\u5e8f\u5458\u5e76\u4e0d\u77e5\u9053\uff0c\u4f46\u662f\u4f60\u7684\u786e\u53ef\u4ee5\u521b\u5efa\u4e0eprintf\u7c7b\u4f3c\u7684\u53ef\u53d8\u53c2\u6570\u5b8f\u3002\u8bb8\u591aC\u7f16\u8bd1\u5668\uff08\u5b9e\u9645\u4e0a\u662fC\u9884\u5904\u7406\u5668\uff09\u5e76\u4e0d\u652f\u6301\u5b83\uff0c\u4f46\u662fgcc\u53ef\u4ee5\u505a\u5230\u3002\u8fd9\u91cc\u7684\u9b54\u6cd5\u662f\u4f7f\u7528##__VA_ARGS__\uff0c\u610f\u601d\u662f\u5c06\u5269\u4f59\u7684\u6240\u6709\u989d\u5916\u53c2\u6570\u653e\u5230\u8fd9\u91cc\u3002\u540c\u65f6\u4e5f\u8981\u6ce8\u610f\uff0c\u4f7f\u7528\u4e86__FILE__\u548c__LINE__\u6765\u83b7\u53d6\u5f53\u524dfine:line\u7528\u4e8e\u8c03\u8bd5\u4fe1\u606f\u3002\u8fd9\u4f1a\u975e\u5e38\u6709\u5e2e\u52a9\u3002\ndbg.h:12\n#ifdef\u7684\u7ed3\u5c3e\u3002\ndbg.h:14\nclean_errno\u5b8f\u7528\u4e8e\u83b7\u53d6errno\u7684\u5b89\u5168\u53ef\u8bfb\u7684\u7248\u672c\u3002\u4e2d\u95f4\u5947\u602a\u7684\u8bed\u6cd5\u662f\u201c\u4e09\u5143\u8fd0\u7b97\u7b26\u201d\uff0c\u4f60\u4f1a\u5728\u540e\u9762\u5b66\u5230\u5b83\u3002\ndbg.h:16-20\nlog_err\uff0clog_warn\u548clog_info\u5b8f\u7528\u4e8e\u4e3a\u6700\u7ec8\u7528\u6237\u8bb0\u5f55\u4fe1\u606f\u3002\u5b83\u4eec\u7c7b\u4f3c\u4e8edebug\u4f46\u4e0d\u80fd\u88ab\u7f16\u8bd1\u3002\ndbg.h:22\n\u5230\u76ee\u524d\u4e3a\u6b62\u6700\u68d2\u7684\u5b8f\u3002check\u4f1a\u4fdd\u8bc1\u6761\u4ef6A\u4e3a\u771f\uff0c\u5426\u5219\u4f1a\u8bb0\u5f55\u9519\u8befM\uff08\u5e26\u7740log_err\u7684\u53ef\u53d8\u53c2\u6570\uff09\uff0c\u4e4b\u540e\u8df3\u5230\u51fd\u6570\u7684error:\u533a\u57df\u6765\u6267\u884c\u6e05\u7406\u3002\ndbg.h:24\n\u7b2c\u4e8c\u4e2a\u6700\u68d2\u7684\u5b8f\uff0csentinel\u53ef\u4ee5\u653e\u5728\u51fd\u6570\u7684\u4efb\u4f55\u4e0d\u5e94\u8be5\u6267\u884c\u7684\u5730\u65b9\uff0c\u5b83\u4f1a\u6253\u5370\u9519\u8bef\u4fe1\u606f\u5e76\u4e14\u8df3\u5230error:\u6807\u7b7e\u3002\u4f60\u53ef\u4ee5\u5c06\u5b83\u653e\u5230if-statements\u6216\u8005switch-statements\u7684\u4e0d\u8be5\u88ab\u6267\u884c\u7684\u5206\u652f\u4e2d\uff0c\u6bd4\u5982default\u3002\ndbg.h:26\n\u7b80\u5199\u7684check_mem\u5b8f\uff0c\u7528\u4e8e\u786e\u4fdd\u6307\u9488\u6709\u6548\uff0c\u5426\u5219\u4f1a\u62a5\u544a\u201c\u5185\u5b58\u8017\u5c3d\u201d\u7684\u9519\u8bef\u3002\ndbg.h:28\n\u7528\u4e8e\u66ff\u4ee3\u7684check_debug\u5b8f\uff0c\u5b83\u4ecd\u7136\u4f1a\u68c0\u67e5\u5e76\u5904\u7406\u9519\u8bef\uff0c\u5c24\u5176\u662f\u4f60\u5e76\u4e0d\u60f3\u62a5\u544a\u7684\u666e\u904d\u9519\u8bef\u3002\u5b83\u91cc\u9762\u4f7f\u7528\u4e86debug\u4ee3\u66fflog_err\u6765\u62a5\u544a\u9519\u8bef\uff0c\u6240\u4ee5\u5f53\u4f60\u5b9a\u4e49\u4e86NDEBUG\uff0c\u5b83\u4ecd\u7136\u4f1a\u68c0\u67e5\u5e76\u4e14\u53d1\u751f\u9519\u8bef\u65f6\u8df3\u51fa\uff0c\u4f46\u662f\u4e0d\u4f1a\u6253\u5370\u6d88\u606f\u4e86\u3002\n\u4f7f\u7528dbg.h\n\u4e0b\u9762\u662f\u4e00\u4e2a\u4f8b\u5b50\uff0c\u5728\u4e00\u4e2a\u5c0f\u7684\u7a0b\u5e8f\u4e2d\u4f7f\u7528\u4e86dbg.h\u7684\u6240\u6709\u51fd\u6570\u3002\u8fd9\u5b9e\u9645\u4e0a\u5e76\u6ca1\u6709\u505a\u4ec0\u4e48\u4e8b\u60c5\uff0c\u53ea\u662f\u5411\u4f60\u6f14\u793a\u4e86\u5982\u4f55\u4f7f\u7528\u6bcf\u4e2a\u5b8f\u3002\u6211\u4eec\u5c06\u5728\u63a5\u4e0b\u6765\u7684\u6240\u6709\u7a0b\u5e8f\u4e2d\u4f7f\u7528\u8fd9\u4e9b\u5b8f\uff0c\u6240\u6709\u8981\u786e\u4fdd\u7406\u89e3\u4e86\u5982\u4f55\u4f7f\u7528\u5b83\u4eec\u3002\n#include \"dbg.h\"\n#include &lt;stdlib.h&gt;\n#include &lt;stdio.h&gt;\n\n\nvoid test_debug()\n{\n    \/\/ notice you don't need the \\n\n    debug(\"I have Brown Hair.\");\n\n    \/\/ passing in arguments like printf\n    debug(\"I am %d years old.\", 37);\n}\n\nvoid test_log_err()\n{\n    log_err(\"I believe everything is broken.\");\n    log_err(\"There are %d problems in %s.\", 0, \"space\");\n}\n\nvoid test_log_warn()\n{\n    log_warn(\"You can safely ignore this.\");\n    log_warn(\"Maybe consider looking at: %s.\", \"\/etc\/passwd\");\n}\n\nvoid test_log_info()\n{\n    log_info(\"Well I did something mundane.\");\n    log_info(\"It happened %f times today.\", 1.3f);\n}\n\nint test_check(char *file_name)\n{\n    FILE *input = NULL;\n    char *block = NULL;\n\n    block = malloc(100);\n    check_mem(block); \/\/ should work\n\n    input = fopen(file_name,\"r\");\n    check(input, \"Failed to open %s.\", file_name);\n\n    free(block);\n    fclose(input);\n    return 0;\n\nerror:\n    if(block) free(block);\n    if(input) fclose(input);\n    return -1;\n}\n\nint test_sentinel(int code)\n{\n    char *temp = malloc(100);\n    check_mem(temp);\n\n    switch(code) {\n        case 1:\n            log_info(\"It worked.\");\n            break;\n        default:\n            sentinel(\"I shouldn't run.\");\n    }\n\n    free(temp);\n    return 0;\n\nerror:\n    if(temp) free(temp);\n    return -1;\n}\n\nint test_check_mem()\n{\n    char *test = NULL;\n    check_mem(test);\n\n    free(test);\n    return 1;\n\nerror:\n    return -1;\n}\n\nint test_check_debug()\n{\n    int i = 0;\n    check_debug(i != 0, \"Oops, I was 0.\");\n\n    return 0;\nerror:\n    return -1;\n}\n\nint main(int argc, char *argv[])\n{\n    check(argc == 2, \"Need an argument.\");\n\n    test_debug();\n    test_log_err();\n    test_log_warn();\n    test_log_info();\n\n    check(test_check(\"ex20.c\") == 0, \"failed with ex20.c\");\n    check(test_check(argv[1]) == -1, \"failed with argv\");\n    check(test_sentinel(1) == 0, \"test_sentinel failed.\");\n    check(test_sentinel(100) == -1, \"test_sentinel failed.\");\n    check(test_check_mem() == -1, \"test_check_mem failed.\");\n    check(test_check_debug() == -1, \"test_check_debug failed.\");\n\n    return 0;\n\nerror:\n    return 1;\n}\n\u8981\u6ce8\u610fcheck\u662f\u5982\u4f55\u4f7f\u7528\u7684\uff0c\u5e76\u4e14\u5f53\u5b83\u4e3afalse\u65f6\u4f1a\u8df3\u5230error:\u6807\u7b7e\u6765\u6267\u884c\u6e05\u7406\u3002\u8fd9\u4e00\u884c\u8bfb\u4f5c\u201c\u68c0\u67e5A\u662f\u5426\u4e3a\u771f\uff0c\u4e0d\u4e3a\u771f\u5c31\u6253\u5370M\u5e76\u8df3\u51fa\u201d\u3002\n\u4f60\u4f1a\u770b\u5230\u4ec0\u4e48\n\u5f53\u4f60\u6267\u884c\u8fd9\u6bb5\u4ee3\u7801\u5e76\u4e14\u5411\u7b2c\u4e00\u4e2a\u53c2\u6570\u63d0\u4f9b\u4e00\u4e9b\u4e1c\u897f\uff0c\u4f60\u4f1a\u770b\u5230\uff1a\n$ make ex20\ncc -Wall -g -DNDEBUG    ex20.c   -o ex20\n$ .\/ex20 test\n[ERROR] (ex20.c:16: errno: None) I believe everything is broken.\n[ERROR] (ex20.c:17: errno: None) There are 0 problems in space.\n[WARN] (ex20.c:22: errno: None) You can safely ignore this.\n[WARN] (ex20.c:23: errno: None) Maybe consider looking at: \/etc\/passwd.\n[INFO] (ex20.c:28) Well I did something mundane.\n[INFO] (ex20.c:29) It happened 1.300000 times today.\n[ERROR] (ex20.c:38: errno: No such file or directory) Failed to open test.\n[INFO] (ex20.c:57) It worked.\n[ERROR] (ex20.c:60: errno: None) I shouldn't run.\n[ERROR] (ex20.c:74: errno: None) Out of memory.\n\u770b\u5230check\u5931\u8d25\u4e4b\u540e\uff0c\u5b83\u662f\u5982\u4f55\u6253\u5370\u5177\u4f53\u7684\u884c\u53f7\u4e86\u5417\uff1f\u8fd9\u4f1a\u4e3a\u63a5\u4e0b\u6765\u7684\u8c03\u8bd5\u5de5\u4f5c\u8282\u7701\u65f6\u95f4\u3002\u540c\u65f6\u4e5f\u89c2\u5bdferrno\u88ab\u8bbe\u7f6e\u65f6\u5b83\u5982\u4f55\u6253\u5370\u9519\u8bef\u4fe1\u606f\u3002\u540c\u6837\uff0c\u8fd9\u4e5f\u53ef\u4ee5\u8282\u7701\u4f60\u8c03\u8bd5\u7684\u65f6\u95f4\u3002\nC\u9884\u5904\u7406\u5668\u5982\u4f55\u6269\u5c55\u5b8f\n\u73b0\u5728\u6211\u4f1a\u5411\u4f60\u7b80\u5355\u4ecb\u7ecd\u4e00\u4e9b\u9884\u5904\u7406\u5668\u7684\u5de5\u4f5c\u539f\u7406\uff0c\u8ba9\u4f60\u77e5\u9053\u8fd9\u4e9b\u5b8f\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u3002\u6211\u4f1a\u62c6\u5206dbg.h\u4e2d\u963f\u6700\u590d\u6742\u7684\u5b8f\u5e76\u4e14\u8ba9\u4f60\u8fd0\u884ccpp\u6765\u8ba9\u4f60\u89c2\u5bdf\u5b83\u5b9e\u9645\u4e0a\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u3002\n\u5047\u8bbe\u6211\u6709\u4e00\u4e2a\u51fd\u6570\u53eb\u505adosomething()\uff0c\u6267\u884c\u6210\u529f\u662f\u8fd4\u56de0\uff0c\u53d1\u751f\u9519\u8bef\u65f6\u8fd4\u56de-1\u3002\u6bcf\u6b21\u6211\u8c03\u7528dosomething\u7684\u65f6\u5019\uff0c\u6211\u90fd\u8981\u68c0\u67e5\u9519\u8bef\u7801\uff0c\u6240\u4ee5\u6211\u5c06\u4ee3\u7801\u5199\u6210\u8fd9\u6837\uff1a\nint rc = dosomething();\n\nif(rc != 0) {\n    fprintf(stderr, \"There was an error: %s\\n\", strerror());\n    goto error;\n}\n\u6211\u60f3\u4f7f\u7528\u9884\u5904\u7406\u5668\u505a\u7684\u662f\uff0c\u5c06\u8fd9\u4e2aif\u8bed\u53e5\u5c01\u88c5\u4e3a\u66f4\u53ef\u8bfb\u5e76\u4e14\u4fbf\u4e8e\u8bb0\u5fc6\u7684\u4e00\u884c\u4ee3\u7801\u3002\u4e8e\u662f\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e2acheck\u6765\u6267\u884cdbg.h\u4e2d\u7684\u5b8f\u6240\u505a\u7684\u4e8b\u60c5\uff1a\nint rc = dosomething();\ncheck(rc == 0, \"There was an error.\");\n\u8fd9\u6837\u66f4\u52a0\u7b80\u6d01\uff0c\u5e76\u4e14\u6070\u597d\u89e3\u91ca\u4e86\u6240\u505a\u7684\u4e8b\u60c5\uff1a\u68c0\u67e5\u51fd\u6570\u662f\u5426\u6b63\u5e38\u5de5\u4f5c\uff0c\u5982\u679c\u6ca1\u6709\u5c31\u62a5\u544a\u9519\u8bef\u3002\u6211\u4eec\u9700\u8981\u4e00\u4e9b\u7279\u522b\u7684\u9884\u5904\u7406\u5668\u201c\u6280\u5de7\u201d\u6765\u5b8c\u6210\u5b83\uff0c\u8fd9\u4e9b\u6280\u5de7\u4f7f\u9884\u5904\u7406\u5668\u4f5c\u4e3a\u4ee3\u7801\u751f\u6210\u5de5\u5177\u66f4\u52a0\u6613\u7528\u3002\u518d\u6b21\u770b\u770bcheck\u548clog_err\u5b8f\uff1a\n#define log_err(M, ...) fprintf(stderr, \"[ERROR] (%s:%d: errno: %s) \" M \"\\n\", __FILE__, __LINE__, clean_errno(), ##__VA_ARGS__)\n#define check(A, M, ...) if(!(A)) { log_err(M, ##__VA_ARGS__); errno=0; goto error; }\n\u7b2c\u4e00\u4e2a\u5b8f\uff0clog_err\u66f4\u7b80\u5355\u4e00\u4e9b\uff0c\u53ea\u662f\u5c06\u5b83\u81ea\u5df1\u66ff\u6362\u4e3afprintf\u5bf9stderr\u7684\u8c03\u7528\u3002\u8fd9\u4e2a\u5b8f\u552f\u4e00\u7684\u6280\u5de7\u6027\u90e8\u5206\u5c31\u662f\u5728log_err(M, ...)\u7684\u5b9a\u4e49\u4e2d\u4f7f\u7528...\u3002\u5b83\u6240\u505a\u7684\u662f\u8ba9\u4f60\u5411\u5b8f\u4f20\u5165\u53ef\u53d8\u53c2\u6570\uff0c\u4ece\u800c\u4f20\u5165fprintf\u9700\u8981\u63a5\u6536\u7684\u53c2\u6570\u3002\u5b83\u4eec\u662f\u5982\u4f55\u6ce8\u5165fprintf\u7684\u5462\uff1f\u89c2\u5bdf\u672b\u5c3e\u7684##__VA_ARGS__\uff0c\u5b83\u544a\u8bc9\u9884\u5904\u7406\u5668\u5c06...\u6240\u5728\u4f4d\u7f6e\u7684\u53c2\u6570\u6ce8\u5165\u5230fprintf\u8c03\u7528\u7684\u76f8\u5e94\u4f4d\u7f6e\u3002\u4e8e\u662f\u4f60\u53ef\u4ee5\u50cf\u8fd9\u6837\u8c03\u7528\u4e86\uff1a\nlog_err(\"Age: %d, name: %s\", age, name);\nage, name\u53c2\u6570\u5c31\u662f...\u6240\u5b9a\u4e49\u7684\u90e8\u5206\uff0c\u8fd9\u4e9b\u53c2\u6570\u4f1a\u88ab\u6ce8\u5165\u5230fprintf\u4e2d\uff0c\u8f93\u51fa\u4f1a\u53d8\u6210\uff1a\nfprintf(stderr, \"[ERROR] (%s:%d: errno: %s) Age %d: name %d\\n\",\n    __FILE__, __LINE__, clean_errno(), age, name);\n\u770b\u5230\u672b\u5c3e\u7684age, name\u4e86\u5417\uff1f\u8fd9\u5c31\u662f...\u548c##__VA_ARGS__\u7684\u5de5\u4f5c\u673a\u5236\uff0c\u5728\u8c03\u7528\u5176\u5b83\u53d8\u53c2\u5b8f\uff08\u6216\u8005\u51fd\u6570\uff09\u7684\u65f6\u5019\u5b83\u4f1a\u8d77\u4f5c\u7528\u3002\u89c2\u5bdfcheck\u5b8f\u8c03\u7528log_err\u7684\u65b9\u5f0f\uff0c\u5b83\u4e5f\u662f\u7528\u4e86...\u548c##__VA_ARGS__\u3002\u8fd9\u5c31\u662f\u4f20\u9012\u6574\u4e2aprintf\u98ce\u683c\u7684\u683c\u5f0f\u5b57\u7b26\u4e32\u7ed9check\u7684\u9014\u5f84\uff0c\u5b83\u4e4b\u540e\u4f1a\u4f20\u7ed9log_err\uff0c\u4e8c\u8005\u7684\u673a\u5236\u90fd\u50cfprintf\u4e00\u6837\u3002\n\u4e0b\u4e00\u6b65\u662f\u5b66\u4e60check\u5982\u4f55\u4e3a\u9519\u8bef\u68c0\u67e5\u6784\u9020if\u8bed\u53e5\uff0c\u5982\u679c\u6211\u4eec\u5256\u6790log_err\u7684\u7528\u6cd5\uff0c\u6211\u4eec\u4f1a\u5f97\u5230\uff1a\nif(!(A)) { errno=0; goto error; }\n\u5b83\u7684\u610f\u601d\u662f\uff0c\u5982\u679cA\u4e3a\u5047\uff0c\u5219\u91cd\u7f6eerrno\u5e76\u4e14\u8c03\u7528error\u6807\u7b7e\u3002check\u5b8f\u4f1a\u88ab\u4e0a\u8ff0if\u8bed\u53e5\u00b7\u66ff\u6362\uff0c\u6240\u4ee5\u5982\u679c\u6211\u4eec\u624b\u52a8\u6269\u5c55check(rc == 0, \"There was an error.\")\uff0c\u6211\u4eec\u4f1a\u5f97\u5230\uff1a\nif(!(rc == 0)) {\n    log_err(\"There was an error.\");\n    errno=0;\n    goto error;\n}\n\u5728\u8fd9\u4e24\u4e2a\u5b8f\u7684\u5c55\u5f00\u8fc7\u7a0b\u4e2d\uff0c\u4f60\u5e94\u8be5\u4e86\u89e3\u4e86\u9884\u5904\u7406\u5668\u4f1a\u5c06\u5b8f\u66ff\u6362\u4e3a\u5b83\u7684\u5b9a\u4e49\u7684\u6269\u5c55\u7248\u672c\uff0c\u5e76\u4e14\u9012\u5f52\u5730\u6765\u6267\u884c\u8fd9\u4e2a\u6b65\u9aa4\uff0c\u6269\u5c55\u5b8f\u5b9a\u4e49\u4e2d\u7684\u5b8f\u3002\u9884\u5904\u7406\u5668\u662f\u4e2a\u9012\u5f52\u7684\u6a21\u677f\u7cfb\u7edf\uff0c\u5c31\u50cf\u6211\u4e4b\u524d\u63d0\u5230\u7684\u90a3\u6837\u3002\u5b83\u7684\u5f3a\u5927\u6765\u6e90\u4e8e\u4f7f\u7528\u53c2\u6570\u5316\u7684\u4ee3\u7801\u6765\u751f\u6210\u6574\u4e2a\u4ee3\u7801\u5757\uff0c\u8fd9\u4f7f\u5b83\u6210\u4e3a\u4fbf\u5229\u7684\u4ee3\u7801\u751f\u6210\u5de5\u5177\u3002\n\u4e0b\u9762\u53ea\u5269\u4e00\u4e2a\u95ee\u9898\u4e86\uff1a\u4e3a\u4ec0\u4e48\u4e0d\u50cfdie\u4e00\u6837\u4f7f\u7528\u51fd\u6570\u5462\uff1f\u539f\u56e0\u662f\u9700\u8981\u5728\u9519\u8bef\u5904\u7406\u65f6\u4f7f\u7528file:line\u7684\u6570\u503c\u548cgoto\u64cd\u4f5c\u3002\u5982\u679c\u4f60\u5728\u51fd\u6570\u5728\u5185\u90e8\u6267\u884c\u8fd9\u4e9b\uff0c\u4f60\u4e0d\u4f1a\u5f97\u5230\u9519\u8bef\u771f\u6b63\u51fa\u73b0\u4f4d\u7f6e\u7684\u884c\u53f7\uff0c\u5e76\u4e14goto\u7684\u5b9e\u73b0\u4e5f\u76f8\u5f53\u9ebb\u70e6\u3002\n\u53e6\u4e00\u4e2a\u539f\u56e0\u662f\uff0c\u5982\u679c\u4f60\u7f16\u5199\u539f\u59cb\u7684if\u8bed\u53e5\uff0c\u5b83\u770b\u8d77\u6765\u5c31\u50cf\u662f\u4f60\u4ee3\u7801\u4e2d\u7684\u5176\u5b83\u7684if\u8bed\u53e5\uff0c\u6240\u4ee5\u5b83\u770b\u8d77\u6765\u5e76\u4e0d\u50cf\u4e00\u4e2a\u9519\u8bef\u68c0\u67e5\u3002\u901a\u8fc7\u5c06if\u8bed\u53e5\u5305\u88c5\u6210check\u5b8f\uff0c\u5c31\u4f1a\u4f7f\u8fd9\u4e00\u9519\u8bef\u68c0\u67e5\u7684\u903b\u8f91\u66f4\u6e05\u6670\uff0c\u800c\u4e0d\u662f\u4e3b\u63a7\u5236\u6d41\u7684\u4e00\u90e8\u5206\u3002\n\u6700\u540e\uff0cC\u9884\u5904\u7406\u5668\u63d0\u4f9b\u4e86\u6761\u4ef6\u7f16\u8bd1\u90e8\u5206\u4ee3\u7801\u7684\u529f\u80fd\uff0c\u6240\u4ee5\u4f60\u53ef\u4ee5\u7f16\u5199\u53ea\u5728\u6784\u5efa\u7a0b\u5e8f\u7684\u5f00\u53d1\u6216\u8c03\u8bd5\u7248\u672c\u65f6\u9700\u8981\u7684\u4ee3\u7801\u3002\u4f60\u53ef\u4ee5\u770b\u5230\u8fd9\u5728dbg.h\u4e2d\u5df2\u7ecf\u7528\u5230\u4e86\uff0cdebug\u5b8f\u7684\u4e3b\u4f53\u90e8\u5206\u53ea\u88ab\u7f16\u8bd1\u5668\u7528\u5230\u3002\u5982\u679c\u6ca1\u6709\u8fd9\u4e2a\u529f\u80fd\uff0c\u4f60\u9700\u8981\u591a\u51fa\u4e00\u4e2aif\u8bed\u53e5\u6765\u68c0\u67e5\u662f\u5426\u4e3a\u201c\u8c03\u8bd5\u6a21\u5f0f\u201d\uff0c\u4e5f\u6d6a\u8d39\u4e86CPU\u8d44\u6e90\u6765\u8fdb\u884c\u6ca1\u6709\u5fc5\u8981\u7684\u68c0\u67e5\u3002\n\u9644\u52a0\u9898\n\n\u5c06#define NDEBUG\u653e\u5728\u6587\u4ef6\u9876\u7aef\u6765\u6d88\u9664\u6240\u6709\u8c03\u8bd5\u4fe1\u606f\u3002\n\u64a4\u9500\u4e0a\u9762\u6dfb\u52a0\u7684\u4e00\u884c\uff0c\u5e76\u5728MakeFile\u9876\u7aef\u5c06-D NDEBUG\u6dfb\u52a0\u5230CFLAGS\uff0c\u4e4b\u540e\u91cd\u65b0\u7f16\u8bd1\u6765\u8fbe\u5230\u540c\u6837\u6548\u679c\u3002\n\u4fee\u6539\u65e5\u5fd7\u5b8f\uff0c\u4f7f\u4e4b\u5305\u542b\u51fd\u6570\u540d\u79f0\u548cfile:line\u3002\n","categories":"\u7ec3\u4e602","tags":["\u5b8f","\u51fd\u6570","\u8c03\u8bd5"]},{"title":"\u9ad8\u7ea7\u6570\u636e\u7c7b\u578b\u548c\u63a7\u5236\u7ed3\u6784","url":"https:\/\/naka507.github.io\/posts\/B67D461964D39489.html","content":"\u9ad8\u7ea7\u6570\u636e\u7c7b\u578b\u548c\u63a7\u5236\u7ed3\u6784\n\u8fd9\u4e2a\u7ec3\u4e60\u662fC\u8bed\u8a00\u4e2d\u6240\u6709\u53ef\u7528\u7684\u6570\u636e\u7c7b\u578b\u548c\u63a7\u5236\u7ed3\u6784\u7684\u6458\u8981\u3002\u5b83\u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u4e00\u4efd\u53c2\u8003\u5728\u8865\u5b8c\u4f60\u7684\u77e5\u8bc6\uff0c\u5e76\u4e14\u4e0d\u542b\u6709\u4efb\u4f55\u4ee3\u7801\u3002\u6211\u4f1a\u901a\u8fc7\u521b\u5efa\u6559\u5b66\u5361\u7247\u7684\u65b9\u5f0f\uff0c\u8ba9\u4f60\u8bb0\u4f4f\u4e00\u4e9b\u4fe1\u606f\uff0c\u6240\u4ee5\u4f60\u4f1a\u5728\u8111\u5b50\u91cc\u8bb0\u4f4f\u6240\u6709\u91cd\u8981\u7684\u6982\u5ff5\u3002\n\u8fd9\u4e2a\u7ec3\u4e60\u975e\u5e38\u6709\u7528\uff0c\u4f60\u5e94\u8be5\u82b1\u81f3\u5c11\u4e00\u5468\u7684\u65f6\u95f4\u6765\u5de9\u56fa\u5185\u5bb9\u5e76\u4e14\u8865\u5168\u8fd9\u91cc\u6240\u6ca1\u6709\u7684\u5143\u7d20\u3002\u4f60\u5e94\u5b66\u51fa\u6bcf\u4e2a\u5143\u7d20\u662f\u4ec0\u4e48\u610f\u601d\uff0c\u4ee5\u53ca\u7f16\u5199\u7a0b\u5e8f\u6765\u9a8c\u8bc1\u4f60\u5f97\u51fa\u7684\u7ed3\u8bba\u3002\n\u53ef\u7528\u7684\u6570\u636e\u7c7b\u578b\nint\n\u50a8\u5b58\u666e\u901a\u7684\u6574\u6570\uff0c\u9ed8\u8ba4\u4e3a32\u4f4d\u5927\u5c0f\u3002\n\n\u8bd1\u8005\u6ce8\uff1aint\u572832\u621664\u4f4d\u73af\u5883\u4e0b\u4e3a32\u4f4d\uff0c\u4f46\u5b83\u4e0d\u5e94\u8be5\u88ab\u770b\u4f5c\u5e73\u53f0\u65e0\u5173\u7684\u3002\u5982\u679c\u9700\u8981\u7528\u5230\u5e73\u53f0\u65e0\u5173\u7684\u5b9a\u957f\u6574\u6570\uff0c\u8bf7\u4f7f\u7528int(n)_t\u3002\n\ndouble\n\u50a8\u5b58\u7a0d\u5927\u7684\u6d6e\u70b9\u6570\u3002\nfloat\n\u50a8\u5b58\u7a0d\u5c0f\u7684\u6d6e\u70b9\u6570\u3002\nchar\n\u50a8\u5b58\u5355\u5b57\u8282\u5b57\u7b26\u3002\nvoid\n\u8868\u793a\u201c\u65e0\u7c7b\u578b\u201d\uff0c\u7528\u4e8e\u58f0\u660e\u4e0d\u8fd4\u56de\u4efb\u4f55\u4e1c\u897f\u7684\u51fd\u6570\uff0c\u6216\u8005\u6240\u6307\u7c7b\u578b\u4e0d\u660e\u7684\u6307\u9488\uff0c\u4f8b\u5982void *thing\u3002\nenum\n\u679a\u4e3e\u7c7b\u578b\uff0c\u7c7b\u4f3c\u4e8e\u6574\u6570\uff0c\u4e5f\u53ef\u8f6c\u6362\u4e3a\u6574\u6570\uff0c\u4f46\u662f\u901a\u8fc7\u7b26\u53f7\u5316\u7684\u540d\u79f0\u8bbf\u95ee\u6216\u8bbe\u7f6e\u3002\u5f53switch\u8bed\u53e5\u4e2d\u6ca1\u6709\u8986\u76d6\u5230\u6240\u6709\u679a\u4e3e\u7684\u5143\u7d20\u65f6\uff0c\u4e00\u4e9b\u7f16\u8bd1\u5668\u4f1a\u53d1\u51fa\u8b66\u544a\u3002\n\u7c7b\u578b\u4fee\u9970\u7b26\nunsigned\n\u4fee\u6539\u7c7b\u578b\uff0c\u4f7f\u5b83\u4e0d\u5305\u542b\u4efb\u4f55\u8d1f\u6570\uff0c\u540c\u65f6\u4e0a\u754c\u53d8\u9ad8\u3002\nsigned\n\u53ef\u4ee5\u50a8\u5b58\u6b63\u6570\u548c\u8d1f\u6570\uff0c\u4f46\u662f\u4e0a\u754c\u4f1a\u53d8\u4e3a\uff08\u5927\u7ea6\uff09\u4e00\u534a\uff0c\u4e0b\u754c\u53d8\u4e3a\u548c\u4e0a\u754c\uff08\u5927\u7ea6\uff09\u7b49\u957f\u3002\n\n\u8bd1\u8005\u6ce8\uff1a\u7b26\u53f7\u4fee\u9970\u7b26\u53ea\u5bf9char\u548c*** int\u6709\u6548\u3002*** int\u9ed8\u8ba4\u4e3asigned\uff0c\u800cchar\u6839\u636e\u5177\u4f53\u5b9e\u73b0\uff0c\u53ef\u4ee5\u9ed8\u8ba4\u4e3asigned\uff0c\u4e5f\u53ef\u4ee5\u4e3aunsigned\u3002\n\nlong\n\u5bf9\u8be5\u7c7b\u578b\u4f7f\u7528\u8f83\u5927\u7684\u7a7a\u95f4\uff0c\u4f7f\u5b83\u80fd\u5b58\u4e0b\u66f4\u5927\u7684\u6570\uff0c\u901a\u5e38\u4f7f\u5f53\u524d\u5927\u5c0f\u52a0\u500d\u3002\nshort\n\u5bf9\u8be5\u7c7b\u578b\u4f7f\u7528\u8f83\u5c0f\u7684\u7a7a\u95f4\uff0c\u4f7f\u5b83\u50a8\u5b58\u80fd\u529b\u53d8\u5c0f\uff0c\u4f46\u662f\u5360\u636e\u7a7a\u95f4\u4e5f\u53d8\u6210\u4e00\u534a\u3002\n\u7c7b\u578b\u9650\u5b9a\u7b26\nconst\n\u8868\u793a\u53d8\u91cf\u5728\u521d\u59cb\u5316\u540e\u4e0d\u80fd\u6539\u53d8\u3002\nvolatile\n\u8868\u793a\u4f1a\u505a\u6700\u574f\u7684\u6253\u7b97\uff0c\u7f16\u8bd1\u5668\u4e0d\u4f1a\u5bf9\u5b83\u505a\u4efb\u4f55\u4f18\u5316\u3002\u901a\u5e38\u4ec5\u5728\u5bf9\u53d8\u91cf\u505a\u4e00\u4e9b\u5947\u602a\u7684\u4e8b\u60c5\u65f6\uff0c\u624d\u4f1a\u7528\u5230\u5b83\u3002\nregister\n\u5f3a\u5236\u8ba9\u7f16\u8bd1\u5668\u5c06\u8fd9\u4e2a\u53d8\u91cf\u4fdd\u5b58\u5728\u5bc4\u5b58\u5668\u4e2d\uff0c\u5e76\u4e14\u4e5f\u53ef\u4ee5\u65e0\u89c6\u5b83\u3002\u76ee\u524d\u7684\u7f16\u8bd1\u5668\u66f4\u5584\u4e8e\u5904\u7406\u5728\u54ea\u91cc\u5b58\u653e\u53d8\u91cf\uff0c\u6240\u4ee5\u5e94\u8be5\u53ea\u5728\u786e\u5b9a\u8fd9\u6837\u4f1a\u63d0\u5347\u6027\u80fd\u65f6\u4f7f\u7528\u5b83\u3002\n\u7c7b\u578b\u8f6c\u6362\nC\u4f7f\u7528\u4e86\u4e00\u79cd\u201c\u9636\u68af\u5f62\u7c7b\u578b\u63d0\u5347\u201d\u7684\u673a\u5236\uff0c\u5b83\u4f1a\u89c2\u5bdf\u8fd0\u7b97\u7b26\u4e24\u8fb9\u7684\u53d8\u91cf\uff0c\u5e76\u4e14\u5728\u8fd0\u7b97\u4e4b\u524d\u5c06\u8f83\u5c0f\u8fb9\u7684\u53d8\u91cf\u8f6c\u6362\u4e3a\u8f83\u5927\u8fb9\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u6309\u7167\u5982\u4e0b\u987a\u5e8f\uff1a\n\nlong double\ndouble\nfloat\nlong long\nlong\nint (short, char)\n\n\n\u8bd1\u8005\u6ce8\uff1ashort\u548cchar\u4f1a\u5728\u8fd0\u7b97\u4e4b\u524d\u8f6c\u6362\u6210int\u3002\u540c\u79cd\u7c7b\u578b\u7684unsigned\u548csigned\u8fd0\u7b97\uff0csigned\u4fdd\u6301\u5b57\u8282\u4e0d\u53d8\u8f6c\u6362\u6210unsigned\u3002\n\n\u7c7b\u578b\u5927\u5c0f\nstdint.h\u4e3a\u5b9a\u957f\u7684\u6574\u6570\u7c7b\u578b\u5b9a\u4e49\u4e86\u4e00\u4e9btypedef\uff0c\u540c\u65f6\u4e5f\u6709\u4e00\u4e9b\u7528\u4e8e\u8fd9\u4e9b\u7c7b\u578b\u7684\u5b8f\u3002\u8fd9\u6bd4\u8001\u7684limits.h\u66f4\u52a0\u6613\u4e8e\u4f7f\u7528\uff0c\u56e0\u4e3a\u5b83\u662f\u4e0d\u53d8\u7684\u3002\u8fd9\u4e9b\u7c7b\u578b\u5982\u4e0b\uff1a\nint8_t\n8\u4f4d\u7b26\u53f7\u6574\u6570\u3002\nuint8_t\n8\u4f4d\u65e0\u7b26\u53f7\u6574\u6570\u3002\nint16_t\n16\u4f4d\u7b26\u53f7\u6574\u6570\u3002\nuint16_t\n16\u4f4d\u65e0\u7b26\u53f7\u6574\u6570\u3002\nint32_t\n32\u4f4d\u7b26\u53f7\u6574\u6570\u3002\nuint32_t\n32\u4f4d\u65e0\u7b26\u53f7\u6574\u6570\u3002\nint64_t\n64\u4f4d\u7b26\u53f7\u6574\u6570\u3002\nuint64_t\n64\u4f4d\u65e0\u7b26\u53f7\u6574\u6570\u3002\n\n\u8bd1\u8005\u6ce8\uff1a\u5f53\u7528\u4e8e\u5bf9\u7c7b\u578b\u5927\u5c0f\u6709\u8981\u6c42\u7684\u7279\u5b9a\u5e73\u53f0\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e9b\u7c7b\u578b\u3002\u5982\u679c\u4f60\u6015\u9ebb\u70e6\uff0c\u4e0d\u60f3\u5904\u7406\u5e73\u53f0\u76f8\u5173\u7c7b\u578b\u7684\u4eca\u540e\u6f5c\u5728\u7684\u6269\u5c55\u7684\u8bdd\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e9b\u7c7b\u578b\u3002\n\n\u4e0b\u9762\u7684\u6a21\u5f0f\u4e32\u4e3a(u)int(BITS)_t\uff0c\u5176\u4e2d\u524d\u9762\u7684u\u4ee3\u8868unsigned\uff0cBITS\u662f\u6240\u5360\u4f4d\u6570\u7684\u5927\u5c0f\u3002\u8fd9\u4e9b\u6a21\u5f0f\u4e32\u8fd4\u56de\u4e86\u8fd9\u4e9b\u7c7b\u578b\u7684\u6700\u5927\uff08\u6216\u6700\u5c0f\uff09\u503c\u3002\nINT(N)_MAX\nN\u4f4d\u7b26\u53f7\u6574\u6570\u7684\u6700\u5927\u6b63\u503c\uff0c\u4f8b\u5982INT16_MAX\u3002\nINT(N)_MIN\nN\u4f4d\u7b26\u53f7\u6574\u6570\u7684\u6700\u5c0f\u8d1f\u503c\u3002\nUINT(N)_MAX\nN\u4f4d\u65e0\u7b26\u53f7\u6574\u6570\u7684\u6700\u5927\u6b63\u503c\u3002\u4e3a\u4ec0\u4e48\u4e0d\u5b9a\u4e49\u5176\u6700\u5c0f\u503c\uff0c\u662f\u56e0\u4e3a\u6700\u5c0f\u503c\u662f0\uff0c\u4e0d\u53ef\u80fd\u51fa\u73b0\u8d1f\u503c\u3002\n\n\u8b66\u544a\n\n\n\u8981\u6ce8\u610f\uff0c\u4e0d\u8981\u4ece\u5b57\u9762\u4e0a\u5728\u4efb\u4f55\u5934\u6587\u4ef6\u4e2d\u53bb\u627eINT(N)_MAX\u7684\u5b9a\u4e49\u3002\u8fd9\u91cc\u7684N\u5e94\u8be5\u4e3a\u7279\u5b9a\u6574\u6570\uff0c\u6bd4\u59828\u300116\u300132\u300164\uff0c\u751a\u81f3\u53ef\u80fd\u662f128\u3002\u6211\u5728\u8fd9\u4e2a\u7ec3\u4e60\u4e2d\u4f7f\u7528\u4e86\u8fd9\u4e2a\u8bb0\u6cd5\uff0c\u5c31\u4e0d\u9700\u8981\u663e\u5f0f\u5199\u51fa\u6bcf\u4e00\u4e2a\u4e0d\u540c\u7684\u7ec4\u5408\u4e86\u3002\n\n\u5728stdint.h\u4e2d\uff0c\u5bf9\u4e8esize_t\u7c7b\u578b\u548c\u8db3\u591f\u5b58\u653e\u6307\u9488\u7684\u6574\u6570\u4e5f\u6709\u4e00\u4e9b\u5b8f\u5b9a\u4e49\uff0c\u4ee5\u53ca\u5176\u5b83\u4fbf\u6377\u7c7b\u578b\u7684\u5b8f\u5b9a\u4e49\u3002\u7f16\u8bd1\u5668\u81f3\u5c11\u8981\u4fdd\u8bc1\u5b83\u4eec\u4e3a\u67d0\u4e00\u5927\u5c0f\uff0c\u5e76\u5141\u8bb8\u5b83\u4eec\u4e3a\u66f4\u5927\u7684\u5927\u5c0f\u3002\nint_least(N)_t\n\u81f3\u5c11N\u4f4d\u7684\u6574\u6570\u3002\nuint_least(N)_t\n\u81f3\u5c11N\u4f4d\u7684\u65e0\u7b26\u53f7\u6574\u6570\u3002\nINT_LEAST(N)_MAX\nint_least(N)_t\u7c7b\u578b\u7684\u6700\u5927\u503c\u3002\nINT_LEAST(N)_MIN\nint_least(N)_t\u7c7b\u578b\u7684\u6700\u5c0f\u503c\u3002\nUINT_LEAST(N)_MAX\nuint_least(N)_t\u7684\u6700\u5927\u503c\u3002\nint_fast(N)_t\n\u4e0eint_least(N)_t\u76f8\u4f3c\uff0c\u4f46\u662f\u662f\u81f3\u5c11N\u4f4d\u7684\u201c\u6700\u5feb\u201d\u6574\u6570\u3002\nuint_fast(N)_t\n\u81f3\u5c11N\u4f4d\u7684\u201c\u6700\u5feb\u201d\u65e0\u7b26\u53f7\u6574\u6570\u3002\nINT_FAST(N)_MAX\nint_fast(N)_t\u7684\u6700\u5927\u503c\u3002\nINT_FAST(N)_MIN\nint_fast(N)_t\u7684\u6700\u5c0f\u503c\u3002\nUINT_FAST(N)_MAX\nuint_fast(N)_t\u7684\u6700\u5927\u503c\u3002\nintptr_t\n\u8db3\u591f\u5b58\u653e\u6307\u9488\u7684\u7b26\u53f7\u6574\u6570\u3002\nuintptr_t\n\u8db3\u591f\u5b58\u653e\u6307\u9488\u7684\u65e0\u7b26\u53f7\u6574\u6570\u3002\nINTPTR_MAX\nintptr_t\u7684\u6700\u5927\u503c\u3002\nINTPTR_MIN\nintptr_t\u7684\u6700\u5c0f\u503c\u3002\nUINTPTR_MAX\nuintptr_t\u7684\u6700\u5927\u503c\u3002\nintmax_t\n\u7cfb\u7edf\u4e2d\u53ef\u80fd\u7684\u6700\u5927\u5c3a\u5bf8\u7684\u6574\u6570\u7c7b\u578b\u3002\nuintmax_t\n\u7cfb\u7edf\u4e2d\u53ef\u80fd\u7684\u6700\u5927\u5c3a\u5bf8\u7684\u65e0\u7b26\u53f7\u6574\u6570\u7c7b\u578b\u3002\nINTMAX_MAX\nintmax_t\u7684\u6700\u5927\u503c\u3002\nINTMAX_MIN\nintmax_t\u7684\u6700\u5c0f\u503c\u3002\nUINTMAX_MAX\nuintmax_t\u7684\u6700\u5927\u503c\u3002\nPTRDIFF_MIN\nptrdiff_t\u7684\u6700\u5c0f\u503c\u3002\nPTRDIFF_MAX\nptrdiff_t\u7684\u6700\u5927\u503c\u3002\nSIZE_MAX\nsize_t\u7684\u6700\u5927\u503c\u3002\n\u53ef\u7528\u7684\u8fd0\u7b97\u7b26\n\u8fd9\u662f\u4e00\u4e2a\u5168\u9762\u7684\u5217\u8868\uff0c\u5173\u4e8e\u4f60\u53ef\u4ee5\u5728C\u4e2d\u4f7f\u7528\u7684\u5168\u90e8\u8fd0\u7b97\u7b26\u3002\u8fd9\u4e2a\u5217\u8868\u4e2d\u6211\u4f1a\u6807\u660e\u4e00\u4e9b\u4e1c\u897f\uff1a\n\u4e8c\u5143\n\u8be5\u8fd0\u7b97\u7b26\u6709\u5de6\u53f3\u4e24\u4e2a\u64cd\u4f5c\u6570\uff1aX + Y\u3002\n\u4e00\u5143\n\u8be5\u8fd0\u7b97\u7b26\u4f5c\u7528\u4e8e\u64cd\u4f5c\u6570\u672c\u8eab-X\u3002\n\u524d\u7f00\n\u8be5\u8fd0\u7b97\u7b26\u51fa\u73b0\u5728\u64cd\u4f5c\u6570\u4e4b\u524d\uff1a++X\u3002\n\u540e\u7f00\n\u901a\u5e38\u548c\u524d\u7f00\u7248\u672c\u76f8\u4f3c\uff0c\u4f46\u662f\u51fa\u73b0\u5728\u64cd\u4f5c\u6570\u4e4b\u540e\uff0c\u5e76\u4e14\u610f\u4e49\u4e0d\u540c\uff1aX++\u3002\n\u4e09\u5143\n\u53ea\u6709\u4e00\u4e2a\u4e09\u5143\u8fd0\u7b97\u7b26\uff0c\u610f\u601d\u662f\u201c\u4e09\u4e2a\u64cd\u4f5c\u6570\u201d\uff1aX ? Y : Z\u3002\n\u7b97\u6570\u8fd0\u7b97\u7b26\n\u4e0b\u9762\u662f\u57fa\u672c\u7684\u7b97\u6570\u8fd0\u7b97\u7b26\uff0c\u6211\u5c06\u51fd\u6570\u8c03\u7528()\u653e\u5165\u5176\u4e2d\u56e0\u4e3a\u5b83\u66f4\u63a5\u8fd1\u201c\u7b97\u6570\u201d\u8fd0\u7b97\u3002\n()\n\u51fd\u6570\u8c03\u7528\u3002\n\u4e8c\u5143 *\n\u4e58\u6cd5\u3002\n\/\n\u9664\u6cd5\u3002\n\u4e8c\u5143 +\n\u52a0\u6cd5\u3002\n\u4e00\u5143 +\n\u65e0\u53d8\u5316\u3002\n\u540e\u7f00 ++\n\u8bfb\u53d6\u53d8\u91cf\u7136\u540e\u81ea\u589e\u3002\n\u524d\u7f00 ++\n\u81ea\u589e\u53d8\u91cf\u7136\u540e\u8bfb\u53d6\u3002\n\u540e\u7f00 --\n\u8bfb\u53d6\u53d8\u91cf\u7136\u540e\u81ea\u51cf\u3002\n\u524d\u7f00 --\n\u81ea\u51cf\u53d8\u91cf\u7136\u540e\u8bfb\u53d6\u3002\n\u4e8c\u5143 -\n\u51cf\u6cd5\u3002\n\u4e00\u5143 -\n\u53d6\u53cd\uff0c\u53ef\u7528\u4e8e\u8868\u793a\u8d1f\u6570\u3002\n\u6570\u636e\u8fd0\u7b97\n\u5b83\u4eec\u7528\u4e8e\u4ee5\u4e0d\u540c\u65b9\u5f0f\u548c\u5f62\u5f0f\u8bbf\u95ee\u6570\u636e\u3002\n-&gt;\n\u7ed3\u6784\u4f53\u6307\u9488\u7684\u6210\u5458\u8bbf\u95ee\u3002\u4e00\u5143*\u548c.\u8fd0\u7b97\u7b26\u7684\u590d\u5408\u3002\n.\n\u7ed3\u6784\u4f53\u503c\u7684\u6210\u5458\u8bbf\u95ee\u3002\n[]\n\u53d6\u6570\u7ec4\u4e0b\u6807\u3002\u4e8c\u5143+\u548c\u4e00\u5143*\u8fd0\u7b97\u7b26\u7684\u590d\u5408\u3002\nsizeof\n\u53d6\u7c7b\u578b\u6216\u53d8\u91cf\u5927\u5c0f\u3002\n\u4e00\u5143 &amp;\n\u53d6\u5730\u5740\u3002\n\u4e00\u5143 *\n\u53d6\u503c\uff08\u63d0\u9886\u5730\u5740\uff09\u3002\n\u903b\u8f91\u8fd0\u7b97\u7b26\n\u5b83\u4eec\u7528\u4e8e\u6d4b\u8bd5\u53d8\u91cf\u7684\u7b49\u6027\u548c\u4e0d\u7b49\u6027\u3002\n!=\n\u4e0d\u7b49\u4e8e\u3002\n&lt;\n\u5c0f\u4e8e\u3002\n&lt;=\n\u5c0f\u4e8e\u7b49\u4e8e\u3002\n==\n\u7b49\u4e8e\uff08\u5e76\u4e0d\u662f\u8d4b\u503c\uff09\u3002\n&gt;\n\u5927\u4e8e\u3002\n&gt;=\n\u5927\u4e8e\u7b49\u4e8e\u3002\n\u4f4d\u8fd0\u7b97\u7b26\n\u5b83\u4eec\u66f4\u52a0\u9ad8\u7ea7\uff0c\u7528\u4e8e\u4fee\u6539\u6574\u6570\u7684\u539f\u59cb\u4f4d\u3002\n\u4e8c\u5143 &amp;\n\u4f4d\u4e0e\u3002\n&lt;&lt;\n\u5de6\u79fb\u3002\n&gt;&gt;\n\u53f3\u79fb\u3002\n^\n\u4f4d\u5f02\u6216\u3002\n|\n\u4f4d\u6216\u3002\n~\n\u53d6\u8865\uff08\u7ffb\u8f6c\u6240\u6709\u4f4d\uff09\u3002\n\u5e03\u5c14\u8fd0\u7b97\u7b26\u3002\n\u7528\u4e8e\u771f\u503c\u6d4b\u8bd5\uff0c\u4ed4\u7ec6\u5b66\u4e60\u4e09\u5143\u8fd0\u7b97\u7b26\uff0c\u5b83\u975e\u5e38\u6709\u7528\u3002\n!\n\u53d6\u975e\u3002\n&amp;&amp;\n\u4e0e\u3002\n||\n\u6216\u3002\n?:\n\u4e09\u5143\u771f\u503c\u6d4b\u8bd5\uff0cX ? Y : Z\u8bfb\u4f5c\u201c\u82e5X\u5219Y\u5426\u5219Z\u201d\u3002\n\u8d4b\u503c\u8fd0\u7b97\u7b26\n\u590d\u5408\u8d4b\u503c\u8fd0\u7b97\u7b26\u5728\u8d4b\u503c\u540c\u65f6\u6267\u884c\u8fd0\u7b97\u3002\u5927\u591a\u6570\u4e0a\u9762\u7684\u8fd0\u7b97\u7b26\u90fd\u53ef\u4ee5\u7ec4\u6210\u590d\u5408\u8d4b\u503c\u8fd0\u7b97\u7b26\u3002\n=\n\u8d4b\u503c\u3002\n%=\n\u53d6\u4f59\u8d4b\u503c\u3002\n&amp;=\n\u4f4d\u4e0e\u8d4b\u503c\u3002\n*=\n\u4e58\u6cd5\u8d4b\u503c\u3002\n+=\n\u52a0\u6cd5\u8d4b\u503c\u3002\n-=\n\u51cf\u6cd5\u8d4b\u503c\u3002\n\/=\n\u9664\u6cd5\u8d4b\u503c\u3002\n&lt;&lt;=\n\u5de6\u79fb\u8d4b\u503c\u3002\n&gt;&gt;=\n\u53f3\u79fb\u8d4b\u503c\u3002\n^=\n\u4f4d\u5f02\u6216\u8d4b\u503c\u3002\n|=\n\u4f4d\u6216\u8d4b\u503c\u3002\n\u53ef\u7528\u7684\u63a7\u5236\u7ed3\u6784\n\u4e0b\u9762\u662f\u4e00\u4e9b\u4f60\u6ca1\u6709\u63a5\u89e6\u8fc7\u7684\u63a7\u5236\u7ed3\u6784\uff1a\ndo-while\ndo { ... } while(X);\u9996\u5148\u6267\u884c\u82b1\u62ec\u53f7\u4e2d\u7684\u4ee3\u7801\uff0c\u4e4b\u540e\u518d\u8df3\u51fa\u524d\u6d4b\u8bd5X\u8868\u8fbe\u5f0f\u3002\nbreak\n\u653e\u5728\u5faa\u73af\u4e2d\u7528\u4e8e\u8df3\u51fa\u5faa\u73af\u3002\ncontinue\n\u8df3\u5230\u5faa\u73af\u5c3e\u3002\ngoto\n\u8df3\u5230\u4f60\u5df2\u7ecf\u653e\u7f6elabel\u7684\u4f4d\u7f6e\uff0c\u4f60\u5df2\u7ecf\u5728dbg.h\u4e2d\u770b\u5230\u5b83\u4e86\uff0c\u7528\u4e8e\u8df3\u5230error\u6807\u7b7e\u3002\n\u9644\u52a0\u9898\n\n\u9605\u8bfbstdint.h\u6216\u5b83\u7684\u63cf\u8ff0\uff0c\u5199\u51fa\u6240\u6709\u53ef\u80fd\u51fa\u73b0\u7684\u5927\u5c0f\u5b9a\u4e49\u3002\n\u67e5\u8be2\u672c\u7ec3\u4e60\u7684\u6bcf\u4e00\u9879\uff0c\u5199\u51fa\u5b83\u5728\u4ee3\u7801\u4e2d\u7684\u4f5c\u7528\u3002\u4e0a\u7f51\u6d4f\u89c8\u8d44\u6599\u6765\u7814\u7a76\u5b83\u5982\u4f55\u6b63\u786e\u4f7f\u7528\u3002\n\u5c06\u8fd9\u4e9b\u4fe1\u606f\u505a\u6210\u6559\u5b66\u5361\u7247\uff0c\u6bcf\u5929\u770b\u4e0a15\u5206\u949f\u6765\u8bb0\u4f4f\u5b83\u4eec\u3002\n\u521b\u5efa\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u6253\u5370\u51fa\u6bcf\u4e2a\u7c7b\u578b\u7684\u793a\u4f8b\uff0c\u5e76\u9a8c\u8bc1\u4f60\u7684\u7814\u7a76\u7ed3\u679c\u662f\u5426\u6b63\u786e\u3002\n","categories":"\u7ec3\u4e603","tags":["\u7ed3\u6784","\u8bed\u8a00","\u4fee\u9970\u7b26"]},{"title":"\u6808\u3001\u4f5c\u7528\u57df\u548c\u5168\u5c40","url":"https:\/\/naka507.github.io\/posts\/6822F5C25F64C05F.html","content":"\u6808\u3001\u4f5c\u7528\u57df\u548c\u5168\u5c40\n\u8bb8\u591a\u4eba\u5728\u5f00\u59cb\u7f16\u7a0b\u65f6\uff0c\u5bf9\u201c\u4f5c\u7528\u57df\u201d\u8fd9\u4e2a\u6982\u5ff5\u90fd\u4e0d\u662f\u5f88\u6e05\u695a\u3002\u8d77\u521d\u5b83\u6765\u6e90\u4e8e\u7cfb\u7edf\u6808\u7684\u4f7f\u7528\u65b9\u5f0f\uff08\u5728\u4e4b\u524d\u63d0\u5230\u8fc7\u4e00\u4e9b\uff09\uff0c\u4ee5\u53ca\u5b83\u7528\u4e8e\u4e34\u65f6\u53d8\u91cf\u50a8\u5b58\u7684\u65b9\u5f0f\u3002\u8fd9\u4e2a\u7ec3\u4e60\u4e2d\uff0c\u6211\u4eec\u4f1a\u901a\u8fc7\u5b66\u4e60\u6808\u6570\u636e\u7ed3\u6784\u5982\u4f55\u5de5\u4f5c\u6765\u4e86\u89e3\u4f5c\u7528\u57df\uff0c\u7136\u540e\u518d\u6765\u770b\u770b\u73b0\u4ee3C\u8bed\u8a00\u5904\u7406\u4f5c\u7528\u57df\u7684\u65b9\u5f0f\u3002\n\u8fd9\u4e2a\u7ec3\u4e60\u7684\u771f\u6b63\u76ee\u7684\u662f\u4e86\u89e3\u4e00\u4e9b\u6bd4\u8f83\u9ebb\u70e6\u7684\u4e1c\u897f\u5728C\u4e2d\u5982\u4f55\u5b58\u50a8\u3002\u5f53\u4e00\u4e2a\u4eba\u6ca1\u6709\u638c\u63e1\u4f5c\u7528\u57df\u7684\u6982\u5ff5\u65f6\uff0c\u5b83\u51e0\u4e4e\u4e5f\u4e0d\u80fd\u7406\u89e3\u53d8\u91cf\u5728\u54ea\u91cc\u88ab\u521b\u5efa\uff0c\u5b58\u5728\u4ee5\u53ca\u9500\u6bc1\u3002\u4e00\u65e6\u4f60\u77e5\u9053\u4e86\u8fd9\u4e9b\uff0c\u4f5c\u7528\u57df\u7684\u6982\u5ff5\u4f1a\u53d8\u5f97\u6613\u4e8e\u7406\u89e3\u3002\n\u8fd9\u4e2a\u7ec3\u4e60\u9700\u8981\u5982\u4e0b\u4e09\u4e2a\u6587\u4ef6\uff1a\nex22.h\n\u7528\u4e8e\u521b\u5efa\u4e00\u4e9b\u5916\u90e8\u53d8\u91cf\u548c\u4e00\u4e9b\u51fd\u6570\u7684\u5934\u6587\u4ef6\u3002\nex22.c\n\u5b83\u5e76\u4e0d\u50cf\u901a\u5e38\u4e00\u6837\uff0c\u662f\u5305\u542bmain\u7684\u6e90\u6587\u4ef6\uff0c\u800c\u662f\u542b\u6709\u4e00\u4e9bex22.h\u4e2d\u58f0\u660e\u7684\u51fd\u6570\u548c\u53d8\u91cf\uff0c\u5e76\u4e14\u4f1a\u53d8\u6210ex22.o\u3002\nex22_main.c\nmain\u51fd\u6570\u5b9e\u9645\u6240\u5728\u7684\u6587\u4ef6\uff0c\u5b83\u4f1a\u5305\u542b\u53e6\u5916\u4e24\u4e2a\u6587\u4ef6\uff0c\u5e76\u6f14\u793a\u4e86\u5b83\u4eec\u5305\u542b\u7684\u4e1c\u897f\u4ee5\u53ca\u5176\u5b83\u4f5c\u7528\u57df\u6982\u5ff5\u3002\nex22.h \u548c ex22.c\n\u4f60\u7684\u7b2c\u4e00\u6b65\u662f\u521b\u5efa\u4f60\u81ea\u5df1\u7684ex22.h\u5934\u6587\u4ef6\uff0c\u5176\u4e2d\u5b9a\u4e49\u4e86\u6240\u9700\u7684\u51fd\u6570\u548c\u201c\u5bfc\u51fa\u201d\u53d8\u91cf\u3002\n#ifndef _ex22_h\n#define _ex22_h\n\n\/\/ makes THE_SIZE in ex22.c available to other .c files\nextern int THE_SIZE;\n\n\/\/ gets and sets an internal static variable in ex22.c\nint get_age();\nvoid set_age(int age);\n\n\/\/ updates a static variable that's inside update_ratio\ndouble update_ratio(double ratio);\n\nvoid print_size();\n\n#endif\n\u6700\u91cd\u8981\u7684\u4e8b\u60c5\u662fextern int THE_SIZE\u7684\u7528\u6cd5\uff0c\u6211\u5c06\u4f1a\u5728\u4f60\u521b\u5efa\u5b8cex22.c\u4e4b\u540e\u89e3\u91ca\u5b83\uff1a\n#include &lt;stdio.h&gt;\n#include \"ex22.h\"\n#include \"dbg.h\"\n\nint THE_SIZE = 1000;\n\nstatic int THE_AGE = 37;\n\nint get_age()\n{\n    return THE_AGE;\n}\n\nvoid set_age(int age)\n{\n    THE_AGE = age;\n}\n\n\ndouble update_ratio(double new_ratio)\n{\n    static double ratio = 1.0;\n\n    double old_ratio = ratio;\n    ratio = new_ratio;\n\n    return old_ratio;\n}\n\nvoid print_size()\n{\n    log_info(\"I think size is: %d\", THE_SIZE);\n}\n\u8fd9\u4e24\u4e2a\u6587\u4ef6\u5f15\u5165\u4e86\u4e00\u4e9b\u65b0\u7684\u53d8\u91cf\u50a8\u5b58\u65b9\u5f0f\uff1a\nextern\n\u8fd9\u4e2a\u5173\u952e\u8bcd\u544a\u8bc9\u7f16\u8bd1\u5668\u201c\u8fd9\u4e2a\u53d8\u91cf\u5df2\u5b58\u5728\uff0c\u4f46\u662f\u4ed6\u5728\u522b\u7684\u2018\u5916\u90e8\u533a\u57df\u2019\u91cc\u201d\u3002\u901a\u5e38\u5b83\u7684\u610f\u601d\u662f\u4e00\u4e2a.c\u6587\u4ef6\u8981\u7528\u5230\u53e6\u4e00\u4e2a.c\u6587\u4ef6\u4e2d\u5b9a\u4e49\u7684\u53d8\u91cf\u3002\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u53ef\u4ee5\u8bf4ex22.c\u4e2d\u7684THE_SIZE\u53d8\u91cf\u80fd\u88abex22_main.c\u8bbf\u95ee\u5230\u3002\nstatic\uff08\u6587\u4ef6\uff09\n\u8fd9\u4e2a\u5173\u952e\u8bcd\u67d0\u79cd\u610f\u4e49\u4e0a\u662fextern\u7684\u53cd\u4e49\u8bcd\uff0c\u610f\u601d\u662f\u8fd9\u4e2a\u53d8\u91cf\u53ea\u80fd\u5728\u5f53\u524d\u7684.c\u6587\u4ef6\u4e2d\u4f7f\u7528\uff0c\u7a0b\u5e8f\u7684\u5176\u5b83\u90e8\u5206\u4e0d\u53ef\u8bbf\u95ee\u3002\u8981\u8bb0\u4f4f\u6587\u4ef6\u7ea7\u522b\u7684static\uff08\u6bd4\u5982\u8fd9\u91cc\u7684THE_AGE\uff09\u548c\u5176\u5b83\u4f4d\u7f6e\u4e0d\u540c\u3002\nstatic\uff08\u51fd\u6570\uff09\n\u5982\u679c\u4f60\u4f7f\u7528static\u5728\u51fd\u6570\u4e2d\u58f0\u660e\u53d8\u91cf\uff0c\u5b83\u548c\u6587\u4ef6\u4e2d\u7684static\u5b9a\u4e49\u7c7b\u4f3c\uff0c\u4f46\u662f\u53ea\u80fd\u591f\u5728\u8be5\u51fd\u6570\u4e2d\u8bbf\u95ee\u3002\u5b83\u662f\u4e00\u79cd\u521b\u5efa\u67d0\u4e2a\u51fd\u6570\u7684\u6301\u7eed\u72b6\u6001\u7684\u65b9\u6cd5\uff0c\u4f46\u4e8b\u5b9e\u4e0a\u5b83\u5f88\u5c11\u7528\u4e8e\u73b0\u4ee3\u7684C\u8bed\u8a00\uff0c\u56e0\u4e3a\u5b83\u4eec\u5f88\u96be\u548c\u7ebf\u7a0b\u4e00\u8d77\u4f7f\u7528\u3002\n\u5728\u4e0a\u9762\u7684\u4e24\u4e2a\u6587\u4ef6\u4e2d\uff0c\u4f60\u9700\u8981\u7406\u89e3\u5982\u4e0b\u51e0\u4e2a\u53d8\u91cf\u548c\u51fd\u6570\uff1a\nTHE_SIZE\n\u8fd9\u4e2a\u4f60\u4f7f\u7528extern\u58f0\u660e\u7684\u53d8\u91cf\u5c06\u4f1a\u5728ex22_main.c\u4e2d\u7528\u5230\u3002\nget_age\u548cset_age\n\u5b83\u4eec\u7528\u4e8e\u64cd\u4f5c\u9759\u6001\u53d8\u91cfTHE_AGE\uff0c\u5e76\u901a\u8fc7\u51fd\u6570\u5c06\u5176\u66b4\u9732\u7ed9\u7a0b\u5e8f\u7684\u5176\u5b83\u90e8\u5206\u3002\u4f60\u4e0d\u80fd\u591f\u76f4\u63a5\u8bbf\u95ee\u5230THE_AGE\uff0c\u4f46\u662f\u8fd9\u4e9b\u51fd\u6570\u53ef\u4ee5\u3002\nupdate_ratio\n\u5b83\u751f\u6210\u65b0\u7684ratio\u503c\u5e76\u8fd4\u56de\u65e7\u7684\u503c\u3002\u5b83\u4f7f\u7528\u4e86\u51fd\u6570\u7ea7\u7684\u9759\u6001\u53d8\u91cfratio\u6765\u8ddf\u8e2aratio\u5f53\u524d\u7684\u503c\u3002\nprint_size\n\u6253\u5370\u51faex22.c\u6240\u8ba4\u4e3a\u7684THE_SIZE\u7684\u5f53\u524d\u503c\u3002\nex22_main.c\n\u4e00\u65e6\u4f60\u5199\u5b8c\u4e86\u4e0a\u9762\u90a3\u4e9b\u6587\u4ef6\uff0c\u4f60\u53ef\u4ee5\u63a5\u7740\u7f16\u7a0bmain\u51fd\u6570\uff0c\u5b83\u4f1a\u4f7f\u7528\u6240\u6709\u4e0a\u9762\u7684\u6587\u4ef6\u5e76\u4e14\u6f14\u793a\u4e86\u4e00\u4e9b\u66f4\u591a\u7684\u4f5c\u7528\u57df\u8f6c\u6362\uff1a\n#include \"ex22.h\"\n#include \"dbg.h\"\n\nconst char *MY_NAME = \"Zed A. Shaw\";\n\nvoid scope_demo(int count)\n{\n    log_info(\"count is: %d\", count);\n\n    if(count &gt; 10) {\n        int count = 100;  \/\/ BAD! BUGS!\n\n        log_info(\"count in this scope is %d\", count);\n    }\n\n    log_info(\"count is at exit: %d\", count);\n\n    count = 3000;\n\n    log_info(\"count after assign: %d\", count);\n}\n\nint main(int argc, char *argv[])\n{\n    \/\/ test out THE_AGE accessors\n    log_info(\"My name: %s, age: %d\", MY_NAME, get_age());\n\n    set_age(100);\n\n    log_info(\"My age is now: %d\", get_age());\n\n    \/\/ test out THE_SIZE extern\n    log_info(\"THE_SIZE is: %d\", THE_SIZE);\n    print_size();\n\n    THE_SIZE = 9;\n\n    log_info(\"THE SIZE is now: %d\", THE_SIZE);\n    print_size();\n\n    \/\/ test the ratio function static\n    log_info(\"Ratio at first: %f\", update_ratio(2.0));\n    log_info(\"Ratio again: %f\", update_ratio(10.0));\n    log_info(\"Ratio once more: %f\", update_ratio(300.0));\n\n    \/\/ test the scope demo\n    int count = 4;\n    scope_demo(count);\n    scope_demo(count * 20);\n\n    log_info(\"count after calling scope_demo: %d\", count);\n\n    return 0;\n}\n\u6211\u4f1a\u628a\u8fd9\u4e2a\u6587\u4ef6\u9010\u884c\u62c6\u5206\uff0c\u4f60\u5e94\u8be5\u80fd\u591f\u627e\u5230\u6211\u63d0\u5230\u7684\u6bcf\u4e2a\u53d8\u91cf\u5728\u54ea\u91cc\u5b9a\u4e49\u3002\nex22_main.c:4\n\u4f7f\u7528\u4e86const\u6765\u521b\u5efa\u5e38\u91cf\uff0c\u5b83\u53ef\u7528\u4e8e\u66ff\u4ee3define\u6765\u521b\u5efa\u5e38\u91cf\u3002\nex22_main.c:6\n\u4e00\u4e2a\u7b80\u5355\u7684\u51fd\u6570\uff0c\u6f14\u793a\u4e86\u51fd\u6570\u4e2d\u66f4\u591a\u7684\u4f5c\u7528\u57df\u95ee\u9898\u3002\nex22_main.c:8\n\u5728\u51fd\u6570\u9876\u7aef\u6253\u5370\u51facount\u7684\u503c\u3002\nex22_main.c:10\nif\u8bed\u53e5\u4f1a\u5f00\u542f\u4e00\u4e2a\u65b0\u7684\u4f5c\u7528\u57df\u533a\u5757\uff0c\u5e76\u4e14\u5728\u5176\u4e2d\u521b\u5efa\u4e86\u53e6\u4e00\u4e2acount\u53d8\u91cf\u3002\u8fd9\u4e2a\u7248\u672c\u7684count\u53d8\u91cf\u662f\u4e00\u4e2a\u5168\u65b0\u7684\u53d8\u91cf\u3002if\u8bed\u53e5\u5c31\u597d\u50cf\u5f00\u542f\u4e86\u4e00\u4e2a\u65b0\u7684\u201c\u8ff7\u4f60\u51fd\u6570\u201d\u3002\nex22_main.c:11\ncount\u5bf9\u4e8e\u5f53\u524d\u533a\u5757\u662f\u5c40\u90e8\u53d8\u91cf\uff0c\u5b9e\u9645\u4e0a\u4e0d\u540c\u4e8e\u51fd\u6570\u53c2\u6570\u5217\u8868\u4e2d\u7684\u53c2\u6570\u3002\nex22_main.c:13\n\u5c06\u5b83\u6253\u5370\u51fa\u6765\uff0c\u6240\u4ee5\u4f60\u53ef\u4ee5\u5728\u8fd9\u91cc\u770b\u5230100\uff0c\u5e76\u4e0d\u662f\u4f20\u7ed9scope_demo\u7684\u53c2\u6570\u3002\nex22_main.c:16\n\u8fd9\u91cc\u662f\u6700\u96be\u61c2\u5f97\u90e8\u5206\u3002\u4f60\u5728\u4e24\u90e8\u5206\u90fd\u6709count\u53d8\u91cf\uff0c\u4e00\u4e2a\u6570\u51fd\u6570\u53c2\u6570\uff0c\u53e6\u4e00\u4e2a\u662fif\u8bed\u53e5\u4e2d\u3002if\u8bed\u53e5\u521b\u5efa\u4e86\u65b0\u7684\u4ee3\u7801\u5757\uff0c\u6240\u4ee511\u884c\u7684count\u5e76\u4e0d\u5f71\u54cd\u540c\u540d\u7684\u53c2\u6570\u3002\u8fd9\u4e00\u884c\u5c06\u5176\u6253\u5370\u51fa\u6765\uff0c\u4f60\u4f1a\u770b\u5230\u5b83\u6253\u5370\u4e86\u53c2\u6570\u7684\u503c\u800c\u4e0d\u662f100\u3002\nex22_main.c:18-20\n\u4e4b\u540e\u6211\u5c06count\u53c2\u6570\u8bbe\u4e3a3000\u5e76\u4e14\u6253\u5370\u51fa\u6765\uff0c\u8fd9\u91cc\u6f14\u793a\u4e86\u4f60\u4e5f\u53ef\u4ee5\u4fee\u6539\u51fd\u6570\u53c2\u6570\u7684\u503c\uff0c\u4f46\u5e76\u4e0d\u4f1a\u5f71\u54cd\u53d8\u91cf\u7684\u8c03\u7528\u8005\u7248\u672c\u3002\n\u786e\u4fdd\u4f60\u6d4f\u89c8\u4e86\u6574\u4e2a\u51fd\u6570\uff0c\u4f46\u662f\u4e0d\u8981\u8ba4\u4e3a\u4f60\u5df2\u7ecf\u5341\u5206\u4e86\u89e3\u4f5c\u7528\u5a31\u4e50\u3002\u5982\u679c\u4f60\u5728\u4e00\u4e2a\u4ee3\u7801\u5757\u4e2d\uff08\u6bd4\u5982if\u6216while\u8bed\u53e5\uff09\u521b\u5efa\u4e86\u4e00\u4e9b\u53d8\u91cf\uff0c\u8fd9\u4e9b\u53d8\u91cf\u662f\u5168\u65b0\u7684\u53d8\u91cf\uff0c\u5e76\u4e14\u53ea\u5728\u8fd9\u4e2a\u4ee3\u7801\u5757\u4e2d\u5b58\u5728\u3002\u8fd9\u662f\u81f3\u5173\u91cd\u8981\u7684\u4e1c\u897f\uff0c\u4e5f\u662f\u8bb8\u591abug\u7684\u6765\u6e90\u3002\u6211\u8981\u5f3a\u8c03\u4f60\u5e94\u8be5\u5728\u8fd9\u91cc\u82b1\u4e00\u4e9b\u65f6\u95f4\u3002\nex22_main.c\u7684\u5269\u4f59\u90e8\u5206\u901a\u8fc7\u64cd\u4f5c\u548c\u6253\u5370\u53d8\u91cf\u6f14\u793a\u4e86\u5b83\u4eec\u7684\u5168\u90e8\u3002\nex22_main.c:26\n\u6253\u5370\u51faMY_NAME\u7684\u5f53\u524d\u503c\uff0c\u5e76\u4e14\u4f7f\u7528get_age\u8bfb\u5199\u5668\u4eceex22.c\u83b7\u53d6THE_AGE\u3002\nex22_main.c:27-30\n\u4f7f\u7528\u4e86ex22.c\u4e2d\u7684set_age\u6765\u4fee\u6539\u5e76\u6253\u5370THE_AGE\u3002\nex22_main.c:33-39\n\u63a5\u4e0b\u6765\u6211\u5bf9ex22.c\u4e2d\u7684THE_SIZE\u505a\u4e86\u76f8\u540c\u7684\u4e8b\u60c5\uff0c\u4f46\u8fd9\u4e00\u6b21\u6211\u76f4\u63a5\u8bbf\u95ee\u4e86\u5b83\uff0c\u5e76\u4e14\u540c\u65f6\u6f14\u793a\u4e86\u5b83\u5b9e\u9645\u4e0a\u5728\u90a3\u4e2a\u6587\u4ef6\u4e2d\u5df2\u7ecf\u4fee\u6539\u4e86\uff0c\u8fd8\u4f7f\u7528print_size\u6253\u5370\u4e86\u5b83\u3002\nex22_main.c:42-44\n\u5c55\u793a\u4e86update_ratio\u4e2d\u7684ratio\u5728\u4e24\u6b21\u51fd\u6570\u8c03\u7528\u4e2d\u5982\u4f55\u4fdd\u6301\u4e86\u5b83\u7684\u503c\u3002\nex22_main.c:46-51\n\u6700\u540e\u8fd0\u884cscope_demo\uff0c\u4f60\u53ef\u4ee5\u5728\u5b9e\u4f8b\u4e2d\u89c2\u5bdf\u5230\u4f5c\u7528\u57df\u3002\u8981\u6ce8\u610f\u5230\u7684\u5173\u952e\u70b9\u662f\uff0ccount\u5c40\u90e8\u53d8\u91cf\u5728\u8c03\u7528\u540e\u4fdd\u6301\u4e0d\u53d8\u3002\u4f60\u5c06\u5b83\u50cf\u4e00\u4e2a\u53d8\u91cf\u4e00\u6837\u4f20\u5165\u51fd\u6570\uff0c\u5b83\u4e00\u5b9a\u4e0d\u4f1a\u53d1\u751f\u6539\u53d8\u3002\u8981\u60f3\u8fbe\u5230\u76ee\u7684\u4f60\u9700\u8981\u6211\u4eec\u7684\u8001\u670b\u53cb\u6307\u9488\u3002\u5982\u679c\u4f60\u5c06\u6307\u5411count\u7684\u6307\u9488\u4f20\u5165\u51fd\u6570\uff0c\u90a3\u4e48\u51fd\u6570\u5c31\u4f1a\u6301\u6709\u5b83\u7684\u5730\u5740\u5e76\u4e14\u80fd\u591f\u6539\u53d8\u5b83\u3002\n\u4e0a\u9762\u89e3\u91ca\u4e86\u8fd9\u4e9b\u6587\u4ef6\u4e2d\u6240\u53d1\u751f\u7684\u4e8b\u60c5\uff0c\u4f46\u662f\u4f60\u5e94\u8be5\u8ddf\u8e2a\u5b83\u4eec\uff0c\u5e76\u4e14\u786e\u4fdd\u5728\u4f60\u5b66\u4e60\u7684\u8fc7\u7a0b\u4e2d\u660e\u767d\u4e86\u6bcf\u4e2a\u53d8\u91cf\u90fd\u5728\u4ec0\u4e48\u4f4d\u7f6e\u3002\n\u4f60\u4f1a\u770b\u5230\u4ec0\u4e48\n\u8fd9\u6b21\u6211\u60f3\u8ba9\u4f60\u624b\u52a8\u6784\u5efa\u8fd9\u4e24\u4e2a\u6587\u4ef6\uff0c\u800c\u4e0d\u662f\u4f7f\u7528\u4f60\u7684Makefile\u3002\u4e8e\u662f\u4f60\u53ef\u4ee5\u770b\u5230\u5b83\u4eec\u5b9e\u9645\u4e0a\u5982\u4f55\u88ab\u7f16\u8bd1\u5668\u653e\u5230\u4e00\u8d77\u3002\u8fd9\u662f\u4f60\u5e94\u8be5\u505a\u7684\u4e8b\u60c5\uff0c\u5e76\u4e14\u4f60\u5e94\u8be5\u770b\u5230\u5982\u4e0b\u8f93\u51fa\uff1a\n$ cc -Wall -g -DNDEBUG   -c -o ex22.o ex22.c\n$ cc -Wall -g -DNDEBUG    ex22_main.c ex22.o   -o ex22_main\n$ .\/ex22_main\n[INFO] (ex22_main.c:26) My name: Zed A. Shaw, age: 37\n[INFO] (ex22_main.c:30) My age is now: 100\n[INFO] (ex22_main.c:33) THE_SIZE is: 1000\n[INFO] (ex22.c:32) I think size is: 1000\n[INFO] (ex22_main.c:38) THE SIZE is now: 9\n[INFO] (ex22.c:32) I think size is: 9\n[INFO] (ex22_main.c:42) Ratio at first: 1.000000\n[INFO] (ex22_main.c:43) Ratio again: 2.000000\n[INFO] (ex22_main.c:44) Ratio once more: 10.000000\n[INFO] (ex22_main.c:8) count is: 4\n[INFO] (ex22_main.c:16) count is at exit: 4\n[INFO] (ex22_main.c:20) count after assign: 3000\n[INFO] (ex22_main.c:8) count is: 80\n[INFO] (ex22_main.c:13) count in this scope is 100\n[INFO] (ex22_main.c:16) count is at exit: 80\n[INFO] (ex22_main.c:20) count after assign: 3000\n[INFO] (ex22_main.c:51) count after calling scope_demo: 4\n\u786e\u4fdd\u4f60\u8ddf\u8e2a\u4e86\u6bcf\u4e2a\u53d8\u91cf\u662f\u5982\u4f55\u6539\u53d8\u7684\uff0c\u5e76\u4e14\u5c06\u5176\u5339\u914d\u5230\u6240\u8f93\u51fa\u7684\u90a3\u4e00\u884c\u3002\u6211\u4f7f\u7528\u4e86dbg.h\u7684log_info\u6765\u8ba9\u4f60\u83b7\u5f97\u6bcf\u4e2a\u53d8\u91cf\u6253\u5370\u7684\u5177\u4f53\u884c\u53f7\uff0c\u5e76\u4e14\u5728\u6587\u4ef6\u4e2d\u627e\u5230\u5b83\u7528\u4e8e\u8ddf\u8e2a\u3002\n\u4f5c\u7528\u57df\u3001\u6808\u548cBug\n\u5982\u679c\u4f60\u6b63\u786e\u5b8c\u6210\u4e86\u8fd9\u4e2a\u7ec3\u4e60\uff0c\u4f60\u4f1a\u770b\u5230\u6709\u5f88\u591a\u4e0d\u540c\u65b9\u5f0f\u5728C\u4ee3\u7801\u4e2d\u653e\u7f6e\u53d8\u91cf\u3002\u4f60\u53ef\u4ee5\u4f7f\u7528extern\u6216\u8005\u8bbf\u95ee\u7c7b\u4f3cget_age\u7684\u51fd\u6570\u6765\u521b\u5efa\u5168\u5c40\u3002\u4f60\u4e5f\u53ef\u4ee5\u5728\u4efb\u4f55\u4ee3\u7801\u5757\u4e2d\u521b\u5efa\u65b0\u7684\u53d8\u91cf\uff0c\u5b83\u4eec\u5728\u9000\u51fa\u4ee3\u7801\u5757\u4e4b\u524d\u4f1a\u62e5\u6709\u81ea\u5df1\u7684\u503c\uff0c\u5e76\u4e14\u5c4f\u853d\u6389\u5916\u90e8\u7684\u53d8\u91cf\u3002\u4f60\u4e5f\u53ef\u4ee5\u54cd\u51fd\u6570\u4f20\u9012\u4e00\u4e2a\u503c\u5e76\u4e14\u4fee\u6539\u5b83\uff0c\u4f46\u662f\u8c03\u7528\u8005\u7684\u53d8\u91cf\u7248\u672c\u4e0d\u4f1a\u53d1\u751f\u6539\u53d8\u3002\n\u9700\u8981\u7406\u89e3\u7684\u6700\u91cd\u8981\u7684\u4e8b\u60c5\u662f\uff0c\u8fd9\u4e9b\u90fd\u53ef\u4ee5\u9020\u6210bug\u3002C\u4e2d\u5728\u4f60\u673a\u5668\u4e2d\u8bb8\u591a\u4f4d\u7f6e\u653e\u7f6e\u548c\u8bbf\u95ee\u53d8\u91cf\u7684\u80fd\u529b\u4f1a\u8ba9\u4f60\u5bf9\u5b83\u4eec\u6240\u5728\u7684\u4f4d\u7f6e\u611f\u5230\u56f0\u6270\u3002\u5982\u679c\u4f60\u4e0d\u77e5\u9053\u5b83\u4eec\u7684\u4f4d\u7f6e\uff0c\u4f60\u5c31\u53ef\u80fd\u4e0d\u80fd\u9002\u5f53\u5730\u7ba1\u7406\u5b83\u4eec\u3002\n\u4e0b\u9762\u662f\u4e00\u4e9b\u7f16\u7a0bC\u4ee3\u7801\u65f6\u9700\u8981\u9075\u5faa\u7684\u89c4\u5219\uff0c\u53ef\u4ee5\u8ba9\u4f60\u907f\u514d\u4e0e\u6808\u76f8\u5173\u7684bug\uff1a\n\n\u4e0d\u8981\u9690\u85cf\u67d0\u4e2a\u53d8\u91cf\uff0c\u5c31\u50cf\u4e0a\u9762scope_demo\u4e2d\u5bf9count\u6240\u505a\u7684\u4e00\u6837\u3002\u8fd9\u53ef\u80fd\u4f1a\u4ea7\u751f\u4e00\u4e9b\u9690\u853d\u7684bug\uff0c\u4f60\u8ba4\u4e3a\u4f60\u6539\u53d8\u4e86\u67d0\u4e2a\u53d8\u91cf\u4f46\u5b9e\u9645\u4e0a\u6ca1\u6709\u3002\n\u907f\u514d\u8fc7\u591a\u7684\u5168\u5c40\u53d8\u91cf\uff0c\u5c24\u5176\u662f\u8de8\u8d8a\u591a\u4e2a\u6587\u4ef6\u3002\u5982\u679c\u5fc5\u987b\u7684\u8bdd\uff0c\u8981\u4f7f\u7528\u8bfb\u5199\u5668\u51fd\u6570\uff0c\u5c31\u50cfget_age\u3002\u8fd9\u5e76\u4e0d\u9002\u7528\u4e8e\u5e38\u91cf\uff0c\u56e0\u4e3a\u5b83\u4eec\u662f\u53ea\u8bfb\u7684\u3002\u6211\u662f\u8bf4\u5bf9\u4e8eTHE_SIZE\u8fd9\u79cd\u53d8\u91cf\uff0c\u5982\u679c\u4f60\u5e0c\u671b\u522b\u4eba\u80fd\u591f\u4fee\u6539\u5b83\uff0c\u5c31\u5e94\u8be5\u4f7f\u7528\u8bfb\u5199\u5668\u51fd\u6570\u3002\n\u5728\u4f60\u4e0d\u6e05\u695a\u7684\u60c5\u51b5\u4e0b\uff0c\u5e94\u8be5\u628a\u5b83\u653e\u5728\u5806\u4e0a\u3002\u4e0d\u8981\u4f9d\u8d56\u4e8e\u6808\u7684\u8bed\u4e49\uff0c\u6216\u8005\u6307\u5b9a\u533a\u57df\uff0c\u800c\u662f\u8981\u76f4\u63a5\u4f7f\u7528malloc\u521b\u5efa\u5b83\u3002\n\u4e0d\u8981\u4f7f\u7528\u51fd\u6570\u7ea7\u7684\u9759\u6001\u53d8\u91cf\uff0c\u5c31\u50cfupdate_ratio\u3002\u5b83\u4eec\u5e76\u4e0d\u6709\u7528\uff0c\u800c\u4e14\u5f53\u4f60\u60f3\u8981\u4f7f\u4f60\u7684\u4ee3\u7801\u8fd0\u884c\u5728\u591a\u7ebf\u7a0b\u73af\u5883\u65f6\uff0c\u4f1a\u6709\u5f88\u5927\u7684\u9690\u60a3\u3002\u5bf9\u4e8e\u826f\u597d\u7684\u5168\u5c40\u53d8\u91cf\uff0c\u5b83\u4eec\u4e5f\u975e\u5e38\u96be\u4e8e\u5bfb\u627e\u3002\n\u907f\u514d\u590d\u7528\u51fd\u6570\u53c2\u6570\uff0c\u56e0\u4e3a\u4f60\u641e\u4e0d\u6e05\u695a\u4ec5\u4ec5\u60f3\u8981\u590d\u7528\u5b83\u8fd8\u662f\u5e0c\u671b\u4fee\u6539\u5b83\u7684\u8c03\u7528\u8005\u7248\u672c\u3002\n\n\u5982\u4f55\u4f7f\u5b83\u5d29\u6e83\n\u5bf9\u4e8e\u8fd9\u4e2a\u7ec3\u4e60\uff0c\u5d29\u6e83\u8fd9\u4e2a\u7a0b\u5e8f\u6d89\u53ca\u5230\u5c1d\u8bd5\u8bbf\u95ee\u6216\u4fee\u6539\u4f60\u4e0d\u80fd\u8bbf\u95ee\u7684\u4e1c\u897f\u3002\n\n\u8bd5\u7740\u4eceex22_main.c\u76f4\u63a5\u8bbf\u95eeex22.c\u4e2d\u7684\u4f60\u4e0d\u80fd\u8bbf\u95ee\u53d8\u91cf\u3002\u4f8b\u5982\uff0c\u4f60\u80fd\u4e0d\u80fd\u83b7\u53d6update_ratio\u4e2d\u7684ratio\uff1f\u5982\u679c\u4f60\u7528\u4e00\u4e2a\u6307\u9488\u6307\u5411\u5b83\u4f1a\u53d1\u751f\u4ec0\u4e48\uff1f\n\u79fb\u9664ex22.h\u7684extern\u58f0\u660e\uff0c\u6765\u89c2\u5bdf\u4f1a\u5f97\u5230\u4ec0\u4e48\u9519\u8bef\u6216\u8b66\u544a\u3002\n\u5bf9\u4e0d\u540c\u53d8\u91cf\u6dfb\u52a0static\u6216\u8005const\u9650\u5b9a\u7b26\uff0c\u4e4b\u540e\u5c1d\u8bd5\u4fee\u6539\u5b83\u4eec\u3002\n\n\u9644\u52a0\u9898\n\n\u7814\u7a76\u201c\u503c\u4f20\u9012\u201d\u548c\u201c\u5f15\u7528\u4f20\u9012\u201d\u7684\u5dee\u5f02\uff0c\u5e76\u4e14\u4e3a\u4e8c\u8005\u7f16\u5199\u793a\u4f8b\u3002\uff08\u8bd1\u8005\u6ce8\uff1aC\u4e2d\u6ca1\u6709\u5f15\u7528\u4f20\u9012\uff0c\u4f60\u53ef\u4ee5\u641c\u7d22\u201c\u6307\u9488\u4f20\u9012\u201d\u3002\uff09\n\u4f7f\u7528\u6307\u9488\u6765\u8bbf\u95ee\u539f\u672c\u4e0d\u80fd\u8bbf\u95ee\u7684\u53d8\u91cf\u3002\n\u4f7f\u7528Valgrind\u6765\u89c2\u5bdf\u9519\u8bef\u7684\u8bbf\u95ee\u662f\u4ec0\u4e48\u6837\u5b50\u3002\n\u7f16\u5199\u4e00\u4e2a\u9012\u5f52\u8c03\u7528\u5e76\u5bfc\u81f4\u6808\u6ea2\u51fa\u7684\u51fd\u6570\u3002\u5982\u679c\u4e0d\u77e5\u9053\u9012\u5f52\u51fd\u6570\u662f\u4ec0\u4e48\u7684\u8bdd\uff0c\u8bd5\u7740\u5728scope_demo\u5e95\u90e8\u8c03\u7528scope_demo\u672c\u8eab\uff0c\u4f1a\u5f62\u6210\u4e00\u79cd\u5faa\u73af\u3002\n\u91cd\u65b0\u7f16\u5199Makefile\u4f7f\u4e4b\u80fd\u591f\u6784\u5efa\u8fd9\u4e9b\u6587\u4ef6\u3002\n","categories":"\u7ec3\u4e603","tags":["\u7f16\u7a0b","\u8bed\u8a00","\u7ed3\u6784"]},{"title":"\u8ba4\u8bc6\u8fbe\u592b\u8bbe\u5907","url":"https:\/\/naka507.github.io\/posts\/F6AD606057D5DA1A.html","content":"\u8ba4\u8bc6\u8fbe\u592b\u8bbe\u5907\n\u8fd9\u4e2a\u7ec3\u4e60\u662f\u4e00\u4e2a\u8111\u7b4b\u6025\u8f6c\u5f2f\uff0c\u6211\u4f1a\u5411\u4f60\u4ecb\u7ecd\u6700\u8457\u540d\u7684C\u8bed\u8a00\u9ed1\u9b54\u6cd5\u4e4b\u4e00\uff0c\u53eb\u505a\u201c\u8fbe\u592b\u8bbe\u5907\u201d\uff0c\u4ee5\u201c\u53d1\u660e\u8005\u201d\u6c64\u59c6\u00b7\u8fbe\u592b\u7684\u540d\u5b57\u547d\u540d\u3002\u8fd9\u4e00\u5f3a\u5927\uff08\u6216\u90aa\u6076\uff1f\uff09\u7684\u4ee3\u7801\u4e2d\uff0c\u51e0\u4e4e\u4f60\u5b66\u8fc7\u7684\u4efb\u4f55\u4e1c\u897f\u90fd\u88ab\u5305\u88c5\u5728\u4e00\u4e2a\u5c0f\u7684\u7ed3\u6784\u4e2d\u3002\u5f04\u6e05\u5b83\u7684\u5de5\u4f5c\u673a\u5236\u4e5f\u662f\u4e00\u4e2a\u597d\u73a9\u7684\u8c1c\u9898\u3002\n\n\u6ce8\n\n\nC\u7684\u4e00\u90e8\u5206\u4e50\u8da3\u6765\u6e90\u4e8e\u8fd9\u79cd\u795e\u5947\u7684\u9ed1\u9b54\u6cd5\uff0c\u4f46\u8fd9\u4e5f\u662f\u4f7fC\u96be\u4ee5\u4f7f\u7528\u7684\u5730\u65b9\u3002\u4f60\u6700\u597d\u80fd\u591f\u4e86\u89e3\u8fd9\u4e9b\u6280\u5de7\uff0c\u56e0\u4e3a\u4ed6\u4f1a\u5e26\u7ed9\u4f60\u5173\u4e8eC\u8bed\u8a00\u548c\u4f60\u8ba1\u7b97\u673a\u7684\u6df1\u5165\u7406\u89e3\u3002\u4f46\u662f\uff0c\u4f60\u5e94\u8be5\u6c38\u8fdc\u90fd\u4e0d\u8981\u4f7f\u7528\u5b83\u4eec\uff0c\u5e76\u603b\u662f\u8ffd\u6c42\u7b80\u5355\u6613\u8bfb\u7684\u4ee3\u7801\u3002\n\n\u8fbe\u592b\u8bbe\u5907\u7531\u6c64\u59c6\u00b7\u8fbe\u592b\u201c\u53d1\u73b0\u201d\uff08\u6216\u521b\u9020\uff09\uff0c\u5b83\u662f\u4e00\u4e2aC\u7f16\u8bd1\u5668\u7684\u5c0f\u6280\u5de7\uff0c\u672c\u6765\u4e0d\u5e94\u8be5\u80fd\u591f\u6b63\u5e38\u5de5\u4f5c\u3002\u6211\u5e76\u4e0d\u60f3\u544a\u8bc9\u4f60\u505a\u4e86\u4ec0\u4e48\uff0c\u56e0\u4e3a\u8fd9\u662f\u4e00\u4e2a\u8c1c\u9898\uff0c\u7b49\u7740\u4f60\u6765\u601d\u8003\u5e76\u5c1d\u8bd5\u89e3\u51b3\u3002\u4f60\u9700\u8981\u8fd0\u884c\u8fd9\u6bb5\u4ee3\u7801\uff0c\u4e4b\u540e\u5c1d\u8bd5\u5f04\u6e05\u5b83\u505a\u4e86\u4ec0\u4e48\uff0c\u4ee5\u53ca\u4e3a\u4ec0\u4e48\u53ef\u4ee5\u8fd9\u6837\u505a\u3002\n#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\n#include \"dbg.h\"\n\n\nint normal_copy(char *from, char *to, int count)\n{\n    int i = 0;\n\n    for(i = 0; i &lt; count; i++) {\n        to[i] = from[i];\n    }\n\n    return i;\n}\n\nint duffs_device(char *from, char *to, int count)\n{\n    {\n        int n = (count + 7) \/ 8;\n\n        switch(count % 8) {\n            case 0: do { *to++ = *from++;\n                        case 7: *to++ = *from++;\n                        case 6: *to++ = *from++;\n                        case 5: *to++ = *from++;\n                        case 4: *to++ = *from++;\n                        case 3: *to++ = *from++;\n                        case 2: *to++ = *from++;\n                        case 1: *to++ = *from++;\n                    } while(--n &gt; 0);\n        }\n    }\n\n    return count;\n}\n\nint zeds_device(char *from, char *to, int count)\n{\n    {\n        int n = (count + 7) \/ 8;\n\n        switch(count % 8) {\n            case 0:\n            again: *to++ = *from++;\n\n            case 7: *to++ = *from++;\n            case 6: *to++ = *from++;\n            case 5: *to++ = *from++;\n            case 4: *to++ = *from++;\n            case 3: *to++ = *from++;\n            case 2: *to++ = *from++;\n            case 1: *to++ = *from++;\n                    if(--n &gt; 0) goto again;\n        }\n    }\n\n    return count;\n}\n\nint valid_copy(char *data, int count, char expects)\n{\n    int i = 0;\n    for(i = 0; i &lt; count; i++) {\n        if(data[i] != expects) {\n            log_err(\"[%d] %c != %c\", i, data[i], expects);\n            return 0;\n        }\n    }\n\n    return 1;\n}\n\n\nint main(int argc, char *argv[])\n{\n    char from[1000] = {'a'};\n    char to[1000] = {'c'};\n    int rc = 0;\n\n    \/\/ setup the from to have some stuff\n    memset(from, 'x', 1000);\n    \/\/ set it to a failure mode\n    memset(to, 'y', 1000);\n    check(valid_copy(to, 1000, 'y'), \"Not initialized right.\");\n\n    \/\/ use normal copy to\n    rc = normal_copy(from, to, 1000);\n    check(rc == 1000, \"Normal copy failed: %d\", rc);\n    check(valid_copy(to, 1000, 'x'), \"Normal copy failed.\");\n\n    \/\/ reset\n    memset(to, 'y', 1000);\n\n    \/\/ duffs version\n    rc = duffs_device(from, to, 1000);\n    check(rc == 1000, \"Duff's device failed: %d\", rc);\n    check(valid_copy(to, 1000, 'x'), \"Duff's device failed copy.\");\n\n    \/\/ reset\n    memset(to, 'y', 1000);\n\n    \/\/ my version\n    rc = zeds_device(from, to, 1000);\n    check(rc == 1000, \"Zed's device failed: %d\", rc);\n    check(valid_copy(to, 1000, 'x'), \"Zed's device failed copy.\");\n\n    return 0;\nerror:\n    return 1;\n}\n\u8fd9\u6bb5\u4ee3\u7801\u4e2d\u6211\u7f16\u5199\u4e86\u4e09\u4e2a\u7248\u672c\u7684\u590d\u5236\u51fd\u6570\uff1a\nnormal_copy\n\u4f7f\u7528\u666e\u901a\u7684for\u5faa\u73af\u6765\u5c06\u5b57\u7b26\u4ece\u4e00\u4e2a\u6570\u7ec4\u590d\u5236\u5230\u53e6\u4e00\u4e2a\u3002\nduffs_device\n\u8fd9\u4e2a\u5c31\u662f\u79f0\u4e3a\u201c\u8fbe\u592b\u8bbe\u5907\u201d\u7684\u8111\u7b4b\u6025\u8f6c\u5f2f\uff0c\u4ee5\u6c64\u59c6\u00b7\u8fbe\u592b\u7684\u540d\u5b57\u547d\u540d\u3002\u8fd9\u6bb5\u6709\u8da3\u7684\u90aa\u6076\u4ee3\u7801\u5e94\u5f52\u548e\u4e8e\u4ed6\u3002\nzeds_device\n\u201c\u8fbe\u592b\u8bbe\u5907\u201d\u7684\u53e6\u4e00\u4e2a\u7248\u672c\uff0c\u5176\u4e2d\u4f7f\u7528\u4e86goto\u6765\u8ba9\u4f60\u53d1\u73b0\u4e00\u4e9b\u7ebf\u7d22\uff0c\u5173\u4e8eduffs_device\u4e2d\u5947\u602a\u7684do-while\u505a\u4e86\u4ec0\u4e48\u3002\n\u5728\u5f80\u4e0b\u5b66\u4e60\u4e4b\u524d\u4ed4\u7ec6\u4e86\u89e3\u8fd9\u4e09\u4e2a\u51fd\u6570\uff0c\u5e76\u8bd5\u7740\u81ea\u5df1\u89e3\u91ca\u4ee3\u7801\u90fd\u505a\u4e86\u4ec0\u4e48\u3002\n\u4f60\u4f1a\u770b\u5230\u4ec0\u4e48\n\u8fd9\u4e2a\u7a0b\u5e8f\u6ca1\u6709\u4efb\u4f55\u8f93\u51fa\uff0c\u5b83\u53ea\u4f1a\u6267\u884c\u5e76\u9000\u51fa\u3002\u4f60\u5e94\u5f53\u5728Valgrind\u4e0b\u8fd0\u884c\u5b83\u5e76\u786e\u4fdd\u6ca1\u6709\u4efb\u4f55\u9519\u8bef\u3002\n\u89e3\u51b3\u8c1c\u9898\n\u9996\u5148\u9700\u8981\u4e86\u89e3\u7684\u4e00\u4ef6\u4e8b\uff0c\u5c31\u662fC\u5bf9\u4e8e\u5b83\u7684\u4e00\u4e9b\u8bed\u6cd5\u662f\u5f31\u68c0\u67e5\u7684\u3002\u8fd9\u5c31\u662f\u4f60\u53ef\u4ee5\u5c06do-while\u7684\u4e00\u90e8\u5206\u653e\u5165switch\u8bed\u53e5\u7684\u4e00\u90e8\u5206\u7684\u539f\u56e0\uff0c\u5e76\u4e14\u5728\u5176\u5b83\u5730\u65b9\u7684\u53e6\u4e00\u90e8\u5206\u8fd8\u53ef\u4ee5\u6b63\u5e38\u5de5\u4f5c\u3002\u5982\u679c\u4f60\u89c2\u5bdf\u5e26\u6709goto again\u7684\u6211\u7684\u7248\u672c\uff0c\u5b83\u5b9e\u9645\u4e0a\u66f4\u6e05\u6670\u5730\u89e3\u91ca\u4e86\u5de5\u4f5c\u539f\u7406\uff0c\u4f46\u8981\u786e\u4fdd\u4f60\u7406\u89e3\u4e86\u8fd9\u4e00\u90e8\u5206\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u3002\n\u7b2c\u4e8c\u4ef6\u4e8b\u662fswitch\u8bed\u53e5\u7684\u9ed8\u8ba4\u8d2f\u7a7f\u673a\u5236\u53ef\u4ee5\u8ba9\u4f60\u8df3\u5230\u6307\u5b9a\u7684case\uff0c\u5e76\u4e14\u7ee7\u7eed\u8fd0\u884c\u76f4\u5230switch\u7ed3\u675f\u3002\n\u6700\u540e\u7684\u7ebf\u7d22\u662fcount % 8\u4ee5\u53ca\u9876\u7aef\u5bf9n\u7684\u8ba1\u7b97\u3002\n\u73b0\u5728\uff0c\u8981\u7406\u89e3\u8fd9\u4e9b\u51fd\u6570\u7684\u5de5\u4f5c\u539f\u7406\uff0c\u9700\u8981\u5b8c\u6210\u4e0b\u5217\u4e8b\u60c5\uff1a\n\n\u5c06\u4ee3\u7801\u6284\u5199\u5728\u4e00\u5f20\u7eb8\u4e0a\u3002\n\u5f53\u6bcf\u4e2a\u53d8\u91cf\u5728switch\u4e4b\u524d\u521d\u59cb\u5316\u65f6\uff0c\u5728\u7eb8\u7684\u7a7a\u767d\u533a\u57df\uff0c\u628a\u6bcf\u4e2a\u53d8\u91cf\u5217\u5728\u8868\u4e2d\u3002\n\u6309\u7167switch\u7684\u903b\u8f91\u6a21\u62df\u6267\u884c\u4ee3\u7801\uff0c\u4e4b\u540e\u518d\u6b63\u786e\u7684case\u5904\u8df3\u51fa\u3002\n\u66f4\u65b0\u53d8\u91cf\u8868\uff0c\u5305\u62ecto\u3001from\u548c\u5b83\u4eec\u6240\u6307\u5411\u7684\u6570\u7ec4\u3002\n\u5f53\u4f60\u5230\u8fbewhile\u6216\u8005\u6211\u7684goto\u65f6\uff0c\u68c0\u67e5\u4f60\u7684\u53d8\u91cf\uff0c\u4e4b\u540e\u6309\u7167\u903b\u8f91\u8fd4\u56dedo-while\u9876\u7aef\uff0c\u6216\u8005again\u6807\u7b7e\u6240\u5728\u7684\u5730\u65b9\u3002\n\u7ee7\u7eed\u8fd9\u4e00\u624b\u52a8\u7684\u6267\u884c\u8fc7\u7a0b\uff0c\u66f4\u65b0\u53d8\u91cf\uff0c\u76f4\u5230\u786e\u5b9a\u660e\u767d\u4e86\u4ee3\u7801\u5982\u4f55\u8fd0\u4f5c\u3002\n\n\u4e3a\u4ec0\u4e48\u5199\u6210\u8fd9\u6837\uff1f\n\u5f53\u4f60\u5f04\u660e\u767d\u5b83\u7684\u5b9e\u9645\u5de5\u4f5c\u539f\u7406\u65f6\uff0c\u6700\u7ec8\u7684\u95ee\u9898\u662f\uff1a\u4e3a\u4ec0\u4e48\u8981\u628a\u4ee3\u7801\u5199\u6210\u8fd9\u6837\uff1f\u8fd9\u4e2a\u5c0f\u6280\u5de7\u7684\u76ee\u7684\u662f\u624b\u52a8\u7f16\u5199\u201c\u5faa\u73af\u5c55\u5f00\u201d\u3002\u5927\u800c\u957f\u7684\u5faa\u73af\u4f1a\u975e\u5e38\u6162\uff0c\u6240\u4ee5\u63d0\u5347\u901f\u5ea6\u7684\u4e00\u4e2a\u65b9\u6cd5\u5c31\u662f\u627e\u5230\u5faa\u73af\u4e2d\u67d0\u4e2a\u56fa\u5b9a\u7684\u90e8\u5206\uff0c\u4e4b\u540e\u5728\u5faa\u73af\u4e2d\u590d\u5236\u4ee3\u7801\uff0c\u5e8f\u5217\u5316\u5730\u5c55\u5f00\u3002\u4f8b\u5982\uff0c\u5982\u679c\u4f60\u77e5\u9053\u4e00\u4e2a\u5faa\u73af\u4f1a\u6267\u884c\u81f3\u5c1120\u6b21\uff0c\u4f60\u5c31\u53ef\u4ee5\u5c06\u8fd920\u6b21\u7684\u5185\u5bb9\u76f4\u63a5\u5199\u5728\u6e90\u4ee3\u7801\u4e2d\u3002\n\u8fbe\u592b\u8bbe\u5907\u901a\u8fc7\u5c06\u5faa\u73af\u5c55\u5f00\u4e3a8\u4e2a\u8fed\u4ee3\u5757\uff0c\u6765\u5b8c\u6210\u8fd9\u4ef6\u4e8b\u60c5\u3002\u8fd9\u662f\u4e2a\u806a\u660e\u7684\u529e\u6cd5\uff0c\u5e76\u4e14\u53ef\u4ee5\u6b63\u5e38\u5de5\u4f5c\u3002\u4f46\u662f\u76ee\u524d\u4e00\u4e2a\u597d\u7684\u7f16\u8bd1\u5668\u4e5f\u4f1a\u4e3a\u4f60\u5b8c\u6210\u8fd9\u4e9b\u3002\u4f60\u4e0d\u5e94\u8be5\u8fd9\u6837\u505a\uff0c\u9664\u975e\u5c11\u6570\u60c5\u51b5\u4e0b\u4f60\u8bc1\u660e\u4e86\u5b83\u7684\u786e\u53ef\u4ee5\u63d0\u5347\u901f\u5ea6\u3002\n\u9644\u52a0\u9898\n\n\u4e0d\u8981\u518d\u8fd9\u6837\u5199\u4ee3\u7801\u4e86\u3002\n\u67e5\u8be2\u7ef4\u57fa\u767e\u79d1\u7684\u201c\u8fbe\u592b\u8bbe\u5907\u201d\u8bcd\u6761\uff0c\u5e76\u4e14\u770b\u770b\u4f60\u80fd\u4e0d\u80fd\u627e\u5230\u9519\u8bef\u3002\u5c06\u5b83\u4e0e\u8fd9\u91cc\u7684\u7248\u672c\u5bf9\u6bd4\uff0c\u5e76\u4e14\u9605\u8bfb\u6587\u7ae0\u6765\u8bd5\u7740\u7406\u89e3\uff0c\u4e3a\u4ec0\u4e48\u7ef4\u57fa\u767e\u79d1\u4e0a\u7684\u4ee3\u7801\u5728\u4f60\u8fd9\u91cc\u4e0d\u80fd\u6b63\u5e38\u5de5\u4f5c\uff0c\u4f46\u662f\u5bf9\u4e8e\u6c64\u59c6\u00b7\u8fbe\u592b\u53ef\u4ee5\u3002\n\u521b\u5efa\u4e00\u4e9b\u5b8f\uff0c\u6765\u81ea\u52a8\u5b8c\u6210\u4efb\u610f\u957f\u5ea6\u7684\u8fd9\u79cd\u8bbe\u5907\u3002\u4f8b\u5982\uff0c\u4f60\u60f3\u521b\u5efa32\u4e2acase\u8bed\u53e5\uff0c\u5e76\u4e14\u4e0d\u60f3\u624b\u52a8\u628a\u5b83\u4eec\u90fd\u5199\u51fa\u6765\u65f6\uff0c\u4f60\u4f1a\u600e\u4e48\u529e\uff1f\u4f60\u53ef\u4ee5\u7f16\u5199\u4e00\u6b21\u5c55\u5f008\u4e2a\u7684\u5b8f\u5417\uff1f\n\u4fee\u6539main\u51fd\u6570\uff0c\u6267\u884c\u4e00\u4e9b\u901f\u5ea6\u68c0\u6d4b\uff0c\u6765\u770b\u770b\u54ea\u4e2a\u5b9e\u9645\u4e0a\u66f4\u5feb\u3002\n\u67e5\u8be2memcpy\u3001memmove\u548cmemset\uff0c\u5e76\u4e14\u4e5f\u6bd4\u8f83\u4e00\u4e0b\u5b83\u4eec\u7684\u901f\u5ea6\u3002\n\u4e0d\u8981\u518d\u8fd9\u6837\u5199\u4ee3\u7801\u4e86\uff01\n","categories":"\u7ec3\u4e603","tags":["\u7ed3\u6784","stdio","\u51fd\u6570"]},{"title":"\u8f93\u5165\u8f93\u51fa\u548c\u6587\u4ef6","url":"https:\/\/naka507.github.io\/posts\/2F13B44DB3CFDC2E.html","content":"\u8f93\u5165\u8f93\u51fa\u548c\u6587\u4ef6\n\u4f60\u5df2\u7ecf\u5b66\u4f1a\u4e86\u4f7f\u7528printf\u6765\u6253\u5370\u53d8\u91cf\uff0c\u8fd9\u975e\u5e38\u4e0d\u9519\uff0c\u4f46\u662f\u8fd8\u9700\u8981\u5b66\u4e60\u66f4\u591a\u3002\u8fd9\u4e2a\u7ec3\u4e60\u4e2d\u4f60\u4f1a\u7528\u5230fscanf\u548cfgets\u5728\u7ed3\u6784\u4f53\u4e2d\u6784\u5efa\u5173\u4e8e\u4e00\u4e2a\u4eba\u7684\u4fe1\u606f\u3002\u5728\u8fd9\u4e2a\u5173\u4e8e\u8bfb\u53d6\u8f93\u5165\u7684\u7b80\u4ecb\u4e4b\u540e\uff0c\u4f60\u4f1a\u5f97\u5230C\u8bed\u8a00IO\u51fd\u6570\u7684\u5b8c\u6574\u5217\u8868\u3002\u5176\u4e2d\u4e00\u4e9b\u4f60\u5df2\u7ecf\u89c1\u8fc7\u5e76\u4e14\u4f7f\u7528\u8fc7\u4e86\uff0c\u6240\u4ee5\u8fd9\u4e2a\u7ec3\u4e60\u4e5f\u662f\u4e00\u4e2a\u8bb0\u5fc6\u7ec3\u4e60\u3002\n#include &lt;stdio.h&gt;\n#include \"dbg.h\"\n\n#define MAX_DATA 100\n\ntypedef enum EyeColor {\n    BLUE_EYES, GREEN_EYES, BROWN_EYES,\n    BLACK_EYES, OTHER_EYES\n} EyeColor;\n\nconst char *EYE_COLOR_NAMES[] = {\n    \"Blue\", \"Green\", \"Brown\", \"Black\", \"Other\"\n};\n\ntypedef struct Person {\n    int age;\n    char first_name[MAX_DATA];\n    char last_name[MAX_DATA];\n    EyeColor eyes;\n    float income;\n} Person;\n\n\nint main(int argc, char *argv[])\n{\n    Person you = {.age = 0};\n    int i = 0;\n    char *in = NULL;\n\n    printf(\"What's your First Name? \");\n    in = fgets(you.first_name, MAX_DATA-1, stdin);\n    check(in != NULL, \"Failed to read first name.\");\n\n    printf(\"What's your Last Name? \");\n    in = fgets(you.last_name, MAX_DATA-1, stdin);\n    check(in != NULL, \"Failed to read last name.\");\n\n    printf(\"How old are you? \");\n    int rc = fscanf(stdin, \"%d\", &amp;you.age);\n    check(rc &gt; 0, \"You have to enter a number.\");\n\n    printf(\"What color are your eyes:\\n\");\n    for(i = 0; i &lt;= OTHER_EYES; i++) {\n        printf(\"%d) %s\\n\", i+1, EYE_COLOR_NAMES[i]);\n    }\n    printf(\"&gt; \");\n\n    int eyes = -1;\n    rc = fscanf(stdin, \"%d\", &amp;eyes);\n    check(rc &gt; 0, \"You have to enter a number.\");\n\n    you.eyes = eyes - 1;\n    check(you.eyes &lt;= OTHER_EYES &amp;&amp; you.eyes &gt;= 0, \"Do it right, that's not an option.\");\n\n    printf(\"How much do you make an hour? \");\n    rc = fscanf(stdin, \"%f\", &amp;you.income);\n    check(rc &gt; 0, \"Enter a floating point number.\");\n\n    printf(\"----- RESULTS -----\\n\");\n\n    printf(\"First Name: %s\", you.first_name);\n    printf(\"Last Name: %s\", you.last_name);\n    printf(\"Age: %d\\n\", you.age);\n    printf(\"Eyes: %s\\n\", EYE_COLOR_NAMES[you.eyes]);\n    printf(\"Income: %f\\n\", you.income);\n\n    return 0;\nerror:\n\n    return -1;\n}\n\u8fd9\u4e2a\u7a0b\u5e8f\u975e\u5e38\u7b80\u5355\uff0c\u5e76\u4e14\u5f15\u5165\u4e86\u53eb\u505afscanf\u7684\u51fd\u6570\uff0c\u610f\u601d\u662f\u201c\u6587\u4ef6\u7684\u683c\u5f0f\u5316\u8f93\u5165\u201d\u3002scanf\u5bb6\u65cf\u7684\u51fd\u6570\u662fprintf\u7684\u53cd\u8f6c\u7248\u672c\u3002printf\u7528\u4e8e\u4ee5\u67d0\u79cd\u683c\u5f0f\u6253\u5370\u6570\u636e\uff0c\u7136\u800cscanf\u4ee5\u67d0\u79cd\u683c\u5f0f\u8bfb\u53d6\uff08\u6216\u8005\u626b\u63cf\uff09\u8f93\u5165\u3002\n\u6587\u4ef6\u5f00\u5934\u6ca1\u6709\u4ec0\u4e48\u65b0\u7684\u4e1c\u897f\uff0c\u6240\u4ee5\u4e0b\u9762\u53ea\u5217\u51famain\u6240\u505a\u7684\u4e8b\u60c5\uff1a\nex24.c:24-28\n\u521b\u5efa\u6240\u9700\u7684\u53d8\u91cf\u3002\nex24.c:30-32\n\u4f7f\u7528fgets\u51fd\u6570\u83b7\u53d6\u540d\u5b57\uff0c\u5b83\u4ece\u8f93\u5165\u8bfb\u53d6\u5b57\u7b26\u4e32\uff08\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\u662fstdin\uff09\uff0c\u4f46\u662f\u786e\u4fdd\u5b83\u4e0d\u4f1a\u9020\u6210\u7f13\u51b2\u533a\u6ea2\u51fa\u3002\nex24.c:34-36\n\u5bf9you.last_name\u6267\u884c\u76f8\u540c\u64cd\u4f5c\uff0c\u540c\u6837\u4f7f\u7528\u4e86fgets\u3002\nex24.c:38-39\n\u4f7f\u7528fscanf\u6765\u4ecestdin\u8bfb\u53d6\u6574\u6570\uff0c\u5e76\u4e14\u5c06\u5176\u653e\u5230you.age\u4e2d\u3002\u4f60\u53ef\u4ee5\u770b\u5230\uff0c\u5176\u4e2d\u4f7f\u7528\u4e86\u548cprintf\u76f8\u540c\u683c\u5f0f\u7684\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u3002\u4f60\u4e5f\u5e94\u8be5\u770b\u5230\u4f20\u5165\u4e86you.age\u7684\u5730\u5740\uff0c\u4fbf\u4e8efscnaf\u83b7\u5f97\u5b83\u7684\u6307\u9488\u6765\u4fee\u6539\u5b83\u3002\u8fd9\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u4f8b\u5b50\uff0c\u89e3\u91ca\u4e86\u4f7f\u7528\u6307\u5411\u6570\u636e\u7684\u6307\u9488\u4f5c\u4e3a\u201c\u8f93\u51fa\u53c2\u6570\u201d\u3002\nex24.c:41-45\n\u6253\u5370\u51fa\u7528\u4e8e\u773c\u775b\u989c\u8272\u7684\u6240\u6709\u53ef\u9009\u9879\uff0c\u5e76\u4e14\u5e26\u6709EyeColor\u679a\u4e3e\u6240\u5339\u914d\u7684\u6570\u503c\u3002\nex24.c:47-50\n\u518d\u6b21\u4f7f\u7528\u4e86fscanf\uff0c\u4eceyou.eyes\u4e2d\u83b7\u53d6\u6570\u503c\uff0c\u4f46\u662f\u4fdd\u8bc1\u4e86\u8f93\u5165\u662f\u6709\u6548\u7684\u3002\u8fd9\u975e\u5e38\u91cd\u8981\uff0c\u56e0\u4e3a\u7528\u6237\u53ef\u4ee5\u8f93\u5165\u4e00\u4e2a\u8d85\u51faEYE_COLOR_NAMES\u6570\u7ec4\u8303\u56f4\u7684\u503c\uff0c\u5e76\u4e14\u4f1a\u5bfc\u81f4\u6bb5\u9519\u8bef\u3002\nex24.c:52-53\n\u83b7\u53d6you.income\u7684\u503c\u3002\nex24.c:55-61\n\u5c06\u6240\u6709\u6570\u636e\u6253\u5370\u51fa\u6765\uff0c\u4fbf\u4e8e\u4f60\u770b\u5230\u5b83\u4eec\u662f\u5426\u6b63\u786e\u3002\u8981\u6ce8\u610fEYE_COLOR_NAMES\u7528\u4e8e\u6253\u5370EyeColor\u679a\u4e3e\u503c\u5b9e\u9645\u4e0a\u7684\u540d\u5b57\u3002\n\u4f60\u4f1a\u770b\u5230\u4ec0\u4e48\n\u5f53\u4f60\u8fd0\u884c\u8fd9\u4e2a\u7a0b\u5e8f\u65f6\uff0c\u4f60\u5e94\u8be5\u770b\u5230\u4f60\u7684\u8f93\u5165\u88ab\u9002\u5f53\u5730\u8f6c\u6362\u3002\u4f60\u5e94\u8be5\u5c1d\u8bd5\u7ed9\u5b83\u975e\u9884\u671f\u7684\u8f93\u5165\uff0c\u770b\u770b\u7a0b\u5e8f\u662f\u600e\u4e48\u9884\u9632\u5b83\u7684\u3002\n$ make ex24\ncc -Wall -g -DNDEBUG    ex24.c   -o ex24\n$ .\/ex24\nWhat's your First Name? Zed\nWhat's your Last Name? Shaw\nHow old are you? 37\nWhat color are your eyes:\n1) Blue\n2) Green\n3) Brown\n4) Black\n5) Other\n&gt; 1\nHow much do you make an hour? 1.2345\n----- RESULTS -----\nFirst Name: Zed\nLast Name: Shaw\nAge: 37\nEyes: Blue\nIncome: 1.234500\n\u5982\u4f55\u4f7f\u5b83\u5d29\u6e83\n\u8fd9\u4e2a\u7a0b\u5e8f\u975e\u5e38\u4e0d\u9519\uff0c\u4f46\u662f\u8fd9\u4e2a\u7ec3\u4e60\u4e2d\u771f\u6b63\u91cd\u8981\u7684\u90e8\u5206\u662f\uff0cscanf\u5982\u4f55\u53d1\u751f\u9519\u8bef\u3002\u5bf9\u4e8e\u7b80\u5355\u7684\u6570\u503c\u8f6c\u6362\u6ca1\u6709\u95ee\u9898\uff0c\u4f46\u662f\u5bf9\u4e8e\u5b57\u7b26\u4e32\u4f1a\u51fa\u73b0\u95ee\u9898\uff0c\u56e0\u4e3ascanf\u5728\u4f60\u8bfb\u53d6\u4e4b\u524d\u5e76\u4e0d\u77e5\u9053\u7f13\u51b2\u533a\u6709\u591a\u5927\u3002\u7c7b\u4f3c\u4e8egets\u7684\u51fd\u6570\uff08\u5e76\u4e0d\u662ffgets\uff0c\u4e0d\u5e26f\u7684\u7248\u672c\uff09\u4e5f\u6709\u4e00\u4e2a\u6211\u4eec\u5df2\u7ecf\u907f\u514d\u7684\u95ee\u9898\u3002\u5b83\u5e76\u4e0d\u662f\u9053\u8f93\u5165\u7f13\u51b2\u533a\u6709\u591a\u5927\uff0c\u5e76\u4e14\u53ef\u80fd\u4f1a\u4f7f\u4f60\u7684\u7a0b\u5e8f\u5d29\u6e83\u3002\n\u8981\u6f14\u793afscanf\u548c\u5b57\u7b26\u4e32\u7684\u8fd9\u4e00\u95ee\u9898\uff0c\u9700\u8981\u4fee\u6539\u4f7f\u7528fgets\u7684\u90a3\u4e00\u884c\uff0c\u4f7f\u5b83\u53d8\u6210fscanf(stdin, \"%50s\", you.first_name)\uff0c\u5e76\u4e14\u5c1d\u8bd5\u518d\u6b21\u8fd0\u884c\u3002\u4f60\u4f1a\u6ce8\u610f\u5230\uff0c\u5b83\u8bfb\u53d6\u4e86\u8fc7\u591a\u7684\u5185\u5bb9\uff0c\u5e76\u4e14\u5403\u6389\u4e86\u4f60\u7684\u56de\u8f66\u952e\u3002\u8fd9\u5e76\u4e0d\u662f\u4f60\u671f\u671b\u5b83\u6240\u505a\u7684\uff0c\u4f60\u5e94\u8be5\u4f7f\u7528fgets\u800c\u4e0d\u662f\u53bb\u89e3\u51b3\u53e4\u602a\u7684scanf\u95ee\u9898\u3002\n\u63a5\u4e0b\u6765\uff0c\u5c06fgets\u6539\u4e3agets\uff0c\u63a5\u7740\u4f7f\u7528valgrind\u6765\u6267\u884cvalgrind .\/ex24 &lt; \/dev\/urandom\uff0c\u5f80\u4f60\u7684\u7a0b\u5e8f\u4e2d\u8f93\u5165\u4e00\u4e9b\u5783\u573e\u5b57\u7b26\u4e32\u3002\u8fd9\u53eb\u505a\u5bf9\u4f60\u7684\u7a0b\u5e8f\u8fdb\u884c\u201c\u6a21\u7cca\u6d4b\u8bd5\u201d\uff0c\u5b83\u662f\u4e00\u79cd\u4e0d\u9519\u7684\u65b9\u6cd5\u6765\u53d1\u73b0\u8f93\u5165\u9519\u8bef\u3002\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u4f60\u9700\u8981\u4ece\/dev\/urandom\u6587\u4ef6\u6765\u8f93\u5165\u4e00\u4e9b\u5783\u573e\uff0c\u5e76\u4e14\u89c2\u5bdf\u5b83\u5982\u4f55\u5d29\u6e83\u3002\u5728\u4e00\u4e9b\u5e73\u53f0\u4e0a\u4f60\u9700\u8981\u6267\u884c\u6570\u6b21\uff0c\u6216\u8005\u4fee\u6539MAX_DATA\u6765\u4f7f\u5176\u53d8\u5c0f\u3002\ngets\u51fd\u6570\u975e\u5e38\u7cdf\u7cd5\uff0c\u4ee5\u81f3\u4e8e\u4e00\u4e9b\u5e73\u53f0\u5728\u7a0b\u5e8f\u8fd0\u884c\u65f6\u4f1a\u8b66\u544a\u4f60\u4f7f\u7528\u4e86gets\u3002\u4f60\u5e94\u8be5\u6c38\u8fdc\u907f\u514d\u4f7f\u7528\u8fd9\u4e2a\u51fd\u6570\u3002\n\u6700\u540e\uff0c\u627e\u5230you.eyes\u8f93\u5165\u7684\u5730\u65b9\uff0c\u5e76\u79fb\u9664\u5bf9\u5176\u662f\u5426\u5728\u6b63\u786e\u8303\u56f4\u5185\u7684\u68c0\u67e5\u3002\u7136\u540e\uff0c\u4e3a\u5b83\u8f93\u5165\u4e00\u4e2a\u9519\u8bef\u7684\u6570\u503c\uff0c\u6bd4\u5982-1\u6216\u80051000\u3002\u5728Valgrind\u6267\u884c\u8fd9\u4e9b\u64cd\u4f5c\uff0c\u6765\u89c2\u5bdf\u4f1a\u53d1\u751f\u4ec0\u4e48\u3002\n\n\u8bd1\u8005\u6ce8\uff1a\u6839\u636e\u6700\u65b0\u7684C11\u6807\u51c6\uff0c\u5bf9\u4e8e\u8f93\u5165\u51fd\u6570\uff0c\u4f60\u5e94\u8be5\u603b\u662f\u4f7f\u7528_s\u540e\u7f00\u7684\u5b89\u5168\u7248\u672c\u3002\u5bf9\u4e8e\u5411\u5b57\u7b26\u4e32\u7684\u8f93\u51fa\u51fd\u6570\uff0c\u5e94\u8be5\u603b\u662f\u4f7f\u7528C99\u4e2d\u65b0\u589e\u7684\u5e26n\u7684\u7248\u672c\uff0c\u4f8b\u5982snprintf\u3002\u5982\u679c\u4f60\u7684\u7f16\u8bd1\u5668\u652f\u6301\u65b0\u7248\u672c\uff0c\u5c31\u4e0d\u5e94\u8be5\u4f7f\u7528\u65e7\u7248\u672c\u7684\u4e0d\u5b89\u5168\u51fd\u6570\u3002\n\nIO\u51fd\u6570\n\u8fd9\u662f\u4e00\u4e2a\u5404\u79cdIO\u51fd\u6570\u7684\u7b80\u5355\u5217\u8868\u3002\u4f60\u5e94\u8be5\u67e5\u8be2\u6bcf\u4e2a\u51fd\u6570\u5e76\u4e3a\u5176\u521b\u5efa\u901f\u8bb0\u5361\uff0c\u5305\u542b\u51fd\u6570\u540d\u79f0\uff0c\u529f\u80fd\u548c\u5b83\u7684\u4efb\u4f55\u53d8\u4f53\u3002\n\nfscanf\nfgets\nfopen\nfreopen\nfdopen\nfclose\nfcloseall\nfgetpos\nfseek\nftell\nrewind\nfprintf\nfwrite\nfread\n\n\u8fc7\u4e00\u904d\u8fd9\u4e9b\u51fd\u6570\uff0c\u5e76\u4e14\u8bb0\u4f4f\u5b83\u4eec\u7684\u4e0d\u540c\u53d8\u4f53\u548c\u5b83\u4eec\u7684\u529f\u80fd\u3002\u4f8b\u5982\uff0c\u5bf9\u4e8efscanf\u7684\u5361\u7247\uff0c\u4e0a\u9762\u5e94\u8be5\u6709scanf\u3001sscanf\u3001vscanf\uff0c\u4ee5\u53ca\u5176\u5b83\u3002\u5e76\u4e14\u5728\u80cc\u9762\u5199\u4e0b\u6bcf\u4e2a\u51fd\u6570\u6240\u505a\u7684\u4e8b\u60c5\u3002\n\u6700\u540e\uff0c\u4e3a\u4e86\u83b7\u5f97\u8fd9\u4e9b\u5361\u7247\u6240\u9700\u7684\u4fe1\u606f\uff0c\u4f7f\u7528man\u6765\u9605\u8bfb\u5b83\u7684\u5e2e\u52a9\u3002\u4f8b\u5982\uff0cfscanf\u5e2e\u52a9\u9875\u7531man fscanf\u5f97\u5230\u3002\n\u9644\u52a0\u9898\n\n\u5c06\u8fd9\u4e2a\u7a0b\u5e8f\u91cd\u5199\u4e3a\u4e0d\u9700\u8981fscanf\u7684\u7248\u672c\u3002\u4f60\u9700\u8981\u4f7f\u7528\u7c7b\u4f3c\u4e8eatoi\u7684\u51fd\u6570\u6765\u5c06\u8f93\u5165\u7684\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u6570\u503c\u3002\n\u4fee\u6539\u8fd9\u4e2a\u7a0b\u5e8f\uff0c\u4f7f\u7528scanf\u6765\u4ee3\u66fffscanf\uff0c\u5e76\u89c2\u5bdf\u6709\u4ec0\u4e48\u4e0d\u540c\u3002\n\u4fee\u6539\u7a0b\u5e8f\uff0c\u662f\u8f93\u5165\u7684\u540d\u5b57\u4e0d\u5305\u542b\u4efb\u4f55\u6362\u884c\u7b26\u548c\u7a7a\u767d\u5b57\u7b26\u3002\n\u4f7f\u7528scanf\u7f16\u5199\u51fd\u6570\uff0c\u6309\u7167\u6587\u4ef6\u540d\u8bfb\u53d6\u6587\u4ef6\u5185\u5bb9\uff0c\u6bcf\u6b21\u8bfb\u53d6\u5355\u4e2a\u5b57\u7b26\uff0c\u4f46\u662f\u4e0d\u8981\u8d8a\u8fc7\uff08\u6587\u4ef6\u548c\u7f13\u51b2\u533a\u7684\uff09\u672b\u5c3e\u3002\u4f7f\u8fd9\u4e2a\u51fd\u6570\u63a5\u53d7\u5b57\u7b26\u4e32\u5927\u5c0f\u6765\u66f4\u52a0\u901a\u7528\uff0c\u5e76\u4e14\u786e\u4fdd\u65e0\u8bba\u4ec0\u4e48\u60c5\u51b5\u4e0b\u5b57\u7b26\u4e32\u90fd\u4ee5'\\0'\u7ed3\u5c3e\u3002\n","categories":"\u7ec3\u4e604","tags":["printf","fscanf","fgets"]},{"title":"\u53d8\u53c2\u51fd\u6570","url":"https:\/\/naka507.github.io\/posts\/2852FA26A8BCFAD2.html","content":"\u53d8\u53c2\u51fd\u6570\n\u5728C\u8bed\u8a00\u4e2d\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u521b\u5efa\u201c\u53d8\u53c2\u51fd\u6570\u201d\u6765\u521b\u5efa\u4f60\u81ea\u5df1\u7684printf\u6216\u8005scanf\u7248\u672c\u3002\u8fd9\u4e9b\u51fd\u6570\u4f7f\u7528stdarg.h\u5934\uff0c\u5b83\u4eec\u53ef\u4ee5\u8ba9\u4f60\u4e3a\u4f60\u7684\u5e93\u521b\u5efa\u66f4\u52a0\u4fbf\u5229\u7684\u63a5\u53e3\u3002\u5b83\u4eec\u5bf9\u4e8e\u521b\u5efa\u7279\u5b9a\u7c7b\u578b\u7684\u201c\u6784\u5efa\u201d\u51fd\u6570\u3001\u683c\u5f0f\u5316\u51fd\u6570\u548c\u4efb\u4f55\u7528\u5230\u53ef\u53d8\u53c2\u6570\u7684\u51fd\u6570\u90fd\u975e\u5e38\u5b9e\u7528\u3002\n\u7406\u89e3\u201c\u53d8\u53c2\u51fd\u6570\u201d\u5bf9\u4e8eC\u8bed\u8a00\u7f16\u7a0b\u5e76\u4e0d\u5fc5\u8981\uff0c\u6211\u5728\u7f16\u7a0b\u751f\u6daf\u4e2d\u4e5f\u53ea\u6709\u5927\u7ea620\u6b21\u7528\u5230\u5b83\u3002\u4f46\u662f\uff0c\u7406\u89e3\u53d8\u53c2\u51fd\u6570\u5982\u4f55\u5de5\u4f5c\u6709\u52a9\u4e8e\u4f60\u5bf9\u5b83\u7684\u8c03\u8bd5\uff0c\u5e76\u4e14\u8ba9\u4f60\u66f4\u52a0\u4e86\u89e3\u8ba1\u7b97\u673a\u3002\n\/** WARNING: This code is fresh and potentially isn't correct yet. *\/\n\n#include &lt;stdlib.h&gt;\n#include &lt;stdio.h&gt;\n#include &lt;stdarg.h&gt;\n#include \"dbg.h\"\n\n#define MAX_DATA 100\n\nint read_string(char **out_string, int max_buffer)\n{\n    *out_string = calloc(1, max_buffer + 1);\n    check_mem(*out_string);\n\n    char *result = fgets(*out_string, max_buffer, stdin);\n    check(result != NULL, \"Input error.\");\n\n    return 0;\n\nerror:\n    if(*out_string) free(*out_string);\n    *out_string = NULL;\n    return -1;\n}\n\nint read_int(int *out_int)\n{\n    char *input = NULL;\n    int rc = read_string(&amp;input, MAX_DATA);\n    check(rc == 0, \"Failed to read number.\");\n\n    *out_int = atoi(input);\n\n    free(input);\n    return 0;\n\nerror:\n    if(input) free(input);\n    return -1;\n}\n\nint read_scan(const char *fmt, ...)\n{\n    int i = 0;\n    int rc = 0;\n    int *out_int = NULL;\n    char *out_char = NULL;\n    char **out_string = NULL;\n    int max_buffer = 0;\n\n    va_list argp;\n    va_start(argp, fmt);\n\n    for(i = 0; fmt[i] != '\\0'; i++) {\n        if(fmt[i] == '%') {\n            i++;\n            switch(fmt[i]) {\n                case '\\0':\n                    sentinel(\"Invalid format, you ended with %%.\");\n                    break;\n\n                case 'd':\n                    out_int = va_arg(argp, int *);\n                    rc = read_int(out_int);\n                    check(rc == 0, \"Failed to read int.\");\n                    break;\n\n                case 'c':\n                    out_char = va_arg(argp, char *);\n                    *out_char = fgetc(stdin);\n                    break;\n\n                case 's':\n                    max_buffer = va_arg(argp, int);\n                    out_string = va_arg(argp, char **);\n                    rc = read_string(out_string, max_buffer);\n                    check(rc == 0, \"Failed to read string.\");\n                    break;\n\n                default:\n                    sentinel(\"Invalid format.\");\n            }\n        } else {\n            fgetc(stdin);\n        }\n\n        check(!feof(stdin) &amp;&amp; !ferror(stdin), \"Input error.\");\n    }\n\n    va_end(argp);\n    return 0;\n\nerror:\n    va_end(argp);\n    return -1;\n}\n\n\n\nint main(int argc, char *argv[])\n{\n    char *first_name = NULL;\n    char initial = ' ';\n    char *last_name = NULL;\n    int age = 0;\n\n    printf(\"What's your first name? \");\n    int rc = read_scan(\"%s\", MAX_DATA, &amp;first_name);\n    check(rc == 0, \"Failed first name.\");\n\n    printf(\"What's your initial? \");\n    rc = read_scan(\"%c\\n\", &amp;initial);\n    check(rc == 0, \"Failed initial.\");\n\n    printf(\"What's your last name? \");\n    rc = read_scan(\"%s\", MAX_DATA, &amp;last_name);\n    check(rc == 0, \"Failed last name.\");\n\n    printf(\"How old are you? \");\n    rc = read_scan(\"%d\", &amp;age);\n\n    printf(\"---- RESULTS ----\\n\");\n    printf(\"First Name: %s\", first_name);\n    printf(\"Initial: '%c'\\n\", initial);\n    printf(\"Last Name: %s\", last_name);\n    printf(\"Age: %d\\n\", age);\n\n    free(first_name);\n    free(last_name);\n    return 0;\nerror:\n    return -1;\n}\n\u8fd9\u4e2a\u7a0b\u5e8f\u548c\u4e0a\u4e00\u4e2a\u7ec3\u4e60\u5f88\u50cf\uff0c\u9664\u4e86\u6211\u7f16\u5199\u4e86\u81ea\u5df1\u7684scanf\u98ce\u683c\u51fd\u6570\uff0c\u5b83\u4ee5\u6211\u81ea\u5df1\u7684\u65b9\u5f0f\u5904\u7406\u5b57\u7b26\u4e32\u3002\u4f60\u5e94\u8be5\u5bf9main\u51fd\u6570\u5f88\u6e05\u695a\u4e86\uff0c\u4ee5\u53caread_string\u548cread_int\u4e24\u4e2a\u51fd\u6570\uff0c\u56e0\u4e3a\u5b83\u4eec\u5e76\u6ca1\u6709\u505a\u4ec0\u4e48\u65b0\u7684\u4e1c\u897f\u3002\n\u8fd9\u91cc\u7684\u53d8\u53c2\u51fd\u6570\u53eb\u505aread_scan\uff0c\u5b83\u4f7f\u7528\u4e86va_list\u6570\u636e\u7ed3\u6784\u6267\u884c\u548cscanf\u76f8\u540c\u7684\u5de5\u4f5c\uff0c\u5e76\u652f\u6301\u5b8f\u548c\u51fd\u6570\u3002\u4e0b\u9762\u662f\u5b83\u7684\u5de5\u4f5c\u539f\u7406\uff1a\n\n\u6211\u5c06\u51fd\u6570\u7684\u6700\u540e\u4e00\u4e2a\u53c2\u6570\u8bbe\u7f6e\u4e3a...\uff0c\u5b83\u5411C\u8868\u793a\u8fd9\u4e2a\u51fd\u6570\u5728fmt\u53c2\u6570\u4e4b\u540e\u63a5\u53d7\u4efb\u4f55\u6570\u91cf\u7684\u53c2\u6570\u3002\u6211\u53ef\u4ee5\u5728\u5b83\u524d\u9762\u8bbe\u7f6e\u8bb8\u591a\u5176\u5b83\u7684\u53c2\u6570\uff0c\u4f46\u662f\u5728\u5b83\u540e\u9762\u4e0d\u80fd\u653e\u7f6e\u4efb\u4f55\u53c2\u6570\u3002\n\u5728\u8bbe\u7f6e\u5b8c\u4e00\u4e9b\u53c2\u6570\u65f6\uff0c\u6211\u521b\u5efa\u4e86va_list\u7c7b\u578b\u7684\u53d8\u91cf\uff0c\u5e76\u4e14\u4f7f\u7528va_list\u6765\u4e3a\u5176\u521d\u59cb\u5316\u3002\u8fd9\u914d\u7f6e\u4e86stdarg.h\u4e2d\u7684\u8fd9\u4e00\u53ef\u4ee5\u5904\u7406\u53ef\u53d8\u53c2\u6570\u7684\u7ec4\u4ef6\u3002\n\u63a5\u7740\u6211\u4f7f\u7528\u4e86for\u5faa\u73af\uff0c\u904d\u5386fmt\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\uff0c\u5e76\u4e14\u5904\u7406\u4e86\u7c7b\u4f3cscanf\u7684\u683c\u5f0f\uff0c\u4f46\u6bd4\u5b83\u7565\u7b80\u5355\u3002\u5b83\u91cc\u9762\u53ea\u5e26\u6709\u6574\u6570\u3001\u5b57\u7b26\u548c\u5b57\u7b26\u4e32\u3002\n\u5f53\u6211\u78b0\u5230\u5360\u4f4d\u7b26\u65f6\uff0c\u6211\u4f7f\u7528\u4e86switch\u8bed\u53e5\u6765\u786e\u5b9a\u9700\u8981\u505a\u4ec0\u4e48\u3002\n\u73b0\u5728\uff0c\u4e3a\u4e86\u4eceva_list argp\u4e2d\u83b7\u5f97\u904d\u5386\uff0c\u6211\u9700\u8981\u4f7f\u7528va_arg(argp, TYPE)\u5b8f\uff0c\u5176\u4e2dTYPE\u662f\u6211\u5c06\u8981\u5411\u53c2\u6570\u4f20\u9012\u7684\u51c6\u786e\u7c7b\u578b\u3002\u8fd9\u4e00\u8bbe\u8ba1\u7684\u540e\u679c\u662f\u4f60\u4f1a\u975e\u5e38\u76f2\u76ee\uff0c\u6240\u4ee5\u5982\u679c\u4f60\u6ca1\u6709\u8db3\u591f\u7684\u53d8\u91cf\u4f20\u5165\uff0c\u7a0b\u5e8f\u5c31\u4f1a\u5d29\u6e83\u3002\n\u548cscanf\u7684\u6709\u8da3\u7684\u4e0d\u540c\u70b9\u662f\uff0c\u5f53\u5b83\u78b0\u5230's'\u5360\u4f4d\u7b26\u65f6\uff0c\u6211\u4f7f\u7528read_string\u6765\u521b\u5efa\u5b57\u7b26\u4e32\u3002va_list argp\u6808\u9700\u8981\u63a5\u53d7\u4e24\u4e2a\u51fd\u6570\uff1a\u9700\u8981\u8bfb\u53d6\u7684\u6700\u5927\u5c3a\u5bf8\uff0c\u4ee5\u53ca\u7528\u4e8e\u8f93\u51fa\u7684\u5b57\u7b26\u4e32\u6307\u9488\u3002read_string\u4f7f\u7528\u8fd9\u4e9b\u4fe1\u606f\u6765\u6267\u884c\u5b9e\u9645\u5de5\u4f5c\u3002\n\u8fd9\u4f7fread_scan\u6bd4scan\u66f4\u52a0\u4e00\u81f4\uff0c\u56e0\u4e3a\u4f60\u603b\u662f\u4f7f\u7528&amp;\u63d0\u4f9b\u53d8\u91cf\u7684\u5730\u5740\uff0c\u5e76\u4e14\u5408\u7406\u5730\u8bbe\u7f6e\u5b83\u4eec\u3002\n\u6700\u540e\uff0c\u5982\u679c\u5b83\u78b0\u5230\u4e86\u4e0d\u5728\u683c\u5f0f\u4e2d\u7684\u5b57\u7b26\uff0c\u5b83\u4ec5\u4ec5\u4f1a\u8bfb\u53d6\u5e76\u8df3\u8fc7\uff0c\u800c\u5e76\u4e0d\u5173\u5fc3\u5b57\u7b26\u662f\u4ec0\u4e48\uff0c\u56e0\u4e3a\u5b83\u53ea\u9700\u8981\u8df3\u8fc7\u3002\n\n\u4f60\u4f1a\u770b\u5230\u4ec0\u4e48\n\u5f53\u4f60\u8fd0\u884c\u7a0b\u5e8f\u65f6\uff0c\u4f1a\u5f97\u5230\u4e0e\u4e0b\u9762\u8be6\u7ec6\u7684\u7ed3\u679c\uff1a\n$ make ex25\ncc -Wall -g -DNDEBUG    ex25.c   -o ex25\n$ .\/ex25\nWhat's your first name? Zed\nWhat's your initial? A\nWhat's your last name? Shaw\nHow old are you? 37\n---- RESULTS ----\nFirst Name: Zed\nInitial: 'A'\nLast Name: Shaw\nAge: 37\n\u5982\u4f55\u4f7f\u5b83\u5d29\u6e83\n\u8fd9\u4e2a\u7a0b\u5e8f\u5bf9\u7f13\u51b2\u533a\u6ea2\u51fa\u66f4\u52a0\u5065\u58ee\uff0c\u4f46\u662f\u548cscanf\u4e00\u6837\uff0c\u5b83\u4e0d\u80fd\u591f\u5904\u7406\u8f93\u5165\u7684\u683c\u5f0f\u9519\u8bef\u3002\u4e3a\u4e86\u4f7f\u5b83\u5d29\u6e83\uff0c\u8bd5\u7740\u4fee\u6539\u4ee3\u7801\uff0c\u628a\u9996\u5148\u4f20\u5165\u7528\u4e8e'%s'\u683c\u5f0f\u7684\u5c3a\u5bf8\u53bb\u6389\u3002\u540c\u65f6\u8bd5\u7740\u4f20\u5165\u591a\u4e8eMAX_DATA\u7684\u6570\u636e\uff0c\u4e4b\u540e\u627e\u5230\u5728read_string\u4e2d\u4e0d\u4f7f\u7528calloc\u7684\u65b9\u6cd5\uff0c\u5e76\u4e14\u4fee\u6539\u5b83\u7684\u5de5\u4f5c\u65b9\u5f0f\u3002\u6700\u540e\u8fd8\u6709\u4e2a\u95ee\u9898\u662ffgets\u4f1a\u5403\u6389\u6362\u884c\u7b26\uff0c\u6240\u4ee5\u8bd5\u7740\u4f7f\u7528fgetc\u4fee\u590d\u5b83\uff0c\u8981\u6ce8\u610f\u5b57\u7b26\u4e32\u7ed3\u5c3e\u5e94\u4e3a'\\0'\u3002\n\u9644\u52a0\u9898\n\n\u518d\u4e09\u68c0\u67e5\u786e\u4fdd\u4f60\u660e\u767d\u4e86\u6bcf\u4e2aout_\u53d8\u91cf\u7684\u4f5c\u7528\u3002\u6700\u91cd\u8981\u7684\u662fout_string\uff0c\u5e76\u4e14\u5b83\u662f\u6307\u9488\u7684\u6307\u9488\u3002\u6240\u4ee5\uff0c\u7406\u6e05\u5f53\u4f60\u8bbe\u7f6e\u65f6\u83b7\u53d6\u5230\u7684\u662f\u6307\u9488\u8fd8\u662f\u5185\u5bb9\u5c24\u4e3a\u91cd\u8981\u3002\n\u4f7f\u7528\u53d8\u53c2\u7cfb\u7edf\u7f16\u5199\u4e00\u4e2a\u548cprintf\u76f8\u4f3c\u7684\u51fd\u6570\uff0c\u91cd\u65b0\u7f16\u5199main\u6765\u4f7f\u7528\u5b83\u3002\n\u50cf\u5f80\u5e38\u4e00\u6837\uff0c\u9605\u8bfb\u8fd9\u4e9b\u51fd\u6570\/\u5b8f\u7684\u624b\u518c\u9875\uff0c\u786e\u4fdd\u77e5\u9053\u4e86\u5b83\u5728\u4f60\u7684\u5e73\u53f0\u505a\u4e86\u4ec0\u4e48\uff0c\u4e00\u4e9b\u5e73\u53f0\u4f1a\u4f7f\u7528\u5b8f\u800c\u5176\u5b83\u5e73\u53f0\u4f1a\u4f7f\u7528\u51fd\u6570\uff0c\u8fd8\u6709\u4e00\u4e9b\u5e73\u53f0\u4f1a\u8ba9\u5b83\u4eec\u4e0d\u8d77\u4f5c\u7528\u3002\u8fd9\u5b8c\u5168\u53d6\u51b3\u4e8e\u4f60\u6240\u7528\u7684\u7f16\u8bd1\u5668\u548c\u5e73\u53f0\u3002\n","categories":"\u7ec3\u4e604","tags":["stdarg","\u51fd\u6570","\u683c\u5f0f\u5316"]},{"title":"\u7f16\u5199\u7b2c\u4e00\u4e2a\u771f\u6b63\u7684\u7a0b\u5e8f","url":"https:\/\/naka507.github.io\/posts\/41ABE0D9F5D3164C.html","content":"\u7f16\u5199\u7b2c\u4e00\u4e2a\u771f\u6b63\u7684\u7a0b\u5e8f\n\u8fd9\u672c\u4e66\u4f60\u5df2\u7ecf\u5b8c\u6210\u4e00\u534a\u4e86\uff0c\u6240\u4ee5\u4f60\u9700\u8981\u505a\u4e00\u4e2a\u671f\u4e2d\u68c0\u6d4b\u3002\u671f\u4e2d\u68c0\u6d4b\u4e2d\u4f60\u9700\u8981\u91cd\u65b0\u6784\u5efa\u4e00\u4e2a\u6211\u7279\u5730\u4e3a\u672c\u4e66\u7f16\u5199\u7684\u8f6f\u4ef6\uff0c\u53eb\u505adevpkg\u3002\u968f\u540e\u4f60\u9700\u8981\u4ee5\u4e00\u4e9b\u65b9\u5f0f\u6269\u5c55\u5b83\uff0c\u5e76\u4e14\u901a\u8fc7\u7f16\u5199\u4e00\u4e9b\u5355\u5143\u6d4b\u8bd5\u6765\u6539\u8fdb\u4ee3\u7801\u3002\n\n\u6ce8\n\n\n\u6211\u5728\u4e00\u4e9b\u4f60\u9700\u8981\u5b8c\u6210\u7684\u7ec3\u4e60\u4e4b\u524d\u7f16\u5199\u4e86\u8fd9\u4e2a\u7ec3\u4e60\u3002\u5982\u679c\u4f60\u73b0\u5728\u5c1d\u8bd5\u8fd9\u4e2a\u7ec3\u4e60\uff0c\u8bb0\u4f4f\u8f6f\u4ef6\u53ef\u80fd\u4f1a\u542b\u6709\u4e00\u4e9bbug\uff0c\u4f60\u53ef\u80fd\u7531\u4e8e\u6211\u7684\u9519\u8bef\u4f1a\u4ea7\u751f\u4e00\u4e9b\u95ee\u9898\uff0c\u4e5f\u53ef\u80fd\u4e0d\u77e5\u9053\u9700\u8981\u4ec0\u4e48\u6765\u5b8c\u6210\u5b83\u3002\u5982\u679c\u8fd9\u6837\u7684\u8bdd\uff0c\u901a\u8fc7help@learncodethehardway.org\u6765\u544a\u8bc9\u6211\uff0c\u4e4b\u540e\u7b49\u5f85\u6211\u5199\u5b8c\u5176\u5b83\u7ec3\u4e60\u3002\n\n\u4ec0\u4e48\u662fdevpkg\uff1f\ndevpkg\u662f\u4e00\u4e2a\u7b80\u5355\u7684C\u7a0b\u5e8f\uff0c\u53ef\u4ee5\u7528\u4e8e\u5b89\u88c5\u5176\u5b83\u8f6f\u4ef6\u3002\u6211\u7279\u5730\u4e3a\u672c\u4e66\u7f16\u5199\u4e86\u5b83\uff0c\u4f5c\u4e3a\u4e00\u79cd\u65b9\u5f0f\u6765\u6559\u4f60\u771f\u6b63\u7684\u8f6f\u4ef6\u662f\u5982\u4f55\u6784\u5efa\u7684\uff0c\u4ee5\u53ca\u5982\u4f55\u590d\u7528\u4ed6\u4eba\u7684\u5e93\u3002\u5b83\u4f7f\u7528\u4e86\u4e00\u4e2a\u53eb\u505aApache\u53ef\u79fb\u690d\u8fd0\u884c\u65f6\uff08APR\uff09\u7684\u5e93\uff0c\u5176\u4e2d\u542b\u6709\u8bb8\u591a\u5de5\u4f5c\u8de8\u5e73\u53f0\u7684\u4fbf\u5229\u7684C\u51fd\u6570\uff0c\u5305\u62ecWindows\u3002\u6b64\u5916\uff0c\u5b83\u53ea\u662f\u4ece\u4e92\u8054\u7f51\uff08\u6216\u672c\u5730\u6587\u4ef6\uff09\u6293\u53d6\u4ee3\u7801\uff0c\u5e76\u4e14\u6267\u884c\u901a\u5e38\u7684.\/configure ; make ; make install\u547d\u4ee4\uff0c\u6bcf\u4e2a\u7a0b\u5e8f\u5458\u90fd\u7528\u5230\u8fc7\u3002\n\u8fd9\u4e2a\u7ec3\u4e60\u4e2d\uff0c\u4f60\u7684\u76ee\u6807\u662f\u4ece\u6e90\u7801\u6784\u5efadevpkg\uff0c\u5b8c\u6210\u6211\u63d0\u4f9b\u7684\u6bcf\u4e2a\u6311\u6218\uff0c\u5e76\u4e14\u4f7f\u7528\u6e90\u7801\u6765\u7406\u89e3devpkg\u505a\u4e86\u4ec0\u4e48\u548c\u4e3a\u4ec0\u4e48\u8fd9\u6837\u505a\u3002\n\u6211\u4eec\u6253\u7b97\u521b\u5efa\u4ec0\u4e48\n\u6211\u4eec\u6253\u7b97\u521b\u5efa\u4e00\u4e2a\u5177\u6709\u4e09\u4e2a\u547d\u4ee4\u7684\u5de5\u5177\uff1a\ndevpkg -S\n\u5728\u7535\u8111\u4e0a\u5b89\u88c5\u65b0\u7684\u8f6f\u4ef6\u3002\ndevpkg -I\n\u4eceURL\u5b89\u88c5\u8f6f\u4ef6\u3002\ndevpkg -L\n\u5217\u51fa\u5b89\u88c5\u7684\u6240\u6709\u8f6f\u4ef6\u3002\ndevpkg -F\n\u4e3a\u624b\u52a8\u6784\u5efa\u6293\u53d6\u6e90\u4ee3\u7801\u3002\ndevpkg -B\n\u6784\u5efa\u6240\u6293\u53d6\u7684\u6e90\u7801\u4ee3\u7801\u5e76\u4e14\u5b89\u88c5\u5b83\uff0c\u5373\u4f7f\u5b83\u5df2\u7ecf\u5b89\u88c5\u4e86\u3002\n\u6211\u4eec\u60f3\u8ba9devpkg\u80fd\u591f\u63a5\u53d7\u51e0\u4e4e\u4efb\u4f55URL\uff0c\u5224\u65ad\u9879\u76ee\u7684\u7c7b\u578b\uff0c\u4e0b\u8f7d\uff0c\u5b89\u88c5\uff0c\u4ee5\u53ca\u6ce8\u518c\u5df2\u7ecf\u5b89\u88c5\u7684\u8f6f\u4ef6\u3002\u6211\u4eec\u4e5f\u5e0c\u671b\u5b83\u80fd\u591f\u5904\u7406\u4e00\u4e2a\u7b80\u5355\u7684\u4f9d\u8d56\u5217\u8868\uff0c\u4ee5\u4fbf\u5b83\u80fd\u591f\u5b89\u88c5\u9879\u76ee\u6240\u9700\u7684\u6240\u6709\u8f6f\u4ef6\u3002\n\u8bbe\u8ba1\n\u4e3a\u4e86\u5b8c\u6210\u8fd9\u4e00\u76ee\u6807\uff0cdevpkg\u5177\u6709\u975e\u5e38\u7b80\u5355\u7684\u8bbe\u8ba1\uff1a\n\u4f7f\u7528\u5916\u90e8\u547d\u4ee4\n\u5927\u591a\u6570\u5de5\u4f5c\u90fd\u662f\u901a\u8fc7\u7c7b\u4f3c\u4e8ecurl\u3001git\u548ctar\u7684\u5916\u90e8\u547d\u4ee4\u5b8c\u6210\u7684\u3002\u8fd9\u6837\u51cf\u5c11\u4e86devpkg\u6240\u9700\u7684\u4ee3\u7801\u91cf\u3002\n\u7b80\u5355\u7684\u6587\u4ef6\u6570\u636e\u5e93\n\u4f60\u53ef\u4ee5\u8f7b\u6613\u4f7f\u5b83\u53d8\u5f97\u5f88\u590d\u6742\uff0c\u4f46\u662f\u4e00\u5f00\u59cb\u4f60\u9700\u8981\u5b8c\u6210\u4e00\u4e2a\u7b80\u5355\u7684\u6587\u4ef6\u6570\u636e\u5e93\uff0c\u4f4d\u4e8e\/usr\/local\/.devpkg\/db\uff0c\u6765\u8ddf\u8e2a\u5df2\u5b89\u88c5\u7684\u8f6f\u4ef6\u3002\n\/usr\/local\n\u540c\u6837\u4f60\u53ef\u4ee5\u4f7f\u5b83\u66f4\u9ad8\u7ea7\uff0c\u4f46\u662f\u5bf9\u4e8e\u521d\u5b66\u8005\u6765\u8bf4\uff0c\u5047\u8bbe\u9879\u76ee\u59cb\u7ec8\u4f4d\u4e8e\/usr\/local\u4e2d\uff0c\u5b83\u662f\u5927\u591a\u6570Unix\u8f6f\u4ef6\u7684\u6807\u51c6\u5b89\u88c5\u76ee\u5f55\u3002\nconfigure; make; make install\n\u5047\u8bbe\u5927\u591a\u6570\u8f6f\u4ef6\u53ef\u4ee5\u901a\u8fc7configure; make; make install\u6765\u5b89\u88c5\uff0c\u4e5f\u8bb8configure\u662f\u53ef\u9009\u7684\u3002\u5982\u679c\u8f6f\u4ef6\u4e0d\u80fd\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\u5b89\u88c5\uff0c\u8981\u4e48\u63d0\u4f9b\u67d0\u79cd\u65b9\u5f0f\u6765\u4fee\u6539\u547d\u4ee4\uff0c\u8981\u4e48devpkg\u5c31\u53ef\u4ee5\u65e0\u89c6\u5b83\u3002\n\u7528\u6237\u53ef\u4ee5root\n\u6211\u4eec\u5047\u8bbe\u7528\u4e8e\u53ef\u4ee5\u4f7f\u7528sudo\u6765\u63d0\u5347\u81f3root\u6743\u9650\uff0c\u9664\u975e\u4ed6\u4eec\u76f4\u5230\u6700\u540e\u624d\u60f3root\u3002\n\u8fd9\u4f1a\u4f7f\u6211\u4eec\u7684\u7a0b\u5e8f\u50cf\u5f53\u521d\u8bbe\u60f3\u7684\u4e00\u6837\u7b80\u5355\uff0c\u5e76\u4e14\u5bf9\u4e8e\u5b83\u7684\u529f\u80fd\u6765\u8bf4\u5df2\u7ecf\u8db3\u591f\u4e86\u3002\u4e4b\u540e\u4f60\u53ef\u4ee5\u8fdb\u4e00\u6b65\u4fee\u6539\u5b83\u3002\nApache \u53ef\u79fb\u690d\u8fd0\u884c\u65f6\n\u4f60\u9700\u8981\u505a\u7684\u53e6\u5916\u4e00\u4ef6\u4e8b\u60c5\u5c31\u662f\u4f7f\u7528Apache\u53ef\u79fb\u690d\u8fd0\u884c\u65f6\uff08APR\uff09\u6765\u672a\u5b8c\u6210\u8fd9\u4e2a\u7ec3\u4e60\u83b7\u5f97\u4e00\u4e2a\u53ef\u79fb\u690d\u7684\u5de5\u5177\u96c6\u3002APR\u5e76\u4e0d\u662f\u5fc5\u8981\u7684\uff0c\u4f60\u4e5f\u53ef\u4ee5\u4e0d\u7528\u5b83\uff0c\u4f46\u662f\u4f60\u9700\u8981\u5199\u7684\u4ee3\u7801\u5c31\u4f1a\u975e\u5e38\u591a\u3002\u6211\u73b0\u5728\u5f3a\u5236\u4f60\u4f7f\u7528APR\uff0c\u4f7f\u4f60\u80fd\u591f\u719f\u6089\u94fe\u63a5\u548c\u4f7f\u7528\u5176\u4ed6\u7684\u5e93\u3002\u6700\u540e\uff0cAPR\u4e5f\u80fd\u5728Windows\u4e0a\u5de5\u4f5c\uff0c\u6240\u4ee5\u4f60\u53ef\u4ee5\u628a\u5b83\u8fc1\u79fb\u5230\u8bb8\u591a\u5176\u5b83\u5e73\u53f0\u4e0a\u3002\n\u4f60\u5e94\u8be5\u83b7\u53d6apr-1.4.5\u548capr-util-1.3\u7684\u5e93\uff0c\u4ee5\u53ca\u6d4f\u89c8\u5728apr.apache.org\u4e3b\u7ad9\u4e0a\u7684\u6587\u6863\u3002\n\u4e0b\u9762\u662f\u4e00\u4e2aShellScript\uff0c\u7528\u4e8e\u5b89\u88c5\u6240\u9700\u7684\u6240\u6709\u5e93\u3002\u4f60\u5e94\u8be5\u624b\u52a8\u5c06\u5b83\u5199\u5230\u4e00\u4e2a\u6587\u4ef6\u4e2d\uff0c\u4e4b\u540e\u8fd0\u884c\u5b83\u76f4\u5230APR\u5b89\u88c5\u597d\u5e76\u4e14\u6ca1\u6709\u4efb\u4f55\u9519\u8bef\u3002\nset -e\n\n# go somewhere safe\ncd \/tmp\n\n# get the source to base APR 1.4.6\ncurl -L -O http:\/\/archive.apache.org\/dist\/apr\/apr-1.4.6.tar.gz\n\n# extract it and go into the source\ntar -xzvf apr-1.4.6.tar.gz\ncd apr-1.4.6\n\n# configure, make, make install\n.\/configure\nmake\nsudo make install\n\n# reset and cleanup\ncd \/tmp\nrm -rf apr-1.4.6 apr-1.4.6.tar.gz\n\n# do the same with apr-util\ncurl -L -O http:\/\/archive.apache.org\/dist\/apr\/apr-util-1.4.1.tar.gz\n\n# extract\ntar -xzvf apr-util-1.4.1.tar.gz\ncd apr-util-1.4.1\n\n# configure, make, make install\n.\/configure --with-apr=\/usr\/local\/apr\n# you need that extra parameter to configure because\n# apr-util can't really find it because...who knows.\n\nmake\nsudo make install\n\n#cleanup\ncd \/tmp\nrm -rf apr-util-1.4.1* apr-1.4.6*\n\u6211\u5e0c\u671b\u4f60\u8f93\u5165\u8fd9\u4e2a\u811a\u672c\uff0c\u56e0\u4e3a\u8fd9\u5c31\u662fdevpkg\u57fa\u672c\u4e0a\u6240\u505a\u7684\u4e8b\u60c5\uff0c\u53ea\u662f\u5e26\u6709\u4e86\u4e00\u4e9b\u9009\u9879\u548c\u68c0\u67e5\u9879\u3002\u5b9e\u9645\u4e0a\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528Shell\u4ee5\u66f4\u5c11\u7684\u4ee3\u7801\u6765\u5b8c\u6210\u5b83\uff0c\u4f46\u662f\u8fd9\u5bf9\u4e8e\u4e00\u672cC\u8bed\u8a00\u7684\u4e66\u4e0d\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u7a0b\u5e8f\u3002\n\u7b80\u5355\u8fd0\u884c\u8fd9\u4e2a\u811a\u672c\uff0c\u4fee\u590d\u5b83\u76f4\u5230\u6b63\u5e38\u5de5\u4f5c\uff0c\u5c31\u5b8c\u6210\u7684\u6240\u6709\u5e93\u7684\u5b89\u88c5\uff0c\u4e4b\u540e\u4f60\u9700\u8981\u5b8c\u6210\u9879\u76ee\u7684\u5269\u4e0b\u90e8\u5206\u3002\n\u9879\u76ee\u5e03\u5c40\n\u4f60\u9700\u8981\u521b\u5efa\u4e00\u4e9b\u7b80\u5355\u7684\u9879\u76ee\u6587\u4ef6\u6765\u8d77\u6b65\u3002\u4e0b\u9762\u662f\u6211\u901a\u5e38\u521b\u5efa\u4e00\u4e2a\u65b0\u9879\u76ee\u7684\u65b9\u6cd5\uff1a\nmkdir devpkg\ncd devpkg\ntouch README Makefile\n\u5176\u5b83\u4f9d\u8d56\n\u4f60\u5e94\u8be5\u5df2\u7ecf\u5b89\u88c5\u4e86APR\u548cAPR-util\uff0c\u6240\u4ee5\u4f60\u9700\u8981\u4e00\u4e9b\u66f4\u591a\u7684\u6587\u4ef6\u4f5c\u4e3a\u57fa\u672c\u7684\u4f9d\u8d56\uff1a\n\n\u7ec3\u4e6020\u4e2d\u7684dbg.h\u3002\n\u4ecehttp:\/\/bstring.sourceforge.net\/\u4e0b\u8f7d\u7684bstrlib.h\u548cbstrlib.c\u3002\u4e0b\u8f7d.zip\u6587\u4ef6\uff0c\u89e3\u538b\u5e76\u4e14\u5c06\u8fd9\u4e2a\u4e24\u4e2a\u6587\u4ef6\u62f7\u8d1d\u5230\u9879\u76ee\u4e2d\u3002\n\u8fd0\u884cmake bstrlib.o\uff0c\u5982\u679c\u8fd9\u4e0d\u80fd\u6b63\u5e38\u5de5\u4f5c\uff0c\u9605\u8bfb\u4e0b\u9762\u7684\u201c\u4fee\u590dbstring\u201d\u6307\u5357\u3002\n\n\n\u6ce8\n\n\n\u5728\u4e00\u4e9b\u5e73\u53f0\u4e0abstring.c\u6587\u4ef6\u4f1a\u51fa\u73b0\u4e0b\u5217\u9519\u8bef\uff1a\n\n\nbstrlib.c:2762: error: expected declaration specifiers or '...' before numeric constant\n\n\n\u8fd9\u662f\u7531\u4e8e\u4f5c\u8005\u4f7f\u7528\u4e86\u4e00\u4e2a\u4e0d\u597d\u7684\u5b9a\u4e49\uff0c\u5b83\u5728\u4e00\u4e9b\u5e73\u53f0\u4e0a\u4e0d\u80fd\u5de5\u4f5c\u3002\u4f60\u9700\u8981\u4fee\u6539\u7b2c2759\u884c\u7684#ifdef __GNUC__\uff0c\u5e76\u628a\u5b83\u6539\u6210\uff1a\n\n\n#if defined(__GNUC__) &amp;&amp; !defined(__APPLE__)\n\n\u4e4b\u540e\u5728Mac OSX\u5e73\u53f0\u4e0a\u5c31\u5e94\u8be5\u80fd\u591f\u6b63\u5e38\u5de5\u4f5c\u4e86\u3002\n\u505a\u5b8c\u4e0a\u9762\u8fd9\u4e9b\u540e\uff0c\u4f60\u5e94\u8be5\u6709\u4e86Makefile\uff0cREADME\uff0cdbg.h\uff0cbstrlib.h\u548cbstrlib.c\uff0c\u5e76\u505a\u597d\u4e86\u51c6\u5907\u3002\nMakefile\n\u6211\u4eec\u6700\u597d\u4eceMakefile\u5f00\u59cb\uff0c\u56e0\u4e3a\u5b83\u5217\u51fa\u4e86\u9879\u76ee\u5982\u4f55\u6784\u5efa\uff0c\u4ee5\u53ca\u4f60\u4f1a\u521b\u5efa\u54ea\u4e9b\u6e90\u6587\u4ef6\u3002\nPREFIX?=\/usr\/local\nCFLAGS=-g -Wall -I${PREFIX}\/apr\/include\/apr-1  -I${PREFIX}\/apr\/include\/apr-util-1\nLDFLAGS=-L${PREFIX}\/apr\/lib -lapr-1 -pthread -laprutil-1\n\nall: devpkg\n\ndevpkg: bstrlib.o db.o shell.o commands.o\n\ninstall: all\n     install -d $(DESTDIR)\/$(PREFIX)\/bin\/\n     install devpkg $(DESTDIR)\/$(PREFIX)\/bin\/\n\nclean:\n     rm -f *.o\n     rm -f devpkg\n     rm -rf *.dSYM\n\u6bd4\u8d77\u4e4b\u524d\u770b\u5230\u8fc7\u7684\uff0c\u8fd9\u5e76\u6ca1\u6709\u4ec0\u4e48\u65b0\u4e1c\u897f\uff0c\u9664\u4e86\u53ef\u80fd\u6709\u4e9b\u5947\u602a\u7684?=\u8bed\u6cd5\uff0c\u5b83\u8868\u793a\u201c\u5982\u679c\u4e4b\u524d\u6ca1\u6709\u5b9a\u4e49\uff0c\u5c31\u5c06PREFIX\u8bbe\u7f6e\u4e3a\u8be5\u503c\u201d\u3002\n\n\u6ce8\n\n\n\u5982\u679c\u4f60\u4f7f\u7528\u4e86\u6700\u8fd1\u7248\u672c\u7684Ubuntu\uff0c\u4f60\u4f1a\u5f97\u5230apr_off_t \u6216 off64_t\u7684\u9519\u8bef\uff0c\u4e4b\u540e\u9700\u8981\u5411CFLAGS\u6dfb\u52a0-D_LARGEFILE64_SOURCE=1\u3002\n\n\n\u6240\u9700\u7684\u53e6\u4e00\u4ef6\u4e8b\u662f\uff0c\u4f60\u9700\u8981\u5411\/etc\/ld.conf.so.d\/\u6dfb\u52a0\/usr\/local\/apr\/lib\uff0c\u4e4b\u540e\u8fd0\u884cldconfig\u4f7f\u5b83\u80fd\u591f\u9009\u62e9\u6b63\u5e38\u7684\u5e93\u3002\n\n\u6e90\u6587\u4ef6\n\u6211\u4eec\u53ef\u4ee5\u4ecemakefile\u4e2d\u770b\u5230\uff0cdevpkg\u6709\u56db\u4e2a\u4f9d\u8d56\u9879\uff0c\u5b83\u4eec\u662f\uff1a\nbstrlib.o\n\u7531bstrlib.c\u548cbstrlib.o\u4ea7\u751f\uff0c\u4f60\u5df2\u7ecf\u5c06\u5b83\u4eec\u5f15\u5165\u4e86\u3002\ndb.o\n\u7531db.c\u548cdb.h\u4ea7\u751f\uff0c\u5b83\u5305\u542b\u4e86\u4e00\u4e2a\u5c0f\u578b\u201c\u6570\u636e\u5e93\u201d\u7a0b\u5e8f\u96c6\u7684\u4ee3\u7801\u3002\nshell.o\n\u7531shell.c\u548cshell.h\u4ea7\u751f\uff0c\u5305\u542b\u4e00\u4e9b\u51fd\u6570\uff0c\u662f\u7c7b\u4f3ccurl\u7684\u4e00\u4e9b\u547d\u4ee4\u8fd0\u884c\u8d77\u6765\u66f4\u5bb9\u6613\u3002\ncommands.o\n\u7531commands.c\u548ccommands.h\u4ea7\u751f\uff0c\u5305\u542b\u4e86devpkg\u6240\u9700\u7684\u6240\u6709\u547d\u4ee4\u5e76\u4f7f\u5b83\u66f4\u6613\u7528\u3002\ndevpkg\n\u5b83\u4e0d\u4f1a\u663e\u5f0f\u63d0\u5230\uff0c\u4f46\u662f\u5b83\u662fMakefile\u5728\u8fd9\u4e00\u90e8\u5206\u7684\u76ee\u6807\u3002\u5b83\u7531devpkg.c\u4ea7\u751f\uff0c\u5305\u542b\u7528\u4e8e\u6574\u4e2a\u7a0b\u5e8f\u7684main\u51fd\u6570\u3002\n\u4f60\u7684\u4efb\u52a1\u5c31\u662f\u521b\u5efa\u8fd9\u4e9b\u6587\u4ef6\uff0c\u5e76\u4e14\u8f93\u5165\u4ee3\u7801\u5e76\u4fdd\u8bc1\u6b63\u786e\u3002\n\n\u6ce8\n\n\n\u4f60\u8bfb\u5b8c\u8fd9\u4e2a\u63cf\u8ff0\u53ef\u80fd\u4f1a\u60f3\uff0c\u201cZed\u4e3a\u4ec0\u4e48\u90a3\u4e48\u806a\u660e\uff0c\u5750\u7740\u5c31\u80fd\u8bbe\u8ba1\u51fa\u6765\u8fd9\u4e9b\u6587\u4ef6\uff1f\uff01\u201d\u6211\u5e76\u4e0d\u662f\u7528\u6211\u5f3a\u5927\u7684\u4ee3\u7801\u529f\u529b\u9b54\u672f\u822c\u5730\u628adevpkg\u8bbe\u8ba1\u6210\u8fd9\u6837\u3002\u800c\u662f\u6211\u505a\u4e86\u8fd9\u4e9b\uff1a\n\n\n\n\u6211\u7f16\u5199\u4e86\u7b80\u5355\u7684README\u6765\u83b7\u5f97\u5982\u4f55\u6784\u5efa\u9879\u76ee\u7684\u7075\u611f\u3002\n\u6211\u521b\u5efa\u4e86\u4e00\u4e2a\u7b80\u5355\u7684bash\u811a\u672c\uff08\u5c31\u50cf\u4f60\u7f16\u5199\u7684\u90a3\u6837\uff09\u6765\u7406\u6e05\u6240\u9700\u7684\u6240\u6709\u7ec4\u4ef6\u3002\n\u6211\u521b\u5efa\u4e86\u4e00\u4e2a.c\u6587\u4ef6\uff0c\u5e76\u4e14\u5728\u5b83\u4e0a\u9762\u82b1\u4e86\u51e0\u5929\uff0c\u915d\u917f\u5e76\u60f3\u51fa\u70b9\u5b50\u3002\n\u63a5\u7740\u6211\u7f16\u5199\u5e76\u8c03\u8bd5\u7a0b\u5e8f\uff0c\u4e4b\u540e\u6211\u5c06\u8fd9\u4e00\u4e2a\u5927\u6587\u4ef6\u5206\u6210\u56db\u4e2a\u6587\u4ef6\u3002\n\u505a\u5b8c\u8fd9\u4e9b\u4e4b\u540e\uff0c\u6211\u91cd\u547d\u540d\u548c\u4f18\u5316\u4e86\u51fd\u6570\u548c\u6570\u636e\u7ed3\u6784\uff0c\u4f7f\u5b83\u4eec\u5728\u903b\u8f91\u4e0a\u66f4\u201c\u7f8e\u89c2\u201d\u3002\n\u6700\u540e\uff0c\u4f7f\u65b0\u7a0b\u5e8f\u6210\u529f\u5e76\u4ee5\u76f8\u540c\u65b9\u5f0f\u5de5\u4f5c\u4e4b\u540e\uff0c\u6211\u6dfb\u52a0\u4e86\u4e00\u4e9b\u65b0\u7684\u7279\u6027\uff0c\u6bd4\u5982-F\u548c-B\u9009\u9879\u3002\n\n\n\n\u4f60\u8bfb\u5230\u7684\u8fd9\u4efd\u5217\u8868\u662f\u6211\u6253\u7b97\u6559\u7ed9\u4f60\u7684\uff0c\u4f46\u4e0d\u8981\u8ba4\u4e3a\u8fd9\u662f\u6211\u6784\u5efa\u8f6f\u4ef6\u7684\u901a\u7528\u65b9\u6cd5\u3002\u6709\u65f6\u5019\u6211\u4f1a\u4e8b\u5148\u77e5\u9053\u4e3b\u9898\uff0c\u5e76\u4e14\u4f1a\u505a\u66f4\u591a\u7684\u89c4\u5212\u3002\u4e5f\u6709\u65f6\u6211\u4f1a\u7f16\u5199\u4e00\u4efd\u89c4\u5212\u5e76\u5c06\u5b83\u6254\u6389\uff0c\u4e4b\u540e\u518d\u89c4\u5212\u66f4\u597d\u7684\u7248\u672c\u3002\u5b83\u5b8c\u5168\u53d6\u51b3\u4e8e\u6211\u7684\u7ecf\u9a8c\u544a\u8bc9\u6211\u54ea\u4e2a\u6bd4\u8f83\u597d\uff0c\u6216\u8005\u6211\u7684\u7075\u611f\u5c06\u6211\u5e26\u5230\u4f55\u5904\u3002\n\n\n\u5982\u679c\u4f60\u78b0\u5230\u4e00\u4e2a\u201c\u4e13\u5bb6\u201d\uff0c\u5b83\u544a\u8bc9\u4f60\u53ea\u6709\u4e00\u4e2a\u65b9\u6cd5\u53ef\u4ee5\u89e3\u51b3\u7f16\u7a0b\u95ee\u9898\uff0c\u90a3\u4e48\u5b83\u5728\u9a97\u4f60\u3002\u8981\u4e48\u5b83\u4eec\u5b9e\u9645\u4f7f\u7528\u4e86\u5f88\u591a\u7b56\u7565\uff0c\u8981\u4e48\u4ed6\u4eec\u5e76\u4e0d\u8db3\u591f\u597d\u3002\n\nDB\u51fd\u6570\n\u7a0b\u5e8f\u4e2d\u5fc5\u987b\u6709\u4e2a\u65b9\u6cd5\u6765\u8bb0\u5f55\u5df2\u7ecf\u5b89\u88c5\u7684URL\uff0c\u5217\u51fa\u8fd9\u4e9bURL\uff0c\u5e76\u4e14\u68c0\u67e5\u4e00\u4e9b\u7a0b\u5e8f\u662f\u5426\u5df2\u5b89\u88c5\u4ee5\u4fbf\u8df3\u8fc7\u3002\u6211\u4f1a\u4f7f\u7528\u4e00\u4e2a\u7b80\u5355\u3001\u6241\u5e73\u5316\u7684\u6587\u4ef6\u6570\u636e\u5e93\uff0c\u4ee5\u53cabstrlib.h\u3002\n\u9996\u5148\uff0c\u521b\u5efadb.h\u5934\u6587\u4ef6\uff0c\u4ee5\u4fbf\u8ba9\u4f60\u77e5\u9053\u9700\u8981\u5b9e\u73b0\u4ec0\u4e48\u3002\n#ifndef _db_h\n#define _db_h\n\n#define DB_FILE \"\/usr\/local\/.devpkg\/db\"\n#define DB_DIR \"\/usr\/local\/.devpkg\"\n\n\nint DB_init();\nint DB_list();\nint DB_update(const char *url);\nint DB_find(const char *url);\n\n#endif\n\u4e4b\u540e\u5b9e\u73b0db.c\u4e2d\u7684\u8fd9\u4e9b\u51fd\u6570\uff0c\u5728\u4f60\u7f16\u5199\u5b83\u7684\u65f6\u5019\uff0c\u50cf\u4e4b\u524d\u4e00\u6837\u4f7f\u7528make\u3002\n#include &lt;unistd.h&gt;\n#include &lt;apr_errno.h&gt;\n#include &lt;apr_file_io.h&gt;\n\n#include \"db.h\"\n#include \"bstrlib.h\"\n#include \"dbg.h\"\n\nstatic FILE *DB_open(const char *path, const char *mode)\n{\n    return fopen(path, mode);\n}\n\n\nstatic void DB_close(FILE *db)\n{\n    fclose(db);\n}\n\n\nstatic bstring DB_load()\n{\n    FILE *db = NULL;\n    bstring data = NULL;\n\n    db = DB_open(DB_FILE, \"r\");\n    check(db, \"Failed to open database: %s\", DB_FILE);\n\n    data = bread((bNread)fread, db);\n    check(data, \"Failed to read from db file: %s\", DB_FILE);\n\n    DB_close(db);\n    return data;\n\nerror:\n    if(db) DB_close(db);\n    if(data) bdestroy(data);\n    return NULL;\n}\n\n\nint DB_update(const char *url)\n{\n    if(DB_find(url)) {\n        log_info(\"Already recorded as installed: %s\", url);\n    }\n\n    FILE *db = DB_open(DB_FILE, \"a+\");\n    check(db, \"Failed to open DB file: %s\", DB_FILE);\n\n    bstring line = bfromcstr(url);\n    bconchar(line, '\\n');\n    int rc = fwrite(line-&gt;data, blength(line), 1, db);\n    check(rc == 1, \"Failed to append to the db.\");\n\n    return 0;\nerror:\n    if(db) DB_close(db);\n    return -1;\n}\n\n\nint DB_find(const char *url)\n{\n    bstring data = NULL;\n    bstring line = bfromcstr(url);\n    int res = -1;\n\n    data = DB_load();\n    check(data, \"Failed to load: %s\", DB_FILE);\n\n    if(binstr(data, 0, line) == BSTR_ERR) {\n        res = 0;\n    } else {\n        res = 1;\n    }\n\nerror: \/\/ fallthrough\n    if(data) bdestroy(data);\n    if(line) bdestroy(line);\n\n    return res;\n}\n\n\nint DB_init()\n{\n    apr_pool_t *p = NULL;\n    apr_pool_initialize();\n    apr_pool_create(&amp;p, NULL);\n\n    if(access(DB_DIR, W_OK | X_OK) == -1) {\n        apr_status_t rc = apr_dir_make_recursive(DB_DIR,\n                APR_UREAD | APR_UWRITE | APR_UEXECUTE |\n                APR_GREAD | APR_GWRITE | APR_GEXECUTE, p);\n        check(rc == APR_SUCCESS, \"Failed to make database dir: %s\", DB_DIR);\n    }\n\n    if(access(DB_FILE, W_OK) == -1) {\n        FILE *db = DB_open(DB_FILE, \"w\");\n        check(db, \"Cannot open database: %s\", DB_FILE);\n        DB_close(db);\n    }\n\n    apr_pool_destroy(p);\n    return 0;\n\nerror:\n    apr_pool_destroy(p);\n    return -1;\n}\n\n\nint DB_list()\n{\n    bstring data = DB_load();\n    check(data, \"Failed to read load: %s\", DB_FILE);\n\n    printf(\"%s\", bdata(data));\n    bdestroy(data);\n    return 0;\n\nerror:\n    return -1;\n}\n\u6311\u62181\uff1a\u4ee3\u7801\u590d\u67e5\n\u5728\u7ee7\u7eed\u4e4b\u524d\uff0c\u4ed4\u7ec6\u9605\u8bfb\u8fd9\u4e9b\u6587\u4ef6\u7684\u6bcf\u4e00\u884c\uff0c\u5e76\u4e14\u786e\u4fdd\u4f60\u4ee5\u51c6\u786e\u5730\u8f93\u5165\u4e86\u5b83\u4eec\u3002\u901a\u8fc7\u9010\u884c\u9605\u8bfb\u4ee3\u7801\u6765\u5b9e\u8df5\u5b83\u3002\u540c\u65f6\uff0c\u8ddf\u8e2a\u6bcf\u4e2a\u51fd\u6570\u8c03\u7528\uff0c\u5e76\u4e14\u786e\u4fdd\u4f60\u4f7f\u7528\u4e86check\u6765\u6821\u9a8c\u8fd4\u56de\u503c\u3002\u6700\u540e\uff0c\u5728APR\u7f51\u7ad9\u4e0a\u7684\u6587\u6863\uff0c\u6216\u8005bstrlib.h \u6216 bstrlib.c\u7684\u6e90\u7801\u4e2d\uff0c\u67e5\u9605\u6bcf\u4e2a\u4f60\u4e0d\u8ba4\u8bc6\u7684\u51fd\u6570\u3002\nShell \u51fd\u6570\ndevkpg\u7684\u4e00\u4e2a\u5173\u952e\u8bbe\u8ba1\u662f\uff0c\u4f7f\u7528\u7c7b\u4f3c\u4e8ecurl\u3001tar\u548cgit\u7684\u5916\u90e8\u5de5\u5177\u6765\u5b8c\u6210\u5927\u90e8\u5206\u7684\u5de5\u4f5c\u3002\u6211\u4eec\u53ef\u4ee5\u627e\u5230\u5728\u7a0b\u5e8f\u5185\u90e8\u5b8c\u6210\u8fd9\u4e9b\u5de5\u4f5c\u7684\u5e93\uff0c\u4f46\u662f\u5982\u679c\u6211\u4eec\u53ea\u662f\u9700\u8981\u8fd9\u4e9b\u7a0b\u5e8f\u7684\u57fa\u672c\u529f\u80fd\uff0c\u8fd9\u6837\u5c31\u6beb\u65e0\u610f\u4e49\u3002\u5728Unix\u8fd0\u884c\u5176\u5b83\u547d\u4ee4\u5e76\u4e0d\u4e22\u4eba\u3002\n\u4e3a\u4e86\u5b8c\u6210\u8fd9\u4e9b\uff0c\u6211\u6253\u7b97\u4f7f\u7528apr_thread_proc.h\u51fd\u6570\u6765\u8fd0\u884c\u7a0b\u5e8f\uff0c\u4f46\u662f\u6211\u4e5f\u5e0c\u671b\u521b\u5efa\u4e00\u4e2a\u7b80\u5355\u7684\u7c7b\u201c\u6a21\u677f\u201d\u7cfb\u7edf\u3002\u6211\u4f1a\u4f7f\u7528struct Shell\uff0c\u5b83\u6301\u6709\u6240\u6709\u8fd0\u884c\u7a0b\u5e8f\u6240\u9700\u7684\u4fe1\u606f\uff0c\u4f46\u662f\u5728\u53c2\u6570\u4e2d\u6709\u4e00\u4e9b\u201c\u7a7a\u4f4d\u201d\uff0c\u6211\u53ef\u4ee5\u5c06\u5b83\u4eec\u66ff\u6362\u6210\u5b9e\u9645\u503c\u3002\n\u89c2\u5bdfshell.h\u6587\u4ef6\u6765\u4e86\u89e3\u6211\u4f1a\u7528\u5230\u7684\u7ed3\u6784\u548c\u547d\u4ee4\u3002\u4f60\u53ef\u4ee5\u770b\u5230\u6211\u4f7f\u7528extern\u6765\u8868\u660e\u5176\u4ed6\u7684.c\u6587\u4ef6\u4e5f\u80fd\u8bbf\u95ee\u5230shell.c\u4e2d\u5b9a\u4e49\u7684\u53d8\u91cf\u3002\n#ifndef _shell_h\n#define _shell_h\n\n#define MAX_COMMAND_ARGS 100\n\n#include &lt;apr_thread_proc.h&gt;\n\ntypedef struct Shell {\n    const char *dir;\n    const char *exe;\n\n    apr_procattr_t *attr;\n    apr_proc_t proc;\n    apr_exit_why_e exit_why;\n    int exit_code;\n\n    const char *args[MAX_COMMAND_ARGS];\n} Shell;\n\nint Shell_run(apr_pool_t *p, Shell *cmd);\nint Shell_exec(Shell cmd, ...);\n\nextern Shell CLEANUP_SH;\nextern Shell GIT_SH;\nextern Shell TAR_SH;\nextern Shell CURL_SH;\nextern Shell CONFIGURE_SH;\nextern Shell MAKE_SH;\nextern Shell INSTALL_SH;\n\n#endif\n\u786e\u4fdd\u4f60\u5df2\u7ecf\u521b\u5efa\u4e86shell.h\uff0c\u5e76\u4e14extern Shell\u53d8\u91cf\u7684\u540d\u5b57\u548c\u6570\u91cf\u76f8\u540c\u3002\u5b83\u4eec\u88abShell_run\u548cShell_exec\u51fd\u6570\u7528\u4e8e\u8fd0\u884c\u547d\u4ee4\u3002\u6211\u5b9a\u4e49\u4e86\u8fd9\u4e24\u4e2a\u51fd\u6570\uff0c\u5e76\u4e14\u5728shell.c\u4e2d\u521b\u5efa\u5b9e\u9645\u53d8\u91cf\u3002\n#include \"shell.h\"\n#include \"dbg.h\"\n#include &lt;stdarg.h&gt;\n\nint Shell_exec(Shell template, ...)\n{\n    apr_pool_t *p = NULL;\n    int rc = -1;\n    apr_status_t rv = APR_SUCCESS;\n    va_list argp;\n    const char *key = NULL;\n    const char *arg = NULL;\n    int i = 0;\n\n    rv = apr_pool_create(&amp;p, NULL);\n    check(rv == APR_SUCCESS, \"Failed to create pool.\");\n\n    va_start(argp, template);\n\n    for(key = va_arg(argp, const char *);\n        key != NULL;\n        key = va_arg(argp, const char *))\n    {\n        arg = va_arg(argp, const char *);\n\n        for(i = 0; template.args[i] != NULL; i++) {\n            if(strcmp(template.args[i], key) == 0) {\n                template.args[i] = arg;\n                break; \/\/ found it\n            }\n        }\n    }\n\n    rc = Shell_run(p, &amp;template);\n    apr_pool_destroy(p);\n    va_end(argp);\n    return rc;\n\nerror:\n    if(p) {\n        apr_pool_destroy(p);\n    }\n    return rc;\n}\n\nint Shell_run(apr_pool_t *p, Shell *cmd)\n{\n    apr_procattr_t *attr;\n    apr_status_t rv;\n    apr_proc_t newproc;\n\n    rv = apr_procattr_create(&amp;attr, p);\n    check(rv == APR_SUCCESS, \"Failed to create proc attr.\");\n\n    rv = apr_procattr_io_set(attr, APR_NO_PIPE, APR_NO_PIPE,\n            APR_NO_PIPE);\n    check(rv == APR_SUCCESS, \"Failed to set IO of command.\");\n\n    rv = apr_procattr_dir_set(attr, cmd-&gt;dir);\n    check(rv == APR_SUCCESS, \"Failed to set root to %s\", cmd-&gt;dir);\n\n    rv = apr_procattr_cmdtype_set(attr, APR_PROGRAM_PATH);\n    check(rv == APR_SUCCESS, \"Failed to set cmd type.\");\n\n    rv = apr_proc_create(&amp;newproc, cmd-&gt;exe, cmd-&gt;args, NULL, attr, p);\n    check(rv == APR_SUCCESS, \"Failed to run command.\");\n\n    rv = apr_proc_wait(&amp;newproc, &amp;cmd-&gt;exit_code, &amp;cmd-&gt;exit_why, APR_WAIT);\n    check(rv == APR_CHILD_DONE, \"Failed to wait.\");\n\n    check(cmd-&gt;exit_code == 0, \"%s exited badly.\", cmd-&gt;exe);\n    check(cmd-&gt;exit_why == APR_PROC_EXIT, \"%s was killed or crashed\", cmd-&gt;exe);\n\n    return 0;\n\nerror:\n    return -1;\n}\n\nShell CLEANUP_SH = {\n    .exe = \"rm\",\n    .dir = \"\/tmp\",\n    .args = {\"rm\", \"-rf\", \"\/tmp\/pkg-build\", \"\/tmp\/pkg-src.tar.gz\",\n        \"\/tmp\/pkg-src.tar.bz2\", \"\/tmp\/DEPENDS\", NULL}\n};\n\nShell GIT_SH = {\n    .dir = \"\/tmp\",\n    .exe = \"git\",\n    .args = {\"git\", \"clone\", \"URL\", \"pkg-build\", NULL}\n};\n\nShell TAR_SH = {\n    .dir = \"\/tmp\/pkg-build\",\n    .exe = \"tar\",\n    .args = {\"tar\", \"-xzf\", \"FILE\", \"--strip-components\", \"1\", NULL}\n};\n\nShell CURL_SH = {\n    .dir = \"\/tmp\",\n    .exe = \"curl\",\n    .args = {\"curl\", \"-L\", \"-o\", \"TARGET\", \"URL\", NULL}\n};\n\nShell CONFIGURE_SH = {\n    .exe = \".\/configure\",\n    .dir = \"\/tmp\/pkg-build\",\n    .args = {\"configure\", \"OPTS\", NULL},\n};\n\nShell MAKE_SH = {\n    .exe = \"make\",\n    .dir = \"\/tmp\/pkg-build\",\n    .args = {\"make\", \"OPTS\", NULL}\n};\n\nShell INSTALL_SH = {\n    .exe = \"sudo\",\n    .dir = \"\/tmp\/pkg-build\",\n    .args = {\"sudo\", \"make\", \"TARGET\", NULL}\n};\n\u81ea\u5e95\u5411\u4e0a\u9605\u8bfbshell.c\u7684\u4ee3\u7801\uff08\u8fd9\u4e5f\u662f\u5e38\u89c1\u7684C\u6e90\u7801\u5e03\u5c40\uff09\uff0c\u4f60\u4f1a\u770b\u5230\u6211\u521b\u5efa\u4e86\u5b9e\u9645\u7684Shell\u53d8\u91cf\uff0c\u5b83\u5728shell.h\u4e2d\u4ee5extern\u4fee\u9970\u3002\u5b83\u4eec\u867d\u7136\u5728\u8fd9\u91cc\uff0c\u4f46\u662f\u4e5f\u88ab\u7a0b\u5e8f\u7684\u5176\u5b83\u90e8\u5206\u4f7f\u7528\u3002\u8fd9\u5c31\u662f\u521b\u5efa\u5168\u5c40\u53d8\u91cf\u7684\u65b9\u5f0f\uff0c\u5b83\u4eec\u53ef\u4ee5\u5b58\u5728\u4e8e\u4e00\u4e2a.c\u6587\u4ef6\u4e2d\uff0c\u4f46\u662f\u53ef\u5728\u4efb\u4f55\u5730\u65b9\u4f7f\u7528\u3002\u4f60\u4e0d\u5e94\u8be5\u521b\u5efa\u5f88\u591a\u8fd9\u7c7b\u53d8\u91cf\uff0c\u4f46\u662f\u5b83\u4eec\u7684\u786e\u5f88\u65b9\u4fbf\u3002\n\u7ee7\u7eed\u9605\u8bfb\u4ee3\u7801\uff0c\u6211\u4eec\u8bfb\u5230\u4e86Shell_run\uff0c\u5b83\u662f\u4e00\u4e2a\u201c\u57fa\u201d\u51fd\u6570\uff0c\u53ea\u662f\u57fa\u4e8eShell\u4e2d\u7684\u4e1c\u897f\u6267\u884c\u547d\u4ee4\u3002\u5b83\u4f7f\u7528\u4e86\u8bb8\u591a\u5728apr_thread_proc.h\u4e2d\u5b9a\u4e49\u7684\u51fd\u6570\uff0c\u4f60\u9700\u8981\u67e5\u9605\u5b83\u4eec\u7684\u6bcf\u4e00\u4e2a\u6765\u4e86\u89e3\u5de5\u4f5c\u539f\u7406\u3002\u8fd9\u5c31\u50cf\u662f\u4e00\u4e9b\u4f7f\u7528system\u51fd\u6570\u8c03\u7528\u7684\u4ee3\u7801\u4e00\u6837\uff0c\u4f46\u662f\u5b83\u53ef\u4ee5\u8ba9\u4f60\u63a7\u5236\u5176\u4ed6\u7a0b\u5e8f\u7684\u6267\u884c\u3002\u4f8b\u5982\uff0c\u5728\u6211\u4eec\u7684Shell\u7ed3\u6784\u4e2d\uff0c\u5b58\u5728.dir\u5c5e\u6027\u5728\u8fd0\u884c\u4e4b\u524d\u5f3a\u5236\u7a0b\u5e8f\u5fc5\u987b\u5728\u6307\u5b9a\u76ee\u5f55\u4e2d\u3002\n\u6700\u540e\uff0c\u6211\u521b\u5efa\u4e86Shell_exec\u51fd\u6570\uff0c\u5b83\u662f\u4e2a\u53d8\u53c2\u51fd\u6570\u3002\u4f60\u5728\u4e4b\u524d\u5df2\u7ecf\u770b\u5230\u8fc7\u4e86\uff0c\u4f46\u662f\u786e\u4fdd\u4f60\u7406\u89e3\u4e86stdarg.h\u51fd\u6570\u4ee5\u53ca\u5982\u4f55\u7f16\u5199\u5b83\u4eec\u3002\u5728\u4e0b\u4e2a\u6311\u6218\u4e2d\u4f60\u9700\u8981\u5206\u6790\u8fd9\u4e00\u51fd\u6570\u3002\n\u6311\u62182\uff1a\u5206\u6790Shell_exec\n\u4e3a\u8fd9\u4e9b\u6587\u4ef6\uff08\u4ee5\u53ca\u5411\u6311\u62181\u90a3\u6837\u7684\u5b8c\u6574\u7684\u4ee3\u7801\u590d\u67e5\uff09\u8bbe\u7f6e\u7684\u6311\u6218\u662f\u5b8c\u6574\u5206\u6790Shell_exec\uff0c\u5e76\u4e14\u62c6\u5206\u4ee3\u7801\u6765\u4e86\u89e3\u5de5\u4f5c\u539f\u7406\u3002\u4f60\u5e94\u8be5\u80fd\u591f\u7406\u89e3\u6bcf\u4e00\u884c\u4ee3\u7801\uff0cfor\u5faa\u73af\u5982\u4f55\u5de5\u4f5c\uff0c\u4ee5\u53ca\u53c2\u6570\u5982\u4f55\u88ab\u66ff\u6362\u3002\n\u4e00\u65e6\u4f60\u5206\u6790\u5b8c\u6210\uff0c\u5411struct Shell\u6dfb\u52a0\u4e00\u4e2a\u5b57\u6bb5\uff0c\u63d0\u4f9b\u9700\u8981\u66ff\u4ee3\u7684args\u53d8\u91cf\u7684\u6570\u91cf\u3002\u66f4\u65b0\u6240\u6709\u547d\u4ee4\u6765\u63a5\u53d7\u53c2\u6570\u7684\u6b63\u786e\u6570\u91cf\uff0c\u968f\u540e\u589e\u52a0\u4e00\u4e2a\u9519\u8bef\u68c0\u67e5\uff0c\u6765\u786e\u8ba4\u53c2\u6570\u88ab\u6b63\u786e\u66ff\u6362\uff0c\u4ee5\u53ca\u5728\u9519\u8bef\u65f6\u9000\u51fa\u3002\n\u547d\u4ee4\u884c\u51fd\u6570\n\u73b0\u5728\u4f60\u9700\u8981\u6784\u9020\u6b63\u786e\u7684\u547d\u4ee4\u6765\u5b8c\u6210\u529f\u80fd\u3002\u8fd9\u4e9b\u547d\u4ee4\u4f1a\u7528\u5230APR\u7684\u51fd\u6570\u3001db.h\u548cshell.h\u6765\u6267\u884c\u4e0b\u8f7d\u548c\u6784\u5efa\u8f6f\u4ef6\u7684\u771f\u6b63\u5de5\u4f5c\u3002\u8fd9\u4e9b\u6587\u4ef6\u6700\u4e3a\u590d\u6742\uff0c\u6240\u4ee5\u8981\u5c0f\u5fc3\u7f16\u5199\u5b83\u4eec\u3002\u4f60\u9700\u8981\u9996\u5148\u7f16\u5199commands.h\u6587\u4ef6\uff0c\u63a5\u7740\u5728commands.c\u6587\u4ef6\u4e2d\u5b9e\u73b0\u5b83\u7684\u51fd\u6570\u3002\n#ifndef _commands_h\n#define _commands_h\n\n#include &lt;apr_pools.h&gt;\n\n#define DEPENDS_PATH \"\/tmp\/DEPENDS\"\n#define TAR_GZ_SRC \"\/tmp\/pkg-src.tar.gz\"\n#define TAR_BZ2_SRC \"\/tmp\/pkg-src.tar.bz2\"\n#define BUILD_DIR \"\/tmp\/pkg-build\"\n#define GIT_PAT \"*.git\"\n#define DEPEND_PAT \"*DEPENDS\"\n#define TAR_GZ_PAT \"*.tar.gz\"\n#define TAR_BZ2_PAT \"*.tar.bz2\"\n#define CONFIG_SCRIPT \"\/tmp\/pkg-build\/configure\"\n\nenum CommandType {\n    COMMAND_NONE, COMMAND_INSTALL, COMMAND_LIST, COMMAND_FETCH,\n    COMMAND_INIT, COMMAND_BUILD\n};\n\n\nint Command_fetch(apr_pool_t *p, const char *url, int fetch_only);\n\nint Command_install(apr_pool_t *p, const char *url, const char *configure_opts,\n        const char *make_opts, const char *install_opts);\n\nint Command_depends(apr_pool_t *p, const char *path);\n\nint Command_build(apr_pool_t *p, const char *url, const char *configure_opts,\n        const char *make_opts, const char *install_opts);\n\n#endif\ncommands.h\u4e2d\u5e76\u6ca1\u6709\u5f88\u591a\u4e4b\u524d\u6ca1\u89c1\u8fc7\u7684\u4e1c\u897f\u3002\u4f60\u5e94\u8be5\u770b\u5230\u4e86\u4e00\u4e9b\u5b57\u7b26\u4e32\u7684\u5b9a\u4e49\uff0c\u5b83\u4eec\u5728\u4efb\u4f55\u5730\u65b9\u90fd\u4f1a\u7528\u5230\u3002\u771f\u6b63\u7684\u4ee3\u7801\u5728commands.c\u4e2d\u3002\n#include &lt;apr_uri.h&gt;\n#include &lt;apr_fnmatch.h&gt;\n#include &lt;unistd.h&gt;\n\n#include \"commands.h\"\n#include \"dbg.h\"\n#include \"bstrlib.h\"\n#include \"db.h\"\n#include \"shell.h\"\n\n\nint Command_depends(apr_pool_t *p, const char *path)\n{\n    FILE *in = NULL;\n    bstring line = NULL;\n\n    in = fopen(path, \"r\");\n    check(in != NULL, \"Failed to open downloaded depends: %s\", path);\n\n    for(line = bgets((bNgetc)fgetc, in, '\\n'); line != NULL;\n            line = bgets((bNgetc)fgetc, in, '\\n'))\n    {\n        btrimws(line);\n        log_info(\"Processing depends: %s\", bdata(line));\n        int rc = Command_install(p, bdata(line), NULL, NULL, NULL);\n        check(rc == 0, \"Failed to install: %s\", bdata(line));\n        bdestroy(line);\n    }\n\n    fclose(in);\n    return 0;\n\nerror:\n    if(line) bdestroy(line);\n    if(in) fclose(in);\n    return -1;\n}\n\nint Command_fetch(apr_pool_t *p, const char *url, int fetch_only)\n{\n    apr_uri_t info = {.port = 0};\n    int rc = 0;\n    const char *depends_file = NULL;\n    apr_status_t rv = apr_uri_parse(p, url, &amp;info);\n\n    check(rv == APR_SUCCESS, \"Failed to parse URL: %s\", url);\n\n    if(apr_fnmatch(GIT_PAT, info.path, 0) == APR_SUCCESS) {\n        rc = Shell_exec(GIT_SH, \"URL\", url, NULL);\n        check(rc == 0, \"git failed.\");\n    } else if(apr_fnmatch(DEPEND_PAT, info.path, 0) == APR_SUCCESS) {\n        check(!fetch_only, \"No point in fetching a DEPENDS file.\");\n\n        if(info.scheme) {\n            depends_file = DEPENDS_PATH;\n            rc = Shell_exec(CURL_SH, \"URL\", url, \"TARGET\", depends_file, NULL);\n            check(rc == 0, \"Curl failed.\");\n        } else {\n            depends_file = info.path;\n        }\n\n        \/\/ recursively process the devpkg list\n        log_info(\"Building according to DEPENDS: %s\", url);\n        rv = Command_depends(p, depends_file);\n        check(rv == 0, \"Failed to process the DEPENDS: %s\", url);\n\n        \/\/ this indicates that nothing needs to be done\n        return 0;\n\n    } else if(apr_fnmatch(TAR_GZ_PAT, info.path, 0) == APR_SUCCESS) {\n        if(info.scheme) {\n            rc = Shell_exec(CURL_SH,\n                    \"URL\", url,\n                    \"TARGET\", TAR_GZ_SRC, NULL);\n            check(rc == 0, \"Failed to curl source: %s\", url);\n        }\n\n        rv = apr_dir_make_recursive(BUILD_DIR,\n                APR_UREAD | APR_UWRITE | APR_UEXECUTE, p);\n        check(rv == APR_SUCCESS, \"Failed to make directory %s\", BUILD_DIR);\n\n        rc = Shell_exec(TAR_SH, \"FILE\", TAR_GZ_SRC, NULL);\n        check(rc == 0, \"Failed to untar %s\", TAR_GZ_SRC);\n    } else if(apr_fnmatch(TAR_BZ2_PAT, info.path, 0) == APR_SUCCESS) {\n        if(info.scheme) {\n            rc = Shell_exec(CURL_SH, \"URL\", url, \"TARGET\", TAR_BZ2_SRC, NULL);\n            check(rc == 0, \"Curl failed.\");\n        }\n\n        apr_status_t rc = apr_dir_make_recursive(BUILD_DIR,\n                APR_UREAD | APR_UWRITE | APR_UEXECUTE, p);\n\n        check(rc == 0, \"Failed to make directory %s\", BUILD_DIR);\n        rc = Shell_exec(TAR_SH, \"FILE\", TAR_BZ2_SRC, NULL);\n        check(rc == 0, \"Failed to untar %s\", TAR_BZ2_SRC);\n    } else {\n        sentinel(\"Don't now how to handle %s\", url);\n    }\n\n    \/\/ indicates that an install needs to actually run\n    return 1;\nerror:\n    return -1;\n}\n\nint Command_build(apr_pool_t *p, const char *url, const char *configure_opts,\n        const char *make_opts, const char *install_opts)\n{\n    int rc = 0;\n\n    check(access(BUILD_DIR, X_OK | R_OK | W_OK) == 0,\n            \"Build directory doesn't exist: %s\", BUILD_DIR);\n\n    \/\/ actually do an install\n    if(access(CONFIG_SCRIPT, X_OK) == 0) {\n        log_info(\"Has a configure script, running it.\");\n        rc = Shell_exec(CONFIGURE_SH, \"OPTS\", configure_opts, NULL);\n        check(rc == 0, \"Failed to configure.\");\n    }\n\n    rc = Shell_exec(MAKE_SH, \"OPTS\", make_opts, NULL);\n    check(rc == 0, \"Failed to build.\");\n\n    rc = Shell_exec(INSTALL_SH,\n            \"TARGET\", install_opts ? install_opts : \"install\",\n            NULL);\n    check(rc == 0, \"Failed to install.\");\n\n    rc = Shell_exec(CLEANUP_SH, NULL);\n    check(rc == 0, \"Failed to cleanup after build.\");\n\n    rc = DB_update(url);\n    check(rc == 0, \"Failed to add this package to the database.\");\n\n    return 0;\n\nerror:\n    return -1;\n}\n\nint Command_install(apr_pool_t *p, const char *url, const char *configure_opts,\n        const char *make_opts, const char *install_opts)\n{\n    int rc = 0;\n    check(Shell_exec(CLEANUP_SH, NULL) == 0, \"Failed to cleanup before building.\");\n\n    rc = DB_find(url);\n    check(rc != -1, \"Error checking the install database.\");\n\n    if(rc == 1) {\n        log_info(\"Package %s already installed.\", url);\n        return 0;\n    }\n\n    rc = Command_fetch(p, url, 0);\n\n    if(rc == 1) {\n        rc = Command_build(p, url, configure_opts, make_opts, install_opts);\n        check(rc == 0, \"Failed to build: %s\", url);\n    } else if(rc == 0) {\n        \/\/ no install needed\n        log_info(\"Depends successfully installed: %s\", url);\n    } else {\n        \/\/ had an error\n        sentinel(\"Install failed: %s\", url);\n    }\n\n    Shell_exec(CLEANUP_SH, NULL);\n    return 0;\n\nerror:\n    Shell_exec(CLEANUP_SH, NULL);\n    return -1;\n}\n\u5728\u4f60\u8f93\u5165\u5e76\u7f16\u8bd1\u5b83\u4e4b\u540e\uff0c\u5c31\u53ef\u4ee5\u5f00\u59cb\u5206\u6790\u4e86\u3002\u5982\u679c\u5230\u76ee\u524d\u4e3a\u6b62\u4f60\u5b8c\u6210\u4e86\u524d\u9762\u7684\u6311\u6218\uff0c\u4f60\u4f1a\u7406\u89e3\u5982\u4f55\u4f7f\u7528shell.c\u51fd\u6570\u6765\u8fd0\u884cshell\u547d\u4ee4\uff0c\u4ee5\u53ca\u53c2\u6570\u5982\u4f55\u88ab\u66ff\u6362\u3002\u5982\u679c\u6ca1\u6709\u5219\u9700\u8981\u56de\u9000\u5230\u524d\u9762\u7684\u6311\u6218\uff0c\u786e\u4fdd\u4f60\u771f\u6b63\u7406\u89e3\u4e86Shell_exec\u7684\u5de5\u4f5c\u539f\u7406\u3002\n\u6311\u62183\uff1a\u8bc4\u5224\u6211\u7684\u8bbe\u8ba1\n\u50cf\u4e4b\u524d\u4e00\u6837\uff0c\u5b8c\u6574\u5730\u590d\u67e5\u4e00\u904d\u4ee3\u7801\u6765\u4fdd\u8bc1\u4e00\u6a21\u4e00\u6837\u3002\u63a5\u7740\u6d4f\u89c8\u6bcf\u4e2a\u51fd\u6570\u5e76\u4e14\u786e\u4fdd\u4f60\u77e5\u9053\u4ed6\u5982\u4f55\u5de5\u4f5c\u3002\u4f60\u4e5f\u5e94\u8be5\u8ddf\u8e2a\u8fd9\u4e2a\u6587\u4ef6\u6216\u5176\u5b83\u6587\u4ef6\u4e2d\uff0c\u6bcf\u4e2a\u51fd\u6570\u5bf9\u5176\u5b83\u51fd\u6570\u7684\u8c03\u7528\u3002\u6700\u540e\uff0c\u786e\u8ba4\u4f60\u7406\u89e3\u4e86\u8fd9\u91cc\u7684\u6240\u6709\u8c03\u7528APR\u7684\u51fd\u6570\u3002\n\u4e00\u65e6\u4f60\u6b63\u786e\u7f16\u5199\u5e76\u5206\u6790\u4e86\u8fd9\u4e2a\u6587\u4ef6\uff0c\u628a\u6211\u5f53\u6210\u4e00\u4e2a\u50bb\u74dc\u4e00\u6837\u6765\u8bc4\u5224\u6211\u7684\u8bbe\u8ba1\uff0c\u6211\u9700\u8981\u770b\u770b\u4f60\u662f\u5426\u53ef\u4ee5\u6539\u8fdb\u5b83\u3002\u4e0d\u8981\u771f\u6b63\u4fee\u6539\u4ee3\u7801\uff0c\u53ea\u662f\u521b\u5efa\u4e00\u4e2anotes.txt\u5e76\u4e14\u5199\u4e0b\u4f60\u7684\u60f3\u6cd5\u548c\u4f60\u9700\u8981\u4fee\u6539\u7684\u5730\u65b9\u3002\ndevpkg\u7684main\u51fd\u6570\ndevpkg.c\u662f\u6700\u540e\u4e14\u6700\u91cd\u8981\u7684\uff0c\u4f46\u662f\u4e5f\u53ef\u80fd\u662f\u6700\u7b80\u5355\u7684\u6587\u4ef6\uff0c\u5176\u4e2d\u521b\u5efa\u4e86main\u51fd\u6570\u3002\u6ca1\u6709\u4e0e\u4e4b\u914d\u5957\u7684.h\u6587\u4ef6\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u6587\u4ef6\u5305\u542b\u5176\u4ed6\u6240\u6709\u6587\u4ef6\u3002\u8fd9\u4e2a\u6587\u4ef6\u7528\u4e8e\u521b\u5efadevpkg\u53ef\u6267\u884c\u7a0b\u5e8f\uff0c\u540c\u65f6\u7ec4\u88c5\u4e86\u6765\u81eaMakefile\u7684\u5176\u5b83.o\u6587\u4ef6\u3002\u5728\u6587\u4ef6\u4e2d\u8f93\u5165\u4ee3\u7801\u5e76\u4fdd\u8bc1\u6b63\u786e\u3002\n#include &lt;stdio.h&gt;\n#include &lt;apr_general.h&gt;\n#include &lt;apr_getopt.h&gt;\n#include &lt;apr_strings.h&gt;\n#include &lt;apr_lib.h&gt;\n\n#include \"dbg.h\"\n#include \"db.h\"\n#include \"commands.h\"\n\nint main(int argc, const char const *argv[])\n{\n    apr_pool_t *p = NULL;\n    apr_pool_initialize();\n    apr_pool_create(&amp;p, NULL);\n\n    apr_getopt_t *opt;\n    apr_status_t rv;\n\n    char ch = '\\0';\n    const char *optarg = NULL;\n    const char *config_opts = NULL;\n    const char *install_opts = NULL;\n    const char *make_opts = NULL;\n    const char *url = NULL;\n    enum CommandType request = COMMAND_NONE;\n\n\n    rv = apr_getopt_init(&amp;opt, p, argc, argv);\n\n    while(apr_getopt(opt, \"I:Lc:m:i:d:SF:B:\", &amp;ch, &amp;optarg) == APR_SUCCESS) {\n        switch (ch) {\n            case 'I':\n                request = COMMAND_INSTALL;\n                url = optarg;\n                break;\n\n            case 'L':\n                request = COMMAND_LIST;\n                break;\n\n            case 'c':\n                config_opts = optarg;\n                break;\n\n            case 'm':\n                make_opts = optarg;\n                break;\n\n            case 'i':\n                install_opts = optarg;\n                break;\n\n            case 'S':\n                request = COMMAND_INIT;\n                break;\n\n            case 'F':\n                request = COMMAND_FETCH;\n                url = optarg;\n                break;\n\n            case 'B':\n                request = COMMAND_BUILD;\n                url = optarg;\n                break;\n        }\n    }\n\n    switch(request) {\n        case COMMAND_INSTALL:\n            check(url, \"You must at least give a URL.\");\n            Command_install(p, url, config_opts, make_opts, install_opts);\n            break;\n\n        case COMMAND_LIST:\n            DB_list();\n            break;\n\n        case COMMAND_FETCH:\n            check(url != NULL, \"You must give a URL.\");\n            Command_fetch(p, url, 1);\n            log_info(\"Downloaded to %s and in \/tmp\/\", BUILD_DIR);\n            break;\n\n        case COMMAND_BUILD:\n            check(url, \"You must at least give a URL.\");\n            Command_build(p, url, config_opts, make_opts, install_opts);\n            break;\n\n        case COMMAND_INIT:\n            rv = DB_init();\n            check(rv == 0, \"Failed to make the database.\");\n            break;\n\n        default:\n            sentinel(\"Invalid command given.\");\n    }\n\n\n    return 0;\n\nerror:\n    return 1;\n}\n\u6311\u62184\uff1aREADME \u548c\u6d4b\u8bd5\u6587\u4ef6\n\u4e3a\u8fd9\u4e2a\u6587\u4ef6\u8bbe\u7f6e\u7684\u6311\u6218\u662f\u7406\u89e3\u53c2\u6570\u5982\u4f55\u5904\u7406\uff0c\u4ee5\u53ca\u53c2\u6570\u662f\u4ec0\u4e48\uff0c\u4e4b\u540e\u521b\u5efa\u542b\u6709\u4f7f\u7528\u6307\u5357\u7684README\u6587\u4ef6\u3002\u5728\u7f16\u5199README\u7684\u540c\u65f6\uff0c\u4e5f\u7f16\u5199\u4e00\u4e2a\u7b80\u5355\u7684simple.sh\uff0c\u5b83\u8fd0\u884c.\/devpkg\u6765\u68c0\u67e5\u6bcf\u4e2a\u547d\u4ee4\u90fd\u5728\u5b9e\u9645\u73af\u5883\u4e0b\u5de5\u4f5c\u3002\u5728\u4f60\u7684\u811a\u672c\u9876\u7aef\u4f7f\u7528set -e\uff0c\u4f7f\u5b83\u8df3\u8fc7\u7b2c\u4e00\u4e2a\u9519\u8bef\u3002\n\u6700\u540e\uff0c\u5728Valgrind\u4e0b\u8fd0\u884c\u7a0b\u5e8f\uff0c\u786e\u4fdd\u5728\u8fdb\u884c\u4e0b\u4e00\u6b65\u4e4b\u524d\uff0c\u6240\u6709\u4e1c\u897f\u90fd\u80fd\u6b63\u5e38\u8fd0\u884c\u3002\n\u671f\u4e2d\u68c0\u6d4b\n\u6700\u540e\u7684\u6311\u6218\u5c31\u662f\u8fd9\u4e2a\u671f\u4e2d\u68c0\u6d4b\uff0c\u5b83\u5305\u542b\u4e09\u4ef6\u4e8b\u60c5\uff1a\n\n\u5c06\u4f60\u7684\u4ee3\u7801\u4e0e\u6211\u7684\u5728\u7ebf\u4ee3\u7801\u5bf9\u6bd4\uff0c\u4ee5100%\u7684\u5206\u6570\u5f00\u59cb\uff0c\u6bcf\u9519\u4e00\u884c\u51cf\u53bb1%\u3002\n\u5728\u4f60\u7684notes.txt\u4e2d\u8bb0\u5f55\u4f60\u662f\u5982\u4f55\u6539\u8fdb\u4ee3\u7801\u548cdevpkg\u7684\u529f\u80fd\uff0c\u5e76\u4e14\u5b9e\u73b0\u4f60\u7684\u6539\u8fdb\u3002\n\u7f16\u5199\u4e00\u4e2adevpkg\u7684\u66ff\u4ee3\u7248\u672c\uff0c\u4f7f\u7528\u5176\u4ed6\u4f60\u559c\u6b22\u7684\u8bed\u8a00\uff0c\u6216\u8005\u4f60\u89c9\u5f97\u6700\u9002\u5408\u7f16\u5199\u5b83\u7684\u8bed\u8a00\u3002\u5bf9\u6bd4\u4e8c\u8005\uff0c\u4e4b\u540e\u57fa\u4e8e\u4f60\u7684\u7ed3\u679c\u6539\u8fdb\u4f60\u7684devpkg\u7684C\u7248\u672c\u3002\n\n\u4f60\u53ef\u4ee5\u6267\u884c\u4e0b\u5217\u547d\u4ee4\u6765\u5c06\u4f60\u7684\u4ee3\u7801\u4e0e\u6211\u7684\u5bf9\u6bd4\uff1a\ncd ..  # get one directory above your current one\ngit clone git:\/\/gitorious.org\/devpkg\/devpkg.git devpkgzed\ndiff -r devpkg devpkgzed\n\u8fd9\u5c06\u4f1a\u514b\u9686\u6211\u7684devpkg\u7248\u672c\u5230devpkgzed\u76ee\u5f55\u4e2d\u3002\u4e4b\u540e\u4f7f\u7528\u5de5\u5177diff\u6765\u5bf9\u6bd4\u4f60\u7684\u548c\u6211\u7684\u4ee3\u7801\u3002\u4e66\u4e2d\u4f60\u6240\u4f7f\u7528\u7684\u8fd9\u4e9b\u6587\u4ef6\u76f4\u63a5\u6765\u81ea\u4e8e\u8fd9\u4e2a\u9879\u76ee\uff0c\u6240\u4ee5\u5982\u679c\u51fa\u73b0\u4e86\u4e0d\u540c\u7684\u884c\uff0c\u80af\u5b9a\u5c31\u6709\u9519\u8bef\u3002\n\u8981\u8bb0\u4f4f\u8fd9\u4e2a\u7ec3\u4e60\u6ca1\u6709\u771f\u6b63\u7684\u53ca\u683c\u6216\u4e0d\u53ca\u683c\uff0c\u5b83\u53ea\u662f\u4e00\u4e2a\u65b9\u5f0f\u6765\u8ba9\u4f60\u6311\u6218\u81ea\u5df1\uff0c\u5e76\u5c3d\u53ef\u80fd\u53d8\u5f97\u7cbe\u786e\u548c\u8c28\u614e\u3002","categories":"\u7ec3\u4e604","tags":["\u6269\u5c55","make"]},{"title":"\u521b\u9020\u6027\u548c\u9632\u5fa1\u6027\u7f16\u7a0b","url":"https:\/\/naka507.github.io\/posts\/FFD032B7FC697307.html","content":"\u521b\u9020\u6027\u548c\u9632\u5fa1\u6027\u7f16\u7a0b\n\u4f60\u5df2\u7ecf\u5b66\u5230\u4e86\u5927\u591a\u6570C\u8bed\u8a00\u7684\u57fa\u7840\uff0c\u5e76\u4e14\u51c6\u5907\u597d\u5f00\u59cb\u6210\u4e3a\u4e00\u4e2a\u66f4\u4e25\u8c28\u7684\u7a0b\u5e8f\u5458\u4e86\u3002\u8fd9\u91cc\u5c31\u662f\u4ece\u521d\u5b66\u8005\u8d70\u5411\u4e13\u5bb6\u7684\u5730\u65b9\uff0c\u4e0d\u4ec5\u4ec5\u5bf9\u4e8eC\uff0c\u66f4\u5bf9\u4e8e\u6838\u5fc3\u7684\u8ba1\u7b97\u673a\u79d1\u5b66\u6982\u5ff5\u3002\u6211\u5c06\u4f1a\u6559\u7ed9\u4f60\u4e00\u4e9b\u6838\u5fc3\u7684\u6570\u636e\u7ed3\u6784\u548c\u7b97\u6cd5\uff0c\u5b83\u4eec\u662f\u6bcf\u4e2a\u7a0b\u5e8f\u5458\u90fd\u8981\u61c2\u7684\uff0c\u8fd8\u6709\u4e00\u4e9b\u6211\u5728\u771f\u5b9e\u7a0b\u5e8f\u4e2d\u6240\u4f7f\u7528\u7684\u4e00\u4e9b\u975e\u5e38\u6709\u8da3\u7684\u4e1c\u897f\u3002\n\u5728\u6211\u5f00\u59cb\u4e4b\u524d\uff0c\u6211\u9700\u8981\u6559\u7ed9\u4f60\u4e00\u4e9b\u57fa\u672c\u7684\u6280\u5de7\u548c\u89c2\u5ff5\uff0c\u5b83\u4eec\u80fd\u5e2e\u52a9\u4f60\u7f16\u5199\u66f4\u597d\u7684\u8f6f\u4ef6\u3002\u7ec3\u4e6027\u523031\u4f1a\u6559\u7ed9\u4f60\u9ad8\u7ea7\u7684\u6982\u5ff5\u548c\u7279\u6027\uff0c\u800c\u4e0d\u662f\u8c08\u8bba\u7f16\u7a0b\uff0c\u4f46\u662f\u8fd9\u4e9b\u4e4b\u540e\u4f60\u5c06\u4f1a\u5e94\u7528\u5b83\u4eec\u6765\u7f16\u5199\u6838\u5fc3\u5e93\u6216\u6709\u7528\u7684\u6570\u636e\u7ed3\u6784\u3002\n\u7f16\u5199\u66f4\u597d\u7684C\u4ee3\u7801\uff08\u5b9e\u9645\u4e0a\u662f\u6240\u6709\u8bed\u8a00\uff09\u7684\u7b2c\u4e00\u6b65\u662f\uff0c\u5b66\u4e60\u4e00\u79cd\u65b0\u7684\u89c2\u5ff5\u53eb\u505a\u201c\u9632\u5fa1\u6027\u7f16\u7a0b\u201d\u3002\u9632\u5fa1\u6027\u7f16\u7a0b\u5047\u8bbe\u4f60\u53ef\u80fd\u4f1a\u5236\u9020\u51fa\u5f88\u591a\u9519\u8bef\uff0c\u4e4b\u540e\u5c1d\u8bd5\u5728\u6bcf\u4e00\u6b65\u5c3d\u53ef\u80fd\u9884\u9632\u5b83\u4eec\u3002\u8fd9\u4e2a\u7ec3\u4e60\u4e2d\u6211\u6253\u7b97\u6559\u7ed9\u4f60\u5982\u4f55\u4ee5\u9632\u5fa1\u6027\u7684\u601d\u7ef4\u6765\u601d\u8003\u7f16\u7a0b\u3002\n\u521b\u9020\u6027\u7f16\u7a0b\u601d\u7ef4\n\u5728\u8fd9\u4e2a\u7b80\u5355\u7684\u7ec3\u4e60\u4e2d\u8981\u544a\u8bc9\u4f60\u5982\u4f55\u505a\u5230\u521b\u9020\u6027\u662f\u4e0d\u53ef\u80fd\u7684\uff0c\u4f46\u662f\u6211\u4f1a\u544a\u8bc9\u4f60\u4e00\u4e9b\u6d89\u53ca\u5230\u4efb\u52a1\u98ce\u9669\u548c\u5f00\u653e\u601d\u7ef4\u7684\u521b\u9020\u529b\u3002\u6050\u60e7\u4f1a\u5feb\u901f\u5730\u627c\u6740\u521b\u9020\u529b\uff0c\u6240\u4ee5\u6211\u91c7\u7528\uff0c\u5e76\u4e14\u8bb8\u591a\u7a0b\u5e8f\u5458\u4e5f\u91c7\u7528\u7684\u8fd9\u79cd\u601d\u7ef4\u65b9\u5f0f\u4f7f\u6211\u4e0d\u4f1a\u60e7\u6015\u98ce\u9669\uff0c\u5e76\u4e14\u770b\u4e0a\u53bb\u50cf\u4e2a\u50bb\u74dc\u3002\n\n\u6211\u4e0d\u4f1a\u72af\u9519\u8bef\u3002\n\u4eba\u4eec\u6240\u60f3\u7684\u5e76\u4e0d\u91cd\u8981\u3002\n\u6211\u8111\u5b50\u91cc\u9762\u8bde\u751f\u7684\u60f3\u6cd5\u624d\u662f\u6700\u597d\u7684\u3002\n\n\u6211\u53ea\u662f\u6682\u65f6\u63a5\u53d7\u4e86\u8fd9\u79cd\u601d\u7ef4\uff0c\u5e76\u4e14\u5728\u5e94\u7528\u4e2d\u7528\u4e86\u4e00\u4e9b\u5c0f\u6280\u5de7\u3002\u4e3a\u4e86\u8fd9\u6837\u505a\u6211\u4f1a\u63d0\u51fa\u4e00\u4e9b\u60f3\u6cd5\uff0c\u5bfb\u627e\u521b\u9020\u6027\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u5f00\u4e00\u4e9b\u5947\u5947\u602a\u602a\u7684\u8111\u6d1e\uff0c\u5e76\u4e14\u4e0d\u4f1a\u5bb3\u6015\u53d1\u660e\u4e00\u4e9b\u53e4\u602a\u7684\u4e1c\u897f\u3002\u5728\u8fd9\u79cd\u601d\u7ef4\u65b9\u5f0f\u4e0b\uff0c\u6211\u901a\u5e38\u4f1a\u7f16\u5199\u51fa\u7b2c\u4e00\u4e2a\u7248\u672c\u7684\u7cdf\u7cd5\u4ee3\u7801\uff0c\u7528\u4e8e\u5c06\u60f3\u6cd5\u63cf\u8ff0\u51fa\u6765\u3002\n\u7136\u800c\uff0c\u5f53\u6211\u5b8c\u6210\u6211\u7684\u521b\u9020\u6027\u539f\u578b\u65f6\uff0c\u6211\u4f1a\u5c06\u5b83\u6254\u6389\uff0c\u5e76\u4e14\u5c06\u5b83\u53d8\u5f97\u4e25\u8c28\u548c\u53ef\u8003\u3002\u5176\u5b83\u4eba\u5728\u8fd9\u91cc\u5e38\u72af\u7684\u4e00\u4e2a\u9519\u8bef\u5c31\u662f\u5c06\u521b\u9020\u6027\u601d\u7ef4\u5f15\u5165\u5b83\u4eec\u7684\u5b9e\u73b0\u9636\u6bb5\u3002\u8fd9\u6837\u4f1a\u4ea7\u751f\u4e00\u79cd\u975e\u5e38\u4e0d\u540c\u7684\u7834\u574f\u6027\u601d\u7ef4\uff0c\u5b83\u662f\u521b\u9020\u6027\u601d\u7ef4\u7684\u9634\u6697\u9762\uff1a\n\n\u7f16\u5199\u5b8c\u7f8e\u7684\u8f6f\u4ef6\u662f\u53ef\u884c\u7684\u3002\n\u6211\u7684\u5927\u8111\u544a\u8bc9\u6211\u4e86\u771f\u76f8\uff0c\u5b83\u4e0d\u4f1a\u53d1\u73b0\u4efb\u4f55\u9519\u8bef\uff0c\u6240\u4ee5\u6211\u5199\u4e86\u5b8c\u7f8e\u7684\u8f6f\u4ef6\u3002\n\u6211\u7684\u4ee3\u7801\u5c31\u662f\u6211\u81ea\u5df1\uff0c\u6279\u5224\u5b83\u7684\u4eba\u4e5f\u5728\u6279\u5224\u6211\u3002\n\n\u8fd9\u4e9b\u90fd\u662f\u9519\u8bef\u7684\u3002\u4f60\u7ecf\u5e38\u4f1a\u78b0\u5230\u4e00\u4e9b\u7a0b\u5e8f\u5458\uff0c\u5b83\u4eec\u5bf9\u81ea\u5df1\u521b\u9020\u7684\u8f6f\u4ef6\u5177\u6709\u5f3a\u70c8\u7684\u8363\u8a89\u611f\u3002\u8fd9\u5f88\u6b63\u5e38\uff0c\u4f46\u662f\u8fd9\u79cd\u8363\u8a89\u611f\u4f1a\u6210\u4e3a\u5ba2\u89c2\u4e0a\u6539\u8fdb\u4f5c\u54c1\u7684\u963b\u529b\u3002\u7531\u4e8e\u8fd9\u79cd\u8363\u8a89\u611f\u548c\u5b83\u4eec\u5bf9\u4f5c\u54c1\u7684\u4f9d\u604b\uff0c\u5b83\u4eec\u4f1a\u4e00\u76f4\u76f8\u4fe1\u5b83\u4eec\u7f16\u5199\u7684\u4e1c\u897f\u662f\u5b8c\u7f8e\u7684\u3002\u53ea\u8981\u5b83\u4eec\u5ffd\u89c6\u5176\u5b83\u4eba\u7684\u5bf9\u8fd9\u4e9b\u4ee3\u7801\u7684\u89c2\u70b9\uff0c\u5b83\u4eec\u5c31\u53ef\u4ee5\u4fdd\u62a4\u5b83\u4eec\u7684\u73bb\u7483\u5fc3\uff0c\u5e76\u4e14\u6c38\u8fdc\u4e0d\u4f1a\u6539\u8fdb\u3002\n\u540c\u65f6\u5177\u6709\u521b\u9020\u6027\u601d\u7ef4\u548c\u7f16\u5199\u53ef\u9760\u8f6f\u4ef6\u7684\u6280\u5de7\u662f\uff0c\u91c7\u7528\u9632\u5fa1\u6027\u7f16\u7a0b\u7684\u601d\u7ef4\u3002\n\u9632\u5fa1\u6027\u7f16\u7a0b\u601d\u7ef4\n\u5728\u4f60\u505a\u51fa\u521b\u9020\u6027\u539f\u578b\uff0c\u5e76\u4e14\u5bf9\u4f60\u7684\u60f3\u6cd5\u611f\u89c9\u826f\u597d\u4e4b\u540e\uff0c\u5c31\u5e94\u8be5\u5207\u6362\u5230\u9632\u5fa1\u6027\u601d\u7ef4\u4e86\u3002\u9632\u5fa1\u6027\u601d\u7ef4\u7684\u7a0b\u5e8f\u5458\u5927\u81f4\u4e0a\u4f1a\u5426\u5b9a\u4f60\u7684\u4ee3\u7801\uff0c\u5e76\u4e14\u76f8\u4fe1\u4e0b\u9762\u8fd9\u4e9b\u4e8b\u60c5\uff1a\n\n\u8f6f\u4ef6\u4e2d\u5b58\u5728\u9519\u8bef\u3002\n\u4f60\u5e76\u4e0d\u662f\u4f60\u7684\u8f6f\u4ef6\uff0c\u4f46\u4f60\u9700\u8981\u4e3a\u9519\u8bef\u8d1f\u8d23\u3002\n\u4f60\u6c38\u8fdc\u4e0d\u53ef\u80fd\u6d88\u9664\u6240\u6709\u9519\u8bef\uff0c\u53ea\u80fd\u964d\u4f4e\u5b83\u4eec\u7684\u53ef\u80fd\u6027\u3002\n\n\u8fd9\u79cd\u601d\u7ef4\u65b9\u5f0f\u8ba9\u4f60\u8bda\u5b9e\u5730\u5bf9\u5f85\u4f60\u7684\u4ee3\u7801\uff0c\u5e76\u4e14\u4e3a\u6539\u8fdb\u6279\u5224\u5730\u5206\u6790\u5b83\u3002\u6ce8\u610f\u4e0a\u9762\u5e76\u6ca1\u6709\u8bf4\u4f60\u5145\u6ee1\u4e86\u9519\u8bef\uff0c\u53ea\u662f\u8bf4\u4f60\u7684\u4ee3\u7801\u5145\u6ee1\u9519\u8bef\u3002\u8fd9\u662f\u4e00\u4e2a\u9700\u8981\u7406\u89e3\u7684\u5173\u952e\uff0c\u56e0\u4e3a\u5b83\u7ed9\u4e86\u4f60\u7f16\u5199\u4e0b\u4e00\u4e2a\u5b9e\u73b0\u7684\u5ba2\u89c2\u529b\u91cf\u3002\n\u5c31\u50cf\u521b\u9020\u6027\u601d\u7ef4\uff0c\u9632\u5fa1\u6027\u7f16\u7a0b\u601d\u7ef4\u4e5f\u6709\u9634\u6697\u9762\u3002\u9632\u5fa1\u6027\u7a0b\u5e8f\u5458\u662f\u4e00\u4e2a\u60e7\u6015\u4efb\u4f55\u4e8b\u60c5\u7684\u504f\u6267\u72c2\uff0c\u8fd9\u79cd\u6050\u60e7\u4f7f\u4ed6\u4eec\u8fdc\u79bb\u53ef\u80fd\u7684\u9519\u8bef\u6216\u907f\u514d\u72af\u9519\u8bef\u3002\u5f53\u4f60\u5c1d\u8bd5\u505a\u5230\u4e25\u683c\u4e00\u81f4\u6216\u6b63\u786e\u65f6\u8fd9\u5f88\u597d\uff0c\u4f46\u662f\u5b83\u662f\u521b\u9020\u529b\u548c\u4e13\u6ce8\u7684\u6740\u624b\u3002\n\u516b\u4e2a\u9632\u5fa1\u6027\u7f16\u7a0b\u7b56\u7565\n\u4e00\u65e6\u4f60\u63a5\u53d7\u4e86\u8fd9\u4e00\u601d\u7ef4\uff0c\u4f60\u53ef\u4ee5\u91cd\u65b0\u7f16\u5199\u4f60\u7684\u539f\u578b\uff0c\u5e76\u4e14\u9075\u5faa\u4e0b\u9762\u7684\u516b\u4e2a\u7b56\u7565\uff0c\u5b83\u4eec\u88ab\u6211\u7528\u4e8e\u5c3d\u53ef\u80fd\u628a\u4ee3\u7801\u53d8\u5f97\u53ef\u9760\u3002\u5f53\u6211\u7f16\u5199\u4ee3\u7801\u7684\u201c\u5b9e\u9645\u201d\u7248\u672c\uff0c\u6211\u4f1a\u4e25\u683c\u6309\u7167\u4e0b\u9762\u7684\u7b56\u7565\uff0c\u5e76\u4e14\u5c1d\u8bd5\u6d88\u9664\u5c3d\u53ef\u80fd\u591a\u7684\u9519\u8bef\uff0c\u4ee5\u4e00\u4e9b\u4f1a\u7834\u574f\u6211\u8f6f\u4ef6\u7684\u4eba\u7684\u65b9\u5f0f\u601d\u8003\u3002\n\u6c38\u8fdc\u4e0d\u8981\u4fe1\u4efb\u8f93\u5165\n\u6c38\u8fdc\u4e0d\u8981\u63d0\u4f9b\u7684\u8f93\u5165\uff0c\u5e76\u603b\u662f\u6821\u9a8c\u5b83\u3002\n\u907f\u514d\u9519\u8bef\n\u5982\u679c\u9519\u8bef\u53ef\u80fd\u53d1\u751f\uff0c\u4e0d\u7ba1\u53ef\u80fd\u6027\u591a\u4f4e\u90fd\u8981\u907f\u514d\u5b83\u3002\n\u8fc7\u65e9\u66b4\u9732\u9519\u8bef\n\u8fc7\u65e9\u66b4\u9732\u9519\u8bef\uff0c\u5e76\u4e14\u8bc4\u4f30\u53d1\u751f\u4e86\u4ec0\u4e48\u3001\u5728\u54ea\u91cc\u53d1\u751f\u4ee5\u53ca\u5982\u4f55\u4fee\u590d\u3002\n\u8bb0\u5f55\u5047\u8bbe\n\u6e05\u695a\u5730\u8bb0\u5f55\u6240\u6709\u5148\u51b3\u6761\u4ef6\uff0c\u540e\u7f6e\u6761\u4ef6\u4ee5\u53ca\u4e0d\u53d8\u91cf\u3002\n\u9632\u6b62\u8fc7\u591a\u7684\u6587\u6863\n\u4e0d\u8981\u5728\u5b9e\u73b0\u9636\u6bb5\u5c31\u7f16\u5199\u6587\u6863\uff0c\u5b83\u4eec\u53ef\u4ee5\u5728\u4ee3\u7801\u5b8c\u6210\u65f6\u7f16\u5199\u3002\n\u4f7f\u4e00\u5207\u81ea\u52a8\u5316\n\u4f7f\u4e00\u5207\u81ea\u52a8\u5316\uff0c\u5c24\u5176\u662f\u6d4b\u8bd5\u3002\n\u7b80\u5355\u5316\u548c\u6e05\u6670\u5316\n\u6c38\u8fdc\u7b80\u5316\u4f60\u7684\u4ee3\u7801\uff0c\u5728\u6ca1\u6709\u727a\u7272\u5b89\u5168\u6027\u7684\u540c\u65f6\u53d8\u5f97\u6700\u5c0f\u548c\u6700\u6574\u6d01\u3002\n\u8d28\u7591\u6743\u5a01\n\u4e0d\u8981\u76f2\u76ee\u9075\u5faa\u6216\u62d2\u7edd\u89c4\u5219\u3002\n\u8fd9\u4e9b\u5e76\u4e0d\u662f\u5168\u90e8\uff0c\u4ec5\u4ec5\u662f\u4e00\u4e9b\u6838\u5fc3\u7684\u4e1c\u897f\uff0c\u6211\u8ba4\u4e3a\u7a0b\u5e8f\u5458\u5e94\u8be5\u5728\u7f16\u7a0b\u53ef\u9760\u7684\u4ee3\u7801\u65f6\u4e13\u6ce8\u4e8e\u5b83\u4eec\u3002\u8981\u6ce8\u610f\u6211\u5e76\u6ca1\u6709\u771f\u6b63\u8bf4\u660e\u5982\u4f55\u5177\u4f53\u505a\u5230\u8fd9\u4e9b\uff0c\u6211\u63a5\u4e0b\u6765\u4f1a\u66f4\u7ec6\u81f4\u5730\u8bb2\u89e3\u6bcf\u4e00\u6761\uff0c\u5e76\u4e14\u4f1a\u5e03\u7f6e\u4e00\u4e9b\u8986\u76d6\u5b83\u4eec\u7684\u7ec3\u4e60\u3002\n\u5e94\u7528\u8fd9\u516b\u6761\u7b56\u7565\n\u8fd9\u4e9b\u89c2\u70b9\u90fd\u662f\u4e00\u4e9b\u6d41\u884c\u5fc3\u7406\u5b66\u7684\u9648\u8bcd\u6ee5\u8c03\uff0c\u4f46\u662f\u4f60\u5982\u4f55\u628a\u5b83\u4eec\u5e94\u7528\u5230\u5b9e\u9645\u7f16\u7a0b\u4e2d\u5462\uff1f\u6211\u73b0\u5728\u6253\u7b97\u5411\u4f60\u5c55\u793a\u8fd9\u672c\u4e66\u4e2d\u7684\u4e00\u4e9b\u4ee3\u7801\u6240\u505a\u7684\u4e8b\u60c5\uff0c\u8fd9\u4e9b\u4ee3\u7801\u7528\u5177\u4f53\u7684\u4f8b\u5b50\u5c55\u793a\u6bcf\u4e00\u6761\u7b56\u7565\u3002\u8fd9\u516b\u6761\u7b56\u7565\u5e76\u4e0d\u6b62\u4e8e\u8fd9\u4e9b\u4f8b\u5b50\uff0c\u4f60\u5e94\u8be5\u4f7f\u7528\u5b83\u4eec\u4f5c\u4e3a\u6307\u5bfc\uff0c\u4f7f\u4f60\u7684\u4ee3\u7801\u66f4\u53ef\u9760\u3002\n\u6c38\u8fdc\u4e0d\u8981\u4fe1\u4efb\u8f93\u5165\n\u8ba9\u6211\u4eec\u6765\u770b\u4e00\u4e2a\u574f\u8bbe\u8ba1\u548c\u201c\u66f4\u597d\u201d\u7684\u8bbe\u8ba1\u7684\u4f8b\u5b50\u3002\u6211\u5e76\u4e0d\u60f3\u79f0\u4e4b\u4e3a\u597d\u8bbe\u8ba1\uff0c\u56e0\u4e3a\u5b83\u53ef\u4ee5\u505a\u5f97\u66f4\u597d\u3002\u770b\u4e00\u770b\u8fd9\u4e24\u4e2a\u51fd\u6570\uff0c\u5b83\u4eec\u90fd\u590d\u5236\u5b57\u7b26\u4e32\uff0cmain\u51fd\u6570\u7528\u4e8e\u6d4b\u8bd5\u54ea\u4e2a\u66f4\u597d\u3002\nundef NDEBUG\n#include \"dbg.h\"\n#include &lt;stdio.h&gt;\n#include &lt;assert.h&gt;\n\n\/*\n * Naive copy that assumes all inputs are always valid\n * taken from K&amp;R C and cleaned up a bit.\n *\/\nvoid copy(char to[], char from[])\n{\n    int i = 0;\n\n    \/\/ while loop will not end if from isn't '\\0' terminated\n    while((to[i] = from[i]) != '\\0') {\n        ++i;\n    }\n}\n\n\/*\n * A safer version that checks for many common errors using the\n * length of each string to control the loops and termination.\n *\/\nint safercopy(int from_len, char *from, int to_len, char *to)\n{\n    assert(from != NULL &amp;&amp; to != NULL &amp;&amp; \"from and to can't be NULL\");\n    int i = 0;\n    int max = from_len &gt; to_len - 1 ? to_len - 1 : from_len;\n\n    \/\/ to_len must have at least 1 byte\n    if(from_len &lt; 0 || to_len &lt;= 0) return -1;\n\n    for(i = 0; i &lt; max; i++) {\n        to[i] = from[i];\n    }\n\n    to[to_len - 1] = '\\0';\n\n    return i;\n}\n\n\nint main(int argc, char *argv[])\n{\n    \/\/ careful to understand why we can get these sizes\n    char from[] = \"0123456789\";\n    int from_len = sizeof(from);\n\n    \/\/ notice that it's 7 chars + \\0\n    char to[] = \"0123456\";\n    int to_len = sizeof(to);\n\n    debug(\"Copying '%s':%d to '%s':%d\", from, from_len, to, to_len);\n\n    int rc = safercopy(from_len, from, to_len, to);\n    check(rc &gt; 0, \"Failed to safercopy.\");\n    check(to[to_len - 1] == '\\0', \"String not terminated.\");\n\n    debug(\"Result is: '%s':%d\", to, to_len);\n\n    \/\/ now try to break it\n    rc = safercopy(from_len * -1, from, to_len, to);\n    check(rc == -1, \"safercopy should fail #1\");\n    check(to[to_len - 1] == '\\0', \"String not terminated.\");\n\n    rc = safercopy(from_len, from, 0, to);\n    check(rc == -1, \"safercopy should fail #2\");\n    check(to[to_len - 1] == '\\0', \"String not terminated.\");\n\n    return 0;\n\nerror:\n    return 1;\n}\ncopy\u51fd\u6570\u662f\u5178\u578b\u7684C\u4ee3\u7801\uff0c\u800c\u4e14\u5b83\u662f\u5927\u91cf\u7f13\u51b2\u533a\u6ea2\u51fa\u7684\u6765\u6e90\u3002\u5b83\u6709\u7f3a\u9677\uff0c\u56e0\u4e3a\u5b83\u603b\u662f\u5047\u8bbe\u63a5\u53d7\u5230\u7684\u662f\u5408\u6cd5\u7684C\u5b57\u7b26\u4e32\uff08\u5e26\u6709'\\0'\uff09\uff0c\u5e76\u4e14\u53ea\u662f\u7528\u4e00\u4e2awhile\u5faa\u73af\u6765\u5904\u7406\u3002\u95ee\u9898\u662f\uff0c\u786e\u4fdd\u8fd9\u4e9b\u662f\u5341\u5206\u56f0\u96be\u7684\uff0c\u5e76\u4e14\u5982\u679c\u6ca1\u6709\u5904\u7406\u597d\uff0c\u5b83\u4f1a\u4f7fwhile\u5faa\u73af\u65e0\u9650\u6267\u884c\u3002\u7f16\u5199\u53ef\u9760\u4ee3\u7801\u7684\u4e00\u4e2a\u8981\u70b9\u5c31\u662f\uff0c\u4e0d\u8981\u7f16\u5199\u53ef\u80fd\u4e0d\u4f1a\u7ec8\u6b62\u7684\u5faa\u73af\u3002\nsafecopy\u51fd\u6570\u5c1d\u8bd5\u901a\u8fc7\u8981\u6c42\u8c03\u7528\u8005\u63d0\u4f9b\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u6765\u89e3\u51b3\u95ee\u9898\u3002\u5b83\u53ef\u4ee5\u6267\u884c\u6709\u5173\u8fd9\u4e9b\u5b57\u7b26\u4e32\u7684\u3001copy\u51fd\u6570\u4e0d\u5177\u5907\u7684\u7279\u5b9a\u68c0\u67e5\u3002\u4ed6\u53ef\u4ee5\u4fdd\u8bc1\u957f\u5ea6\u6b63\u786e\uff0cto\u5b57\u7b26\u4e32\u5177\u6709\u8db3\u591f\u7684\u5bb9\u91cf\uff0c\u4ee5\u53ca\u5b83\u603b\u662f\u53ef\u7ec8\u6b62\u3002\u8fd9\u4e2a\u51fd\u6570\u4e0d\u50cfcopy\u51fd\u6570\u90a3\u6837\u53ef\u80fd\u4f1a\u6c38\u8fdc\u6267\u884c\u4e0b\u53bb\u3002\n\u8fd9\u4e2a\u5c31\u662f\u6c38\u8fdc\u4e0d\u4fe1\u4efb\u8f93\u5165\u7684\u5b9e\u4f8b\u3002\u5982\u679c\u4f60\u5047\u8bbe\u4f60\u7684\u51fd\u6570\u8981\u63a5\u53d7\u4e00\u4e2a\u6ca1\u6709\u7ec8\u6b62\u6807\u8bc6\u7684\u5b57\u7b26\u4e32\uff08\u901a\u5e38\u662f\u8fd9\u6837\uff09\uff0c\u4f60\u9700\u8981\u8bbe\u8ba1\u4f60\u7684\u51fd\u6570\uff0c\u4e0d\u8981\u4f9d\u8d56\u5b57\u7b26\u4e32\u672c\u8eab\u3002\u5982\u679c\u4f60\u60f3\u8ba9\u53c2\u6570\u4e0d\u4e3aNULL\uff0c\u4f60\u5e94\u8be5\u5bf9\u6b64\u505a\u68c0\u67e5\u3002\u5982\u679c\u5927\u5c0f\u5e94\u8be5\u5728\u6b63\u5e38\u8303\u56f4\u5185\uff0c\u4e5f\u8981\u5bf9\u5b83\u505a\u68c0\u67e5\u3002\u4f60\u53ea\u9700\u8981\u7b80\u5355\u5047\u8bbe\u8c03\u7528\u4f60\u4ee3\u7801\u7684\u4eba\u4f1a\u628a\u5b83\u5f04\u9519\uff0c\u5e76\u4e14\u4f7f\u4ed6\u4eec\u66f4\u96be\u7834\u574f\u4f60\u7684\u51fd\u6570\u3002\n\u8fd9\u4e2a\u53ef\u4ee5\u6269\u5c55\u5230\u4ece\u5916\u90e8\u73af\u5883\u83b7\u53d6\u8f93\u5165\u7684\u7684\u8f6f\u4ef6\u3002\u7a0b\u5e8f\u5458\u8457\u540d\u7684\u4e34\u7ec8\u9057\u8a00\u662f\uff0c\u201c\u6ca1\u4eba\u4f1a\u8fd9\u6837\u505a\u3002\u201d\u6211\u770b\u5230\u4ed6\u4eec\u8bf4\u4e86\u8fd9\u53e5\u8bdd\u540e\uff0c\u7b2c\u4e8c\u5929\u6709\u4eba\u5c31\u8fd9\u6837\u505a\uff0c\u9ed1\u6389\u6216\u5d29\u6e83\u5b83\u4eec\u7684\u5e94\u7528\u3002\u5982\u679c\u4f60\u8bf4\u6ca1\u6709\u4eba\u4f1a\u8fd9\u6837\u505a\uff0c\u90a3\u5c31\u52a0\u56fa\u4ee3\u7801\u6765\u4fdd\u8bc1\u4ed6\u4eec\u4e0d\u4f1a\u7b80\u5355\u5730\u9ed1\u6389\u4f60\u7684\u5e94\u7528\u3002\u4f60\u4f1a\u56e0\u6240\u505a\u7684\u4e8b\u60c5\u800c\u611f\u5230\u9ad8\u5174\u3002\n\u8fd9\u79cd\u884c\u4e3a\u4f1a\u51fa\u73b0\u6536\u76ca\u9012\u51cf\u3002\u4e0b\u9762\u662f\u4e00\u4e2a\u6e05\u5355\uff0c\u6211\u4f1a\u5c1d\u8bd5\u5bf9\u6211\u7528C\u5199\u7684\u6bcf\u4e2a\u51fd\u6570\u505a\u5982\u4e0b\u5de5\u4f5c\uff1a\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u53c2\u6570\u5b9a\u4e49\u5b83\u7684\u5148\u51b3\u6761\u4ef6\uff0c\u4ee5\u53ca\u8fd9\u4e2a\u6761\u4ef6\u662f\u5426\u5bfc\u81f4\u5931\u6548\u6216\u8fd4\u56de\u9519\u8bef\u503c\u3002\u5982\u679c\u4f60\u5728\u7f16\u5199\u4e00\u4e2a\u5e93\uff0c\u6bd4\u8d77\u5931\u6548\u8981\u66f4\u503e\u5411\u4e8e\u9519\u8bef\u3002\n\u5bf9\u4e8e\u6bcf\u4e2a\u5148\u51b3\u6761\u4ef6\uff0c\u4f7f\u7528assert(test &amp;&amp; \"message\");\u5728\u6700\u5f00\u59cb\u6dfb\u52a0assert\u68c0\u67e5\u3002\u8fd9\u53e5\u4ee3\u7801\u4f1a\u6267\u884c\u68c0\u67e5\uff0c\u5931\u8d25\u65f6OS\u901a\u5e38\u4f1a\u6253\u5370\u65ad\u8a00\u884c\uff0c\u901a\u5e38\u5b83\u5305\u62ec\u4fe1\u606f\u3002\u5f53\u4f60\u5c1d\u8bd5\u5f04\u6e05assert\u4e3a\u4ec0\u4e48\u5728\u8fd9\u91cc\u65f6\uff0c\u8fd9\u4f1a\u975e\u5e38\u6709\u7528\u3002\n\u5bf9\u4e8e\u5176\u5b83\u5148\u51b3\u6761\u4ef6\uff0c\u8fd4\u56de\u9519\u8bef\u4ee3\u7801\u6216\u8005\u4f7f\u7528\u6211\u7684check\u5b8f\u6765\u6267\u884c\u5b83\u5e76\u4e14\u63d0\u4f9b\u9519\u8bef\u4fe1\u606f\u3002\u6211\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\u6ca1\u6709\u4f7f\u7528check\uff0c\u56e0\u4e3a\u5b83\u4f1a\u6df7\u6dc6\u6bd4\u8f83\u3002\n\u8bb0\u5f55\u4e3a\u4ec0\u4e48\u5b58\u5728\u8fd9\u4e9b\u5148\u51b3\u6761\u4ef6\uff0c\u5f53\u4e00\u4e2a\u7a0b\u5e8f\u5458\u78b0\u5230\u9519\u8bef\u65f6\uff0c\u4ed6\u53ef\u4ee5\u5f04\u6e05\u695a\u8fd9\u4e9b\u662f\u5426\u662f\u771f\u6b63\u5fc5\u8981\u7684\u3002\n\u5982\u679c\u4f60\u4fee\u6539\u4e86\u8f93\u5165\uff0c\u786e\u4fdd\u5f53\u51fd\u6570\u9000\u51fa\u6216\u4e2d\u6b62\u65f6\u5b83\u4eec\u4e5f\u4f1a\u6b63\u786e\u4ea7\u751f\u3002\n\u603b\u662f\u8981\u68c0\u67e5\u6240\u4f7f\u7528\u7684\u51fd\u6570\u7684\u9519\u8bef\u4ee3\u7801\u3002\u4f8b\u5982\uff0c\u4eba\u4eec\u6709\u65f6\u4f1a\u5fd8\u8bb0\u68c0\u67e5fopen\u6216fread\u7684\u8fd4\u56de\u4ee3\u7801\uff0c\u8fd9\u4f1a\u5bfc\u81f4\u4ed6\u4eec\u5728\u9519\u8bef\u4e0b\u4ecd\u7136\u4f7f\u7528\u8fd9\u4e2a\u8d44\u6e90\u3002\u8fd9\u4f1a\u5bfc\u81f4\u4f60\u7684\u7a0b\u5e8f\u5d29\u6e83\u6216\u8005\u6613\u53d7\u653b\u51fb\u3002\n\u4f60\u4e5f\u9700\u8981\u8fd4\u56de\u4e00\u81f4\u7684\u9519\u8bef\u4ee3\u7801\uff0c\u4ee5\u4fbf\u5bf9\u4f60\u7684\u6bcf\u4e2a\u51fd\u6570\u6dfb\u52a0\u76f8\u540c\u7684\u673a\u5236\u3002\u4e00\u65e6\u4f60\u719f\u6089\u4e86\u8fd9\u4e00\u4e60\u60ef\uff0c\u4f60\u5c31\u4f1a\u660e\u767d\u4e3a\u4ec0\u4e48\u6211\u7684check\u5b8f\u8fd9\u6837\u5de5\u4f5c\u3002\n\n\u53ea\u662f\u8fd9\u4e9b\u5fae\u5c0f\u7684\u4e8b\u60c5\u5c31\u4f1a\u6539\u8fdb\u4f60\u7684\u8d44\u6e90\u5904\u7406\u65b9\u5f0f\uff0c\u5e76\u4e14\u907f\u514d\u4e00\u5927\u5806\u9519\u8bef\u3002\n\u907f\u514d\u9519\u8bef\n\u4e0a\u4e00\u4e2a\u4f8b\u5b50\u4e2d\u4f60\u53ef\u80fd\u4f1a\u542c\u5230\u522b\u4eba\u8bf4\uff0c\u201c\u7a0b\u5e8f\u5458\u4e0d\u4f1a\u7ecf\u5e38\u9519\u8bef\u5730\u4f7f\u7528copy\u3002\u201d\u5c3d\u7ba1\u5927\u91cf\u653b\u51fb\u90fd\u9488\u5bf9\u8fd9\u7c7b\u51fd\u6570\uff0c\u4ed6\u4eec\u4ecd\u65e7\u76f8\u4fe1\u8fd9\u79cd\u9519\u8bef\u7684\u6982\u7387\u975e\u5e38\u4f4e\u3002\u6982\u7387\u662f\u4e2a\u5f88\u6709\u8da3\u7684\u4e8b\u60c5\uff0c\u56e0\u4e3a\u4eba\u4eec\u4e0d\u64c5\u957f\u731c\u6d4b\u6240\u6709\u4e8b\u60c5\u7684\u6982\u7387\uff0c\u8fd9\u975e\u5e38\u96be\u4ee5\u7f6e\u4fe1\u3002\u7136\u800c\u4eba\u4eec\u5bf9\u4e8e\u5224\u65ad\u4e00\u4e2a\u4e8b\u60c5\u662f\u5426\u53ef\u80fd\uff0c\u662f\u5f88\u64c5\u957f\u7684\u3002\u4ed6\u4eec\u53ef\u80fd\u4f1a\u8bf4copy\u4e2d\u7684\u9519\u8bef\u4e0d\u5e38\u89c1\uff0c\u4f46\u662f\u65e0\u6cd5\u5426\u8ba4\u5b83\u53ef\u80fd\u53d1\u751f\u3002\n\u5173\u952e\u7684\u539f\u56e0\u662f\u5bf9\u4e8e\u4e00\u4e9b\u5e38\u89c1\u7684\u4e8b\u60c5\uff0c\u5b83\u9996\u5148\u662f\u53ef\u80fd\u7684\u3002\u5224\u65ad\u53ef\u80fd\u6027\u975e\u5e38\u7b80\u5355\uff0c\u56e0\u4e3a\u6211\u4eec\u90fd\u77e5\u9053\u4e8b\u60c5\u5982\u4f55\u53d1\u751f\u3002\u4f46\u662f\u968f\u540e\u5224\u65ad\u51fa\u6982\u7387\u5c31\u4e0d\u662f\u90a3\u4e48\u5bb9\u6613\u4e86\u3002\u4eba\u4eec\u9519\u8bef\u4f7f\u7528copy\u7684\u60c5\u51b5\u4f1a\u5360\u523020%\u300110%\uff0c\u62161%\uff1f\u6ca1\u6709\u4eba\u77e5\u9053\u3002\u4e3a\u4e86\u5f04\u6e05\u695a\u4f60\u9700\u8981\u6536\u96c6\u8bc1\u636e\uff0c\u7edf\u8ba1\u8bb8\u591a\u8f6f\u4ef6\u5305\u4e2d\u7684\u9519\u8bef\u7387\uff0c\u5e76\u4e14\u53ef\u80fd\u9700\u8981\u8c03\u67e5\u771f\u5b9e\u7684\u7a0b\u5e8f\u5458\u5982\u4f55\u4f7f\u7528\u8fd9\u4e2a\u51fd\u6570\u3002\n\u8fd9\u610f\u5473\u7740\uff0c\u5982\u679c\u4f60\u6253\u7b97\u907f\u514d\u9519\u8bef\uff0c\u4f60\u4e0d\u9700\u8981\u5c1d\u8bd5\u907f\u514d\u53ef\u80fd\u53d1\u751f\u7684\u4e8b\u60c5\uff0c\u800c\u662f\u8981\u9996\u5148\u96c6\u4e2d\u89e3\u51b3\u6982\u7387\u6700\u5927\u7684\u4e8b\u60c5\u3002\u89e3\u51b3\u8f6f\u4ef6\u6240\u6709\u53ef\u80fd\u5d29\u6e83\u7684\u65b9\u5f0f\u5e76\u4e0d\u53ef\u884c\uff0c\u4f46\u662f\u4f60\u53ef\u4ee5\u5c1d\u8bd5\u4e00\u4e0b\u3002\u540c\u65f6\uff0c\u5982\u679c\u4f60\u4e0d\u4ee5\u6700\u5c11\u7684\u52aa\u529b\u89e3\u51b3\u6700\u53ef\u80fd\u53d1\u751f\u7684\u4e8b\u4ef6\uff0c\u4f60\u5c31\u662f\u5728\u4e0d\u76f8\u5173\u7684\u98ce\u9669\u4e0a\u6d6a\u8d39\u65f6\u95f4\u3002\n\u4e0b\u9762\u662f\u4e00\u4e2a\u51b3\u5b9a\u907f\u514d\u4ec0\u4e48\u7684\u5904\u7406\u8fc7\u7a0b\uff1a\n\n\u5217\u51fa\u6240\u6709\u53ef\u80fd\u53d1\u751f\u7684\u9519\u8bef\uff0c\u65e0\u8bba\u6982\u7387\u5927\u5c0f\uff0c\u5e76\u5e26\u7740\u5b83\u4eec\u7684\u539f\u56e0\u3002\u4e0d\u8981\u5217\u51fa\u5916\u661f\u4eba\u53ef\u80fd\u4f1a\u76d1\u542c\u5185\u5b58\u6765\u5077\u8d70\u5bc6\u7801\u8fd9\u6837\u7684\u4e8b\u60c5\u3002\n\u8bc4\u4f30\u6bcf\u4e2a\u7684\u6982\u7387\uff0c\u4f7f\u7528\u5371\u9669\u884c\u4e3a\u7684\u767e\u5206\u6bd4\u6765\u8868\u793a\u3002\u5982\u679c\u4f60\u5904\u7406\u6765\u81ea\u4e92\u8054\u7f51\u7684\u60c5\u51b5\uff0c\u90a3\u4e48\u5219\u4e3a\u53ef\u80fd\u51fa\u73b0\u9519\u8bef\u7684\u8bf7\u6c42\u7684\u767e\u5206\u6bd4\u3002\u5982\u679c\u662f\u51fd\u6570\u8c03\u7528\uff0c\u90a3\u4e48\u5b83\u662f\u51fa\u73b0\u9519\u8bef\u7684\u51fd\u6570\u8c03\u7528\u767e\u5206\u6bd4\u3002\n\u8bc4\u4f30\u6bcf\u4e2a\u7684\u5de5\u4f5c\u91cf\uff0c\u4f7f\u7528\u907f\u514d\u5b83\u6240\u9700\u7684\u4ee3\u7801\u91cf\u6216\u5de5\u4f5c\u65f6\u957f\u6765\u8868\u793a\u3002\u4f60\u4e5f\u53ef\u4ee5\u7b80\u5355\u7ed9\u5b83\u4e00\u4e2a\u201c\u5bb9\u6613\u201d\u6216\u8005\u201c\u96be\u201d\u7684\u5ea6\u91cf\u3002\u5f53\u9700\u8981\u4fee\u590d\u7684\u7b80\u5355\u9519\u8bef\u4ecd\u5728\u5217\u8868\u4e0a\u65f6\uff0c\u4efb\u4f55\u8fd9\u79cd\u5ea6\u91cf\u90fd\u53ef\u4ee5\u8ba9\u4f60\u907f\u514d\u505a\u65e0\u8c13\u7684\u5de5\u4f5c\u3002\n\u6309\u7167\u5de5\u4f5c\u91cf\uff08\u4f4e\u5230\u9ad8\uff09\u548c\u6982\u7387\uff08\u9ad8\u5230\u4f4e\uff09\u6392\u5e8f\uff0c\u8fd9\u5c31\u662f\u4f60\u7684\u4efb\u52a1\u5217\u8868\u3002\n\u4e4b\u540e\u907f\u514d\u4f60\u5728\u5217\u8868\u4e2d\u5217\u51fa\u7684\u4efb\u4f55\u9519\u8bef\uff0c\u5982\u679c\u4f60\u4e0d\u80fd\u6d88\u9664\u5b83\u7684\u53ef\u80fd\u6027\uff0c\u8981\u964d\u4f4e\u5b83\u7684\u6982\u7387\u3002\n\u5982\u679c\u5b58\u5728\u4f60\u4e0d\u80fd\u4fee\u590d\u7684\u9519\u8bef\uff0c\u8bb0\u5f55\u4e0b\u6765\u5e76\u63d0\u4f9b\u7ed9\u53ef\u4ee5\u4fee\u590d\u7684\u4eba\u3002\n\n\u8fd9\u4e00\u5fae\u5c0f\u7684\u8fc7\u7a0b\u4f1a\u4ea7\u751f\u4e00\u4efd\u4e0d\u9519\u7684\u5f85\u529e\u5217\u8868\u3002\u66f4\u91cd\u8981\u7684\u662f\uff0c\u5f53\u6709\u5176\u5b83\u91cd\u8981\u7684\u4e8b\u60c5\u9700\u8981\u89e3\u51b3\u65f6\uff0c\u5b83\u8ba9\u4f60\u8fdc\u79bb\u52b3\u800c\u65e0\u529f\u3002\u4f60\u4e5f\u53ef\u4ee5\u66f4\u6b63\u5f0f\u6216\u66f4\u4e0d\u6b63\u5f0f\u5730\u5904\u7406\u8fd9\u4e00\u8fc7\u7a0b\u3002\u5982\u679c\u4f60\u8981\u5b8c\u6210\u6574\u4e2a\u5b89\u5168\u5ba1\u8ba1\uff0c\u4f60\u6700\u597d\u548c\u56e2\u961f\u4e00\u8d77\u505a\uff0c\u5e76\u4e14\u6709\u4e2a\u66f4\u8be6\u7ec6\u7684\u7535\u5b50\u8868\u683c\u3002\u5982\u679c\u4f60\u53ea\u662f\u7f16\u5199\u4e00\u4e2a\u51fd\u6570\uff0c\u7b80\u5355\u5730\u590d\u67e5\u4ee3\u7801\u4e4b\u540e\u5212\u6389\u5b83\u4eec\u5c31\u591f\u4e86\u3002\u6700\u91cd\u8981\u7684\u662f\u4f60\u8981\u505c\u6b62\u5047\u8bbe\u9519\u8bef\u4e0d\u4f1a\u53d1\u751f\uff0c\u5e76\u4e14\u7740\u529b\u4e8e\u6d88\u9664\u5b83\u4eec\uff0c\u8fd9\u6837\u5c31\u4e0d\u4f1a\u6d6a\u8d39\u65f6\u95f4\u3002\n\u8fc7\u65e9\u66b4\u9732\u9519\u8bef\n\u5982\u679c\u4f60\u9047\u5230C\u4e2d\u7684\u9519\u8bef\uff0c\u4f60\u6709\u4e24\u4e2a\u9009\u62e9\uff1a\n\n\u8fd4\u56de\u9519\u8bef\u4ee3\u7801\u3002\n\u4e2d\u6b62\u8fdb\u7a0b\u3002\n\n\u8fd9\u5c31\u662f\u5904\u7406\u65b9\u6cd5\uff0c\u4f60\u9700\u8981\u6267\u884c\u5b83\u6765\u786e\u4fdd\u9519\u8bef\u5c3d\u5feb\u53d1\u751f\uff0c\u8bb0\u5f55\u6e05\u695a\uff0c\u63d0\u4f9b\u9519\u8bef\u4fe1\u606f\uff0c\u5e76\u4e14\u6613\u4e8e\u7a0b\u5e8f\u5458\u6765\u907f\u514d\u5b83\u3002\u8fd9\u5c31\u662f\u6211\u63d0\u4f9b\u7684check\u5b8f\u8fd9\u6837\u5de5\u4f5c\u7684\u539f\u56e0\u3002\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u9519\u8bef\uff0c\u4f60\u90fd\u8981\u8ba9\u5b83\u4f60\u6253\u5370\u4fe1\u606f\u3001\u6587\u4ef6\u540d\u548c\u884c\u53f7\uff0c\u5e76\u4e14\u5f3a\u5236\u8fd4\u56de\u9519\u8bef\u4ee3\u7801\u3002\u5982\u679c\u4f60\u4f7f\u7528\u4e86\u6211\u7684\u5b8f\uff0c\u4f60\u4f1a\u4ee5\u6b63\u786e\u7684\u65b9\u5f0f\u505a\u4efb\u4f55\u4e8b\u60c5\u3002\n\u6211\u503e\u5411\u4e8e\u8fd4\u56de\u9519\u8bef\u4ee3\u7801\u800c\u4e0d\u662f\u7ec8\u6b62\u7a0b\u5e8f\u3002\u5982\u679c\u51fa\u73b0\u4e86\u5927\u9519\u8bef\u6211\u4f1a\u4e2d\u6b62\u7a0b\u5e8f\uff0c\u4f46\u662f\u5b9e\u9645\u4e0a\u6211\u5f88\u5c11\u78b0\u5230\u5927\u9519\u8bef\u3002\u4e00\u4e2a\u9700\u8981\u4e2d\u6b62\u7a0b\u5e8f\u7684\u5f88\u597d\u4f8b\u5b50\u662f\uff0c\u6211\u83b7\u53d6\u5230\u4e86\u4e00\u4e2a\u65e0\u6548\u7684\u6307\u9488\uff0c\u5c31\u50cfsafecopy\u4e2d\u90a3\u6837\u3002\u6211\u6ca1\u6709\u8ba9\u7a0b\u5e8f\u5728\u67d0\u4e2a\u5730\u65b9\u4ea7\u751f\u201c\u6bb5\u9519\u8bef\u201d\uff0c\u800c\u662f\u7acb\u5373\u6355\u83b7\u5e76\u4e2d\u6b62\u3002\u4f46\u662f\uff0c\u5982\u679c\u4f20\u5165NULL\u5341\u5206\u666e\u904d\uff0c\u6211\u53ef\u80fd\u4f1a\u6539\u53d8\u65b9\u5f0f\u800c\u4f7f\u7528check\u6765\u68c0\u67e5\uff0c\u4ee5\u4fdd\u8bc1\u8c03\u7528\u8005\u53ef\u4ee5\u7ee7\u7eed\u8fd0\u884c\u3002\n\u7136\u800c\u5728\u5e93\u4e2d\uff0c\u6211\u5c3d\u6211\u6700\u5927\u52aa\u529b\u6c38\u4e0d\u4e2d\u6b62\u3002\u4f7f\u7528\u6211\u7684\u5e93\u7684\u8f6f\u4ef6\u53ef\u4ee5\u51b3\u5b9a\u662f\u5426\u5e94\u8be5\u4e2d\u6b62\u3002\u5982\u679c\u8fd9\u4e2a\u5e93\u4f7f\u7528\u975e\u5e38\u4e0d\u5f53\uff0c\u6211\u624d\u4f1a\u4e2d\u6b62\u7a0b\u5e8f\u3002\n\u6700\u540e\uff0c\u5173\u4e8e\u201c\u66b4\u9732\u201d\u7684\u4e00\u5927\u90e8\u5206\u5185\u5bb9\u662f\uff0c\u4e0d\u8981\u5bf9\u591a\u4e8e\u4e00\u4e2a\u9519\u8bef\u4f7f\u7528\u76f8\u540c\u7684\u4fe1\u606f\u6216\u9519\u8bef\u4ee3\u7801\u3002\u4f60\u901a\u5e38\u4f1a\u5728\u5916\u90e8\u8d44\u6e90\u7684\u9519\u8bef\u4e2d\u89c1\u5230\u8fd9\u79cd\u60c5\u51b5\u3002\u6bd4\u5982\u4e00\u4e2a\u5e93\u6355\u83b7\u4e86\u5957\u63a5\u5b57\u4e0a\u7684\u9519\u8bef\uff0c\u4e4b\u540e\u7b80\u5355\u62a5\u544a\u201c\u5957\u63a5\u5b57\u9519\u8bef\u201d\u3002\u5b83\u5e94\u8be5\u505a\u7684\u662f\u8fd4\u56de\u5177\u4f53\u7684\u4fe1\u606f\uff0c\u6bd4\u5982\u5957\u63a5\u5b57\u4e0a\u53d1\u751f\u4e86\u4ec0\u4e48\u9519\u8bef\uff0c\u4f7f\u5b83\u53ef\u4ee5\u88ab\u5408\u7406\u5730\u8c03\u8bd5\u548c\u4fee\u590d\u3002\u5f53\u4f60\u8bbe\u8ba1\u9519\u8bef\u62a5\u544a\u65f6\uff0c\u786e\u4fdd\u5bf9\u4e8e\u4e0d\u540c\u7684\u9519\u8bef\u4f60\u63d0\u4f9b\u4e86\u4e0d\u540c\u7684\u9519\u8bef\u6d88\u606f\u3002\n\u8bb0\u5f55\u5047\u8bbe\n\u5982\u679c\u4f60\u9075\u5faa\u5e76\u6267\u884c\u4e86\u8fd9\u4e2a\u5efa\u8bae\uff0c\u4f60\u5c31\u6784\u5efa\u4e86\u4e00\u4efd\u201c\u5951\u7ea6\u201d\uff0c\u5173\u4e8e\u51fd\u6570\u671f\u671b\u8fd9\u4e2a\u4e16\u754c\u662f\u4ec0\u4e48\u6837\u5b50\u3002\u4f60\u5df2\u7ecf\u4e3a\u6bcf\u4e2a\u53c2\u6570\u9884\u8bbe\u4e86\u6761\u4ef6\uff0c\u5904\u7406\u6f5c\u5728\u7684\u9519\u8bef\uff0c\u5e76\u4e14\u4f18\u96c5\u5730\u4ea7\u751f\u5931\u8d25\u3002\u4e0b\u4e00\u6b65\u662f\u5b8c\u5584\u8fd9\u4e00\u5951\u7ea6\uff0c\u5e76\u4e14\u6dfb\u52a0\u201c\u4e0d\u53d8\u91cf\u201d\u548c\u201c\u540e\u7f6e\u6761\u4ef6\u201d\u3002\n\u4e0d\u53d8\u91cf\u5c31\u662f\u5728\u51fd\u6570\u8fd0\u884c\u65f6\uff0c\u4e00\u4e9b\u573a\u5408\u4e0b\u5fc5\u987b\u6052\u4e3a\u771f\u7684\u6761\u4ef6\u3002\u8fd9\u5bf9\u4e8e\u7b80\u5355\u7684\u51fd\u6570\u5e76\u4e0d\u5e38\u89c1\uff0c\u4f46\u662f\u5f53\u4f60\u5904\u7406\u590d\u6742\u7684\u7ed3\u6784\u65f6\uff0c\u5b83\u4f1a\u53d8\u5f97\u5f88\u5fc5\u8981\u3002\u4e00\u4e2a\u5173\u4e8e\u4e0d\u53d8\u91cf\u7684\u5f88\u597d\u7684\u4f8b\u5b50\u662f\uff0c\u7ed3\u6784\u4f53\u5728\u4f7f\u7528\u65f6\u90fd\u4f1a\u5408\u7406\u5730\u521d\u59cb\u5316\u3002\u53e6\u4e00\u4e2a\u662f\u6709\u5e8f\u7684\u6570\u636e\u7ed3\u6784\u5728\u5904\u7406\u65f6\u603b\u662f\u6392\u597d\u5e8f\u7684\u3002\n\u540e\u7f6e\u6761\u4ef6\u5c31\u662f\u9000\u51fa\u503c\u6216\u8005\u51fd\u6570\u8fd0\u884c\u7ed3\u679c\u7684\u4fdd\u8bc1\u3002\u8fd9\u53ef\u4ee5\u548c\u4e0d\u53d8\u4e86\u6df7\u5728\u4e00\u8d77\uff0c\u4f46\u662f\u4e5f\u53ef\u4ee5\u662f\u4e00\u4e9b\u5f88\u7b80\u5355\u7684\u4e8b\u60c5\uff0c\u6bd4\u5982\u201c\u51fd\u6570\u5e94\u603b\u662f\u8fd4\u56de0\uff0c\u6216\u8005\u9519\u8bef\u65f6\u8fd4\u56de-1\u201d\u3002\u901a\u5e38\u8fd9\u4e9b\u90fd\u6709\u6587\u6863\u8bb0\u5f55\uff0c\u4f46\u662f\u5982\u679c\u4f60\u7684\u51fd\u6570\u8fd4\u56de\u4e00\u4e2a\u5206\u914d\u7684\u8d44\u6e90\uff0c\u4f60\u5e94\u8be5\u6dfb\u52a0\u4e00\u4e2a\u540e\u7f6e\u6761\u4ef6\uff0c\u505a\u68c0\u67e5\u6765\u786e\u4fdd\u5b83\u8fd4\u56de\u4e86\u4e00\u4e2a\u4e0d\u4e3aNULL\u7684\u4e1c\u897f\u3002\u6216\u8005\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528NULL\u6765\u8868\u793a\u9519\u8bef\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4f60\u7684\u540e\u7f6e\u6761\u4ef6\u5c31\u662f\u8d44\u6e90\u5728\u4efb\u4f55\u9519\u8bef\u65f6\u90fd\u4f1a\u88ab\u91ca\u653e\u3002\n\u5728C\u7f16\u7a0b\u4e2d\uff0c\u4e0d\u53d8\u91cf\u548c\u540e\u7f6e\u6761\u4ef6\u90fd\u901a\u5e38\u6bd4\u5b9e\u9645\u7684\u4ee3\u7801\u548c\u65ad\u8a00\u66f4\u52a0\u6587\u6863\u5316\u3002\u5904\u7406\u5b83\u4eec\u7684\u6700\u597d\u5f53\u65f6\u5c31\u662f\u5c3d\u53ef\u80fd\u6dfb\u52a0assert\u8c03\u7528\uff0c\u4e4b\u540e\u8bb0\u5f55\u5269\u4e0b\u7684\u90e8\u5206\u3002\u5982\u679c\u4f60\u8fd9\u4e48\u505a\u4e86\uff0c\u5f53\u5176\u5b83\u4eba\u78b0\u5230\u9519\u8bef\u65f6\uff0c\u4ed6\u4eec\u53ef\u4ee5\u770b\u5230\u4f60\u5728\u7f16\u5199\u51fd\u6570\u65f6\u505a\u4e86\u4ec0\u4e48\u5047\u8bbe\u3002\n\u907f\u514d\u8fc7\u591a\u6587\u6863\n\u7a0b\u5e8f\u5458\u7f16\u5199\u4ee3\u7801\u65f6\u7684\u4e00\u4e2a\u666e\u904d\u95ee\u9898\uff0c\u5c31\u662f\u4ed6\u4eec\u4f1a\u8bb0\u5f55\u4e00\u4e2a\u666e\u904d\u7684bug\uff0c\u800c\u4e0d\u662f\u7b80\u5355\u5730\u4fee\u590d\u5b83\u3002\u6211\u6700\u559c\u6b22\u7684\u65b9\u5f0f\u662f\uff0cRuby on Rails\u7cfb\u7edf\u53ea\u662f\u7b80\u5355\u5730\u5047\u8bbe\u6240\u6709\u6708\u4efd\u90fd\u670930\u5929\u3002\u65e5\u5386\u592a\u9ebb\u70e6\u4e86\uff0c\u6240\u4ee5\u4e0e\u5176\u4fee\u590d\u5b83\uff0c\u4e0d\u5982\u5728\u4e00\u4e9b\u5730\u65b9\u653e\u7f6e\u4e00\u4e2a\u5c0f\u7684\u6ce8\u91ca\uff0c\u8bf4\u8fd9\u662f\u6545\u610f\u7684\uff0c\u5e76\u4e14\u51e0\u5e74\u5185\u90fd\u4e0d\u4f1a\u6539\u6b63\u3002\u6bcf\u6b21\u4e00\u4e9b\u4eba\u8bd5\u56fe\u62b1\u6028\u5b83\u65f6\uff0c\u4ed6\u4eec\u90fd\u4f1a\u8bf4\uff0c\u201c\u6587\u6863\u91cc\u9762\u90fd\u6709\uff01\u201d\n\u5982\u679c\u4f60\u80fd\u591f\u5b9e\u9645\u4fee\u590d\u95ee\u9898\uff0c\u6587\u6863\u5e76\u4e0d\u91cd\u8981\uff0c\u5e76\u4e14\uff0c\u5982\u679c\u51fd\u6570\u5177\u6709\u4e25\u91cd\u7684\u7f3a\u9677\uff0c\u4f60\u5728\u4fee\u590d\u5b83\u4e4b\u524d\u53ef\u4ee5\u4e0d\u8bb0\u5f55\u5b83\u3002\u5728Ruby on Rails\u7684\u4f8b\u5b50\u4e2d\uff0c\u4e0d\u5305\u542b\u65e5\u671f\u51fd\u6570\u4f1a\u66f4\u597d\u4e00\u4e9b\uff0c\u800c\u4e0d\u662f\u5305\u542b\u4e00\u4e2a\u6ca1\u4eba\u4f1a\u7528\u7684\u9519\u8bef\u7684\u51fd\u6570\u3002\n\u5f53\u4f60\u4e3a\u9632\u5fa1\u6027\u7f16\u7a0b\u6267\u884c\u6e05\u7406\u65f6\uff0c\u5c3d\u53ef\u80fd\u5c1d\u8bd5\u4fee\u590d\u4efb\u4f55\u4e8b\u60c5\u3002\u5982\u679c\u4f60\u53d1\u73b0\u4f60\u8bb0\u5f55\u4e86\u8d8a\u6765\u8d8a\u591a\u7684\uff0c\u4f60\u4e0d\u80fd\u4fee\u590d\u7684\u4e8b\u60c5\uff0c\u9700\u8981\u8003\u8651\u91cd\u65b0\u8bbe\u8ba1\u7279\u6027\uff0c\u6216\u7b80\u5355\u5730\u79fb\u9664\u5b83\u3002\u5982\u679c\u4f60\u771f\u7684\u9700\u8981\u4fdd\u7559\u8fd9\u4e00\u53ef\u6015\u7684\u9519\u8bef\u7684\u7279\u6027\uff0c\u90a3\u4e48\u6211\u5efa\u8bae\u4f60\u7f16\u5199\u5b83\u3001\u8bb0\u5f55\u5b83\uff0c\u5e76\u4e14\u5728\u4f60\u53d7\u8d23\u5907\u4e4b\u524d\u627e\u4e00\u4efd\u65b0\u7684\u5de5\u4f5c\u3002\n\u4f7f\u4e00\u5207\u81ea\u52a8\u5316\n\u4f60\u662f\u4e2a\u7a0b\u5e8f\u5458\uff0c\u8fd9\u610f\u5473\u7740\u4f60\u7684\u5de5\u4f5c\u662f\u901a\u8fc7\u81ea\u52a8\u5316\u6d88\u706d\u5176\u5b83\u4eba\u7684\u5de5\u4f5c\u3002\u5b83\u7684\u7ec8\u6781\u76ee\u6807\u662f\u4f7f\u7528\u81ea\u52a8\u5316\u6765\u4f7f\u4f60\u81ea\u5df1\u4e5f\u5931\u4e1a\u3002\u5f88\u663e\u7136\u4f60\u4e0d\u5e94\u8be5\u5b8c\u5168\u6d88\u9664\u4f60\u505a\u7684\u4e1c\u897f\uff0c\u4f46\u5982\u679c\u4f60\u82b1\u4e86\u4e00\u6574\u5929\u5728\u7ec8\u7aef\u4e0a\u91cd\u590d\u8fd0\u884c\u624b\u52a8\u6d4b\u8bd5\uff0c\u4f60\u7684\u5de5\u4f5c\u5c31\u4e0d\u662f\u7f16\u7a0b\u3002\u4f60\u53ea\u662f\u5728\u505aQA\uff0c\u5e76\u4e14\u4f60\u5e94\u8be5\u4f7f\u81ea\u5df1\u81ea\u52a8\u5316\uff0c\u6d88\u9664\u8fd9\u4e2a\u4f60\u53ef\u80fd\u5e76\u4e0d\u662f\u771f\u7684\u60f3\u5e72\u7684QA\u5de5\u4f5c\u3002\n\u5b9e\u73b0\u5b83\u7684\u6700\u7b80\u5355\u65b9\u5f0f\u5c31\u662f\u7f16\u5199\u81ea\u52a8\u5316\u6d4b\u8bd5\uff0c\u6216\u8005\u5355\u5143\u6d4b\u8bd5\u3002\u8fd9\u672c\u4e66\u91cc\u6211\u6253\u7b97\u8bb2\u89e3\u5982\u4f55\u4f7f\u5b83\u66f4\u7b80\u5355\uff0c\u5e76\u4e14\u6211\u4f1a\u907f\u514d\u591a\u6570\u7f16\u5199\u6d4b\u8bd5\u7684\u4fe1\u6761\u3002\u6211\u53ea\u4f1a\u4e13\u6ce8\u4e8e\u5982\u4f55\u7f16\u5199\u5b83\u4eec\uff0c\u6d4b\u8bd5\u4ec0\u4e48\uff0c\u4ee5\u53ca\u5982\u4f55\u4f7f\u6d4b\u8bd5\u66f4\u9ad8\u6548\u3002\n\u4e0b\u9762\u662f\u7a0b\u5e8f\u5458\u6ca1\u6709\u4f46\u662f\u5e94\u8be5\u81ea\u52a8\u5316\u7684\u4e00\u4e9b\u4e8b\u60c5\uff1a\n\n\u6d4b\u8bd5\u548c\u6821\u9a8c\u3002\n\u6784\u5efa\u8fc7\u7a0b\u3002\n\u8f6f\u4ef6\u90e8\u7f72\u3002\n\u7cfb\u7edf\u7ba1\u7406\u3002\n\u9519\u8bef\u62a5\u544a\u3002\n\n\u5c1d\u8bd5\u82b1\u4e00\u4e9b\u65f6\u95f4\u5728\u81ea\u52a8\u5316\u4e0a\u9762\uff0c\u4f60\u4f1a\u6709\u66f4\u591a\u7684\u65f6\u95f4\u7528\u6765\u5904\u7406\u4e00\u4e9b\u6709\u8da3\u7684\u4e8b\u60c5\u3002\u6216\u8005\uff0c\u5982\u679c\u8fd9\u5bf9\u4f60\u6765\u8bf4\u5f88\u6709\u8da3\uff0c\u4e5f\u8bb8\u4f60\u5e94\u8be5\u7f16\u5199\u81ea\u52a8\u5316\u5b8c\u6210\u8fd9\u4e9b\u4e8b\u60c5\u7684\u8f6f\u4ef6\u3002\n\u7b80\u5355\u5316\u548c\u6e05\u6670\u5316\n\u201c\u7b80\u5355\u6027\u201d\u7684\u6982\u5ff5\u5bf9\u8bb8\u591a\u4eba\u6765\u8bf4\u6bd4\u8f83\u5fae\u5999\uff0c\u5c24\u5176\u662f\u4e00\u4e9b\u806a\u660e\u4eba\u3002\u5b83\u4eec\u901a\u5e38\u5c06\u201c\u5185\u6db5\u201d\u4e0e\u201c\u7b80\u5355\u6027\u201d\u6df7\u6dc6\u8d77\u6765\u3002\u5982\u679c\u4ed6\u4eec\u5f88\u597d\u5730\u7406\u89e3\u4e86\u5b83\uff0c\u5f88\u663e\u7136\u975e\u5e38\u7b80\u5355\u3002\u7b80\u5355\u6027\u7684\u6d4b\u8bd5\u662f\u901a\u8fc7\u5c06\u4e00\u4e2a\u4e1c\u897f\u4e0e\u6bd4\u5b83\u66f4\u7b80\u5355\u7684\u4e1c\u897f\u6bd4\u8f83\u3002\u4f46\u662f\uff0c\u4f60\u4f1a\u770b\u5230\u7f16\u5199\u4ee3\u7801\u7684\u4eba\u4f1a\u4f7f\u7528\u6700\u590d\u6742\u7684\u3001\u532a\u5937\u6240\u601d\u7684\u6570\u636e\u7ed3\u6784\uff0c\u56e0\u4e3a\u5b83\u4eec\u8ba4\u4e3a\u505a\u540c\u6837\u4e8b\u60c5\u7684\u7b80\u5355\u7248\u672c\u975e\u5e38\u201c\u6076\u5fc3\u201d\u3002\u5bf9\u590d\u6742\u6027\u7684\u7231\u597d\u662f\u7a0b\u5e8f\u5458\u7684\u5f31\u70b9\u3002\n\u4f60\u53ef\u4ee5\u9996\u5148\u901a\u8fc7\u544a\u8bc9\u81ea\u5df1\uff0c\u201c\u7b80\u5355\u548c\u6e05\u6670\u5e76\u4e0d\u6076\u5fc3\uff0c\u65e0\u8bba\u8c01\u5728\u5e72\u4ec0\u4e48\u4e8b\u60c5\u201d\u6765\u6218\u80dc\u8fd9\u4e00\u5f31\u70b9\u3002\u5982\u679c\u5176\u5b83\u4eba\u7f16\u5199\u4e86\u611a\u8822\u7684\u89c2\u5bdf\u8005\u6a21\u5f0f\u6d89\u53ca\u523019\u4e2a\u7c7b\uff0c12\u4e2a\u63a5\u53e3\uff0c\u800c\u4f60\u53ea\u7528\u4e86\u4e24\u4e2a\u5b57\u7b26\u4e32\u64cd\u4f5c\u5c31\u53ef\u4ee5\u5b9e\u73b0\u5b83\uff0c\u90a3\u4e48\u4f60\u8d62\u4e86\u3002\u4ed6\u4eec\u5c31\u662f\u9519\u4e86\uff0c\u65e0\u8bba\u4ed6\u4eec\u8ba4\u4e3a\u81ea\u5df1\u7684\u590d\u6742\u8bbe\u8ba1\u6709\u591a\u4e48\u9ad8\u5927\u4e0a\u3002\n\u5bf9\u4e8e\u8981\u4f7f\u7528\u54ea\u4e2a\u51fd\u6570\u7684\u6700\u7b80\u5355\u6d4b\u8bd5\u662f\uff1a\n\n\u786e\u4fdd\u6240\u6709\u51fd\u6570\u90fd\u6ca1\u6709\u95ee\u9898\u3002\u5982\u679c\u5b83\u6709\u9519\u8bef\uff0c\u5b83\u6709\u591a\u5feb\u6216\u591a\u7b80\u5355\u5c31\u4e0d\u91cd\u8981\u4e86\u3002\n\u5982\u679c\u4f60\u4e0d\u80fd\u4fee\u590d\u95ee\u9898\uff0c\u5c31\u9009\u62e9\u53e6\u5916\u4e00\u4e2a\u3002\n\u5b83\u4eec\u4f1a\u4ea7\u751f\u76f8\u540c\u7ed3\u679c\u561b\uff1f\u5982\u679c\u4e0d\u662f\u5c31\u6311\u9009\u5177\u6709\u6240\u9700\u7ed3\u679c\u7684\u51fd\u6570\u3002\n\u5982\u679c\u5b83\u4eec\u4f1a\u4ea7\u751f\u76f8\u540c\u7ed3\u679c\uff0c\u6311\u9009\u5305\u542b\u66f4\u5c11\u7279\u6027\uff0c\u66f4\u5c11\u5206\u652f\u7684\u90a3\u4e2a\uff0c\u6216\u8005\u6311\u9009\u4f60\u8ba4\u4e3a\u6700\u7b80\u5355\u7684\u90a3\u4e2a\u3002\n\u786e\u4fdd\u4f60\u6ca1\u6709\u53ea\u662f\u6311\u9009\u6700\u5177\u6709\u8868\u73b0\u529b\u7684\u90a3\u4e2a\u3002\u65e0\u8bba\u600e\u4e48\u6837\uff0c\u7b80\u5355\u548c\u6e05\u6670\uff0c\u90fd\u4f1a\u6218\u80dc\u590d\u6742\u548c\u6076\u5fc3\u3002\n\n\u4f60\u4f1a\u6ce8\u610f\u5230\uff0c\u6700\u540e\u6211\u4e00\u822c\u4f1a\u653e\u5f03\u5e76\u544a\u8bc9\u4f60\u6839\u636e\u4f60\u7684\u5224\u65ad\u3002\u7b80\u5355\u6027\u975e\u5e38\u8bbd\u523a\u5730\u662f\u4e00\u4ef6\u590d\u6742\u7684\u4e8b\u60c5\uff0c\u6240\u4ee5\u4f7f\u7528\u4f60\u7684\u54c1\u4f4d\u4f5c\u4e3a\u6307\u5f15\u662f\u6700\u597d\u7684\u65b9\u5f0f\u3002\u53ea\u9700\u8981\u786e\u4fdd\u5728\u4f60\u83b7\u53d6\u66f4\u591a\u7ecf\u9a8c\u4e4b\u540e\uff0c\u4f60\u4f1a\u8c03\u6574\u4f60\u5bf9\u4e8e\u4ec0\u4e48\u662f\u201c\u597d\u201d\u7684\u770b\u6cd5\u3002\n\u8d28\u7591\u6743\u5a01\n\u6700\u540e\u4e00\u4e2a\u7b56\u7565\u662f\u6700\u91cd\u8981\u7684\uff0c\u56e0\u4e3a\u5b83\u8ba9\u4f60\u7a81\u7834\u9632\u5fa1\u6027\u7f16\u7a0b\u601d\u7ef4\uff0c\u5e76\u4e14\u8ba9\u4f60\u8f6c\u6362\u4e3a\u521b\u9020\u6027\u601d\u7ef4\u3002\u9632\u5fa1\u6027\u7f16\u7a0b\u662f\u6743\u5a01\u6027\u7684\uff0c\u5e76\u4e14\u6bd4\u8f83\u65e0\u60c5\u3002\u8fd9\u4e00\u601d\u7ef4\u65b9\u5f0f\u7684\u4efb\u52a1\u662f\u8ba9\u4f60\u9075\u5faa\u89c4\u5219\uff0c\u56e0\u4e3a\u5426\u5219\u4f60\u4f1a\u9519\u5931\u4e00\u4e9b\u4e1c\u897f\u6216\u5fc3\u70e6\u610f\u4e71\u3002\n\u8fd9\u4e00\u6743\u5a01\u6027\u7684\u89c2\u70b9\u7684\u574f\u5904\u662f\u627c\u6740\u4e86\u72ec\u7acb\u7684\u521b\u9020\u6027\u601d\u7ef4\u3002\u89c4\u5219\u5bf9\u4e8e\u5b8c\u6210\u4e8b\u60c5\u662f\u5fc5\u8981\u7684\uff0c\u4f46\u662f\u505a\u5b83\u4eec\u7684\u5974\u96b6\u4f1a\u627c\u6740\u4f60\u7684\u521b\u9020\u529b\u3002\n\u8fd9\u6761\u6700\u540e\u7684\u7b56\u7565\u7684\u610f\u601d\u662f\u4f60\u5e94\u8be5\u5468\u671f\u6027\u5730\u8d28\u7591\u4f60\u9075\u5faa\u7684\u89c4\u5219\uff0c\u5e76\u4e14\u5047\u8bbe\u5b83\u4eec\u90fd\u662f\u9519\u8bef\u7684\uff0c\u5c31\u50cf\u4f60\u4e4b\u524d\u590d\u67e5\u7684\u8f6f\u4ef6\u90a3\u6837\u3002\u5728\u4e00\u6bb5\u9632\u5fa1\u6027\u7f16\u7a0b\u7684\u65f6\u95f4\u4e4b\u540e\uff0c\u6211\u901a\u5e38\u4f1a\u8fd9\u6837\u505a\uff0c\u6211\u4f1a\u62e5\u6709\u4e00\u4e2a\u4e0d\u7f16\u7a0b\u7684\u4f11\u606f\u5e76\u8ba9\u8fd9\u4e9b\u89c4\u5219\u6d88\u5931\u3002\u4e4b\u540e\u6211\u4f1a\u51c6\u5907\u597d\u53bb\u505a\u4e00\u4e9b\u521b\u9020\u6027\u7684\u5de5\u4f5c\uff0c\u6216\u6309\u9700\u505a\u66f4\u591a\u7684\u9632\u5fa1\u578b\u7f16\u7a0b\u3002\n\u987a\u5e8f\u5e76\u4e0d\u91cd\u8981\n\u5728\u8fd9\u4e00\u54f2\u5b66\u4e0a\u6211\u60f3\u8bf4\u7684\u6700\u540e\u4e00\u4ef6\u4e8b\uff0c\u5c31\u662f\u6211\u5e76\u4e0d\u662f\u544a\u8bc9\u4f60\u8981\u6309\u7167\u4e00\u4e2a\u4e25\u683c\u7684\u89c4\u5219\uff0c\u6bd4\u5982\u201c\u521b\u9020\uff01\u9632\u5fa1\uff01\u521b\u9020\uff01\u9632\u5fa1\uff01\u201d\u53bb\u505a\u8fd9\u4ef6\u4e8b\u3002\u6700\u5f00\u59cb\u4f60\u53ef\u80fd\u60f3\u8fd9\u6837\u505a\uff0c\u4f46\u662f\u6211\u5b9e\u9645\u4e0a\u4f1a\u505a\u4e0d\u7b49\u91cf\u7684\u8fd9\u4e9b\u4e8b\u60c5\uff0c\u53d6\u51b3\u4e8e\u6211\u60f3\u505a\u4ec0\u4e48\uff0c\u5e76\u4e14\u6211\u53ef\u80fd\u4f1a\u5c06\u4e8c\u8005\u878d\u5408\u5230\u4e00\u8d77\uff0c\u6ca1\u6709\u660e\u786e\u7684\u8fb9\u754c\u3002\n\u6211\u4e5f\u4e0d\u8ba4\u4e3a\u5176\u4e2d\u4e00\u79cd\u601d\u7ef4\u4f1a\u4f18\u4e8e\u53e6\u4e00\u79cd\uff0c\u6216\u8005\u5b83\u4eec\u4e4b\u95f4\u6709\u4e25\u683c\u7684\u754c\u9650\u3002\u4f60\u9700\u8981\u5728\u7f16\u7a0b\u4e0a\u65e2\u6709\u521b\u9020\u529b\u4e5f\u8981\u4e25\u683c\uff0c\u6240\u4ee5\u5982\u679c\u60f3\u8981\u63d0\u5347\u7684\u8bdd\uff0c\u9700\u8981\u540c\u65f6\u505a\u5230\u5b83\u4eec\u3002\n\u9644\u52a0\u9898\n\n\u5230\u73b0\u5728\u4e3a\u6b62\uff08\u4ee5\u53ca\u4ee5\u540e\uff09\u4e66\u4e2d\u7684\u4ee3\u7801\u90fd\u53ef\u80fd\u8fdd\u53cd\u8fd9\u4e9b\u89c4\u5219\u3002\u56de\u9000\u5e76\u6311\u9009\u4e00\u4e2a\u7ec3\u4e60\uff0c\u5c06\u4f60\u5b66\u5230\u7684\u5e94\u7528\u5728\u5b83\u4e0a\u9762\uff0c\u6765\u770b\u770b\u4f60\u80fd\u4e0d\u80fd\u6539\u8fdb\u5b83\u6216\u53d1\u73b0bug\u3002\n\u5bfb\u627e\u4e00\u4e2a\u5f00\u6e90\u9879\u76ee\uff0c\u5bf9\u5176\u4e2d\u4e00\u4e9b\u6587\u4ef6\u8fdb\u884c\u7c7b\u4f3c\u7684\u4ee3\u7801\u590d\u67e5\u3002\u5982\u679c\u4f60\u53d1\u73b0\u4e86bug\uff0c\u63d0\u4ea4\u4e00\u4e2a\u8865\u4e01\u6765\u4fee\u590d\u5b83\u3002\n","categories":"\u7ec3\u4e604","tags":["\u8bed\u8a00","\u7f16\u7a0b"]},{"title":"Makefile \u8fdb\u9636","url":"https:\/\/naka507.github.io\/posts\/5C8A5BE0B219BE30.html","content":"Makefile \u8fdb\u9636\n\u5728\u4e0b\u9762\u7684\u4e09\u4e2a\u7ec3\u4e60\u4e2d\u4f60\u4f1a\u521b\u5efa\u4e00\u4e2a\u9879\u76ee\u7684\u76ee\u5f55\u6846\u67b6\uff0c\u7528\u4e8e\u6784\u5efa\u4e4b\u540e\u7684C\u7a0b\u5e8f\u3002\u8fd9\u4e2a\u76ee\u5f55\u6846\u67b6\u4f1a\u5728\u8fd9\u672c\u4e66\u4e2d\u5269\u4f59\u7684\u7ae0\u8282\u4e2d\u4f7f\u7528\uff0c\u5e76\u4e14\u8fd9\u4e2a\u7ec3\u4e60\u4e2d\u6211\u4f1a\u6d89\u53ca\u5230Makefile\u4fbf\u4e8e\u4f60\u7406\u89e3\u5b83\u3002\n\u8fd9\u4e2a\u7ed3\u6784\u7684\u76ee\u7684\u662f\uff0c\u5728\u4e0d\u51ed\u501f\u914d\u7f6e\u5de5\u5177\u7684\u60c5\u51b5\u4e0b\uff0c\u4f7f\u6784\u5efa\u4e2d\u7b49\u89c4\u6a21\u7684\u7a0b\u5e8f\u53d8\u5f97\u5bb9\u6613\u3002\u5982\u679c\u5b8c\u6210\u4e86\u5b83\uff0c\u4f60\u4f1a\u5b66\u5230\u5f88\u591aGNU make\u548c\u4e00\u4e9b\u5c0f\u578bshell\u811a\u672c\u65b9\u9762\u7684\u4e1c\u897f\u3002\n\u57fa\u672c\u7684\u9879\u76ee\u7ed3\u6784\n\u9996\u5148\u8981\u505a\u7684\u4e8b\u60c5\u662f\u521b\u5efa\u4e00\u4e2aC\u7684\u76ee\u5f55\u6846\u67b6\uff0c\u5e76\u4e14\u653e\u7f6e\u4e00\u4e9b\u591a\u7eed\u9879\u76ee\u90fd\u62e5\u6709\u7684\uff0c\u57fa\u672c\u7684\u6587\u4ef6\u548c\u76ee\u5f55\u3002\u8fd9\u662f\u6211\u7684\u76ee\u5f55\uff1a\n$ mkdir c-skeleton\n$ cd c-skeleton\/\n$ touch LICENSE README.md Makefile\n$ mkdir bin src tests\n$ cp dbg.h src\/   # this is from Ex20\n$ ls -l\ntotal 8\n-rw-r--r--  1 zedshaw  staff     0 Mar 31 16:38 LICENSE\n-rw-r--r--  1 zedshaw  staff  1168 Apr  1 17:00 Makefile\n-rw-r--r--  1 zedshaw  staff     0 Mar 31 16:38 README.md\ndrwxr-xr-x  2 zedshaw  staff    68 Mar 31 16:38 bin\ndrwxr-xr-x  2 zedshaw  staff    68 Apr  1 10:07 build\ndrwxr-xr-x  3 zedshaw  staff   102 Apr  3 16:28 src\ndrwxr-xr-x  2 zedshaw  staff    68 Mar 31 16:38 tests\n$ ls -l src\ntotal 8\n-rw-r--r--  1 zedshaw  staff  982 Apr  3 16:28 dbg.h\n$\n\u4e4b\u540e\u4f60\u4f1a\u770b\u5230\u6211\u6267\u884c\u4e86ls -l\uff0c\u6240\u4ee5\u4f60\u4f1a\u770b\u5230\u6700\u7ec8\u7ed3\u679c\u3002\n\u4e0b\u9762\u662f\u6bcf\u4e2a\u6587\u4ef6\u6240\u505a\u7684\u4e8b\u60c5\uff1a\nLICENSE\n\u5982\u679c\u4f60\u5728\u9879\u76ee\u4e2d\u53d1\u5e03\u6e90\u7801\uff0c\u4f60\u4f1a\u5e0c\u671b\u5305\u542b\u4e00\u4efd\u534f\u8bae\u3002\u5982\u679c\u4f60\u4e0d\u8fd9\u4e48\u591a\uff0c\u867d\u7136\u4f60\u6709\u4ee3\u7801\u7684\u7248\u6743\uff0c\u4f46\u662f\u901a\u5e38\u6ca1\u6709\u4eba\u6709\u6743\u4f7f\u7528\u3002\nREADME.md\n\u5bf9\u4f60\u9879\u76ee\u7684\u7b80\u8981\u8bf4\u660e\u3002\u5b83\u4ee5.md\u7ed3\u5c3e\uff0c\u6240\u4ee5\u5e94\u8be5\u4f5c\u4e3aMarkdown\u6765\u89e3\u6790\u3002\nMakefile\n\u8fd9\u4e2a\u9879\u76ee\u7684\u4e3b\u8981\u6784\u5efa\u6587\u4ef6\u3002\nbin\/\n\u653e\u7f6e\u53ef\u8fd0\u884c\u7a0b\u5e8f\u7684\u5730\u65b9\u3002\u8fd9\u91cc\u901a\u5e38\u662f\u7a7a\u7684\uff0cMakefile\u4f1a\u5728\u8fd9\u91cc\u751f\u6210\u7a0b\u5e8f\u3002\nbuild\/\n\u5f53\u503c\u5e93\u548c\u5176\u5b83\u6784\u5efa\u7ec4\u4ef6\u7684\u5730\u65b9\u3002\u901a\u5e38\u4e5f\u662f\u7a7a\u7684\uff0cMakefile\u4f1a\u5728\u8fd9\u91cc\u751f\u6210\u8fd9\u4e9b\u4e1c\u897f\u3002\nsrc\/\n\u653e\u7f6e\u6e90\u7801\u7684\u5730\u65b9\uff0c\u901a\u5e38\u662f.c\u548c.h\u6587\u4ef6\u3002\ntests\/\n\u653e\u7f6e\u81ea\u52a8\u5316\u6d4b\u8bd5\u7684\u5730\u65b9\u3002\nsrc\/dbg.h\n\u6211\u5c06\u7ec3\u4e6020\u7684dbg.h\u590d\u5236\u5230\u4e86\u8fd9\u91cc\u3002\n\u6211\u521a\u624d\u5206\u89e3\u4e86\u8fd9\u4e2a\u9879\u76ee\u6846\u67b6\u7684\u6bcf\u4e2a\u7ec4\u4ef6\uff0c\u6240\u4ee5\u4f60\u5e94\u8be5\u660e\u767d\u5b83\u4eec\u600e\u4e48\u5de5\u4f5c\u3002\nMakefile\n\u6211\u8981\u8bb2\u5230\u7684\u7b2c\u4e00\u4ef6\u4e8b\u60c5\u5c31\u662fMakefile\uff0c\u56e0\u4e3a\u4f60\u53ef\u4ee5\u4ece\u4e2d\u4e86\u89e3\u5176\u5b83\u4e1c\u897f\u7684\u60c5\u51b5\u3002\u8fd9\u4e2a\u7ec3\u4e60\u7684Makeile\u6bd4\u4e4b\u524d\u66f4\u52a0\u8be6\u7ec6\uff0c\u6240\u4ee5\u6211\u4f1a\u5728\u4f60\u8f93\u5165\u5b83\u4e4b\u540e\u505a\u8be6\u7ec6\u7684\u5206\u89e3\u3002\nCFLAGS=-g -O2 -Wall -Wextra -Isrc -rdynamic -DNDEBUG $(OPTFLAGS)\nLIBS=-ldl $(OPTLIBS)\nPREFIX?=\/usr\/local\n\nSOURCES=$(wildcard src\/**\/*.c src\/*.c)\nOBJECTS=$(patsubst %.c,%.o,$(SOURCES))\n\nTEST_SRC=$(wildcard tests\/*_tests.c)\nTESTS=$(patsubst %.c,%,$(TEST_SRC))\n\nTARGET=build\/libYOUR_LIBRARY.a\nSO_TARGET=$(patsubst %.a,%.so,$(TARGET))\n\n# The Target Build\nall: $(TARGET) $(SO_TARGET) tests\n\ndev: CFLAGS=-g -Wall -Isrc -Wall -Wextra $(OPTFLAGS)\ndev: all\n\n$(TARGET): CFLAGS += -fPIC\n$(TARGET): build $(OBJECTS)\n       ar rcs $@ $(OBJECTS)\n       ranlib $@\n\n$(SO_TARGET): $(TARGET) $(OBJECTS)\n       $(CC) -shared -o $@ $(OBJECTS)\n\nbuild:\n       @mkdir -p build\n       @mkdir -p bin\n\n# The Unit Tests\n.PHONY: tests\ntests: CFLAGS += $(TARGET)\ntests: $(TESTS)\n       sh .\/tests\/runtests.sh\n\nvalgrind:\n       VALGRIND=\"valgrind --log-file=\/tmp\/valgrind-%p.log\" $(MAKE)\n\n# The Cleaner\nclean:\n       rm -rf build $(OBJECTS) $(TESTS)\n       rm -f tests\/tests.log\n       find . -name \"*.gc*\" -exec rm {} \\;\n       rm -rf `find . -name \"*.dSYM\" -print`\n\n# The Install\ninstall: all\n       install -d $(DESTDIR)\/$(PREFIX)\/lib\/\n       install $(TARGET) $(DESTDIR)\/$(PREFIX)\/lib\/\n\n# The Checker\nBADFUNCS='[^_.&gt;a-zA-Z0-9](str(n?cpy|n?cat|xfrm|n?dup|str|pbrk|tok|_)|stpn?cpy|a?sn?printf|byte_)'\ncheck:\n       @echo Files with potentially dangerous functions.\n       @egrep $(BADFUNCS) $(SOURCES) || true\n\n\u8981\u8bb0\u4f4f\u4f60\u5e94\u8be5\u4f7f\u7528\u4e00\u81f4\u7684Tab\u5b57\u7b26\u6765\u7f29\u8fdbMakefile\u3002\u4f60\u7684\u7f16\u8f91\u5668\u5e94\u8be5\u77e5\u9053\u600e\u4e48\u505a\uff0c\u4f46\u662f\u5982\u679c\u4e0d\u662f\u8fd9\u6837\u4f60\u53ef\u4ee5\u6362\u4e2a\u7f16\u8f91\u5668\u3002\u6ca1\u6709\u7a0b\u5e8f\u5458\u4f1a\u4f7f\u7528\u4e00\u4e2a\u8fde\u5982\u6b64\u7b80\u5355\u7684\u4e8b\u60c5\u90fd\u505a\u4e0d\u597d\u7684\u7f16\u8f91\u5668\u3002\n\u5934\u90e8\n\u8fd9\u4e2aMakefile\u8bbe\u8ba1\u7528\u4e8e\u6784\u5efa\u4e00\u4e2a\u5e93\uff0c\u6211\u4eec\u4e4b\u540e\u4f1a\u7528\u5230\u5b83\uff0c\u5e76\u4e14\u901a\u8fc7\u4f7f\u7528GNU make\u7684\u7279\u6b8a\u7279\u6027\u4f7f\u5b83\u5728\u4efb\u4f55\u5e73\u53f0\u4e0a\u90fd\u53ef\u7528\u3002\u6211\u4f1a\u5728\u8fd9\u4e00\u8282\u62c6\u5206\u5b83\u7684\u6bcf\u4e00\u90e8\u5206\uff0c\u5148\u4ece\u5934\u90e8\u5f00\u59cb\u3002\nMakefile:1\n\u8fd9\u662f\u901a\u5e38\u7684CFLAGS\uff0c\u51e0\u4e4e\u6bcf\u4e2a\u9879\u76ee\u90fd\u4f1a\u8bbe\u7f6e\uff0c\u4f46\u662f\u5e26\u6709\u7528\u4e8e\u6784\u5efa\u5e93\u7684\u5176\u5b83\u4e1c\u897f\u3002\u4f60\u53ef\u80fd\u9700\u8981\u4e3a\u4e0d\u540c\u5e73\u53f0\u8c03\u6574\u5b83\u3002\u8981\u6ce8\u610f\u6700\u540e\u7684OPTFLAGS\u53d8\u91cf\u53ef\u4ee5\u8ba9\u4f7f\u7528\u8005\u6309\u9700\u6269\u5c55\u6784\u5efa\u9009\u9879\u3002\nMakefile:2\n\u7528\u4e8e\u94fe\u63a5\u5e93\u7684\u9009\u9879\uff0c\u540c\u6837\u4e5f\u5141\u8bb8\u5176\u5b83\u4eba\u4f7f\u7528OPTFLAGS\u53d8\u91cf\u6269\u5c55\u94fe\u63a5\u9009\u9879\u3002\nMakefile:3\n\u8bbe\u7f6e\u4e00\u4e2a\u53eb\u505aPREFIX\u7684\u53ef\u9009\u53d8\u91cf\uff0c\u5b83\u53ea\u5728\u6ca1\u6709PREFIX\u8bbe\u7f6e\u7684\u5e73\u53f0\u4e0a\u8fd0\u884cMakefile\u65f6\u6709\u6548\u3002\u8fd9\u5c31\u662f?=\u7684\u4f5c\u7528\u3002\nMakefile:5\n\u8fd9\u795e\u5947\u7684\u4e00\u884c\u901a\u8fc7\u6267\u884cwildcard\u641c\u7d22\u5728src\/\u4e2d\u6240\u6709*.c\u6587\u4ef6\u6765\u52a8\u6001\u521b\u5efaSOURCES\u53d8\u91cf\u3002\u4f60\u9700\u8981\u63d0\u4f9bsrc\/**\/*.c\u548csrc\/*.c\u4ee5\u4fbfGNU make\u80fd\u591f\u5305\u542bsrc\u76ee\u5f55\u53ca\u5176\u5b50\u76ee\u5f55\u7684\u6240\u6709\u6b64\u7c7b\u6587\u4ef6\u3002\nMakefile:6\n\u4e00\u65e6\u4f60\u521b\u5efa\u4e86\u6e90\u6587\u4ef6\u5217\u8868\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528patsubst\u547d\u4ee4\u83b7\u53d6*.c\u6587\u4ef6\u7684SOURCES\u6765\u521b\u5efa\u76ee\u6807\u6587\u4ef6\u7684\u65b0\u5217\u8868\u3002\u4f60\u53ef\u4ee5\u544a\u8bc9patsubst\u628a\u6240\u6709%.c\u6269\u5c55\u4e3a%.o\uff0c\u5e76\u5c06\u5b83\u4eec\u8d4b\u7ed9OBJECTS\u3002\nMakefile:8\n\u518d\u6b21\u4f7f\u7528wildcard\u6765\u5bfb\u627e\u6240\u6709\u7528\u4e8e\u5355\u5143\u6d4b\u8bd5\u7684\u6d4b\u8bd5\u6e90\u6587\u4ef6\u3002\u5b83\u4eec\u5b58\u653e\u5728\u4e0d\u540c\u7684\u76ee\u5f55\u4e2d\u3002\nMakefile:9\n\u4e4b\u540e\u4f7f\u7528\u76f8\u540c\u7684patsubst\u6280\u5de7\u6765\u52a8\u6001\u83b7\u5f97\u6240\u6709TEST\u76ee\u6807\u3002\u5176\u4e2d\u6211\u53bb\u6389\u4e86.c\u540e\u7f00\uff0c\u4f7f\u6574\u4e2a\u7a0b\u5e8f\u4f7f\u7528\u76f8\u540c\u7684\u540d\u5b57\u521b\u5efa\u3002\u4e4b\u524d\u6211\u5c06.c\u66ff\u6362\u4e3a.o\u6765\u521b\u5efa\u76ee\u6807\u6587\u4ef6\u3002\nMakefile:11\n\u6700\u540e\uff0c\u6211\u5c06\u6700\u7ec8\u76ee\u6807\u8bbe\u7f6e\u4e3abuild\/libYOUR_LIBRARY.a\uff0c\u4f60\u53ef\u4ee5\u4e3a\u4f60\u5b9e\u9645\u6784\u5efa\u7684\u4efb\u4f55\u5e93\u6765\u4fee\u6539\u5b83\u3002\n\u8fd9\u5c31\u662fMakefile\u7684\u5934\u90e8\u4e86\uff0c\u4f46\u662f\u6211\u5e94\u8be5\u5bf9\u201c\u8ba9\u5176\u4ed6\u4eba\u6269\u5c55\u6784\u5efa\u201d\u505a\u4e2a\u89e3\u91ca\u3002\u4f60\u5728\u8fd0\u884c\u5b83\u7684\u65f6\u5019\u53ef\u4ee5\u8fd9\u6837\u505a\uff1a\n# WARNING! Just a demonstration, won't really work right now.\n# this installs the library into \/tmp\n$ make PREFIX=\/tmp install\n# this tells it to add pthreads\n$ make OPTFLAGS=-pthread\n\u5982\u679c\u4f60\u4f20\u5165\u5339\u914dMakefile\u4e2d\u76f8\u540c\u540d\u79f0\u7684\u53d8\u91cf\uff0c\u5b83\u4eec\u4f1a\u5728\u6784\u5efa\u4e2d\u751f\u6548\u3002\u4f60\u53ef\u4ee5\u5229\u7528\u5b83\u6765\u4fee\u6539Makefile\u7684\u8fd0\u884c\u65b9\u5f0f\u3002\u7b2c\u4e00\u6761\u547d\u4ee4\u6539\u53d8\u4e86PREFIX\uff0c\u4f7f\u5b83\u5b89\u88c5\u5230\/tmp\u3002\u7b2c\u4e8c\u6761\u8bbe\u7f6e\u4e86OPTFLAGS\uff0c\u4e3a\u4e4b\u6dfb\u52a0\u4e86pthread\u9009\u9879\u3002\n\u6784\u5efa\u76ee\u6807\n\u6211\u4f1a\u7ee7\u7eedMakefile\u7684\u5206\u89e3\uff0c\u8fd9\u4e00\u90e8\u5206\u7528\u4e8e\u6784\u5efa\u76ee\u6807\u6587\u4ef6\uff08object file\uff09\u548c\u76ee\u6807\uff08target\uff09\uff1a\nMakefile:14\n\u8981\u8bb0\u4f4f\u5728\u6ca1\u6709\u63d0\u4f9b\u76ee\u6807\u65f6make\u4f1a\u9ed8\u8ba4\u8fd0\u884c\u7b2c\u4e00\u4e2a\u76ee\u6807\u3002\u8fd9\u91cc\u5b83\u53eb\u505aall:\uff0c\u5e76\u4e14\u5b83\u63d0\u4f9b\u4e86$(TARGET) tests\u4f5c\u4e3a\u6784\u5efa\u76ee\u6807\u3002\u67e5\u770bTARGET\u53d8\u91cf\uff0c\u4f60\u4f1a\u53d1\u73b0\u8fd9\u5c31\u662f\u5e93\u6587\u4ef6\uff0c\u6240\u4ee5all:\u9996\u5148\u4f1a\u6784\u5efa\u51fa\u5e93\u6587\u4ef6\u3002\u4e4b\u540e\uff0ctests\u76ee\u6807\u4f1a\u6784\u5efa\u5355\u5143\u6d4b\u8bd5\u3002\nMakefile:16\n\u53e6\u4e00\u4e2a\u7528\u4e8e\u6267\u884c\u201c\u5f00\u53d1\u8005\u6784\u5efa\u201d\u7684\u76ee\u6807\uff0c\u5b83\u4ecb\u7ecd\u4e86\u4e00\u79cd\u4e3a\u5355\u4e00\u76ee\u6807\u4fee\u6539\u9009\u9879\u7684\u6280\u5de7\uff0c\u5982\u679c\u6211\u6267\u884c\u201c\u5f00\u53d1\u6784\u5efa\u201d\uff0c\u6211\u5e0c\u671bCFLAGS\u5305\u542b\u7c7b\u4f3cWextra\u8fd9\u6837\u7528\u4e8e\u53d1\u73b0bug\u7684\u9009\u9879\u3002\u5982\u679c\u4f60\u5c06\u5b83\u4eec\u653e\u5230\u76ee\u6807\u7684\u90a3\u884c\u4e2d\uff0c\u5e76\u518d\u7f16\u5199\u4e00\u884c\u6765\u6307\u5411\u539f\u59cb\u76ee\u6807\uff08\u8fd9\u91cc\u662fall\uff09\uff0c\u90a3\u4e48\u5b83\u5c31\u4f1a\u5c06\u6539\u4e3a\u4f60\u8bbe\u7f6e\u7684\u9009\u9879\u3002\u6211\u901a\u5e38\u5c06\u5b83\u7528\u4e8e\u5728\u4e0d\u540c\u7684\u5e73\u53f0\u4e0a\u8bbe\u7f6e\u6240\u9700\u7684\u4e0d\u540c\u9009\u9879\u3002\nMakefile:19\n\u6784\u5efaTARGET\u5e93\uff0c\u7136\u800c\u5b83\u540c\u6837\u4f7f\u7528\u4e8615\u884c\u7684\u6280\u5de7\uff0c\u5411\u4e00\u4e2a\u76ee\u6807\u63d0\u4f9b\u9009\u9879\u6765\u4e3a\u5f53\u524d\u76ee\u6807\u4fee\u6539\u5b83\u4eec\u3002\u8fd9\u91cc\u6211\u901a\u8fc7\u9002\u7528+=\u8bed\u6cd5\u4e3a\u5e93\u7684\u6784\u5efa\u6dfb\u52a0\u4e86-fPIC\u3002\nMakefile:20\n\u73b0\u5728\u8fd9\u4e00\u771f\u5b9e\u76ee\u6807\u9996\u5148\u521b\u5efabuild\u76ee\u5f55\uff0c\u4e4b\u540e\u7f16\u8bd1\u6240\u6709OBJECTS\u3002\nMakefile:21\n\u8fd0\u884c\u5b9e\u9645\u521b\u5efaTARGET\u7684ar\u7684\u547d\u4ee4\u3002$@ $(OBJECTS)\u8bed\u6cd5\u7684\u610f\u601d\u662f\uff0c\u5c06\u5f53\u524d\u76ee\u6807\u7684\u540d\u79f0\u653e\u5728\u8fd9\u91cc\uff0c\u5e76\u628aOBJECTS\u7684\u5185\u5bb9\u653e\u5728\u540e\u9762\u3002\u8fd9\u91cc$@\u7684\u503c\u4e3a19\u884c\u7684$(TARGET)\uff0c\u5b83\u5b9e\u9645\u4e0a\u4e3abuild\/libYOUR_LIBRARY.a\u3002\u770b\u8d77\u6765\u5728\u8fd9\u4e00\u91cd\u5b9a\u5411\u4e2d\u5b83\u505a\u4e86\u5f88\u591a\u8ddf\u8e2a\u5de5\u4f5c\uff0c\u5b83\u4e5f\u6709\u8fd9\u4e2a\u529f\u80fd\uff0c\u5e76\u4e14\u4f60\u53ef\u4ee5\u901a\u8fc7\u4fee\u6539\u9876\u90e8\u7684TARGET\uff0c\u6765\u6784\u5efa\u4e00\u4e2a\u5168\u65b0\u7684\u5e93\u3002\nMakefile:22\n\u6700\u540e\uff0c\u5728TARGET\u4e0a\u8fd0\u884cranlib\u6765\u6784\u5efa\u8fd9\u4e2a\u5e93\u3002\nMakefile:24-24\n\u7528\u4e8e\u5728build\/\u548cbin\/\u76ee\u5f55\u4e0d\u5b58\u5728\u7684\u6761\u4ef6\u4e0b\u521b\u5efa\u5b83\u4eec\u3002\u4e4b\u540e\u5b83\u88ab19\u884c\u5f15\u7528\uff0c\u90a3\u91cc\u63d0\u4f9b\u4e86build\u76ee\u6807\u6765\u786e\u4fddbuild\/\u76ee\u5f55\u5df2\u521b\u5efa\u3002\n\u4f60\u73b0\u5728\u62e5\u6709\u4e86\u7528\u4e8e\u6784\u5efa\u8f6f\u4ef6\u7684\u6240\u9700\u7684\u6240\u6709\u4e1c\u897f\u3002\u4e4b\u540e\u6211\u4eec\u4f1a\u521b\u5efa\u7528\u4e8e\u6784\u5efa\u548c\u8fd0\u884c\u5355\u5143\u6d4b\u8bd5\u7684\u4e1c\u897f\uff0c\u6765\u6267\u884c\u81ea\u52a8\u5316\u6d4b\u8bd5\u3002\n\u5355\u5143\u6d4b\u8bd5\nC\u4e0d\u540c\u4e8e\u5176\u4ed6\u8bed\u8a00\uff0c\u56e0\u4e3a\u5b83\u66f4\u6613\u4e8e\u4e3a\u6bcf\u4e2a\u9700\u8981\u6d4b\u8bd5\u7684\u4e1c\u897f\u521b\u5efa\u5c0f\u578b\u7a0b\u5e8f\u3002\u4e00\u4e9b\u6d4b\u8bd5\u6846\u67b6\u8bd5\u56fe\u6a21\u62df\u5176\u4ed6\u8bed\u8a00\u4e2d\u7684\u6a21\u5757\u6982\u5ff5\uff0c\u5e76\u4e14\u6267\u884c\u52a8\u6001\u52a0\u8f7d\uff0c\u4f46\u662f\u5b83\u5728C\u4e2d\u5e76\u4e0d\u9002\u7528\u3002\u8fd9\u4e5f\u4e0d\u662f\u5fc5\u8981\u7684\uff0c\u56e0\u4e3a\u4f60\u53ef\u4ee5\u4ec5\u4ec5\u7f16\u5199\u4e00\u4e2a\u7a0b\u5e8f\u7528\u4e8e\u6bcf\u4e2a\u6d4b\u8bd5\u3002\n\u6211\u63a5\u4e0b\u6765\u4f1a\u6d89\u53ca\u5230Makefile\u7684\u8fd9\u4e00\u90e8\u5206\uff0c\u5e76\u4e14\u4f60\u4f1a\u770b\u5230test\/\u76ee\u5f55\u4e2d\u771f\u6b63\u8d77\u4f5c\u7528\u7684\u5185\u5bb9\u3002\nMakefile:29\n\u5982\u679c\u4f60\u62e5\u6709\u4e00\u4e2a\u4e0d\u662f\u201c\u771f\u5b9e\u201d\u7684\u76ee\u6807\uff0c\u53ea\u6709\u6709\u4e2a\u76ee\u5f55\u6216\u8005\u6587\u4ef6\u53eb\u8fd9\u4e2a\u540d\u5b57\uff0c\u4f60\u9700\u8981\u4f7f\u7528g.PHONY:\u6807\u7b7e\u6765\u6807\u8bb0\u5b83\uff0c\u4ee5\u4fbfmake\u5ffd\u7565\u8be5\u6587\u4ef6\u3002\nMakefile:30\n\u6211\u4f7f\u7528\u4e86\u4e0e\u4fee\u6539CFLAGS\u53d8\u91cf\u76f8\u540c\u7684\u6280\u5de7\uff0c\u5e76\u4e14\u5c06TARGET\u6dfb\u52a0\u5230\u6784\u5efa\u4e2d\uff0c\u4e8e\u662f\u6bcf\u4e2a\u6d4b\u8bd5\u7a0b\u5e8f\u90fd\u4f1a\u94fe\u63a5TARGET\u5e93\u3002\u8fd9\u91cc\u5b83\u4f1a\u6dfb\u52a0build\/libYOUR_LIBRARY.a\u7528\u4e8e\u94fe\u63a5\u3002\nMakefile:31\n\u4e4b\u540e\u6211\u521b\u5efa\u4e86\u5b9e\u9645\u7684test:\u76ee\u5f55\uff0c\u5b83\u4f9d\u8d56\u4e8e\u6240\u6709\u5728TESTS\u53d8\u91cf\u4e2d\u5217\u51fa\u7684\u7a0b\u5e8f\u3002\u8fd9\u4e00\u884c\u5b9e\u9645\u4e0a\u8bf4\uff0c\u201cMake\uff0c\u8bf7\u4f7f\u7528\u4f60\u5df2\u77e5\u7684\u7a0b\u5e8f\u6784\u5efa\u65b9\u6cd5\uff0c\u4ee5\u53ca\u5f53\u524dCFLAGS\u8bbe\u7f6e\u7684\u5185\u5bb9\u6765\u6784\u5efaTESTS\u4e2d\u7684\u6bcf\u4e2a\u7a0b\u5e8f\u3002\u201d\nMakefile:32\n\u6700\u540e\uff0c\u6240\u6709TESTS\u6784\u5efa\u5b8c\u4e4b\u540e\uff0c\u4f1a\u8fd0\u884c\u4e00\u4e2a\u6211\u7a0d\u540e\u521b\u5efa\u7684\u7b80\u5355shell\u811a\u672c\uff0c\u5b83\u77e5\u9053\u5982\u4f55\u5168\u90e8\u8fd0\u884c\u4ed6\u4eec\u5e76\u62a5\u544a\u5b83\u4eec\u7684\u8f93\u51fa\u3001\u8fd9\u4e00\u884c\u5b9e\u9645\u4e0a\u8fd0\u884c\u5b83\u6765\u8ba9\u4f60\u770b\u5230\u6d4b\u8bd5\u7ed3\u679c\u3002\nMakefile:34-35\n\u4e3a\u4e86\u80fd\u591f\u52a8\u6001\u4f7f\u7528Valgrind\u91cd\u590d\u8fd0\u884c\u6d4b\u8bd5\uff0c\u6211\u521b\u5efa\u4e86valgrind:\u6807\u7b7e\uff0c\u5b83\u8bbe\u7f6e\u4e86\u6b63\u786e\u7684\u53d8\u91cf\u5e76\u4e14\u518d\u6b21\u8fd0\u884c\u5b83\u3002\u5b83\u4f1a\u5c06Valgrind\u7684\u65e5\u5fd7\u653e\u5230\/tmp\/valgrind-*.log\uff0c\u4f60\u53ef\u4ee5\u67e5\u770b\u5e76\u4e86\u89e3\u53d1\u751f\u4e86\u4ec0\u4e48\u3002\u4e4b\u540etests\/runtests.sh\u770b\u5230VALGRIND\u53d8\u91cf\u65f6\uff0c\u5b83\u4f1a\u660e\u767d\u8981\u5728Valgrind\u4e0b\u8fd0\u884c\u6d4b\u8bd5\u7a0b\u5e8f\u3002\n\u4f60\u9700\u8981\u4e3a\u5355\u5143\u6d4b\u8bd5\u521b\u5efa\u4e00\u4e2a\u5c0f\u578b\u7684shell\u811a\u672c\uff0c\u5b83\u77e5\u9053\u5982\u4f55\u8fd0\u884c\u7a0b\u5e8f\u3002\u6211\u4eec\u5f00\u59cb\u521b\u5efa\u8fd9\u4e2atests\/runtests.sh\u811a\u672c\uff1a\necho \"Running unit tests:\"\n\nfor i in tests\/*_tests\ndo\n    if test -f $i\n    then\n        if $VALGRIND .\/$i 2&gt;&gt; tests\/tests.log\n        then\n            echo $i PASS\n        else\n            echo \"ERROR in test $i: here's tests\/tests.log\"\n            echo \"------\"\n            tail tests\/tests.log\n            exit 1\n        fi\n    fi\ndone\n\necho \"\"\n\u5f53\u6211\u63d0\u5230\u5355\u5143\u6d4b\u8bd5\u5982\u4f55\u5de5\u4f5c\u65f6\uff0c\u6211\u4f1a\u5728\u4e4b\u540e\u7528\u5230\u5b83\u3002\n\u6e05\u7406\u5de5\u5177\n\u6211\u5df2\u7ecf\u6709\u4e86\u7528\u4e8e\u5355\u5143\u6d4b\u8bd5\u7684\u5de5\u5177\uff0c\u6240\u4ee5\u4e0b\u4e00\u6b65\u5c31\u662f\u521b\u5efa\u9700\u8981\u91cd\u7f6e\u65f6\u7684\u6e05\u7406\u5de5\u5177\u3002\nMakefile:38\nclean:\u76ee\u6807\u5728\u6211\u9700\u8981\u6e05\u7406\u8fd9\u4e2a\u9879\u76ee\u7684\u4efb\u4f55\u65f6\u5019\u90fd\u4f1a\u6267\u884c\u6e05\u7406\u3002\nMakefile:39-42\n\u8fd9\u4f1a\u6e05\u7406\u4e0d\u540c\u7f16\u8bd1\u5668\u548c\u5de5\u5177\u7559\u4e0b\u7684\u591a\u6570\u5783\u573e\u3002\u5b83\u4e5f\u4f1a\u79fb\u9664build\/\u76ee\u5f55\u5e76\u4e14\u4f7f\u7528\u4e86\u4e00\u4e2a\u6280\u5de7\u6765\u6e05\u7406XCode\u4e3a\u8c03\u8bd5\u76ee\u7684\u800c\u7559\u4e0b\u7684*.dSYM\u3002\n\u5982\u679c\u4f60\u78b0\u5230\u4e86\u60f3\u8981\u6267\u884c\u6e05\u7406\u7684\u5783\u573e\uff0c\u4f60\u53ea\u9700\u8981\u7b80\u5355\u5730\u6269\u5c55\u9700\u8981\u5220\u9664\u7684\u6587\u4ef6\u5217\u8868\u3002\n\u5b89\u88c5\n\u7136\u540e\uff0c\u6211\u4f1a\u9700\u8981\u4e00\u79cd\u5b89\u88c5\u9879\u76ee\u7684\u65b9\u6cd5\uff0c\u5bf9Makefile\u6765\u8bf4\u5c31\u662f\u628a\u6784\u5efa\u51fa\u6765\u7684\u5e93\u653e\u5230\u901a\u5e38\u7684PREFIX\u76ee\u5f55\u4e0b\uff0c\u5b83\u901a\u5e38\u662f\/usr\/local\/lib\u3002\nMakefile:45\n\u5b83\u4f1a\u4f7finstall:\u4f9d\u8d56\u4e8eall:\u76ee\u5f55\uff0c\u6240\u4ee5\u5f53\u4f60\u8fd0\u884cmake install\u4e4b\u540e\u4e5f\u4f1a\u5148\u786e\u4fdd\u4e00\u5207\u90fd\u5df2\u6784\u5efa\u3002\nMakefile:46\n\u63a5\u4e0b\u6765\u6211\u4f7f\u7528install\u7a0b\u5e8f\u6765\u521b\u5efalib\u76ee\u6807\u7684\u76ee\u5f55\u3002\u5176\u4e2d\u6211\u901a\u8fc7\u4f7f\u7528\u4e24\u4e2a\u4e3a\u5b89\u88c5\u8005\u63d0\u4f9b\u4fbf\u5229\u7684\u53d8\u91cf\uff0c\u5c1d\u8bd5\u8ba9\u5b89\u88c5\u5c3d\u53ef\u80fd\u7075\u6d3b\u3002DESTDIR\u4ea4\u7ed9\u5b89\u88c5\u8005\uff0c\u4fbf\u4e8e\u5728\u5b89\u5168\u6216\u8005\u7279\u5b9a\u7684\u76ee\u5f55\u91cc\u6267\u884c\u81ea\u5df1\u7684\u6784\u5efa\u3002PREFIX\u5728\u522b\u4eba\u60f3\u8981\u5c06\u9879\u76ee\u5b89\u88c5\u5230\u5176\u5b83\u76ee\u5f55\u800c\u4e0d\u662f\/user\/local\u65f6\u4f1a\u88ab\u4f7f\u7528\u3002\nMakefile:47\n\u5728\u6b64\u4e4b\u540e\u6211\u4f7f\u7528insyall\u6765\u5b9e\u9645\u5b89\u88c5\u8fd9\u4e2a\u5e93\uff0c\u5230\u5b83\u9700\u8981\u5b89\u88c5\u7684\u5730\u65b9\u3002\ninstall\u7a0b\u5e8f\u7684\u76ee\u7684\u662f\u786e\u4fdd\u8fd9\u4e9b\u4e8b\u60c5\u90fd\u8bbe\u7f6e\u4e86\u6b63\u786e\u7684\u6743\u9650\u3002\u5f53\u4f60\u8fd0\u884cmake install\u65f6\u4f60\u901a\u5e38\u4f7f\u7528root\u6743\u9650\u6765\u6267\u884c\uff0c\u6240\u4ee5\u901a\u5e38\u7684\u6784\u5efa\u8fc7\u7a0b\u5e94\u4e3amake &amp;&amp; sudo make install\u3002\n\u68c0\u67e5\u5de5\u5177\nMakefile\u7684\u6700\u540e\u4e00\u90e8\u5206\u662f\u4e2a\u989d\u5916\u7684\u90e8\u5206\uff0c\u6211\u628a\u5b83\u5305\u542b\u5728\u6211\u7684C\u9879\u76ee\u4e2d\u7528\u4e8e\u53d1\u73b0\u4efb\u4f55\u4f7f\u7528C\u4e2d\u201c\u5371\u9669\u201d\u51fd\u6570\u7684\u60c5\u51b5\u3002\u8fd9\u4e9b\u51fd\u6570\u662f\u5b57\u7b26\u4e32\u51fd\u6570\u548c\u53e6\u4e00\u4e9b\u201c\u4e0d\u4fdd\u62a4\u6808\u201d\u7684\u51fd\u6570\u3002\nMakefile:50\n\u8bbe\u7f6e\u53d8\u91cf\uff0c\u5b83\u662f\u4e2a\u7a0d\u5927\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u7528\u4e8e\u68c0\u7d22\u7c7b\u4f3cstrcpy\u7684\u5371\u9669\u51fd\u6570\u3002\nMakefile:51\n\u8fd9\u662fcheck:\u76ee\u6807\uff0c\u4f7f\u4f60\u80fd\u591f\u968f\u65f6\u6267\u884c\u68c0\u67e5\u3002\nMakefile:52\n\u5b83\u53ea\u662f\u4e00\u4e2a\u6253\u5370\u4fe1\u606f\u7684\u65b9\u5f0f\uff0c\u4f7f\u7528\u4e86@echo\u6765\u544a\u8bc9make\u4e0d\u8981\u6253\u5370\u547d\u4ee4\uff0c\u53ea\u9700\u6253\u5370\u8f93\u51fa\u3002\nMakefile:53\n\u5bf9\u6e90\u6587\u4ef6\u8fd0\u884cegrep\u547d\u4ee4\u6765\u5bfb\u627e\u4efb\u4f55\u5371\u9669\u7684\u5b57\u7b26\u4e32\u3002\u6700\u540e\u7684|| true\u662f\u4e00\u79cd\u65b9\u6cd5\uff0c\u7528\u4e8e\u9632\u6b62make\u8ba4\u4e3aegrep\u6ca1\u6709\u627e\u5230\u4efb\u4f55\u4e1c\u897f\u662f\u6267\u884c\u5931\u8d25\u3002\n\u5f53\u4f60\u6267\u884c\u5b83\u4e4b\u540e\uff0c\u5b83\u4f1a\u8868\u73b0\u5f97\u5341\u5206\u5947\u602a\uff0c\u5982\u679c\u6ca1\u6709\u4efb\u4f55\u5371\u9669\u7684\u51fd\u6570\uff0c\u4f60\u4f1a\u5f97\u5230\u4e00\u4e2a\u9519\u8bef\u3002\n\u4f60\u4f1a\u770b\u5230\u4ec0\u4e48\n\u6211\u5728\u5b8c\u6210\u8fd9\u4e2a\u9879\u76ee\u6846\u67b6\u76ee\u5f55\u7684\u6784\u5efa\u4e4b\u524d\uff0c\u8fd8\u8bbe\u7f6e\u4e86\u4e24\u4e2a\u989d\u5916\u7684\u7ec3\u4e60\u3002\u4e0b\u9762\u8fd9\u662f\u6211\u5bf9Makefile\u7279\u6027\u7684\u6d4b\u8bd5\u7ed3\u679c\uff1a\n$ make clean\nrm -rf build  \nrm -f tests\/tests.log\nfind . -name \"*.gc*\" -exec rm {} \\;\nrm -rf `find . -name \"*.dSYM\" -print`\n$ make check\nFiles with potentially dangerous functions.\n^Cmake: *** [check] Interrupt: 2\n\n$ make\nar rcs build\/libYOUR_LIBRARY.a\nar: no archive members specified\nusage:  ar -d [-TLsv] archive file ...\n      ar -m [-TLsv] archive file ...\n      ar -m [-abiTLsv] position archive file ...\n      ar -p [-TLsv] archive [file ...]\n      ar -q [-cTLsv] archive file ...\n      ar -r [-cuTLsv] archive file ...\n      ar -r [-abciuTLsv] position archive file ...\n      ar -t [-TLsv] archive [file ...]\n      ar -x [-ouTLsv] archive [file ...]\nmake: *** [build\/libYOUR_LIBRARY.a] Error 1\n$ make valgrind\nVALGRIND=\"valgrind --log-file=\/tmp\/valgrind-%p.log\" make\nar rcs build\/libYOUR_LIBRARY.a\nar: no archive members specified\nusage:  ar -d [-TLsv] archive file ...\n      ar -m [-TLsv] archive file ...\n      ar -m [-abiTLsv] position archive file ...\n      ar -p [-TLsv] archive [file ...]\n      ar -q [-cTLsv] archive file ...\n      ar -r [-cuTLsv] archive file ...\n      ar -r [-abciuTLsv] position archive file ...\n      ar -t [-TLsv] archive [file ...]\n      ar -x [-ouTLsv] archive [file ...]\nmake[1]: *** [build\/libYOUR_LIBRARY.a] Error 1\nmake: *** [valgrind] Error 2\n$\n\u5f53\u6211\u8fd0\u884cclean:\u76ee\u6807\u65f6\u5b83\u4f1a\u751f\u6548\uff0c\u4f46\u662f\u7531\u4e8e\u6211\u5728src\/\u76ee\u5f55\u4e2d\u5e76\u6ca1\u6709\u4efb\u4f55\u6e90\u6587\u4ef6\uff0c\u5176\u5b83\u547d\u4ee4\u5e76\u6ca1\u6709\u771f\u6b63\u8d77\u4f5c\u7528\u3002\u6211\u4f1a\u5728\u4e0b\u4e2a\u7ec3\u4e60\u4e2d\u8865\u5b8c\u5b83\u3002\n\u9644\u52a0\u9898\n\n\u5c1d\u8bd5\u901a\u8fc7\u5c06\u6e90\u6587\u4ef6\u548c\u5934\u6587\u4ef6\u6dfb\u52a0\u8fdbsrc\/\uff0c\u6765\u4f7fMakefile\u771f\u6b63\u8d77\u4f5c\u7528\uff0c\u5e76\u4e14\u6784\u5efa\u51fa\u5e93\u6587\u4ef6\u3002\u5728\u6e90\u6587\u4ef6\u4e2d\u4e0d\u5e94\u8be5\u9700\u8981main\u51fd\u6570\u3002\n\u7814\u7a76check:\u76ee\u6807\u4f1a\u4f7f\u7528BADFUNCS\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u6765\u5bfb\u627e\u4ec0\u4e48\u51fd\u6570\u3002\n\u5982\u679c\u4f60\u6ca1\u6709\u505a\u8fc7\u81ea\u52a8\u5316\u6d4b\u8bd5\uff0c\u67e5\u8be2\u6709\u5173\u8d44\u6599\u4e3a\u4ee5\u540e\u505a\u51c6\u5907\u3002\n","categories":"\u7ec3\u4e605","tags":["Makefile","\u7a0b\u5e8f"]},{"title":"\u5e93\u548c\u94fe\u63a5","url":"https:\/\/naka507.github.io\/posts\/09D69E06B935E885.html","content":"\u5e93\u548c\u94fe\u63a5\nC\u8bed\u8a00\u7f16\u7a0b\u7684\u6838\u5fc3\u80fd\u529b\u4e4b\u4e00\u5c31\u662f\u94fe\u63a5OS\u6240\u63d0\u4f9b\u7684\u5e93\u3002\u94fe\u63a5\u662f\u4e00\u79cd\u4e3a\u4f60\u7684\u7a0b\u5e8f\u6dfb\u52a0\u989d\u5916\u7279\u6027\u7684\u65b9\u6cd5\uff0c\u8fd9\u4e9b\u7279\u6027\u7531\u5176\u5b83\u4eba\u5728\u7cfb\u7edf\u4e2d\u521b\u5efa\u5e76\u6253\u5305\u3002\u4f60\u5df2\u7ecf\u4f7f\u7528\u4e86\u4e00\u4e9b\u81ea\u52a8\u5305\u542b\u7684\u6807\u51c6\u5e93\uff0c\u4f46\u662f\u6211\u6253\u7b97\u5bf9\u5e93\u7684\u4e0d\u540c\u7c7b\u578b\u548c\u5b83\u4eec\u7684\u4f5c\u7528\u505a\u4e2a\u89e3\u91ca\u3002\n\u9996\u5148\uff0c\u5e93\u5728\u6bcf\u4e2a\u8bed\u8a00\u4e2d\u90fd\u6ca1\u6709\u826f\u597d\u7684\u8bbe\u8ba1\u3002\u6211\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\uff0c\u4f46\u662f\u4f3c\u4e4e\u8bed\u8a00\u7684\u8bbe\u8ba1\u8005\u90fd\u5c06\u94fe\u63a5\u89c6\u4e3a\u4e0d\u662f\u7279\u522b\u91cd\u8981\u7684\u4e1c\u897f\u3002\u5b83\u4eec\u901a\u5e38\u4ee4\u4eba\u6df7\u4e71\uff0c\u96be\u4ee5\u4f7f\u7528\uff0c\u4e0d\u80fd\u6b63\u786e\u8fdb\u884c\u7248\u672c\u63a7\u5236\uff0c\u5e76\u4ee5\u4e0d\u540c\u7684\u65b9\u5f0f\u94fe\u63a5\u5230\u5404\u79cd\u5730\u65b9\u3002\nC\u6ca1\u6709\u4ec0\u4e48\u4e0d\u540c\uff0c\u4f46\u662fC\u4e2d\u7684\u5e93\u548c\u94fe\u63a5\u662fUnix\u64cd\u4f5c\u7cfb\u7edf\u7684\u7ec4\u4ef6\uff0c\u5e76\u4e14\u53ef\u6267\u884c\u7684\u683c\u5f0f\u5728\u5f88\u591a\u5e74\u524d\u5c31\u8bbe\u8ba1\u597d\u4e86\u3002\u5b66\u4e60C\u5982\u4f55\u94fe\u63a5\u5e93\u6709\u52a9\u4e8e\u7406\u89e3OS\u5982\u4f55\u5de5\u4f5c\uff0c\u4ee5\u53ca\u5b83\u5982\u4f55\u8fd0\u884c\u4f60\u7684\u7a0b\u5e8f\u3002\nC\u4e2d\u7684\u5e93\u6709\u4e24\u79cd\u57fa\u672c\u7c7b\u578b\uff1a\n\u9759\u6001\n\u4f60\u53ef\u4ee5\u4f7f\u7528ar\u548cranlib\u6765\u6784\u5efa\u5b83\uff0c\u5c31\u50cf\u4e0a\u4e2a\u7ec3\u4e60\u4e2d\u7684libYOUR_LIBRARY.a\u90a3\u6837\uff08Windows\u4e0b\u540e\u7f00\u4e3a.lib\uff09\u3002\u8fd9\u79cd\u5e93\u53ef\u4ee5\u5f53\u505a\u4e00\u7cfb\u5217.o\u5bf9\u8c61\u6587\u4ef6\u548c\u51fd\u6570\u7684\u5bb9\u5668\uff0c\u4ee5\u53ca\u5f53\u4f60\u6784\u5efa\u7a0b\u5e8f\u65f6\uff0c\u53ef\u4ee5\u5f53\u505a\u662f\u4e00\u4e2a\u5927\u578b\u7684.o\u6587\u4ef6\u3002\n\u52a8\u6001\n\u5b83\u4eec\u901a\u5e38\u4ee5.so\uff08Linux\uff09\u6216.dll\uff08Windows\uff09\u7ed3\u5c3e\u3002\u5728OSX\u4e2d\uff0c\u5dee\u4e0d\u591a\u6709\u4e00\u767e\u4e07\u79cd\u540e\u7f00\uff0c\u53d6\u51b3\u4e8e\u7248\u672c\u548c\u7f16\u5199\u5b83\u7684\u4eba\u3002\u4e25\u683c\u6765\u8bb2\uff0cOSX\u4e2d\u7684.dylib\uff0c.bundle\u548cframework\u8fd9\u4e09\u4e2a\u4e4b\u95f4\u6ca1\u4ec0\u4e48\u4e0d\u540c\u3002\u8fd9\u4e9b\u6587\u4ef6\u90fd\u88ab\u6784\u5efa\u597d\u5e76\u4e14\u653e\u7f6e\u5230\u6307\u5b9a\u7684\u5730\u65b9\u3002\u5f53\u4f60\u8fd0\u884c\u7a0b\u5e8f\u65f6\uff0cOS\u4f1a\u52a8\u6001\u52a0\u8f7d\u8fd9\u4e9b\u6587\u4ef6\u5e76\u4e14\u201c\u51ed\u7a7a\u201d\u94fe\u63a5\u5230\u4f60\u7684\u7a0b\u5e8f\u4e2d\u3002\n\u6211\u503e\u5411\u4e8e\u5bf9\u5c0f\u578b\u6216\u4e2d\u578b\u9879\u76ee\u4f7f\u7528\u9759\u6001\u7684\u5e93\uff0c\u56e0\u4e3a\u5b83\u4eec\u6613\u4e8e\u4f7f\u7528\uff0c\u5e76\u4e14\u5de5\u4f5c\u5728\u5728\u66f4\u591a\u64cd\u4f5c\u7cfb\u7edf\u4e0a\u3002\u6211\u4e5f\u559c\u6b22\u5c06\u6240\u6709\u4ee3\u7801\u653e\u5165\u9759\u6001\u5e93\u4e2d\uff0c\u4e4b\u540e\u94fe\u63a5\u5b83\u6765\u6267\u884c\u5355\u5143\u6d4b\u8bd5\uff0c\u6216\u8005\u94fe\u63a5\u5230\u6240\u9700\u7684\u7a0b\u5e8f\u4e2d\u3002\n\u52a8\u6001\u5e93\u9002\u7528\u4e8e\u5927\u578b\u7cfb\u7edf\uff0c\u5b83\u7684\u7a7a\u95f4\u5341\u5206\u6709\u9650\uff0c\u6216\u8005\u5176\u4e2d\u5927\u91cf\u7a0b\u5e8f\u90fd\u4f7f\u7528\u76f8\u540c\u7684\u529f\u80fd\u3002\u8fd9\u79cd\u60c5\u51b5\u4e0b\u4e0d\u5e94\u8be5\u4e3a\u6bcf\u4e2a\u7a0b\u5e8f\u7684\u5171\u540c\u7279\u6027\u9759\u6001\u94fe\u63a5\u6240\u6709\u4ee3\u7801\uff0c\u800c\u662f\u5e94\u8be5\u5c06\u5b83\u653e\u5230\u52a8\u6001\u5e93\u4e2d\uff0c\u8fd9\u6837\u5b83\u4ec5\u4ec5\u4f1a\u4e3a\u6240\u6709\u7a0b\u5e8f\u52a0\u8f7d\u4e00\u4efd\u3002\n\u5728\u4e0a\u4e00\u4e2a\u7ec3\u4e60\u4e2d\uff0c\u6211\u8bb2\u89e3\u4e86\u5982\u4f55\u6784\u5efa\u9759\u6001\u5e93\uff08.a\uff09\uff0c\u6211\u4f1a\u5728\u672c\u4e66\u7684\u5269\u4f59\u90e8\u5206\u7528\u5230\u5b83\u3002\u8fd9\u4e2a\u7ec3\u4e60\u4e2d\u6211\u6253\u7b97\u5411\u4f60\u5c55\u793a\u5982\u4f55\u6784\u5efa\u4e00\u4e2a\u7b80\u5355\u7684.so\u5e93\uff0c\u5e76\u4e14\u5982\u4f55\u4f7f\u7528Unix\u7cfb\u7edf\u7684dlopen\u52a8\u6001\u52a0\u8f7d\u5b83\u3002\u6211\u4f1a\u624b\u52a8\u6267\u884c\u5b83\uff0c\u4ee5\u4fbf\u4f60\u53ef\u4ee5\u7406\u89e3\u6bcf\u4ef6\u5b9e\u9645\u53d1\u751f\u7684\u4e8b\u60c5\u3002\u4e4b\u540e\uff0c\u9644\u52a0\u9898\u8fd9\u90e8\u5206\u4f1a\u4f7f\u7528c\u9879\u76ee\u6846\u67b6\u6765\u521b\u5efa\u5b83\u3002\n\u52a8\u6001\u52a0\u8f7d\u52a8\u6001\u5e93\n\u6211\u521b\u5efa\u4e86\u4e24\u4e2a\u6e90\u6587\u4ef6\u6765\u5b8c\u6210\u5b83\u3002\u4e00\u4e2a\u7528\u4e8e\u6784\u5efalibex29.so\u5e93\uff0c\u53e6\u4e00\u4e2a\u662f\u4e2a\u53eb\u505aex29\u7684\u7a0b\u5e8f\uff0c\u5b83\u53ef\u4ee5\u52a0\u8f7d\u8fd9\u4e2a\u5e93\u5e76\u8fd0\u884c\u5176\u4e2d\u7684\u7a0b\u5e8f\uff1a\n#include &lt;stdio.h&gt;\n#include &lt;ctype.h&gt;\n#include \"dbg.h\"\n\n\nint print_a_message(const char *msg)\n{\n    printf(\"A STRING: %s\\n\", msg);\n\n    return 0;\n}\n\n\nint uppercase(const char *msg)\n{\n    int i = 0;\n\n    \/\/ BUG: \\0 termination problems\n    for(i = 0; msg[i] != '\\0'; i++) {\n        printf(\"%c\", toupper(msg[i]));\n    }\n\n    printf(\"\\n\");\n\n    return 0;\n}\n\nint lowercase(const char *msg)\n{\n    int i = 0;\n\n    \/\/ BUG: \\0 termination problems\n    for(i = 0; msg[i] != '\\0'; i++) {\n        printf(\"%c\", tolower(msg[i]));\n    }\n\n    printf(\"\\n\");\n\n    return 0;\n}\n\nint fail_on_purpose(const char *msg)\n{\n    return 1;\n}\n\u8fd9\u91cc\u9762\u6ca1\u4ec0\u4e48\u795e\u5947\u4e4b\u5904\u3002\u5176\u4e2d\u6545\u610f\u7559\u4e86\u4e00\u4e9bbug\uff0c\u770b\u4f60\u662f\u5426\u6ce8\u610f\u5230\u4e86\u3002\u4f60\u9700\u8981\u5728\u968f\u540e\u4fee\u590d\u5b83\u4eec\u3002\n\u6211\u4eec\u5c06\u8981\u4f7f\u7528dlopen\uff0cdlsym\uff0c\u548cdlclose\u51fd\u6570\u6765\u5904\u7406\u4e0a\u9762\u7684\u51fd\u6570\u3002\n#include &lt;stdio.h&gt;\n#include \"dbg.h\"\n#include &lt;dlfcn.h&gt;\n\ntypedef int (*lib_function)(const char *data);\n\n\nint main(int argc, char *argv[])\n{\n    int rc = 0;\n    check(argc == 4, \"USAGE: ex29 libex29.so function data\");\n\n    char *lib_file = argv[1];\n    char *func_to_run = argv[2];\n    char *data = argv[3];\n\n    void *lib = dlopen(lib_file, RTLD_NOW);\n    check(lib != NULL, \"Failed to open the library %s: %s\", lib_file, dlerror());\n\n    lib_function func = dlsym(lib, func_to_run);\n    check(func != NULL, \"Did not find %s function in the library %s: %s\", func_to_run, lib_file, dlerror());\n\n    rc = func(data);\n    check(rc == 0, \"Function %s return %d for data: %s\", func_to_run, rc, data);\n\n    rc = dlclose(lib);\n    check(rc == 0, \"Failed to close %s\", lib_file);\n\n    return 0;\n\nerror:\n    return 1;\n}\n\u6211\u73b0\u5728\u4f1a\u62c6\u5206\u8fd9\u4e2a\u7a0b\u5e8f\uff0c\u4fbf\u4e8e\u4f60\u7406\u89e3\u8fd9\u4e00\u5c0f\u6bb5\u4ee3\u7801\u5176\u4e2d\u7684\u539f\u7406\u3002\nex29.c:5\n\u6211\u968f\u540e\u4f1a\u4f7f\u7528\u8fd9\u4e2a\u51fd\u6570\u6307\u9488\u5b9a\u4e49\uff0c\u6765\u8c03\u7528\u5e93\u4e2d\u7684\u51fd\u6570\u3002\u8fd9\u6ca1\u4ec0\u4e48\u65b0\u4e1c\u897f\uff0c\u786e\u4fdd\u4f60\u7406\u89e3\u4e86\u5b83\u7684\u4f5c\u7528\u3002\nex29.c:17\n\u5728\u4e3a\u4e00\u4e2a\u5c0f\u578b\u7a0b\u5e8f\u505a\u5fc5\u8981\u7684\u521d\u59cb\u5316\u540e\uff0c\u6211\u4f7f\u7528\u4e86dlopen\u51fd\u6570\u6765\u52a0\u8f7d\u7531lib_file\u8868\u793a\u7684\u5e93\u3002\u8fd9\u4e2a\u51fd\u6570\u8fd4\u56de\u4e00\u4e2a\u53e5\u67c4\uff0c\u6211\u4eec\u968f\u540e\u4f1a\u7528\u5230\u5b83\uff0c\u5c31\u50cf\u6765\u6253\u5f00\u6587\u4ef6\u90a3\u6837\u3002\nex29.c:18\n\u5982\u679c\u51fa\u73b0\u9519\u8bef\uff0c\u6211\u6267\u884c\u4e86\u901a\u5e38\u7684\u68c0\u67e5\u5e76\u9000\u51fa\uff0c\u4f46\u662f\u8981\u6ce8\u610f\u6700\u540e\u6211\u4f7f\u7528\u4e86dlerror\u6765\u67e5\u660e\u53d1\u751f\u4e86\u4ec0\u4e48\u9519\u8bef\u3002\nex29.c:20\n\u6211\u4f7f\u7528\u4e86dlsym\u6765\u83b7\u53d6lib\u4e2d\u7684\u51fd\u6570\uff0c\u901a\u8fc7\u5b83\u7684\u5b57\u9762\u540d\u79f0func_to_run\u3002\u8fd9\u662f\u6700\u5f3a\u5927\u7684\u90e8\u5206\uff0c\u56e0\u4e3a\u6211\u52a8\u6001\u83b7\u53d6\u4e86\u4e00\u4e2a\u51fd\u6570\u6307\u9488\uff0c\u57fa\u4e8e\u6211\u4ece\u547d\u4ee4\u884cargv\u83b7\u5f97\u7684\u5b57\u7b26\u4e32\u3002\nex29.c:23\n\u63a5\u7740\u6211\u8c03\u7528func\u51fd\u6570\uff0c\u83b7\u5f97\u8fd4\u56de\u503c\u5e76\u8fdb\u884c\u68c0\u67e5\u3002\nex29.c:26\n\u6700\u540e\uff0c\u6211\u50cf\u5173\u95ed\u6587\u4ef6\u90a3\u6837\u5173\u95ed\u4e86\u5e93\u3002\u901a\u5e38\u4f60\u9700\u8981\u5728\u7a0b\u5e8f\u7684\u6574\u4e2a\u8fd0\u884c\u671f\u95f4\u4fdd\u8bc1\u5b83\u4eec\u6253\u5f00\uff0c\u6240\u4ee5\u5173\u95ed\u64cd\u4f5c\u5e76\u4e0d\u975e\u5e38\u5b9e\u7528\uff0c\u6211\u53ea\u662f\u5728\u8fd9\u91cc\u6f14\u793a\u5b83\u3002\n\n\u8bd1\u8005\u6ce8\uff1a\u7531\u4e8e\u80fd\u591f\u4f7f\u7528\u7cfb\u7edf\u8c03\u7528\u52a0\u8f7d\uff0c\u52a8\u6001\u5e93\u53ef\u4ee5\u88ab\u591a\u79cd\u8bed\u8a00\u7684\u7a0b\u5e8f\u8c03\u7528\uff0c\u800c\u9759\u6001\u5e93\u53ea\u80fd\u88abC\u53ca\u517c\u5bb9C\u7684\u7a0b\u5e8f\u8c03\u7528\u3002\n\n\u4f60\u4f1a\u770b\u5230\u4ec0\u4e48\n\u65e2\u7136\u4f60\u5df2\u7ecf\u77e5\u9053\u8fd9\u4e9b\u6587\u4ef6\u505a\u4ec0\u4e48\u4e86\uff0c\u4e0b\u9762\u662f\u6211\u7684shell\u4f1a\u8bdd\uff0c\u7528\u4e8e\u6784\u5efalibex29.so\u548cex29\u5e76\u968f\u540e\u8fd0\u884c\u5b83\u3002\u4e0b\u9762\u7684\u4ee3\u7801\u4e2d\u4f60\u53ef\u4ee5\u5b66\u5230\u5982\u4f55\u624b\u52a8\u6784\u5efa\uff1a\n# compile the lib file and make the .so\n# you may need -fPIC here on some platforms. add that if you get an error\n$ cc -c libex29.c -o libex29.o\n$ cc -shared -o libex29.so libex29.o\n\n# make the loader program\n$ cc -Wall -g -DNDEBUG ex29.c -ldl -o ex29\n\n# try it out with some things that work\n$ ex29 .\/libex29.so print_a_message \"hello there\"\n-bash: ex29: command not found\n$ .\/ex29 .\/libex29.so print_a_message \"hello there\"\nA STRING: hello there\n$ .\/ex29 .\/libex29.so uppercase \"hello there\"\nHELLO THERE\n$ .\/ex29 .\/libex29.so lowercase \"HELLO tHeRe\"\nhello there\n$ .\/ex29 .\/libex29.so fail_on_purpose \"i fail\"\n[ERROR] (ex29.c:23: errno: None) Function fail_on_purpose return 1 for data: i fail\n\n# try to give it bad args\n$ .\/ex29 .\/libex29.so fail_on_purpose\n[ERROR] (ex29.c:11: errno: None) USAGE: ex29 libex29.so function data\n\n# try calling a function that is not there\n$ .\/ex29 .\/libex29.so adfasfasdf asdfadff\n[ERROR] (ex29.c:20: errno: None) Did not find adfasfasdf\n  function in the library libex29.so: dlsym(0x1076009b0, adfasfasdf): symbol not found\n\n# try loading a .so that is not there\n$ .\/ex29 .\/libex.so adfasfasdf asdfadfas\n[ERROR] (ex29.c:17: errno: No such file or directory) Failed to open\n    the library libex.so: dlopen(libex.so, 2): image not found\n$\n\u9700\u8981\u6ce8\u610f\uff0c\u4f60\u53ef\u80fd\u9700\u8981\u5728\u4e0d\u540cOS\u3001\u4e0d\u540cOS\u7684\u4e0d\u540c\u7248\u672c\uff0c\u4ee5\u53ca\u4e0d\u540cOS\u7684\u4e0d\u540c\u7248\u672c\u7684\u4e0d\u540c\u7f16\u8bd1\u5668\u4e0a\u6267\u884c\u6784\u5efa\uff0c\u5219\u9700\u8981\u4fee\u6539\u6784\u5efa\u5171\u4eab\u5e93\u7684\u65b9\u5f0f\u3002\u5982\u679c\u6211\u6784\u5efalibex29.so\u7684\u65b9\u5f0f\u5728\u4f60\u7684\u5e73\u53f0\u4e0a\u4e0d\u8d77\u4f5c\u7528\uff0c\u8bf7\u544a\u8bc9\u6211\uff0c\u6211\u4f1a\u4e3a\u5176\u5b83\u5e73\u53f0\u6dfb\u52a0\u4e00\u4e9b\u6ce8\u89e3\u3002\n\n\u8bd1\u8005\u6ce8\uff1a\u5230\u5904\u7f16\u5199\u3001\u5230\u5904\u8c03\u8bd5\u3001\u5230\u5904\u7f16\u8bd1\u3001\u5230\u5904\u53d1\u5e03\u3002--vczh\n\n&zwj;\n\n\u6ce8\n\n\n\u6709\u65f6\u5019\u4f60\u50cf\u5f80\u5e38\u4e00\u6837\u8fd0\u884ccc -Wall -g -DNDEBUG -ldl ex29.c -o ex29\uff0c\u5e76\u4e14\u8ba4\u4e3a\u5b83\u80fd\u591f\u6b63\u5e38\u5de5\u4f5c\uff0c\u4f46\u662f\u6ca1\u6709\u3002\u5728\u4e00\u4e9b\u5e73\u53f0\u4e0a\uff0c\u53c2\u6570\u7684\u987a\u5e8f\u4f1a\u5f71\u54cd\u5230\u5b83\u662f\u5426\u751f\u6548\uff0c\u8fd9\u4e5f\u6ca1\u4ec0\u4e48\u7406\u7531\u3002\u5728Debian\u6216\u8005Ubuntu\u4e2d\u4f60\u9700\u8981\u6267\u884ccc -Wall -g -DNDEBUG ex29.c -ldl -o ex29\uff0c\u8fd9\u662f\u552f\u4e00\u7684\u65b9\u5f0f\u3002\u6240\u4ee5\u867d\u7136\u6211\u5728\u8fd9\u91cc\u4f7f\u7528\u4e86OSX\uff0c\u4f46\u662f\u4ee5\u540e\u5982\u679c\u4f60\u94fe\u63a5\u52a8\u6001\u5e93\u7684\u65f6\u5019\u5b83\u627e\u4e0d\u5230\u67d0\u4e2a\u51fd\u6570\uff0c\u8981\u8bd5\u7740\u81ea\u5df1\u89e3\u51b3\u95ee\u9898\u3002\n\n\n\u8fd9\u91cc\u9762\u6bd4\u8f83\u9ebb\u70e6\u7684\u4e8b\u60c5\u662f\uff0c\u5b9e\u9645\u5e73\u53f0\u7684\u4e0d\u540c\u4f1a\u5f71\u54cd\u5230\u547d\u4ee4\u53c2\u6570\u7684\u987a\u5e8f\u3002\u5c06-ldl\u653e\u5230\u67d0\u4e2a\u4f4d\u7f6e\u6ca1\u6709\u7406\u7531\u4e0e\u5176\u5b83\u4f4d\u7f6e\u4e0d\u540c\u3002\u5b83\u53ea\u662f\u4e00\u4e2a\u9009\u9879\uff0c\u8fd8\u9700\u8981\u4e86\u89e3\u8fd9\u4e9b\u7b80\u76f4\u662f\u592a\u6c14\u4eba\u4e86\u3002\n\n\u5982\u4f55\u4f7f\u5b83\u5d29\u6e83\n\u6253\u5f00lbex29.so\uff0c\u5e76\u4e14\u4f7f\u7528\u80fd\u591f\u5904\u7406\u4e8c\u8fdb\u5236\u7684\u7f16\u8f91\u5668\u7f16\u8f91\u5b83\u3002\u4fee\u6539\u4e00\u4e9b\u5b57\u8282\uff0c\u7136\u540e\u5173\u95ed\u3002\u770b\u770b\u4f60\u662f\u5426\u80fd\u4f7f\u7528dlopen\u51fd\u6570\u6765\u6253\u5f00\u5b83\uff0c\u5373\u4f7f\u4f60\u4fee\u6539\u4e86\u5b83\u3002\n\u9644\u52a0\u9898\n\n\u4f60\u6ce8\u610f\u5230\u6211\u5728libex29.c\u4e2d\u5199\u7684\u4e0d\u826f\u4ee3\u7801\u4e86\u5417\uff1f\u6211\u4f7f\u7528\u4e86\u4e00\u4e2afor\u5faa\u73af\u6765\u68c0\u67e5'\\0'\u7684\u7ed3\u5c3e\uff0c\u4fee\u6539\u5b83\u4eec\u4f7f\u8fd9\u4e9b\u51fd\u6570\u603b\u662f\u63a5\u6536\u5b57\u7b26\u4e32\u957f\u5ea6\uff0c\u5e76\u5728\u51fd\u6570\u5185\u90e8\u4f7f\u7528\u3002\n\u4f7f\u7528\u9879\u76ee\u6846\u67b6\u76ee\u5f55\uff0c\u6765\u4e3a\u8fd9\u4e2a\u7ec3\u4e60\u521b\u5efa\u65b0\u7684\u9879\u76ee\u3002\u5c06libex29.c\u653e\u5165src\/\u76ee\u5f55\uff0c\u4fee\u6539Makefile\u4f7f\u5b83\u80fd\u591f\u6784\u5efabuild\/libex29.so\u3002\n\u5c06ex29.c\u6539\u4e3atests\/ex29_tests.c\uff0c\u4f7f\u5b83\u505a\u4e3a\u5355\u5143\u6d4b\u8bd5\u6267\u884c\u3002\u4f7f\u5b83\u80fd\u591f\u6b63\u5e38\u5de5\u4f5c\uff0c\u610f\u601d\u662f\u4f60\u9700\u8981\u4fee\u6539\u5b83\u8ba9\u5b83\u52a0\u8f7dbuild\/libex29.so\u6587\u4ef6\uff0c\u5e76\u4e14\u8fd0\u884c\u4e0a\u9762\u6211\u624b\u5199\u7684\u6d4b\u8bd5\u3002\n\u9605\u8bfbman dlopen\u6587\u6863\uff0c\u5e76\u4e14\u67e5\u8be2\u6240\u6709\u6709\u5173\u51fd\u6570\u3002\u5c1d\u8bd5dlopen\u7684\u5176\u5b83\u9009\u9879\uff0c\u6bd4\u5982RTLD_NOW\u3002\n","categories":"\u7ec3\u4e605","tags":["\u7f16\u7a0b","\u52a8\u6001\u5e93"]},{"title":"\u81ea\u52a8\u5316\u6d4b\u8bd5","url":"https:\/\/naka507.github.io\/posts\/866A23BE27D0D7E6.html","content":"\u81ea\u52a8\u5316\u6d4b\u8bd5\n\u81ea\u52a8\u5316\u6d4b\u8bd5\u7ecf\u5e38\u7528\u4e8e\u4f8b\u5982Python\u548cRuby\u7684\u5176\u5b83\u8bed\u8a00\uff0c\u4f46\u662f\u5f88\u5c11\u7528\u4e8eC\u3002\u4e00\u90e8\u5206\u539f\u56e0\u662f\u81ea\u52a8\u5316\u52a0\u8f7d\u548c\u6d4b\u8bd5C\u7684\u4ee3\u7801\u7247\u6bb5\u5177\u6709\u8f83\u9ad8\u7684\u96be\u5ea6\u3002\u8fd9\u4e00\u7ae0\u4e2d\uff0c\u6211\u4eec\u4f1a\u521b\u5efa\u4e00\u4e2a\u975e\u5e38\u5c0f\u578b\u7684\u6d4b\u8bd5\u201c\u6846\u67b6\u201d\uff0c\u5e76\u4e14\u4f7f\u7528\u4f60\u7684\u6846\u67b6\u76ee\u5f55\u6784\u5efa\u6d4b\u8bd5\u7528\u4f8b\u7684\u793a\u4f8b\u3002\n\u6211\u63a5\u4e0b\u6765\u6253\u7b97\u4f7f\u7528\uff0c\u5e76\u4e14\u4f60\u4f1a\u5305\u542b\u8fdb\u6846\u67b6\u76ee\u5f55\u7684\u6846\u67b6\uff0c\u53eb\u505a\u201cminunit\u201d\uff0c\u5b83\u4ee5Jera Design\u6240\u7f16\u5199\u7684\u4e00\u5c0f\u6bb5\u4ee3\u7801\u4f5c\u4e3a\u5f00\u59cb\uff0c\u4e4b\u540e\u6211\u6269\u5c55\u4e86\u5b83\uff0c\u5c31\u50cf\u8fd9\u6837\uff1a\n#undef NDEBUG\n#ifndef _minunit_h\n#define _minunit_h\n\n#include &lt;stdio.h&gt;\n#include &lt;dbg.h&gt;\n#include &lt;stdlib.h&gt;\n\n#define mu_suite_start() char *message = NULL\n\n#define mu_assert(test, message) if (!(test)) { log_err(message); return message; }\n#define mu_run_test(test) debug(\"\\n-----%s\", \" \" #test); \\\n    message = test(); tests_run++; if (message) return message;\n\n#define RUN_TESTS(name) int main(int argc, char *argv[]) {\\\n    argc = 1; \\\n    debug(\"----- RUNNING: %s\", argv[0]);\\\n        printf(\"----\\nRUNNING: %s\\n\", argv[0]);\\\n        char *result = name();\\\n        if (result != 0) {\\\n            printf(\"FAILED: %s\\n\", result);\\\n        }\\\n        else {\\\n            printf(\"ALL TESTS PASSED\\n\");\\\n        }\\\n    printf(\"Tests run: %d\\n\", tests_run);\\\n        exit(result != 0);\\\n}\n\n\nint tests_run;\n\n#endif\n\u539f\u59cb\u7684\u5185\u5bb9\u6240\u5269\u4e0d\u591a\u4e86\uff0c\u73b0\u5728\u6211\u4f7f\u7528dbg.h\u5b8f\uff0c\u5e76\u4e14\u5728\u6a21\u677f\u6d4b\u8bd5\u8fd0\u884c\u5668\u7684\u672b\u5c3e\u521b\u5efa\u4e86\u5927\u91cf\u7684\u5b8f\u3002\u5728\u8fd9\u5c0f\u6bb5\u4ee3\u7801\u4e2d\u6211\u4eec\u521b\u5efa\u4e86\u6574\u5957\u51fd\u6570\u5355\u5143\u6d4b\u8bd5\u7cfb\u7edf\uff0c\u4e00\u65e6\u5b83\u7ed3\u5408\u4e0ashell\u811a\u672c\u6765\u8fd0\u884c\u6d4b\u8bd5\uff0c\u4f60\u53ef\u4ee5\u5c06\u5176\u7528\u4e8e\u4f60\u7684C\u4ee3\u7801\u3002\n\u5b8c\u6210\u6d4b\u8bd5\u6846\u67b6\n\u4e3a\u4e86\u57fa\u7840\u8fd9\u4e2a\u7ec3\u4e60\uff0c\u4f60\u5e94\u8be5\u8ba9\u4f60\u7684src\/libex29.c\u6b63\u5e38\u5de5\u4f5c\uff0c\u5e76\u4e14\u5b8c\u6210\u7ec3\u4e6029\u7684\u9644\u52a0\u9898\uff0c\u662fex29.c\u52a0\u8f7d\u7a0b\u5e8f\u5e76\u5408\u7406\u8fd0\u884c\u3002\u7ec3\u4e6029\u4e2d\u6211\u8fd9\u4e8b\u4e86\u4e00\u4e2a\u9644\u52a0\u9898\u6765\u4f7f\u5b83\u50cf\u5355\u5143\u6d4b\u8bd5\u4e00\u6837\u5de5\u4f5c\uff0c\u4f46\u662f\u73b0\u5728\u6211\u6253\u7b97\u91cd\u65b0\u60f3\u4f60\u5c55\u793a\u5982\u4f55\u4f7f\u7528minunit.h\u6765\u505a\u8fd9\u4ef6\u4e8b\u3002\n\u9996\u5148\u6211\u4eec\u9700\u8981\u521b\u5efa\u4e00\u4e2a\u7b80\u5355\u7684\u7a7a\u5355\u5143\u6d4b\u8bd5\uff0c\u547d\u540d\u4e3atests\/libex29_tests.c\uff0c\u5728\u91cc\u9762\u8f93\u5165\uff1a\n#include \"minunit.h\"\n\nchar *test_dlopen()\n{\n\n    return NULL;\n}\n\nchar *test_functions()\n{\n\n    return NULL;\n}\n\nchar *test_failures()\n{\n\n    return NULL;\n}\n\nchar *test_dlclose()\n{\n\n    return NULL;\n}\n\nchar *all_tests() {\n    mu_suite_start();\n\n    mu_run_test(test_dlopen);\n    mu_run_test(test_functions);\n    mu_run_test(test_failures);\n    mu_run_test(test_dlclose);\n\n    return NULL;\n}\n\nRUN_TESTS(all_tests);\n\u8fd9\u4efd\u4ee3\u7801\u5c55\u793a\u4e86tests\/minunit.h\u4e2d\u7684RUN_TESTS\u5b8f\uff0c\u4ee5\u53ca\u5982\u4f55\u4f7f\u7528\u5176\u4ed6\u7684\u6d4b\u8bd5\u8fd0\u884c\u5668\u5b8f\u3002\u6211\u6ca1\u6709\u7f16\u5199\u5b9e\u9645\u7684\u6d4b\u8bd5\u51fd\u6570\uff0c\u6240\u4ee5\u4f60\u53ea\u80fd\u770b\u5230\u5355\u5143\u6d4b\u8bd5\u7684\u7ed3\u6784\u3002\u6211\u9996\u5148\u4f1a\u5206\u89e3\u8fd9\u4e2a\u6587\u4ef6\uff1a\nlibex29_tests.c:1\n\u5305\u542bminunit.h\u6846\u67b6\u3002\nlibex29_tests.c:3-7\n\u7b2c\u4e00\u4e2a\u6d4b\u8bd5\u3002\u6d4b\u8bd5\u51fd\u6570\u5177\u6709\u56fa\u5b9a\u7684\u7ed3\u6784\uff0c\u5b83\u4eec\u4e0d\u5e26\u4efb\u4f55\u53c2\u6570\u5e76\u4e14\u8fd4\u56dechar *\uff0c\u6210\u529f\u65f6\u4e3aNULL\u3002\u8fd9\u975e\u5e38\u91cd\u8981\uff0c\u56e0\u4e3a\u5176\u4ed6\u5b8f\u7528\u4e8e\u5411\u6d4b\u8bd5\u8fd0\u884c\u5668\u8fd4\u56de\u9519\u8bef\u4fe1\u606f\u3002\nlibex29_tests.c:9-25\n\u4e0e\u7b2c\u4e00\u4e2a\u6d4b\u8bd5\u76f8\u4f3c\u7684\u66f4\u591a\u6d4b\u8bd5\u3002\nlibex29_tests.c:27\n\u63a7\u5236\u5176\u4ed6\u6d4b\u8bd5\u7684\u8fd0\u884c\u5668\u51fd\u6570\u3002\u5b83\u548c\u5176\u5b83\u6d4b\u8bd5\u7528\u4f8b\u683c\u5f0f\u4e00\u81f4\uff0c\u4f46\u662f\u4f7f\u7528\u989d\u5916\u7684\u4e1c\u897f\u6765\u914d\u7f6e\u3002\nlibex29_tests.c:28\n\u4e3amu_suite_start\u6d4b\u8bd5\u8bbe\u7f6e\u4e00\u4e9b\u901a\u7528\u7684\u4e1c\u897f\u3002\nlibex29_tests.c:30\n\u8fd9\u5c31\u662f\u4f7f\u7528mu_run_test\u8fd4\u56de\u7ed3\u679c\u7684\u5730\u65b9\u3002\nlibex29_tests.c:35\n\u5728\u4f60\u8fd0\u884c\u6240\u6709\u6d4b\u8bd5\u4e4b\u540e\uff0c\u4f60\u5e94\u8be5\u8fd4\u56deNULL\uff0c\u5c31\u50cf\u666e\u901a\u7684\u6d4b\u8bd5\u51fd\u6570\u4e00\u6837\u3002\nlibex29_tests.c:38\n\u6700\u540e\u9700\u8981\u4f7f\u7528RUN_TESTS\u5b8f\u6765\u542f\u52a8main\u51fd\u6570\uff0c\u8ba9\u5b83\u8fd0\u884call_tests\u542f\u52a8\u5668\u3002\n\u8fd9\u5c31\u662f\u7528\u4e8e\u8fd0\u884c\u6d4b\u8bd5\u6240\u6709\u4ee3\u7801\u4e86\uff0c\u73b0\u5728\u4f60\u9700\u8981\u5c1d\u8bd5\u4f7f\u5b83\u8fd0\u884c\u5728\u9879\u76ee\u6846\u67b6\u4e2d\u3002\u4e0b\u9762\u662f\u6211\u7684\u6267\u884c\u7ed3\u679c\uff1a\nnot printable\n\u6211\u9996\u5148\u6267\u884cmake clean\uff0c\u4e4b\u540e\u6211\u8fd0\u884c\u4e86\u6784\u5efa\uff0c\u5b83\u5c06\u6a21\u677f\u6539\u9020\u4e3alibYOUR_LIBRARY.a\u548clibYOUR_LIBRARY.so\u6587\u4ef6\u3002\u8981\u8bb0\u4f4f\u4f60\u9700\u8981\u5728\u7ec3\u4e6029\u7684\u9644\u52a0\u9898\u4e2d\u5b8c\u6210\u5b83\u3002\u4f46\u5982\u679c\u4f60\u6ca1\u6709\u5b8c\u6210\u7684\u8bdd\uff0c\u4e0b\u9762\u662f\u6211\u6240\u4f7f\u7528\u7684Makefile\u7684\u6587\u4ef6\u5dee\u5f02\uff1a\ndiff --git a\/code\/c-skeleton\/Makefile b\/code\/c-skeleton\/Makefile\nindex 135d538..21b92bf 100644\n--- a\/code\/c-skeleton\/Makefile\n+++ b\/code\/c-skeleton\/Makefile\n@@ -9,9 +9,10 @@ TEST_SRC=$(wildcard tests\/*_tests.c)\n TESTS=$(patsubst %.c,%,$(TEST_SRC))\n\n TARGET=build\/libYOUR_LIBRARY.a\n+SO_TARGET=$(patsubst %.a,%.so,$(TARGET))\n\n # The Target Build\n-all: $(TARGET) tests\n+all: $(TARGET) $(SO_TARGET) tests\n\n dev: CFLAGS=-g -Wall -Isrc -Wall -Wextra $(OPTFLAGS)\n dev: all\n@@ -21,6 +22,9 @@ $(TARGET): build $(OBJECTS)\n         ar rcs $@ $(OBJECTS)\n         ranlib $@\n\n+$(SO_TARGET): $(TARGET) $(OBJECTS)\n+       $(CC) -shared -o $@ $(OBJECTS)\n+\n build:\n         @mkdir -p build\n         @mkdir -p bin\n\u5b8c\u6210\u8fd9\u4e9b\u6539\u53d8\u540e\uff0c\u4f60\u73b0\u5728\u5e94\u8be5\u80fd\u591f\u6784\u5efa\u4efb\u4f55\u4e1c\u897f\uff0c\u5e76\u4e14\u4f60\u53ef\u4ee5\u6700\u540e\u8865\u5b8c\u5269\u4f59\u7684\u5355\u5143\u6d4b\u8bd5\u51fd\u6570\uff1a\n#include \"minunit.h\"\n#include &lt;dlfcn.h&gt;\n\ntypedef int (*lib_function)(const char *data);\nchar *lib_file = \"build\/libYOUR_LIBRARY.so\";\nvoid *lib = NULL;\n\nint check_function(const char *func_to_run, const char *data, int expected)\n{\n    lib_function func = dlsym(lib, func_to_run);\n    check(func != NULL, \"Did not find %s function in the library %s: %s\", func_to_run, lib_file, dlerror());\n\n    int rc = func(data);\n    check(rc == expected, \"Function %s return %d for data: %s\", func_to_run, rc, data);\n\n    return 1;\nerror:\n    return 0;\n}\n\nchar *test_dlopen()\n{\n    lib = dlopen(lib_file, RTLD_NOW);\n    mu_assert(lib != NULL, \"Failed to open the library to test.\");\n\n    return NULL;\n}\n\nchar *test_functions()\n{\n    mu_assert(check_function(\"print_a_message\", \"Hello\", 0), \"print_a_message failed.\");\n    mu_assert(check_function(\"uppercase\", \"Hello\", 0), \"uppercase failed.\");\n    mu_assert(check_function(\"lowercase\", \"Hello\", 0), \"lowercase failed.\");\n\n    return NULL;\n}\n\nchar *test_failures()\n{\n    mu_assert(check_function(\"fail_on_purpose\", \"Hello\", 1), \"fail_on_purpose should fail.\");\n\n    return NULL;\n}\n\nchar *test_dlclose()\n{\n    int rc = dlclose(lib);\n    mu_assert(rc == 0, \"Failed to close lib.\");\n\n    return NULL;\n}\n\nchar *all_tests() {\n    mu_suite_start();\n\n    mu_run_test(test_dlopen);\n    mu_run_test(test_functions);\n    mu_run_test(test_failures);\n    mu_run_test(test_dlclose);\n\n    return NULL;\n}\n\nRUN_TESTS(all_tests);\n\u6211\u5e0c\u671b\u4f60\u53ef\u4ee5\u5f04\u6e05\u695a\u5b83\u90fd\u5e72\u4e86\u4ec0\u4e48\uff0c\u56e0\u4e3a\u8fd9\u91cc\u6ca1\u6709\u4ec0\u4e48\u65b0\u7684\u4e1c\u897f\uff0c\u9664\u4e86check_function\u51fd\u6570\u3002\u8fd9\u662f\u4e00\u4e2a\u901a\u7528\u7684\u6a21\u5f0f\uff0c\u5176\u4e2d\u6211\u9700\u8981\u91cd\u590d\u6267\u884c\u4e00\u6bb5\u4ee3\u7801\uff0c\u7136\u540e\u901a\u8fc7\u4e3a\u4e4b\u521b\u5efa\u5b8f\u6216\u51fd\u6570\u6765\u4f7f\u5b83\u81ea\u52a8\u5316\u3002\u8fd9\u91cc\u6211\u6253\u7b97\u8fd0\u884c.so\u4e2d\u6240\u52a0\u8f7d\u7684\u51fd\u6570\uff0c\u6240\u4ee5\u6211\u521b\u5efa\u4e86\u4e00\u4e2a\u5c0f\u578b\u51fd\u6570\u6765\u5b8c\u6210\u5b83\u3002\n\u9644\u52a0\u9898\n\n\u8fd9\u6bb5\u4ee3\u7801\u80fd\u8d77\u4f5c\u7528\uff0c\u4f46\u662f\u53ef\u80fd\u6709\u70b9\u4e71\u3002\u6e05\u7406\u6846\u67b6\u76ee\u5f55\uff0c\u662f\u5b83\u5305\u542b\u6240\u6709\u8fd9\u4e9b\u6587\u4ef6\uff0c\u4f46\u662f\u79fb\u9664\u4efb\u4f55\u548c\u7ec3\u4e6029\u6709\u5173\u7684\u4ee3\u7801\u3002\u4f60\u5e94\u8be5\u80fd\u591f\u590d\u5236\u8fd9\u4e2a\u76ee\u5f55\u5e76\u4e14\u65e0\u9700\u5f88\u591a\u7f16\u8f91\u64cd\u4f5c\u5c31\u80fd\u5f00\u59cb\u65b0\u7684\u9879\u76ee\u3002\n\u7814\u7a76runtests.sh\uff0c\u5e76\u4e14\u67e5\u8be2\u6709\u5173bash\u8bed\u6cd5\u7684\u8d44\u6599\uff0c\u6765\u5f04\u61c2\u5b83\u7684\u4f5c\u7528\u3002\u4f60\u80fd\u591f\u7f16\u5199\u8fd9\u4e2a\u811a\u672c\u7684C\u7248\u672c\u5417\uff1f\n","categories":"\u7ec3\u4e606","tags":["Ruby","Python","\u6846\u67b6"]},{"title":"\u4ee3\u7801\u8c03\u8bd5","url":"https:\/\/naka507.github.io\/posts\/B6E48A0ED7072528.html","content":"\u4ee3\u7801\u8c03\u8bd5\n\u6211\u5df2\u7ecf\u6559\u7ed9\u4f60\u4e00\u4e9b\u5173\u4e8e\u6211\u7684\u5f3a\u5927\u7684\u8c03\u8bd5\u5b8f\u7684\u6280\u5de7\uff0c\u5e76\u4e14\u4f60\u5df2\u7ecf\u5f00\u59cb\u7528\u5b83\u4eec\u4e86\u3002\u5f53\u6211\u8c03\u8bd5\u4ee3\u7801\u65f6\uff0c\u6211\u4f7f\u7528debug()\u5b8f\uff0c\u5206\u6790\u53d1\u751f\u4e86\u4ec0\u4e48\u4ee5\u53ca\u8ddf\u8e2a\u95ee\u9898\u3002\u5728\u8fd9\u4e2a\u7ec3\u4e60\u4e2d\u6211\u6253\u7b97\u6559\u7ed9\u4f60\u4e00\u4e9b\u4f7f\u7528gdb\u7684\u6280\u5de7\uff0c\u7528\u4e8e\u76d1\u89c6\u4e00\u4e2a\u4e0d\u4f1a\u9000\u51fa\u7684\u7b80\u5355\u7a0b\u5e8f\u3002\u4f60\u4f1a\u5b66\u5230\u5982\u4f55\u4f7f\u7528gdb\u9644\u52a0\u5230\u8fd0\u884c\u4e2d\u7684\u8fdb\u7a0b\uff0c\u5e76\u6302\u8d77\u5b83\u6765\u89c2\u5bdf\u53d1\u751f\u4e86\u4ec0\u4e48\u3002\u5728\u6b64\u4e4b\u540e\u6211\u4f1a\u7ed9\u4f60\u4e00\u4e9b\u7528\u4e8egdb\u7684\u5c0f\u63d0\u793a\u548c\u5c0f\u6280\u5de7\u3002\n\u8c03\u8bd5\u8f93\u51fa\u3001GDB\u6216Valgrind\n\u6211\u4e3b\u8981\u6309\u7167\u4e00\u79cd\u201c\u79d1\u5b66\u65b9\u6cd5\u201d\u7684\u65b9\u5f0f\u6765\u8c03\u8bd5\uff0c\u6211\u4f1a\u63d0\u51fa\u53ef\u80fd\u7684\u6240\u6709\u539f\u56e0\uff0c\u4e4b\u540e\u6392\u9664\u5b83\u4eec\u6216\u8bc1\u660e\u5b83\u4eec\u5bfc\u81f4\u4e86\u7f3a\u9677\u3002\u8bb8\u591a\u7a0b\u5e8f\u5458\u62e5\u6709\u7684\u95ee\u9898\u662f\u5b83\u4eec\u5bf9\u89e3\u51b3bug\u7684\u6050\u614c\u548c\u6025\u8e81\u4f7f\u4ed6\u4eec\u89c9\u5f97\u8fd9\u79cd\u65b9\u6cd5\u4f1a\u201c\u62d6\u6162\u201d\u4ed6\u4eec\u3002\u5b83\u4eec\u5e76\u6ca1\u6709\u6ce8\u610f\u5230\uff0c\u5b83\u4eec\u5df2\u7ecf\u5931\u8d25\u4e86\uff0c\u5e76\u4e14\u5728\u6536\u96c6\u65e0\u7528\u7684\u4fe1\u606f\u3002\u6211\u53d1\u73b0\u65e5\u5fd7\uff08\u8c03\u8bd5\u8f93\u51fa\uff09\u4f1a\u5f3a\u8feb\u6211\u79d1\u5b66\u5730\u89e3\u51b3bug\uff0c\u5e76\u4e14\u5728\u66f4\u591a\u60c5\u51b5\u4e0b\u6613\u4e8e\u6536\u96c6\u4fe1\u606f\u3002\n\u6b64\u5916\uff0c\u4f7f\u7528\u8c03\u8bd5\u8f93\u51fa\u6765\u4f5c\u4e3a\u6211\u7684\u9996\u8981\u8c03\u8bd5\u5de5\u5177\u7684\u7406\u7531\u5982\u4e0b\uff1a\n\n\u4f60\u53ef\u4ee5\u4f7f\u7528\u53d8\u91cf\u7684\u8c03\u8bd5\u8f93\u51fa\uff0c\u6765\u770b\u5230\u7a0b\u5e8f\u6267\u884c\u7684\u6574\u4e2a\u8f68\u8ff9\uff0c\u5b83\u8ba9\u4f60\u8ddf\u8e2a\u53d8\u91cf\u662f\u5982\u4f55\u4ea7\u751f\u9519\u8bef\u7684\u3002\u4f7f\u7528gdb\u7684\u8bdd\uff0c\u4f60\u5fc5\u987b\u4e3a\u6bcf\u4e2a\u53d8\u91cf\u653e\u7f6e\u67e5\u770b\u548c\u8c03\u8bd5\u8bed\u53e5\uff0c\u5e76\u4e14\u96be\u4ee5\u83b7\u5f97\u6267\u884c\u7684\u5b9e\u9645\u8f68\u8ff9\u3002\n\u8c03\u8bd5\u8f93\u51fa\u5b58\u5728\u4e8e\u4ee3\u7801\u4e2d\uff0c\u5f53\u4f60\u9700\u8981\u5b83\u4eec\u662f\u4f60\u53ef\u4ee5\u91cd\u65b0\u7f16\u8bd1\u4f7f\u5b83\u4eec\u56de\u6765\u3002\u4f7f\u7528gdb\u7684\u8bdd\uff0c\u4f60\u6bcf\u6b21\u8c03\u8bd5\u90fd\u9700\u8981\u91cd\u65b0\u914d\u7f6e\u76f8\u540c\u7684\u4fe1\u606f\u3002\n\u5f53\u670d\u52a1\u5668\u5de5\u4f5c\u4e0d\u6b63\u5e38\u65f6\uff0c\u5b83\u7684\u8c03\u8bd5\u65e5\u5fd7\u529f\u80fd\u6613\u4e8e\u6253\u5f00\uff0c\u5e76\u4e14\u5728\u5b83\u8fd0\u884c\u4e2d\u53ef\u4ee5\u76d1\u89c6\u65e5\u5fd7\u6765\u67e5\u770b\u54ea\u91cc\u4e0d\u5bf9\u3002\u7cfb\u7edf\u7ba1\u7406\u5458\u77e5\u9053\u5982\u4f55\u5904\u7406\u65e5\u5fd7\uff0c\u4ed6\u4eec\u4e0d\u77e5\u9053\u5982\u4f55\u4f7f\u7528gdb\u3002\n\u6253\u5370\u4fe1\u606f\u66f4\u52a0\u5bb9\u6613\u3002\u8c03\u8bd5\u5668\u901a\u5e38\u7531\u4e8e\u5b83\u5947\u7279\u7684UI\u548c\u524d\u540e\u77db\u76fe\u663e\u5f97\u96be\u7528\u4e14\u53e4\u602a\u3002debug(\"Yo, dis right? %d\", my_stuff);\u5c31\u6ca1\u6709\u90a3\u4e48\u9ebb\u70e6\u3002\n\u7f16\u5199\u8c03\u8bd5\u8f93\u51fa\u6765\u53d1\u73b0\u7f3a\u9677\uff0c\u5f3a\u8feb\u4f60\u5b9e\u9645\u5206\u6790\u4ee3\u7801\uff0c\u5e76\u4e14\u4f7f\u7528\u79d1\u5b66\u65b9\u6cd5\u3002\u4f60\u53ef\u4ee5\u8ba4\u4e3a\u5b83\u662f\uff0c\u201c\u6211\u5047\u8bbe\u8fd9\u91cc\u7684\u4ee3\u7801\u662f\u9519\u8bef\u7684\u201d\uff0c\u4f60\u53ef\u4ee5\u8fd0\u884c\u5b83\u6765\u9a8c\u8bc1\u4f60\u7684\u5047\u8bbe\uff0c\u5982\u679c\u8fd9\u91cc\u6ca1\u6709\u9519\u8bef\u90a3\u4e48\u4f60\u53ef\u4ee5\u79fb\u52a8\u5230\u5176\u5b83\u5730\u65b9\u3002\u8fd9\u770b\u8d77\u6765\u9700\u8981\u66f4\u957f\u65f6\u95f4\uff0c\u4f46\u662f\u5b9e\u9645\u4e0a\u66f4\u5feb\uff0c\u56e0\u4e3a\u4f60\u7ecf\u5386\u4e86\u201c\u9274\u522b\u8bca\u65ad\u201d\u7684\u8fc7\u7a0b\uff0c\u5e76\u6392\u9664\u6240\u6709\u53ef\u80fd\u7684\u539f\u56e0\uff0c\u76f4\u5230\u4f60\u627e\u5230\u5b83\u3002\n\u8c03\u8bd5\u8f93\u5165\u66f4\u9002\u4e8e\u548c\u5355\u5143\u6d4b\u8bd5\u4e00\u8d77\u8fd0\u884c\u3002\u4f60\u53ef\u4ee5\u5b9e\u9645\u4e0a\u603b\u662f\u7f16\u8bd1\u8c03\u8bd5\u8bed\u53e5\uff0c\u5355\u5143\u6d4b\u8bd5\u65f6\u53ef\u4ee5\u968f\u65f6\u67e5\u770b\u65e5\u5fd7\u3002\u5982\u679c\u4f60\u7528gdb\uff0c\u4f60\u9700\u8981\u5728gdb\u4e2d\u91cd\u590d\u8fd0\u884c\u5355\u5143\u6d4b\u8bd5\uff0c\u5e76\u8ddf\u8e2a\u4ed6\u6765\u67e5\u770b\u53d1\u751f\u4e86\u4ec0\u4e48\u3002\n\u4f7f\u7528Valgrind\u53ef\u4ee5\u5f97\u5230\u548c\u8c03\u8bd5\u8f93\u51fa\u7b49\u4ef7\u7684\u5185\u5b58\u76f8\u5173\u7684\u9519\u8bef\uff0c\u6240\u4ee5\u4f60\u5e76\u4e0d\u9700\u8981\u4f7f\u7528\u7c7b\u4f3cgdb\u7684\u4e1c\u897f\u6765\u5bfb\u627e\u7f3a\u9677\u3002\n\n\u5c3d\u7ba1\u6240\u6709\u539f\u56e0\u663e\u793a\u6211\u66f4\u503e\u5411\u4e8edebug\u800c\u4e0d\u662fgdb\uff0c\u6211\u8fd8\u662f\u5728\u5c11\u6570\u60c5\u51b5\u4e0b\u56de\u7528\u5230gdb\uff0c\u5e76\u4e14\u6211\u8ba4\u4e3a\u4f60\u5e94\u8be5\u9009\u62e9\u6709\u52a9\u4e8e\u4f60\u5b8c\u6210\u5de5\u4f5c\u7684\u5de5\u5177\u3002\u6709\u65f6\uff0c\u4f60\u53ea\u80fd\u591f\u8fde\u63a5\u5230\u4e00\u4e2a\u5d29\u6e83\u7684\u7a0b\u5e8f\u5e76\u4e14\u56db\u5904\u8f6c\u60a0\u3002\u6216\u8005\uff0c\u4f60\u5f97\u5230\u4e86\u4e00\u4e2a\u4f1a\u5d29\u6e83\u7684\u670d\u52a1\u5668\uff0c\u4f60\u53ea\u80fd\u591f\u83b7\u5f97\u4e00\u4e9b\u6838\u5fc3\u6587\u4ef6\u6765\u4e00\u63a2\u7a76\u7adf\u3002\u8fd9\u4e9b\u8d27\u5c11\u6570\u5176\u5b83\u60c5\u51b5\u4e2d\uff0cgdb\u662f\u5f88\u597d\u7684\u529e\u6cd5\u3002\u4f60\u6700\u597d\u51c6\u5907\u5c3d\u53ef\u80fd\u591a\u7684\u5de5\u5177\u6765\u89e3\u51b3\u95ee\u9898\u3002\n\u63a5\u4e0b\u6765\u6211\u4f1a\u901a\u8fc7\u5bf9\u6bd4gdb\u3001\u8c03\u8bd5\u8f93\u51fa\u548cValgrind\u6765\u8be6\u7ec6\u5206\u6790\uff0c\u50cf\u8fd9\u6837\uff1a\n\nValgrind\u7528\u4e8e\u6355\u83b7\u6240\u6709\u5185\u5b58\u9519\u8bef\u3002\u5982\u679cValgrind\u4e2d\u542b\u6709\u9519\u8bef\u6216Valgrind\u4f1a\u4e25\u91cd\u62d6\u6162\u7a0b\u5e8f\uff0c\u6211\u4f1a\u4f7f\u7528gdb\u3002\n\u8c03\u8bd5\u8f93\u51fa\u7528\u4e8e\u8bca\u65ad\u6216\u4fee\u590d\u6709\u5173\u903b\u8f91\u6216\u4f7f\u7528\u4e0a\u7684\u7f3a\u9677\u3002\u5728\u4f60\u4f7f\u7528Valgrind\u4e4b\u524d\uff0c\u8fd9\u4e9b\u5171\u8ba190%\u7684\u7f3a\u9677\u3002\n\u4f7f\u7528gdb\u89e3\u51b3\u5269\u4e0b\u7684\u201c\u8c1c\u4e4bbug\u201d\uff0c\u6216\u5982\u8981\u6536\u96c6\u4fe1\u606f\u7684\u7d27\u6025\u60c5\u51b5\u3002\u5982\u679cValgrind\u4e0d\u8d77\u4f5c\u7528\uff0c\u5e76\u4e14\u6211\u4e0d\u80fd\u6253\u5370\u51fa\u6240\u9700\u4fe1\u606f\uff0c\u6211\u5c31\u4f1a\u4f7f\u7528gdb\u5f00\u59cb\u56db\u5904\u641c\u7d22\u3002\u8fd9\u91cc\u6211\u4ec5\u4ec5\u4f7f\u7528gdb\u6765\u6536\u96c6\u4fe1\u606f\u3002\u4e00\u65e6\u6211\u5f04\u6e05\u53d1\u751f\u4e86\u4ec0\u4e48\uff0c\u6211\u4f1a\u56de\u6765\u7f16\u7a0b\u5355\u5143\u6d4b\u8bd5\u6765\u5f15\u53d1\u7f3a\u9677\uff0c\u4e4b\u540e\u7f16\u7a0b\u6253\u5370\u8bed\u53e5\u6765\u67e5\u627e\u539f\u56e0\u3002\n\n\u8c03\u8bd5\u7b56\u7565\n\u8fd9\u4e00\u8fc7\u7a0b\u9002\u7528\u4e8e\u4f60\u6253\u7b97\u4f7f\u7528\u4efb\u4f55\u8c03\u8bd5\u6280\u5de7\uff0c\u65e0\u8bba\u662fValgrind\u3001\u8c03\u8bd5\u8f93\u51fa\uff0c\u6216\u8005\u4f7f\u7528\u8c03\u8bd5\u5668\u3002\u6211\u6253\u7b97\u4ee5\u4f7f\u7528gdb\u7684\u5f62\u5f0f\u6765\u63cf\u8ff0\u4ed6\uff0c\u56e0\u4e3a\u4f3c\u4e4e\u4eba\u4eec\u5728\u4f7f\u7528\u8c03\u8bd5\u5668\u662f\u4f1a\u8df3\u8fc7\u5b83\u3002\u4f46\u662f\u5e94\u5f53\u5bf9\u6bcf\u4e2abug\u4f7f\u7528\u5b83\uff0c\u76f4\u5230\u4f60\u53ea\u9700\u8981\u5728\u975e\u5e38\u56f0\u96be\u7684bug\u4e0a\u7528\u5230\u3002\n\n\u521b\u5efa\u4e00\u4e2a\u5c0f\u578b\u6587\u672c\u6587\u4ef6\u53eb\u505anotes.txt\uff0c\u5e76\u4e14\u5c06\u5b83\u7528\u4f5c\u8bb0\u5f55\u60f3\u6cd5\u3001bug\u548c\u95ee\u9898\u7684\u201c\u5b9e\u9a8c\u8bb0\u5f55\u201d\u3002\n\u5728\u4f60\u4f7f\u7528gdb\u4e4b\u524d\uff0c\u5199\u4e0b\u4f60\u6253\u7b97\u4fee\u590d\u7684bug\uff0c\u4ee5\u53ca\u53ef\u80fd\u7684\u4ea7\u751f\u539f\u56e0\u3002\n\u5bf9\u4e8e\u6bcf\u4e2a\u539f\u56e0\uff0c\u5199\u4e0b\u4f60\u6240\u8ba4\u4e3a\u7684\uff0c\u95ee\u9898\u6765\u6e90\u7684\u51fd\u6570\u6216\u6587\u4ef6\uff0c\u6216\u8005\u4ec5\u4ec5\u5199\u4e0b\u4f60\u4e0d\u77e5\u9053\u3002\n\u73b0\u5728\u542f\u52a8gdb\u5e76\u4e14\u4f7f\u7528file:function\u6311\u9009\u6700\u53ef\u80fd\u7684\u56e0\u7d20\uff0c\u4e4b\u540e\u5728\u90a3\u91cc\u8bbe\u7f6e\u65ad\u70b9\u3002\n\u4f7f\u7528gdb\u8fd0\u884c\u7a0b\u5e8f\uff0c\u5e76\u4e14\u786e\u8ba4\u5b83\u662f\u5426\u662f\u771f\u6b63\u539f\u56e0\u3002\u67e5\u660e\u5b83\u7684\u6700\u597d\u65b9\u5f0f\u5c31\u662f\u770b\u770b\u4f60\u662f\u5426\u53ef\u4ee5\u4f7f\u7528set\u547d\u4ee4\uff0c\u7b80\u5355\u4fee\u590d\u95ee\u9898\u6216\u8005\u91cd\u73b0\u9519\u8bef\u3002\n\u5982\u679c\u5b83\u4e0d\u662f\u771f\u6b63\u539f\u56e0\uff0c\u5219\u5728notes.txt\u4e2d\u6807\u8bb0\u5b83\u4e0d\u662f\uff0c\u4ee5\u53ca\u7406\u7531\u3002\u79fb\u5230\u4e0b\u4e00\u4e2a\u53ef\u80fd\u7684\u539f\u56e0\uff0c\u5e76\u4e14\u4f7f\u6700\u6613\u4e8e\u8c03\u8bd5\u7684\uff0c\u4e4b\u540e\u8bb0\u5f55\u4f60\u6536\u96c6\u5230\u7684\u4fe1\u606f\u3002\n\n\u8fd9\u91cc\u4f60\u5e76\u6ca1\u6709\u6ce8\u610f\u5230\uff0c\u5b83\u662f\u6700\u57fa\u672c\u7684\u79d1\u5b66\u65b9\u6cd5\u3002\u4f60\u5199\u4e0b\u4e00\u4e9b\u5047\u8bbe\uff0c\u4e4b\u540e\u8c03\u8bd5\u6765\u8bc1\u660e\u6216\u8bc1\u4f2a\u5b83\u4eec\u3002\u8fd9\u8ba9\u4f60\u6d1e\u5bdf\u5230\u66f4\u591a\u53ef\u80fd\u7684\u56e0\u7d20\uff0c\u6700\u7ec8\u4f7f\u4f60\u627e\u5230\u4ed6\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u6709\u52a9\u4e8e\u4f60\u907f\u514d\u91cd\u590d\u6b65\u5165\u540c\u4e00\u4e2a\u53ef\u80fd\u7684\u56e0\u7d20\uff0c\u5373\u4f7f\u4f60\u53d1\u73b0\u5b83\u4eec\u5e76\u4e0d\u53ef\u80fd\u3002\n\u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528\u8c03\u8bd5\u8f93\u51fa\u6765\u6267\u884c\u8fd9\u4e2a\u8fc7\u7a0b\u3002\u552f\u4e00\u7684\u4e0d\u540c\u5c31\u662f\u4f60\u5b9e\u9645\u5728\u6e90\u7801\u4e2d\u7f16\u5199\u5047\u8bbe\u6765\u63a8\u6d4b\u95ee\u9898\u6240\u5728\uff0c\u800c\u4e0d\u662fnotes.txt\u4e2d\u3002\u67d0\u79cd\u7a0b\u5ea6\u4e0a\uff0c\u8c03\u8bd5\u8f93\u51fa\u5f3a\u5236\u4f60\u79d1\u5b66\u5730\u89e3\u51b3bug\uff0c\u56e0\u4e3a\u4f60\u9700\u8981\u5c06\u5047\u5199\u4e3a\u6253\u5370\u8bed\u53e5\u3002\n\u4f7f\u7528 GDB\n\u6211\u5c06\u5728\u8fd9\u4e2a\u7ec3\u4e60\u4e2d\u8c03\u8bd5\u4e0b\u9762\u8fd9\u4e2a\u7a0b\u5e8f\uff0c\u5b83\u53ea\u6709\u4e00\u4e2a\u4e0d\u4f1a\u6b63\u5e38\u7ec8\u6b62\u7684while\u5faa\u73af\u3002\u6211\u5728\u91cc\u9762\u653e\u7f6e\u4e86\u4e00\u4e2ausleep\u8c03\u7528\uff0c\u4f7f\u5b83\u5faa\u73af\u8d77\u6765\u66f4\u52a0\u6709\u8da3\u3002\n#include &lt;unistd.h&gt;\n\nint main(int argc, char *argv[])\n{\n    int i = 0;\n\n    while(i &lt; 100) {\n        usleep(3000);\n    }\n\n    return 0;\n}\n\u50cf\u5f80\u5e38\u4e00\u6837\u7f16\u8bd1\uff0c\u5e76\u4e14\u5728gdb\u4e0b\u542f\u52a8\u5b83\uff0c\u4f8b\u5982\uff1agdb .\/ex31\u3002\n\u4e00\u65e6\u5b83\u8fd0\u884c\u4e4b\u540e\uff0c\u6211\u6253\u7b97\u8ba9\u4f60\u4f7f\u7528\u8fd9\u4e9bgdb\u547d\u4ee4\u548c\u5b83\u4ea4\u4e92\uff0c\u5e76\u4e14\u89c2\u5bdf\u5b83\u4eec\u7684\u4f5c\u7528\u4ee5\u53ca\u5982\u4f55\u4f7f\u7528\u5b83\u4eec\u3002\nhelp COMMAND\n\u83b7\u5f97COMMAND\u7684\u7b80\u5355\u5e2e\u52a9\u3002\nbreak file.c:(line|function)\n\u5728\u4f60\u5e0c\u671b\u6682\u505c\u4e4b\u661f\u7684\u5730\u65b9\u8bbe\u7f6e\u65ad\u70b9\u3002\u4f60\u53ef\u4ee5\u63d0\u4f9b\u884c\u53f7\u6216\u8005\u51fd\u6570\u540d\u79f0\uff0c\u6765\u5728\u6587\u4ef6\u4e2d\u7684\u90a3\u4e2a\u5730\u65b9\u6682\u505c\u3002\nrun ARGS\n\u8fd0\u884c\u7a0b\u5e8f\uff0c\u4f7f\u7528ARGS\u4f5c\u4e3a\u547d\u4ee4\u884c\u53c2\u6570\u3002\ncont\n\u7ee7\u7eed\u6267\u884c\u7a0b\u5e8f\uff0c\u76f4\u5230\u65ad\u70b9\u6216\u9519\u8bef\u3002\nstep\n\u5355\u6b65\u6267\u884c\u4ee3\u7801\uff0c\u4f46\u662f\u4f1a\u8fdb\u5165\u51fd\u6570\u5185\u90e8\u3002\u4f7f\u7528\u5b83\u6765\u8ddf\u8e2a\u51fd\u6570\u5185\u90e8\uff0c\u6765\u89c2\u5bdf\u5b83\u505a\u4e86\u4ec0\u4e48\u3002\nnext\n\u5c31\u50cf\u662fstep\uff0c\u4f46\u662f\u4ed6\u4f1a\u8fd0\u884c\u51fd\u6570\u5e76\u6b65\u8fc7\u5b83\u4eec\u3002\nbacktrace (or bt)\n\u6267\u884c\u201c\u8ddf\u8e2a\u56de\u6eaf\u201d\uff0c\u5b83\u4f1a\u8f6c\u50a8\u51fd\u6570\u5230\u5f53\u524d\u6267\u884c\u70b9\u7684\u6267\u884c\u8f68\u8ff9\u3002\u5bf9\u4e8e\u67e5\u660e\u5982\u4f55\u6267\u884c\u5230\u8fd9\u91cc\u975e\u5e38\u6709\u7528\uff0c\u56e0\u4e3a\u5b83\u4e5f\u6253\u5370\u51fa\u4f20\u7ed9\u6bcf\u4e2a\u51fd\u6570\u7684\u53c2\u6570\u3002\u5b83\u548cValgrind\u62a5\u544a\u5185\u5b58\u9519\u8bef\u7684\u65b9\u5f0f\u5f88\u63a5\u8fd1\u3002\nset var X = Y\n\u5c06\u53d8\u91cfX\u8bbe\u7f6e\u4e3aY\u3002\nprint X\n\u6253\u5370\u51faX\u7684\u503c\uff0c\u4f60\u901a\u5e38\u53ef\u4ee5\u4f7f\u7528C\u7684\u8bed\u6cd5\u6765\u8bbf\u95ee\u6307\u9488\u7684\u503c\u6216\u8005\u7ed3\u6784\u4f53\u7684\u5185\u5bb9\u3002\nENTER\n\u91cd\u590d\u4e0a\u4e00\u6761\u547d\u4ee4\u3002\nquit\n\u9000\u51fagdb\u3002\n\u8fd9\u4e9b\u90fd\u662f\u6211\u4f7f\u7528gdb\u65f6\u7684\u4e3b\u8981\u547d\u4ee4\u3002\u4f60\u73b0\u5728\u7684\u4efb\u52a1\u662f\u73a9\u8f6c\u5b83\u4eec\u548cex31\uff0c\u4f60\u4f1a\u5bf9\u5b83\u7684\u8f93\u51fa\u66f4\u52a0\u719f\u6089\u3002\n\u4e00\u65e6\u4f60\u719f\u6089\u4e86gdb\u4e4b\u540e\uff0c\u4f60\u4f1a\u5e0c\u671b\u591a\u52a0\u4f7f\u7528\u5b83\u3002\u5c1d\u8bd5\u5728\u66f4\u590d\u6742\u7684\u7a0b\u5e8f\uff0c\u4f8b\u5982devpkg\u4e0a\u4f7f\u7528\u5b83\uff0c\u6765\u89c2\u5bdf\u4f60\u662f\u5426\u80fd\u591f\u6539\u51fd\u6570\u7684\u6267\u884c\u6216\u5206\u6790\u51fa\u7a0b\u5e8f\u5728\u505a\u4ec0\u4e48\u3002\n\u9644\u52a0\u5230\u8fdb\u7a0b\ngdb\u6700\u5b9e\u7528\u7684\u529f\u80fd\u5c31\u662f\u9644\u52a0\u5230\u8fd0\u884c\u4e2d\u7684\u7a0b\u5e8f\uff0c\u5e76\u4e14\u5c31\u5730\u8c03\u8bd5\u5b83\u7684\u80fd\u529b\u3002\u5f53\u4f60\u62e5\u6709\u4e00\u4e2a\u5d29\u6e83\u7684\u670d\u52a1\u5668\u6216GUI\u7a0b\u5e8f\uff0c\u4f60\u901a\u5e38\u4e0d\u9700\u8981\u50cf\u4e4b\u524d\u90a3\u6837\u5728gdb\u4e0b\u8fd0\u884c\u5b83\u3002\u800c\u662f\u53ef\u4ee5\u76f4\u63a5\u542f\u52a8\u5b83\uff0c\u5e0c\u671b\u5b83\u4e0d\u8981\u9a6c\u4e0a\u5d29\u6e83\uff0c\u4e4b\u540e\u9644\u52a0\u5230\u5b83\u5e76\u8bbe\u7f6e\u65ad\u70b9\u3002\u7ec3\u4e60\u7684\u8fd9\u4e00\u90e8\u5206\u4e2d\u6211\u4f1a\u5411\u4f60\u5c55\u793a\u600e\u4e48\u505a\u3002\n\u5f53\u4f60\u9000\u51fagdb\u4e4b\u540e\uff0c\u5982\u679c\u4f60\u505c\u6b62\u4e86ex31\u6211\u5e0c\u671b\u4f60\u91cd\u542f\u5b83\uff0c\u4e4b\u540e\u5f00\u542f\u53e6\u4e00\u4e2a\u4e2d\u65ad\u7a97\u53e3\u4ee5\u4fbf\u4e8e\u542f\u52a8gdb\u5e76\u9644\u52a0\u3002\u8fdb\u7a0b\u9644\u52a0\u5c31\u662f\u4f60\u8ba9gdb\u8fde\u63a5\u5230\u5df2\u7ecf\u8fd0\u884c\u7684\u7a0b\u5e8f\uff0c\u4ee5\u4fbf\u4e8e\u4f60\u5b9e\u65f6\u76d1\u6d4b\u5b83\u3002\u5b83\u4f1a\u6302\u8d77\u7a0b\u5e8f\u6765\u8ba9\u4f60\u5355\u6b65\u6267\u884c\uff0c\u5f53\u4f60\u6267\u884c\u5b8c\u4e4b\u540e\u7a0b\u5e8f\u4f1a\u50cf\u5f80\u5e38\u4e00\u6837\u6062\u590d\u8fd0\u884c\u3002\n\u4e0b\u9762\u662f\u4e00\u6bb5\u4f1a\u8bdd\uff0c\u6211\u5bf9ex31\u505a\u4e86\u4e0a\u8ff0\u4e8b\u60c5\uff0c\u5355\u6b65\u6267\u884c\u5b83\uff0c\u4e4b\u540e\u4fee\u6539while\u5faa\u73af\u5e76\u4f7f\u5b83\u9000\u51fa\u3002\n$ ps ax | grep ex31\n10026 s000  S+     0:00.11 .\/ex31\n10036 s001  R+     0:00.00 grep ex31\n\n$ gdb .\/ex31 10026\nGNU gdb 6.3.50-20050815 (Apple version gdb-1705) (Fri Jul  1 10:50:06 UTC 2011)\nCopyright 2004 Free Software Foundation, Inc.\nGDB is free software, covered by the GNU General Public License, and you are\nwelcome to change it and\/or distribute copies of it under certain conditions.\nType \"show copying\" to see the conditions.\nThere is absolutely no warranty for GDB.  Type \"show warranty\" for details.\nThis GDB was configured as \"x86_64-apple-darwin\"...Reading symbols for shared libraries .. done\n\n\/Users\/zedshaw\/projects\/books\/learn-c-the-hard-way\/code\/10026: No such file or directory\nAttaching to program: `\/Users\/zedshaw\/projects\/books\/learn-c-the-hard-way\/code\/ex31', process 10026.\nReading symbols for shared libraries + done\nReading symbols for shared libraries ++........................ done\nReading symbols for shared libraries + done\n0x00007fff862c9e42 in __semwait_signal ()\n\n(gdb) break 8\nBreakpoint 1 at 0x107babf14: file ex31.c, line 8.\n\n(gdb) break ex31.c:11\nBreakpoint 2 at 0x107babf1c: file ex31.c, line 12.\n\n(gdb) cont\nContinuing.\n\nBreakpoint 1, main (argc=1, argv=0x7fff677aabd8) at ex31.c:8\n8      while(i &lt; 100) {\n\n(gdb) p i\n$1 = 0\n\n(gdb) cont\nContinuing.\n\nBreakpoint 1, main (argc=1, argv=0x7fff677aabd8) at ex31.c:8\n8      while(i &lt; 100) {\n\n(gdb) p i\n$2 = 0\n\n(gdb) list\n3  \n4  int main(int argc, char *argv[])\n5  {\n6      int i = 0;\n7  \n8      while(i &lt; 100) {\n9          usleep(3000);\n10     }\n11\n12     return 0;\n\n(gdb) set var i = 200\n\n(gdb) p i\n$3 = 200\n\n(gdb) next\n\nBreakpoint 2, main (argc=1, argv=0x7fff677aabd8) at ex31.c:12\n12     return 0;\n\n(gdb) cont\nContinuing.\n\nProgram exited normally.\n(gdb) quit\n$\n\n\u6ce8\n\n\n\u5728OSX\u4e0a\u4f60\u53ef\u80fd\u4f1a\u770b\u5230\u8f93\u5165root\u5bc6\u7801\u7684GUI\u8f93\u5165\u6846\uff0c\u5e76\u4e14\u5373\u4f7f\u4f60\u8f93\u5165\u4e86\u5bc6\u7801\u8fd8\u662f\u4f1a\u5f97\u5230\u6765\u81eagdb\u7684\u201cUnable to access task for process-id XXX: (os\/kern) failure.\u201d\u7684\u9519\u8bef\u3002\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4f60\u9700\u8981\u505c\u6b62gdb\u548cex31\u7a0b\u5e8f\uff0c\u5e76\u91cd\u65b0\u542f\u52a8\u7a0b\u5e8f\u4f7f\u5b83\u5de5\u4f5c\uff0c\u53ea\u8981\u4f60\u6210\u529f\u8f93\u5165\u4e86root\u5bc6\u7801\u3002\n\n\u6211\u4f1a\u904d\u5386\u6574\u4e2a\u4f1a\u8bdd\uff0c\u5e76\u4e14\u89e3\u91ca\u6211\u505a\u4e86\u4ec0\u4e48\uff1a\ngdb:1\n\u4f7f\u7528ps\u6765\u5bfb\u627e\u6211\u60f3\u8981\u9644\u52a0\u7684ex31\u7684\u8fdb\u7a0bID\u3002\ngdb:5\n\u6211\u4f7f\u7528gdb .\/ex31 PID\u6765\u9644\u52a0\u5230\u8fdb\u7a0b\uff0c\u5176\u4e2dPID\u66ff\u6362\u4e3a\u6211\u6240\u62e5\u6709\u7684\u8fdb\u7a0bID\u3002\ngdb:6-19\ngdb\u6253\u5370\u51fa\u4e86\u4e00\u5806\u5173\u4e8e\u534f\u8bae\u7684\u4fe1\u606f\uff0c\u63a5\u7740\u5b83\u8bfb\u53d6\u4e86\u6240\u6709\u4e1c\u897f\u3002\ngdb:21\n\u7a0b\u5e8f\u88ab\u9644\u52a0\uff0c\u5e76\u4e14\u5728\u5f53\u524d\u6267\u884c\u70b9\u4e0a\u505c\u6b62\u3002\u6240\u4ee5\u73b0\u5728\u6211\u5728\u6587\u4ef6\u4e2d\u7684\u7b2c8\u884c\u4f7f\u7528break\u8bbe\u7f6e\u4e86\u65ad\u70b9\u3002\u6211\u5047\u8bbe\u6211\u8fd9\u4e48\u505a\u7684\u65f6\u5019\uff0c\u5df2\u7ecf\u5728\u8fd9\u4e2a\u6211\u60f3\u4e2d\u65ad\u7684\u6587\u4ef6\u4e2d\u4e86\u3002\ngdb:24\n\u6267\u884cbreak\u7684\u66f4\u597d\u65b9\u5f0f\uff0c\u662f\u63d0\u4f9bfile.c line\u7684\u683c\u5f0f\uff0c\u4fbf\u4e8e\u4f60\u786e\u4fdd\u5b9a\u4f4d\u5230\u4e86\u6b63\u786e\u7684\u5730\u65b9\u3002\u6211\u5728\u8fd9\u4e2abreak\u4e2d\u8fd9\u6837\u505a\u3002\ngdb:27\n\u6211\u4f7f\u7528cont\u6765\u7ee7\u7eed\u8fd0\u884c\uff0c\u76f4\u5230\u6211\u547d\u4e2d\u4e86\u65ad\u70b9\u3002\ngdb:30-31\n\u6211\u5df2\u5230\u8fbe\u65ad\u70b9\uff0c\u4e8e\u662fgdb\u6253\u5370\u51fa\u6211\u9700\u8981\u4e86\u89e3\u7684\u53d8\u91cf\uff08argc\u548cargv\uff09\uff0c\u4ee5\u53ca\u505c\u4e0b\u6765\u7684\u4f4d\u7f6e\uff0c\u4e4b\u540e\u6253\u5370\u51fa\u65ad\u70b9\u7684\u884c\u53f7\u3002\ngdb:33-34\n\u6211\u4f7f\u7528print\u7684\u7f29\u5199p\u6765\u6253\u5370\u51fai\u53d8\u91cf\u7684\u503c\uff0c\u5b83\u662f0\u3002\ngdb:36\n\u7ee7\u7eed\u8fd0\u884c\u6765\u67e5\u770bi\u662f\u5426\u6539\u53d8\u3002\ngdb:42\n\u518d\u6b21\u6253\u5370\u51fai\uff0c\u663e\u7136\u5b83\u6ca1\u6709\u53d8\u5316\u3002\ngdb:45-55\n\u4f7f\u7528list\u6765\u67e5\u770b\u4ee3\u7801\u662f\u4ec0\u4e48\uff0c\u4e4b\u540e\u6211\u610f\u8bc6\u5230\u5b83\u4e0d\u53ef\u80fd\u9000\u51fa\uff0c\u56e0\u4e3a\u6211\u6ca1\u6709\u81ea\u589ei\u3002\ngdb:57\n\u786e\u8ba4\u6211\u7684\u5047\u8bbe\u662f\u6b63\u786e\u7684\uff0c\u5373i\u9700\u8981\u4f7f\u7528set\u547d\u4ee4\u6765\u4fee\u6539\u4e3ai = 200\u3002\u8fd9\u662fgdb\u6700\u4f18\u79c0\u7684\u7279\u6027\u4e4b\u4e00\uff0c\u8ba9\u4f60\u201c\u4fee\u6539\u201d\u7a0b\u5e8f\u6765\u8ba9\u4f60\u5feb\u901f\u77e5\u9053\u4f60\u662f\u5426\u6b63\u786e\u3002\ngdb:59\n\u6253\u5370i\u6765\u786e\u4fdd\u5b83\u5df2\u6539\u53d8\u3002\ngdb:62\n\u4f7f\u7528next\u6765\u79fb\u5230\u4e0b\u4e00\u6bb5\u4ee3\u7801\uff0c\u5e76\u4e14\u6211\u53d1\u73b0\u547d\u4e2d\u4e86ex31.c:12\u7684\u65ad\u70b9\uff0c\u6240\u4ee5\u8fd9\u610f\u5473\u7740while\u5faa\u73af\u5df2\u9000\u51fa\u3002\u6211\u7684\u5047\u8bbe\u6b63\u786e\uff0c\u6211\u9700\u8981\u4fee\u6539i\u3002\ngdb:67\n\u4f7f\u7528cont\u6765\u7ee7\u7eed\u8fd0\u884c\uff0c\u7a0b\u5e8f\u50cf\u5f80\u5e38\u4e00\u6837\u9000\u51fa\u3002\ngdb:71\n\u6700\u540e\u6211\u4f7f\u7528quit\u6765\u9000\u51fagdb\u3002\nGDB \u6280\u5de7\n\u4e0b\u9762\u662f\u4f60\u53ef\u4ee5\u7528\u4e8eGDB\u7684\u4e00\u4e9b\u5c0f\u6280\u5de7\uff1a\ngdb --args\n\u901a\u5e38gdb\u83b7\u5f97\u4f60\u63d0\u4f9b\u7684\u53d8\u91cf\u5e76\u5047\u8bbe\u5b83\u4eec\u7528\u4e8e\u5b83\u81ea\u5df1\u3002\u4f7f\u7528--args\u6765\u5411\u7a0b\u5e8f\u4f20\u9012\u5b83\u4eec\u3002\nthread apply all bt\n\u8f6c\u50a8\u6240\u6709\u7ebf\u7a0b\u7684\u6267\u884c\u8f68\u8ff9\uff0c\u975e\u5e38\u6709\u7528\u3002\ngdb --batch --ex r --ex bt --ex q --args\n\u8fd0\u884c\u7a0b\u5e8f\uff0c\u5f53\u5b83\u5d29\u6e83\u65f6\u4f60\u4f1a\u5f97\u5230\u6267\u884c\u8f68\u8ff9\u3002\n?\n\u5982\u679c\u4f60\u6709\u5176\u5b83\u6280\u5de7\uff0c\u5728\u8bc4\u8bba\u4e2d\u5199\u4e0b\u5b83\u5427\u3002\n\u9644\u52a0\u9898\n\n\u627e\u5230\u4e00\u4e2a\u56fe\u5f62\u5316\u7684\u8c03\u8bd5\u5668\uff0c\u5c06\u5b83\u4e0e\u539f\u59cb\u7684gdb\u76f8\u6bd4\u3002\u5b83\u4eec\u5728\u672c\u5730\u8c03\u8bd5\u7a0b\u5e8f\u65f6\u975e\u5e38\u6709\u7528\uff0c\u4f46\u662f\u5bf9\u4e8e\u5728\u670d\u52a1\u5668\u4e0a\u8c03\u8bd5\u6ca1\u6709\u4efb\u4f55\u610f\u4e49\u3002\n\u4f60\u53ef\u4ee5\u5f00\u542fOS\u4e0a\u7684\u201c\u6838\u5fc3\u8f6c\u50a8\u201d\uff0c\u5f53\u7a0b\u5e8f\u5d29\u6e83\u65f6\u4f60\u4f1a\u5f97\u5230\u4e00\u4e2a\u6838\u5fc3\u6587\u4ef6\u3002\u8fd9\u4e2a\u6838\u5fc3\u6587\u4ef6\u5c31\u50cf\u662f\u5bf9\u7a0b\u5e8f\u7684\u89e3\u5256\uff0c\u4fbf\u4e8e\u4f60\u4e86\u89e3\u5d29\u6e83\u65f6\u53d1\u751f\u4e86\u4ec0\u4e48\uff0c\u4ee5\u53ca\u7531\u4ec0\u4e48\u539f\u56e0\u5bfc\u81f4\u3002\u4fee\u6539ex31.c\u4f7f\u5b83\u5728\u51e0\u4e2a\u8fed\u4ee3\u4e4b\u540e\u5d29\u6e83\uff0c\u4e4b\u540e\u5c1d\u8bd5\u5f97\u5230\u5b83\u7684\u6838\u5fc3\u8f6c\u50a8\u5e76\u5206\u6790\u3002\n","categories":"\u7ec3\u4e606","tags":["\u8c03\u8bd5","\u5b8f","debug"]},{"title":"\u53cc\u5411\u94fe\u8868","url":"https:\/\/naka507.github.io\/posts\/364477FB0CED1A03.html","content":"\u53cc\u5411\u94fe\u8868\n\u8fd9\u672c\u4e66\u7684\u76ee\u7684\u662f\u6559\u7ed9\u4f60\u8ba1\u7b97\u673a\u5b9e\u9645\u4e0a\u5982\u4f55\u5de5\u4f5c\uff0c\u8fd9\u4e5f\u5305\u62ec\u591a\u79cd\u6570\u636e\u7ed3\u6784\u548c\u7b97\u6cd5\u51fd\u6570\u3002\u8ba1\u7b97\u673a\u81ea\u5df1\u5176\u5b9e\u5e76\u6ca1\u6709\u592a\u5927\u7528\u5904\u3002\u4e3a\u4e86\u8ba9\u5b83\u4eec\u505a\u4e00\u4e9b\u6709\u7528\u7684\u4e8b\u60c5\uff0c\u4f60\u9700\u8981\u6784\u5efa\u6570\u636e\uff0c\u4e4b\u540e\u5728\u8fd9\u4e9b\u7ed3\u6784\u4e0a\u7ec4\u7ec7\u5904\u7406\u3002\u5176\u5b83\u7f16\u7a0b\u8bed\u8a00\u5e26\u6709\u5b9e\u73b0\u6240\u6709\u8fd9\u4e9b\u7ed3\u6784\u7684\u5e93\uff0c\u6216\u8005\u5e26\u6709\u76f4\u63a5\u7684\u8bed\u6cd5\u6765\u521b\u5efa\u5b83\u4eec\u3002C\u9700\u8981\u4f60\u624b\u52a8\u5b9e\u73b0\u6240\u6709\u6570\u636e\u7ed3\u6784\uff0c\u8fd9\u4f7f\u5b83\u6210\u4e3a\u6700\u201c\u5b8c\u7f8e\u201d\u7684\u8bed\u8a00\uff0c\u8ba9\u4f60\u77e5\u9053\u5b83\u4eec\u7684\u5de5\u4f5c\u539f\u7406\u3002\n\u6211\u7684\u76ee\u6807\u662f\u4ea4\u7ed9\u4f60\u8fd9\u4e9b\u6570\u636e\u7ed3\u6784\uff0c\u4ee5\u53ca\u76f8\u5173\u7b97\u6cd5\u7684\u77e5\u8bc6\uff0c\u6765\u5e2e\u52a9\u4f60\u5b8c\u6210\u4e0b\u9762\u8fd9\u4e09\u4ef6\u4e8b\uff1a\n\n\u7406\u89e3Python\u3001Ruby\u6216JavaScript\u7684data = {\"name\": \"Zed\"}\u5230\u5e95\u505a\u4e86\u4ec0\u4e48\u3002\n\u4f7f\u7528\u6570\u636e\u7ed3\u6784\u6765\u89e3\u51b3\u95ee\u9898\uff0c\u4f7f\u4f60\u6210\u4e3a\u66f4\u597d\u7684C\u7a0b\u5e8f\u5458\u3002\n\u5b66\u4e60\u6570\u636e\u7ed3\u6784\u548c\u7b97\u6cd5\u7684\u6838\u5fc3\u90e8\u5206\uff0c\u8ba9\u4f60\u77e5\u9053\u5728\u7279\u5b9a\u6761\u4ef6\u4e0b\u54ea\u4e2a\u6700\u597d\u3002\n\n\u6570\u636e\u7ed3\u6784\u662f\u4ec0\u4e48\u3002\n\u201c\u6570\u636e\u7ed3\u6784\u201d\u8fd9\u4e2a\u540d\u79f0\u81ea\u5df1\u5c31\u80fd\u591f\u89e3\u91ca\u3002\u5b83\u662f\u5177\u6709\u7279\u6027\u6a21\u578b\u7684\u6570\u636e\u7ec4\u7ec7\u65b9\u6cd5\u3002\u8fd9\u4e00\u6a21\u578b\u53ef\u80fd\u8bbe\u8ba1\u7528\u4e8e\u4ee5\u65b0\u7684\u65b9\u6cd5\u5904\u7406\u6570\u636e\uff0c\u4e5f\u53ef\u80fd\u53ea\u662f\u7528\u4e8e\u5c06\u5b83\u4eec\u66f4\u9ad8\u6548\u5730\u50a8\u5b58\u5728\u78c1\u76d8\u4e0a\u3002\u8fd9\u672c\u4e66\u4e2d\u6211\u4f1a\u9075\u5faa\u4e00\u4e9b\u7b80\u5355\u7684\u6a21\u5f0f\u6765\u6784\u5efa\u53ef\u7528\u7684\u6570\u636e\u7ed3\u6784\uff1a\n\n\u5b9a\u4e49\u4e00\u4e2a\u7ed3\u6784\u7684\u4e3b\u8981\u201c\u5916\u90e8\u7ed3\u6784\u201d\u3002\n\u5b9a\u4e49\u4e00\u4e2a\u7ed3\u6784\u7684\u5185\u5bb9\uff0c\u901a\u5e38\u662f\u5e26\u6709\u94fe\u63a5\u7684\u8282\u70b9\u3002\n\u521b\u5efa\u51fd\u6570\u64cd\u4f5c\u5b83\u4eec\u7684\u51fd\u6570\u3002\n\nC\u4e2d\u8fd8\u6709\u5176\u5b83\u6837\u5f0f\u7684\u6570\u636e\u7ed3\u6784\uff0c\u4f46\u662f\u8fd9\u4e2a\u6a21\u5f0f\u6548\u679c\u5f88\u597d\uff0c\u5e76\u4e14\u5bf9\u4e8e\u4f60\u521b\u5efa\u7684\u5927\u90e8\u5206\u6570\u636e\u7ed3\u6784\u90fd\u9002\u7528\u3002\n\u6784\u5efa\u5e93\n\u5bf9\u4e8e\u8fd9\u672c\u4e66\u7684\u5269\u4f59\u90e8\u5206\uff0c\u5f53\u4f60\u5b8c\u6210\u8fd9\u672c\u4e66\u4e4b\u540e\uff0c\u4f60\u5c06\u4f1a\u521b\u5efa\u4e00\u4e2a\u53ef\u7528\u7684\u5e93\u3002\u8fd9\u4e2a\u5e93\u4f1a\u5305\u542b\u4e0b\u5217\u5143\u7d20\uff1a\n\n\u4e3a\u6bcf\u4e2a\u6570\u636e\u7ed3\u6784\u7f16\u5199\u7684\u5934\u6587\u4ef6.h\u3002\n\u4e3a\u7b97\u6cd5\u7f16\u5199\u7684\u5b9e\u73b0\u6587\u4ef6.c\u3002\n\u7528\u4e8e\u6d4b\u8bd5\u5b83\u4eec\u786e\u4fdd\u6709\u6548\u7684\u5355\u5143\u6d4b\u8bd5\u3002\n\u4ece\u5934\u6587\u4ef6\u81ea\u52a8\u751f\u6210\u7684\u6587\u6863\u3002\n\n\u4f60\u5df2\u7ecf\u5b9e\u73b0\u4e86c-skeleton\uff08\u9879\u76ee\u6846\u67b6\u76ee\u5f55\uff09\uff0c\u4f7f\u7528\u5b83\u6765\u521b\u5efa\u4e00\u4e2aliblcthw\u9879\u76ee\uff1a\n$ cp -r c-skeleton liblcthw\n$ cd liblcthw\/\n$ ls\nLICENSE  Makefile README.md  bin  build  src  tests\n$ vim Makefile\n$ ls src\/\ndbg.h               libex29.c       libex29.o\n$ mkdir src\/lcthw\n$ mv src\/dbg.h src\/lcthw\n$ vim tests\/minunit.h\n$ rm src\/libex29.* tests\/libex29*\n$ make clean\nrm -rf build  tests\/libex29_tests\nrm -f tests\/tests.log\nfind . -name \"*.gc*\" -exec rm {} \\;\nrm -rf `find . -name \"*.dSYM\" -print`\n$ ls tests\/\nminunit.h  runtests.sh\n$\n\u8fd9\u4e2a\u4f1a\u8bdd\u4e2d\u6211\u6267\u884c\u4e86\u4e0b\u5217\u4e8b\u60c5\uff1a\n\n\u590d\u5236\u4e86c-skeleton\u3002\n\u7f16\u8f91Makefile\uff0c\u5c06libYOUR_LIBRARY.a\u6539\u4e3aliblcthw.a\u4f5c\u4e3a\u65b0\u7684TARGET\u3002\n\u521b\u5efasrc\/lcthw\u76ee\u5f55\uff0c\u6211\u4eec\u4f1a\u5728\u91cc\u9762\u653e\u5165\u4ee3\u7801\u3002\n\u79fb\u52a8src\/dbg.h\u6587\u4ef6\u5230\u65b0\u7684\u76ee\u5f55\u4e2d\u3002\n\u7f16\u8f91tests\/minunit.h\uff0c\u4f7f\u5b83\u4f7f\u7528\u6240\u5305\u542b\u7684#include &lt;lcthw\/dbg.h&gt;\u3002\n\u79fb\u9664libex29.*\u4e2d\u6211\u4eec\u4e0d\u9700\u8981\u7684\u6e90\u6587\u4ef6\u548c\u6d4b\u8bd5\u6587\u4ef6\u3002\n\u6e05\u7406\u6240\u6709\u9057\u7559\u7684\u4e1c\u897f\u3002\n\n\u6267\u884c\u5b8c\u4e4b\u540e\u4f60\u5c31\u51c6\u5907\u597d\u5f00\u59cb\u6784\u5efa\u5e93\u4e86\uff0c\u6211\u6253\u7b97\u6784\u5efa\u7b2c\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\u662f\u53cc\u5411\u94fe\u8868\u3002\n\u53cc\u5411\u94fe\u8868\n\u6211\u4eec\u5c06\u8981\u5411liblcthw\u6dfb\u52a0\u7684\u7b2c\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\u662f\u53cc\u5411\u94fe\u8868\u3002\u8fd9\u662f\u4f60\u80fd\u591f\u6784\u5efa\u7684\u6700\u7b80\u5355\u7684\u6570\u636e\u7ed3\u6784\uff0c\u5e76\u4e14\u5b83\u62e5\u6709\u9488\u5bf9\u7279\u5b9a\u64cd\u4f5c\u7684\u5b9e\u7528\u5c5e\u6027\u3002\u5355\u5411\u94fe\u8868\u901a\u8fc7\u6307\u5411\u4e0b\u4e00\u4e2a\u6216\u4e0a\u4e00\u4e2a\u5143\u7d20\u7684\u8282\u70b9\u6765\u5de5\u4f5c\u3002\u201c\u53cc\u5411\u201d\u94fe\u8868\u6301\u6709\u5168\u90e8\u8fd9\u4e24\u4e2a\u6307\u9488\uff0c\u800c\u201c\u5355\u5411\u201d\u94fe\u8868\u53ea\u6301\u6709\u4e0b\u4e00\u4e2a\u5143\u7d20\u7684\u6307\u9488\u3002\n\u7531\u4e8e\u6bcf\u4e2a\u8282\u70b9\u90fd\u6709\u4e0b\u4e00\u4e2a\u548c\u4e0a\u4e00\u4e2a\u5143\u7d20\u7684\u6307\u9488\uff0c\u5e76\u4e14\u4f60\u53ef\u4ee5\u8ddf\u8e2a\u8054\u4fdd\u7684\u7b2c\u4e00\u4e2a\u548c\u6700\u540e\u7684\u5143\u7d20\uff0c\u4f60\u5c31\u53ef\u4ee5\u5feb\u901f\u5730\u6267\u884c\u4e00\u4e9b\u64cd\u4f5c\u3002\u4efb\u4f55\u6d89\u53ca\u5230\u63d2\u5165\u548c\u5220\u9664\u5143\u7d20\u7684\u64cd\u4f5c\u4f1a\u975e\u5e38\u5feb\u3002\u5b83\u5bf9\u5927\u591a\u6570\u4eba\u6765\u8bf4\u4e5f\u6613\u4e8e\u5b9e\u73b0\u3002\n\u94fe\u8868\u7684\u4e3b\u8981\u7f3a\u70b9\u662f\uff0c\u904d\u5386\u5b83\u6d89\u53ca\u5230\u5904\u7406\u6cbf\u9014\u6bcf\u4e2a\u5355\u4e2a\u7684\u6307\u9488\u3002\u8fd9\u610f\u5473\u7740\u641c\u7d22\u3001\u591a\u6570\u6392\u5e8f\u4ee5\u53ca\u8fed\u4ee3\u5143\u7d20\u4f1a\u8868\u8f83\u6162\u3002\u8fd9\u4e5f\u610f\u5473\u7740\u4f60\u4e0d\u80fd\u76f4\u63a5\u8df3\u8fc7\u94fe\u8868\u7684\u968f\u673a\u4e00\u90e8\u5206\u3002\u5982\u679c\u6362\u6210\u6570\u7ec4\uff0c\u4f60\u5c31\u53ef\u4ee5\u76f4\u63a5\u7d22\u5f15\u5230\u5b83\u7684\u4e2d\u592e\uff0c\u4f46\u662f\u94fe\u8868\u4e0d\u884c\u3002\u4e5f\u5c31\u662f\u8bf4\u5982\u679c\u4f60\u60f3\u8981\u8bbf\u95ee\u7b2c\u5341\u4e2a\u5143\u7d20\uff0c\u4f60\u5fc5\u987b\u7ecf\u8fc71~9\u3002\n\u5b9a\u4e49\n\u6b63\u5982\u5728\u8fd9\u4e2a\u7ec3\u4e60\u7684\u4ecb\u7ecd\u90e8\u5206\u6240\u8bf4\uff0c\u6574\u4e2a\u8fc7\u7a0b\u7684\u7b2c\u4e00\u6b65\uff0c\u662f\u7f16\u7a0b\u4e00\u4e2a\u5934\u6587\u4ef6\uff0c\u5e26\u6709\u6b63\u786e\u7684C\u7ed3\u6784\u5b9a\u4e49\u3002\n#ifndef lcthw_List_h\n#define lcthw_List_h\n\n#include &lt;stdlib.h&gt;\n\nstruct ListNode;\n\ntypedef struct ListNode {\n    struct ListNode *next;\n    struct ListNode *prev;\n    void *value;\n} ListNode;\n\ntypedef struct List {\n    int count;\n    ListNode *first;\n    ListNode *last;\n} List;\n\nList *List_create();\nvoid List_destroy(List *list);\nvoid List_clear(List *list);\nvoid List_clear_destroy(List *list);\n\n#define List_count(A) ((A)-&gt;count)\n#define List_first(A) ((A)-&gt;first != NULL ? (A)-&gt;first-&gt;value : NULL)\n#define List_last(A) ((A)-&gt;last != NULL ? (A)-&gt;last-&gt;value : NULL)\n\nvoid List_push(List *list, void *value);\nvoid *List_pop(List *list);\n\nvoid List_unshift(List *list, void *value);\nvoid *List_shift(List *list);\n\nvoid *List_remove(List *list, ListNode *node);\n\n#define LIST_FOREACH(L, S, M, V) ListNode *_node = NULL;\\\n    ListNode *V = NULL;\\\n    for(V = _node = L-&gt;S; _node != NULL; V = _node = _node-&gt;M)\n\n#endif\n\u6211\u6240\u505a\u7684\u7b2c\u4e00\u4ef6\u4e8b\u5c31\u662f\u521b\u5efa\u4e24\u4e2a\u7ed3\u6784\uff0cListNode\u548c\u5305\u542b\u8fd9\u4e9b\u8282\u70b9\u7684List\u3002\u8fd9\u521b\u5efa\u4e86\u662f\u5c06\u5728\u51fd\u6570\u4e2d\u4f7f\u7528\u7684\u6570\u636e\u7ed3\u6784\uff0c\u4ee5\u53ca\u968f\u540e\u5b9a\u4e49\u7684\u5b8f\u3002\u5982\u679c\u4f60\u6d4f\u89c8\u8fd9\u4e9b\u51fd\u6570\uff0c\u5b83\u4eec\u770b\u8d77\u6765\u975e\u5e38\u7b80\u5355\u3002\u5f53\u6211\u8bb2\u5230\u5b9e\u73b0\u65f6\uff0c\u6211\u4f1a\u89e3\u91ca\u4ed6\u4eec\uff0c\u4f46\u6211\u66f4\u5e0c\u671b\u4f60\u80fd\u731c\u51fa\u5b83\u4eec\u7684\u4f5c\u7528\u3002\n\u8fd9\u4e9b\u6570\u636e\u7ed3\u6784\u7684\u5de5\u4f5c\u65b9\u5f0f\uff0c\u5c31\u662f\u6bcf\u4e2aListNode\u90fd\u6709\u4e09\u4e2a\u6210\u5458\u3002\n\n\u503c\uff0c\u5b83\u662f\u65e0\u7c7b\u578b\u7684\u6307\u9488\uff0c\u5b58\u50a8\u6211\u4eec\u60f3\u5728\u94fe\u8868\u4e2d\u653e\u7f6e\u7684\u4e1c\u897f\u3002\nListNode *next\u6307\u9488\uff0c\u5b83\u6307\u5411\u53e6\u4e00\u4e2a\u50a8\u5b58\u4e0b\u4e00\u4e2a\u5143\u7d20\u7684ListNode\u3002\nListNode *prev\u6307\u9488\uff0c\u5b83\u6307\u5411\u53e6\u4e00\u4e2a\u50a8\u5b58\u4e0a\u4e00\u4e2a\u5143\u7d20\u7684ListNode\u3002\n\nList\u7ed3\u6784\u53ea\u662f\u8fd9\u4e9bListNode\u7ed3\u6784\u7684\u5bb9\u5668\uff0c\u5b83\u4eec\u4e92\u8054\u94fe\u63a5\u7ec4\u6210\u94fe\u578b\u3002\u5b83\u8ddf\u8e2a\u94fe\u8868\u7684count\uff0cfirst\u548clast\u5143\u7d20\u3002\n\u6700\u540e\uff0c\u770b\u4e00\u770bsrc\/lcthw\/list.h:37\uff0c\u5176\u4e2d\u6211\u5b9a\u4e49\u4e86LIST_FOREACH\u5b8f\u3002\u8fd9\u662f\u4e2a\u5e38\u89c1\u7684\u4e60\u8bed\uff0c\u4f60\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u5b8f\u6765\u751f\u6210\u8fed\u4ee3\u4ee3\u7801\uff0c\u4f7f\u7528\u8005\u5c31\u4e0d\u4f1a\u5f04\u4e71\u4e86\u3002\u6b63\u786e\u4f7f\u7528\u8fd9\u7c7b\u6267\u884c\u8fc7\u7a0b\u6765\u5904\u7406\u6570\u636e\u7ed3\u6784\u5341\u5206\u56f0\u96be\uff0c\u6240\u4ee5\u53ef\u4ee5\u7f16\u5199\u5b8f\u6765\u5e2e\u52a9\u4f7f\u7528\u8005\u3002\u5f53\u6211\u8bb2\u5230\u5b9e\u73b0\u65f6\uff0c\u4f60\u53ef\u4ee5\u770b\u5230\u6211\u5982\u4f55\u4f7f\u7528\u5b83\u3002\n\u5b9e\u73b0\n\u4e00\u65e6\u4f60\u7406\u89e3\u4e86\u5b83\u4eec\u4e4b\u540e\uff0c\u4f60\u5f88\u53ef\u80fd\u7406\u89e3\u4e86\u53cc\u5411\u94fe\u8868\u5982\u4f55\u5de5\u4f5c\u3002\u5b83\u53ea\u662f\u5e26\u6709\u4e24\u4e2a\u6307\u9488\u7684\u8282\u70b9\uff0c\u6307\u5411\u94fe\u8868\u4e2d\u524d\u4e00\u4e2a\u548c\u540e\u4e00\u4e2a\u5143\u7d20\u3002\u63a5\u4e0b\u6765\u4f60\u53ef\u4ee5\u7f16\u5199src\/lcthw\/list.c\u4e2d\u7684\u4ee3\u7801\uff0c\u6765\u7406\u89e3\u6bcf\u4e2a\u64cd\u4f5c\u5982\u4f55\u5b9e\u73b0\u3002\n#include &lt;lcthw\/list.h&gt;\n#include &lt;lcthw\/dbg.h&gt;\n\nList *List_create()\n{\n    return calloc(1, sizeof(List));\n}\n\nvoid List_destroy(List *list)\n{\n    LIST_FOREACH(list, first, next, cur) {\n        if(cur-&gt;prev) {\n            free(cur-&gt;prev);\n        }\n    }\n\n    free(list-&gt;last);\n    free(list);\n}\n\n\nvoid List_clear(List *list)\n{\n    LIST_FOREACH(list, first, next, cur) {\n        free(cur-&gt;value);\n    }\n}\n\n\nvoid List_clear_destroy(List *list)\n{\n    List_clear(list);\n    List_destroy(list);\n}\n\n\nvoid List_push(List *list, void *value)\n{\n    ListNode *node = calloc(1, sizeof(ListNode));\n    check_mem(node);\n\n    node-&gt;value = value;\n\n    if(list-&gt;last == NULL) {\n        list-&gt;first = node;\n        list-&gt;last = node;\n    } else {\n        list-&gt;last-&gt;next = node;\n        node-&gt;prev = list-&gt;last;\n        list-&gt;last = node;\n    }\n\n    list-&gt;count++;\n\nerror:\n    return;\n}\n\nvoid *List_pop(List *list)\n{\n    ListNode *node = list-&gt;last;\n    return node != NULL ? List_remove(list, node) : NULL;\n}\n\nvoid List_unshift(List *list, void *value)\n{\n    ListNode *node = calloc(1, sizeof(ListNode));\n    check_mem(node);\n\n    node-&gt;value = value;\n\n    if(list-&gt;first == NULL) {\n        list-&gt;first = node;\n        list-&gt;last = node;\n    } else {\n        node-&gt;next = list-&gt;first;\n        list-&gt;first-&gt;prev = node;\n        list-&gt;first = node;\n    }\n\n    list-&gt;count++;\n\nerror:\n    return;\n}\n\nvoid *List_shift(List *list)\n{\n    ListNode *node = list-&gt;first;\n    return node != NULL ? List_remove(list, node) : NULL;\n}\n\nvoid *List_remove(List *list, ListNode *node)\n{\n    void *result = NULL;\n\n    check(list-&gt;first &amp;&amp; list-&gt;last, \"List is empty.\");\n    check(node, \"node can't be NULL\");\n\n    if(node == list-&gt;first &amp;&amp; node == list-&gt;last) {\n        list-&gt;first = NULL;\n        list-&gt;last = NULL;\n    } else if(node == list-&gt;first) {\n        list-&gt;first = node-&gt;next;\n        check(list-&gt;first != NULL, \"Invalid list, somehow got a first that is NULL.\");\n        list-&gt;first-&gt;prev = NULL;\n    } else if (node == list-&gt;last) {\n        list-&gt;last = node-&gt;prev;\n        check(list-&gt;last != NULL, \"Invalid list, somehow got a next that is NULL.\");\n        list-&gt;last-&gt;next = NULL;\n    } else {\n        ListNode *after = node-&gt;next;\n        ListNode *before = node-&gt;prev;\n        after-&gt;prev = before;\n        before-&gt;next = after;\n    }\n\n    list-&gt;count--;\n    result = node-&gt;value;\n    free(node);\n\nerror:\n    return result;\n}\n\u6211\u5b9e\u73b0\u4e86\u53cc\u5411\u94fe\u8868\u4e0a\u7684\u6240\u6709\u64cd\u4f5c\uff0c\u5b83\u4eec\u4e0d\u80fd\u7528\u7b80\u5355\u7684\u5b8f\u6765\u5b8c\u6210\u3002\u6bd4\u8d77\u8986\u76d6\u6587\u4ef6\u4e2d\u7684\u6bcf\u4e00\u884c\uff0c\u6211\u6253\u7b97\u4e3alist.h\u548clist.c\u4e2d\u7684\u6bcf\u4e2a\u64cd\u4f5c\u63d0\u4f9b\u4e00\u4e2a\u9ad8\u9636\u7684\u6982\u89c8\u3002\u4f60\u9700\u8981\u81ea\u5df1\u9605\u8bfb\u4ee3\u7801\u3002\nlist.h:List_count\n\u8fd4\u56de\u94fe\u8868\u4e2d\u5143\u7d20\u6570\u91cf\uff0c\u5b83\u5728\u5143\u7d20\u6dfb\u52a0\u6216\u79fb\u9664\u65f6\u7ef4\u62a4\u3002\nlist.h:List_first\n\u8fd4\u56de\u94fe\u8868\u7684\u9996\u4e2a\u5143\u7d20\uff0c\u4f46\u662f\u5e76\u4e0d\u79fb\u9664\u5b83\u3002\nlist.h:List_last\n\u8fd4\u56de\u94fe\u8868\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20\uff0c\u4f46\u662f\u4e0d\u79fb\u9664\u5b83\u3002\nlist.h:LIST_FOREACH\n\u904d\u5386\u94fe\u8868\u4e2d\u7684\u5143\u7d20\u3002\nlist.c:List_create\n\u7b80\u5355\u5730\u521b\u5efa\u4e3b\u8981\u7684List\u7ed3\u6784\u3002\nlist.c:List_destroy\n\u9500\u6bc1List\u4ee5\u53ca\u5176\u4e2d\u542b\u6709\u7684\u6240\u6709\u5143\u7d20\u3002\nlist.c:List_clear\n\u4e3a\u91ca\u653e\u6bcf\u4e2a\u8282\u70b9\u4e2d\u7684\u503c\uff08\u800c\u4e0d\u662f\u8282\u70b9\u672c\u8eab\uff09\u521b\u5efa\u7684\u8f85\u52a9\u51fd\u6570\u3002\nlist.c:List_clear_destroy\n\u6e05\u7406\u5e76\u9500\u6bc1\u94fe\u8868\u3002\u5b83\u5e76\u4e0d\u5341\u5206\u641e\u7b11\u56e0\u4e3a\u5b83\u5bf9\u6bcf\u4e2a\u5143\u7d20\u904d\u5386\u4e24\u6b21\u3002\nlist.c:List_push\n\u7b2c\u4e00\u4e2a\u64cd\u4f5c\u6f14\u793a\u4e86\u94fe\u8868\u7684\u6709\u70b9\u3002\u5b83\u5411\u94fe\u8868\u5c3e\u6dfb\u52a0\u65b0\u7684\u5143\u7d20\uff0c\u7531\u4e8e\u53ea\u662f\u4e00\u4e9b\u6307\u9488\u8d4b\u503c\uff0c\u6240\u4ee5\u975e\u5e38\u5feb\u3002\nlist.c:List_pop\nList_push\u7684\u53cd\u5411\u7248\u672c\uff0c\u5b83\u53bb\u9664\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u5e76\u8fd4\u56de\u5b83\u3002\nlist.c:List_unshift\n\u4ea6\u53ef\u4ee5\u8f7b\u6613\u5bf9\u94fe\u8868\u6267\u884c\u7684\u53e6\u4e00\u4ef6\u4e8b\uff0c\u5c31\u662f\u5feb\u901f\u5730\u5411\u94fe\u8868\u5934\u90e8\u6dfb\u52a0\u5143\u7d20\u3002\u7531\u4e8e\u627e\u4e0d\u5230\u5408\u9002\u7684\u8bcd\uff0c\u8fd9\u91cc\u6211\u628a\u5b83\u79f0\u4e3aunshift\u3002\nlist.c:List_shift\n\u7c7b\u4f3cList_pop\uff0c\u4f46\u662f\u5b83\u79fb\u9664\u94fe\u8868\u7684\u9996\u4e2a\u5143\u7d20\u5e76\u8fd4\u56de\u3002\nlist.c:List_remove\n\u5f53\u4f60\u6267\u884cList_pop\u6216List_shift\u65f6\uff0c\u5b83\u6267\u884c\u5b9e\u9645\u7684\u79fb\u9664\u64cd\u4f5c\u3002\u5728\u6570\u636e\u7ed3\u6784\u4e2d\u79fb\u9664\u6570\u636e\u603b\u662f\u770b\u4f3c\u6bd4\u8f83\u56f0\u96be\uff0c\u8fd9\u4e2a\u51fd\u6570\u4e5f\u4e0d\u4f8b\u5916\u3002\u5b83\u9700\u8981\u5904\u7406\u4e00\u4e9b\u6761\u4ef6\uff0c\u53d6\u51b3\u4e8e\u88ab\u79fb\u9664\u7684\u4f4d\u7f6e\uff0c\u5728\u5f00\u5934\u3001\u5728\u7ed3\u5c3e\u3001\u5f00\u5934\u5e76\u4e14\u7ed3\u5c3e\uff0c\u6216\u8005\u5728\u4e2d\u95f4\u3002\n\u8fd9\u4e9b\u51fd\u6570\u5927\u591a\u6570\u90fd\u6ca1\u4ec0\u4e48\u7279\u522b\u7684\uff0c\u4f60\u5e94\u8be5\u80fd\u591f\u8f7b\u6613\u63cf\u8ff0\u51fa\u6765\uff0c\u5e76\u4e14\u6839\u636e\u4ee3\u7801\u6765\u7406\u89e3\u5b83\u3002\u4f60\u5e94\u8be5\u5b8c\u5168\u4e13\u6ce8\u4e8eList_destroy\u4e2d\u7684LIST_FOREACH\u5982\u4f55\u4f7f\u7528\u6765\u7406\u89e3\u5b83\u5982\u4f55\u7b80\u5316\u901a\u5e38\u7684\u64cd\u4f5c\u3002\n\u6d4b\u8bd5\n\u5728\u4f60\u7f16\u8bd1\u5b83\u4eec\u4e4b\u524d\uff0c\u9700\u8981\u521b\u5efa\u6d4b\u8bd5\u6765\u786e\u4fdd\u5b83\u4eec\u6b63\u786e\u6267\u884c\u3002\n#include \"minunit.h\"\n#include &lt;lcthw\/list.h&gt;\n#include &lt;assert.h&gt;\n\nstatic List *list = NULL;\nchar *test1 = \"test1 data\";\nchar *test2 = \"test2 data\";\nchar *test3 = \"test3 data\";\n\n\nchar *test_create()\n{\n    list = List_create();\n    mu_assert(list != NULL, \"Failed to create list.\");\n\n    return NULL;\n}\n\n\nchar *test_destroy()\n{\n    List_clear_destroy(list);\n\n    return NULL;\n\n}\n\n\nchar *test_push_pop()\n{\n    List_push(list, test1);\n    mu_assert(List_last(list) == test1, \"Wrong last value.\");\n\n    List_push(list, test2);\n    mu_assert(List_last(list) == test2, \"Wrong last value\");\n\n    List_push(list, test3);\n    mu_assert(List_last(list) == test3, \"Wrong last value.\");\n    mu_assert(List_count(list) == 3, \"Wrong count on push.\");\n\n    char *val = List_pop(list);\n    mu_assert(val == test3, \"Wrong value on pop.\");\n\n    val = List_pop(list);\n    mu_assert(val == test2, \"Wrong value on pop.\");\n\n    val = List_pop(list);\n    mu_assert(val == test1, \"Wrong value on pop.\");\n    mu_assert(List_count(list) == 0, \"Wrong count after pop.\");\n\n    return NULL;\n}\n\nchar *test_unshift()\n{\n    List_unshift(list, test1);\n    mu_assert(List_first(list) == test1, \"Wrong first value.\");\n\n    List_unshift(list, test2);\n    mu_assert(List_first(list) == test2, \"Wrong first value\");\n\n    List_unshift(list, test3);\n    mu_assert(List_first(list) == test3, \"Wrong last value.\");\n    mu_assert(List_count(list) == 3, \"Wrong count on unshift.\");\n\n    return NULL;\n}\n\nchar *test_remove()\n{\n    \/\/ we only need to test the middle remove case since push\/shift\n    \/\/ already tests the other cases\n\n    char *val = List_remove(list, list-&gt;first-&gt;next);\n    mu_assert(val == test2, \"Wrong removed element.\");\n    mu_assert(List_count(list) == 2, \"Wrong count after remove.\");\n    mu_assert(List_first(list) == test3, \"Wrong first after remove.\");\n    mu_assert(List_last(list) == test1, \"Wrong last after remove.\");\n\n    return NULL;\n}\n\n\nchar *test_shift()\n{\n    mu_assert(List_count(list) != 0, \"Wrong count before shift.\");\n\n    char *val = List_shift(list);\n    mu_assert(val == test3, \"Wrong value on shift.\");\n\n    val = List_shift(list);\n    mu_assert(val == test1, \"Wrong value on shift.\");\n    mu_assert(List_count(list) == 0, \"Wrong count after shift.\");\n\n    return NULL;\n}\n\n\n\nchar *all_tests() {\n    mu_suite_start();\n\n    mu_run_test(test_create);\n    mu_run_test(test_push_pop);\n    mu_run_test(test_unshift);\n    mu_run_test(test_remove);\n    mu_run_test(test_shift);\n    mu_run_test(test_destroy);\n\n    return NULL;\n}\n\nRUN_TESTS(all_tests);\n\u5b83\u7b80\u5355\u5730\u904d\u5386\u4e86\u6bcf\u4e2a\u64cd\u4f5c\uff0c\u5e76\u4e14\u786e\u4fdd\u5b83\u4eec\u6709\u6548\u3002\u6211\u5728\u6d4b\u8bd5\u4e2d\u505a\u4e86\u7b80\u5316\uff0c\u5bf9\u4e8e\u6574\u4e2a\u7a0b\u5e8f\u6211\u53ea\u521b\u5efa\u4e86\u4e00\u4e2aList *list\uff0c\u8fd9\u89e3\u51b3\u4e86\u4e3a\u6bcf\u4e2a\u6d4b\u8bd5\u6784\u5efa\u4e00\u4e2aList\u7684\u9ebb\u70e6\uff0c\u4f46\u5b83\u540c\u65f6\u610f\u5473\u7740\u4e00\u4e9b\u6d4b\u8bd5\u4f1a\u53d7\u5230\u4e4b\u524d\u6d4b\u8bd5\u7684\u5f71\u54cd\u3002\u8fd9\u91cc\u6211\u8bd5\u7740\u662f\u6bcf\u4e2a\u6d4b\u8bd5\u4e0d\u6539\u53d8\u94fe\u8868\uff0c\u6216\u5b9e\u9645\u4f7f\u7528\u4e0a\u4e00\u4e2a\u6d4b\u8bd5\u7684\u7ed3\u679c\u3002\n\u4f60\u4f1a\u770b\u5230\u4ec0\u4e48\n\u5982\u679c\u4f60\u6b63\u786e\u5b8c\u6210\u4e86\u6bcf\u4ef6\u4e8b\uff0c\u5f53\u4f60\u6267\u884c\u6784\u5efa\u5e76\u4e14\u8fd0\u884c\u5355\u5143\u6d4b\u8bd5\u662f\uff0c\u4f60\u4f1a\u770b\u5230\uff1a\n$ make\ncc -g -O2 -Wall -Wextra -Isrc -rdynamic -DNDEBUG  -fPIC   -c -o src\/lcthw\/list.o src\/lcthw\/list.c\nar rcs build\/liblcthw.a src\/lcthw\/list.o\nranlib build\/liblcthw.a\ncc -shared -o build\/liblcthw.so src\/lcthw\/list.o\ncc -g -O2 -Wall -Wextra -Isrc -rdynamic -DNDEBUG  build\/liblcthw.a    tests\/list_tests.c   -o tests\/list_tests\nsh .\/tests\/runtests.sh\nRunning unit tests:\n----\nRUNNING: .\/tests\/list_tests\nALL TESTS PASSED\nTests run: 6\ntests\/list_tests PASS\n$\n\u786e\u4fdd6\u4e2a\u6d4b\u8bd5\u8fd0\u884c\u5b8c\u6bd5\uff0c\u4ee5\u53ca\u6784\u5efa\u65f6\u6ca1\u6709\u8b66\u544a\u6216\u9519\u8bef\uff0c\u5e76\u4e14\u6210\u529f\u6784\u5efa\u4e86build\/liblcthw.a\u548cbuild\/liblcthw.so\u6587\u4ef6\u3002\n\u5982\u4f55\u6539\u8fdb\n\u6211\u6253\u7b97\u544a\u8bc9\u4f60\u5982\u4f55\u6539\u8fdb\u4ee3\u7801\uff0c\u800c\u4e0d\u662f\u4f7f\u5b83\u5d29\u6e83\u3002\n\n\u4f60\u53ef\u4ee5\u4f7f\u7528LIST_FOREACH\u5e76\u5728\u5faa\u73af\u4e2d\u8c03\u7528free\u6765\u4f7fList_clear_destroy\u66f4\u9ad8\u6548\u3002\n\u4f60\u53ef\u4ee5\u4e3a\u4e00\u4e9b\u5148\u51b3\u6761\u4ef6\u6dfb\u52a0\u65ad\u8a00\uff0c\u4f7f\u5176\u90e8\u7ed3\u6784NULL\u503c\u4f5c\u4e3aList *list\u7684\u53c2\u6570\u3002\n\u4f60\u53ef\u4ee5\u6dfb\u52a0\u4e0d\u53d8\u4e86\uff0c\u6765\u68c0\u67e5\u5217\u8868\u7684\u5185\u5bb9\u59cb\u7ec8\u6b63\u786e\uff0c\u4f8b\u5982count\u6c38\u8fdc\u4e0d\u4f1a&lt; 0\uff0c\u5982\u679ccount &gt; 0\uff0cfirst\u4e0d\u4e3aNULL\u3002\n\u4f60\u53ef\u4ee5\u5411\u5934\u6587\u4ef6\u6dfb\u52a0\u6587\u6863\uff0c\u5728\u6bcf\u4e2a\u7ed3\u6784\u3001\u51fd\u6570\u548c\u5b8f\u4e4b\u524d\u6dfb\u52a0\u63cf\u8ff0\u5176\u4f5c\u7528\u7684\u6ce8\u91ca\u3002\n\n\u8fd9\u4e9b\u6539\u8fdb\u6267\u884c\u4e86\u9632\u5fa1\u6027\u7f16\u7a0b\u5b9e\u8df5\uff0c\u5e76\u4e14\u201c\u52a0\u56fa\u201d\u4e86\u4ee3\u7801\u6765\u907f\u514d\u9519\u8bef\u6216\u4f7f\u7528\u4e0d\u5f53\u3002\u9a6c\u4e0a\u53bb\u505a\u8fd9\u4e9b\u4e8b\u60c5\uff0c\u4e4b\u540e\u627e\u5230\u5c3d\u53ef\u80fd\u591a\u7684\u529e\u6cd5\u6765\u6539\u8fdb\u4ee3\u7801\u3002\n\u9644\u52a0\u9898\n\n\u7814\u7a76\u53cc\u5411\u548c\u5355\u5411\u94fe\u8868\uff0c\u4ee5\u53ca\u4ec0\u4e48\u60c5\u51b5\u4e0b\u5176\u4e2d\u4e00\u79cd\u4f18\u4e8e\u53e6\u4e00\u79cd\u3002\n\u7814\u7a76\u53cc\u5411\u94fe\u8868\u7684\u9650\u5236\u3002\u4f8b\u5982\uff0c\u867d\u7136\u5b83\u4eec\u5bf9\u4e8e\u63d2\u5165\u548c\u5220\u9664\u5143\u7d20\u5f88\u9ad8\u6548\uff0c\u4f46\u662f\u5bf9\u4e8e\u53d8\u91cf\u5143\u7d20\u6bd4\u8f83\u6162\u3002\n\u8fd8\u7f3a\u5c11\u4ec0\u4e48\u4f60\u80fd\u60f3\u5230\u7684\u64cd\u4f5c\uff1f\u6bd4\u5982\u590d\u5236\u3001\u8fde\u63a5\u3001\u5206\u5272\u7b49\u7b49\u3002\u5b9e\u73b0\u8fd9\u4e9b\u64cd\u4f5c\uff0c\u5e76\u4e14\u4e3a\u5b83\u4eec\u7f16\u5199\u5355\u5143\u6d4b\u8bd5\u3002\n","categories":"\u7ec3\u4e607","tags":["\u51fd\u6570","\u7b97\u6cd5","\u7ed3\u6784"]},{"title":"\u94fe\u8868\u7b97\u6cd5","url":"https:\/\/naka507.github.io\/posts\/219AB7A902A81B94.html","content":"\u94fe\u8868\u7b97\u6cd5\n\u6211\u5c06\u60f3\u4f60\u4ecb\u7ecd\u6d89\u53ca\u5230\u6392\u5e8f\u7684\u4e24\u4e2a\u7b97\u6cd5\uff0c\u4f60\u53ef\u4ee5\u7528\u5b83\u4eec\u64cd\u4f5c\u94fe\u8868\u3002\u6211\u9996\u5148\u8981\u8b66\u544a\u4f60\uff0c\u5982\u679c\u4f60\u6253\u7b97\u5bf9\u6570\u636e\u6392\u5e8f\uff0c\u4e0d\u8981\u4f7f\u7528\u94fe\u8868\uff0c\u5b83\u4eec\u5bf9\u4e8e\u6392\u5e8f\u5341\u5206\u9ebb\u70e6\uff0c\u5e76\u4e14\u6709\u66f4\u597d\u7684\u6570\u636e\u7ed3\u6784\u4f5c\u4e3a\u66ff\u4ee3\u3002\u6211\u5411\u4f60\u4ecb\u7ecd\u8fd9\u4e24\u79cd\u7b97\u6cd5\u53ea\u662f\u56e0\u4e3a\u5b83\u4eec\u96be\u4ee5\u5728\u94fe\u8868\u4e0a\u5b8c\u6210\uff0c\u5e76\u4e14\u8ba9\u4f60\u601d\u8003\u5982\u4f55\u9ad8\u6548\u64cd\u4f5c\u5b83\u4eec\u3002\n\u4e3a\u4e86\u7f16\u5199\u8fd9\u672c\u4e66\uff0c\u6211\u6253\u7b97\u5c06\u7b97\u6cd5\u653e\u5728\u4e24\u4e2a\u4e0d\u540c\u7684\u6587\u4ef6\u4e2d\uff0clist_algos.h\u548clist_algos.c\uff0c\u4e4b\u540e\u5728list_algos_test.c\u4e2d\u7f16\u5199\u6d4b\u8bd5\u3002\u73b0\u5728\u4f60\u8981\u6309\u7167\u6211\u7684\u7ed3\u6784\uff0c\u56e0\u4e3a\u5b83\u8db3\u4ee5\u628a\u4e8b\u60c5\u505a\u597d\uff0c\u4f46\u662f\u5982\u679c\u4f60\u4f7f\u7528\u5176\u5b83\u7684\u5e93\u8981\u8bb0\u4f4f\u8fd9\u5e76\u4e0d\u662f\u901a\u7528\u7684\u7ed3\u6784\u3002\n\u8fd9\u4e2a\u7ec3\u4e60\u4e2d\u6211\u6253\u7b97\u7ed9\u4f60\u4e00\u4e9b\u989d\u5916\u7684\u6311\u6218\uff0c\u5e76\u4e14\u5e0c\u671b\u4f60\u4e0d\u8981\u4f5c\u5f0a\u3002\u6211\u6253\u7b97\u5148\u7ed9\u4f60\u5355\u5143\u6d4b\u8bd5\uff0c\u5e76\u4e14\u8ba9\u4f60\u6253\u4e0b\u6765\u3002\u4e4b\u540e\u8ba9\u4f60\u57fa\u4e8e\u5b83\u4eec\u5728\u7ef4\u57fa\u767e\u79d1\u4e2d\u7684\u63cf\u8ff0\uff0c\u5c1d\u8bd5\u5b9e\u73b0\u8fd9\u4e2a\u4e24\u4e2a\u7b97\u6cd5\uff0c\u4e4b\u540e\u770b\u770b\u4f60\u7684\u4ee3\u7801\u662f\u5426\u548c\u6211\u7684\u7c7b\u4f3c\u3002\n\u5192\u6ce1\u6392\u5e8f\u548c\u5f52\u5e76\u6392\u5e8f\n\u4e92\u8054\u7f51\u7684\u5f3a\u5927\u4e4b\u5904\uff0c\u5c31\u662f\u6211\u53ef\u4ee5\u4ec5\u4ec5\u7ed9\u4f60\u5192\u6ce1\u6392\u5e8f\u548c\u5f52\u5e76\u6392\u5e8f\u7684\u94fe\u63a5\uff0c\u6765\u8ba9\u4f60\u5b66\u4e60\u5b83\u4eec\u3002\u662f\u7684\uff0c\u8fd9\u7701\u4e86\u6211\u5f88\u591a\u5b57\u3002\u73b0\u5728\u6211\u8981\u544a\u8bc9\u4f60\u5982\u4f55\u4f7f\u7528\u5b83\u4eec\u7684\u4f2a\u4ee3\u7801\u6765\u5b9e\u73b0\u5b83\u4eec\u3002\u4f60\u53ef\u4ee5\u50cf\u8fd9\u6837\u6765\u5b9e\u73b0\u7b97\u6cd5\uff1a\n\n\u9605\u8bfb\u63cf\u8ff0\uff0c\u5e76\u4e14\u89c2\u5bdf\u4efb\u4f55\u53ef\u89c6\u5316\u7684\u56fe\u8868\u3002\n\u4f7f\u7528\u65b9\u6846\u548c\u7ebf\u6761\u5728\u7eb8\u4e0a\u753b\u51fa\u7b97\u6cd5\uff0c\u6216\u8005\u4f7f\u7528\u4e00\u4e9b\u5e26\u6709\u6570\u5b57\u7684\u5361\u7247\uff08\u6bd4\u5982\u6251\u514b\u724c\uff09\uff0c\u5c1d\u8bd5\u624b\u52a8\u6267\u884c\u7b97\u6cd5\u3002\u8fd9\u4f1a\u5411\u4f60\u5f62\u8c61\u5730\u5c55\u793a\u7b97\u6cd5\u7684\u6267\u884c\u8fc7\u7a0b\u3002\n\u5728list_algos.c\u6587\u6848\u603b\u521b\u5efa\u51fd\u6570\u7684\u4e3b\u5e72\uff0c\u5e76\u4e14\u521b\u5efalist_algos.h\u6587\u4ef6\uff0c\u4e4b\u540e\u521b\u5efa\u6d4b\u8bd5\u4ee3\u7801\u3002\n\u7f16\u5199\u7b2c\u4e00\u4e2a\u6d4b\u8bd5\u5e76\u4e14\u7f16\u8bd1\u6240\u6709\u4e1c\u897f\u3002\n\u56de\u5230\u7ef4\u57fa\u767e\u79d1\u9875\u9762\uff0c\u590d\u5236\u7c98\u8d34\u4f2a\u4ee3\u7801\u5230\u4f60\u521b\u5efa\u7684\u51fd\u6570\u4e2d\uff08\u4e0d\u662fC\u4ee3\u7801\uff09\u3002\n\u5c06\u4f2a\u4ee3\u7801\u7ffb\u8bd1\u6210\u826f\u597d\u7684C\u4ee3\u7801\uff0c\u5c31\u50cf\u6211\u6559\u4f60\u7684\u90a3\u6837\uff0c\u4f7f\u7528\u4f60\u7684\u5355\u5143\u6d4b\u8bd5\u6765\u4fdd\u8bc1\u5b83\u6709\u6548\u3002\n\u4e3a\u8fb9\u754c\u60c5\u51b5\u8865\u5145\u4e00\u4e9b\u6d4b\u8bd5\uff0c\u4f8b\u5982\u7a7a\u94fe\u8868\uff0c\u6392\u5e8f\u53f7\u7684\u94fe\u8868\uff0c\u4ee5\u53ca\u5176\u5b83\u3002\n\u5bf9\u4e0b\u4e00\u4e2a\u7b97\u6cd5\u91cd\u590d\u8fd9\u4e9b\u8fc7\u7a0b\u5e76\u6d4b\u8bd5\u3002\n\n\u6211\u53ea\u662f\u544a\u8bc9\u4f60\u7406\u89e3\u5927\u591a\u6570\u7b97\u6cd5\u7684\u79d8\u5bc6\uff0c\u76f4\u5230\u4f60\u78b0\u5230\u4e00\u4e9b\u66f4\u52a0\u9ebb\u70e6\u7684\u7b97\u6cd5\u3002\u8fd9\u91cc\u4f60\u53ea\u662f\u6309\u7167\u7ef4\u57fa\u767e\u79d1\u6765\u5b9e\u73b0\u5192\u6ce1\u6392\u5e8f\u548c\u5f52\u5e76\u6392\u5e8f\uff0c\u5b83\u4eec\u662f\u4e00\u4e2a\u597d\u7684\u8d77\u59cb\u3002\n\u5355\u5143\u6d4b\u8bd5\n\u4e0b\u9762\u662f\u4f60\u5e94\u8be5\u901a\u8fc7\u7684\u5355\u5143\u6d4b\u8bd5\uff1a\n#include \"minunit.h\"\n#include &lt;lcthw\/list_algos.h&gt;\n#include &lt;assert.h&gt;\n#include &lt;string.h&gt;\n\nchar *values[] = {\"XXXX\", \"1234\", \"abcd\", \"xjvef\", \"NDSS\"};\n#define NUM_VALUES 5\n\nList *create_words()\n{\n    int i = 0;\n    List *words = List_create();\n\n    for(i = 0; i &lt; NUM_VALUES; i++) {\n        List_push(words, values[i]);\n    }\n\n    return words;\n}\n\nint is_sorted(List *words)\n{\n    LIST_FOREACH(words, first, next, cur) {\n        if(cur-&gt;next &amp;&amp; strcmp(cur-&gt;value, cur-&gt;next-&gt;value) &gt; 0) {\n            debug(\"%s %s\", (char *)cur-&gt;value, (char *)cur-&gt;next-&gt;value);\n            return 0;\n        }\n    }\n\n    return 1;\n}\n\nchar *test_bubble_sort()\n{\n    List *words = create_words();\n\n    \/\/ should work on a list that needs sorting\n    int rc = List_bubble_sort(words, (List_compare)strcmp);\n    mu_assert(rc == 0, \"Bubble sort failed.\");\n    mu_assert(is_sorted(words), \"Words are not sorted after bubble sort.\");\n\n    \/\/ should work on an already sorted list\n    rc = List_bubble_sort(words, (List_compare)strcmp);\n    mu_assert(rc == 0, \"Bubble sort of already sorted failed.\");\n    mu_assert(is_sorted(words), \"Words should be sort if already bubble sorted.\");\n\n    List_destroy(words);\n\n    \/\/ should work on an empty list\n    words = List_create(words);\n    rc = List_bubble_sort(words, (List_compare)strcmp);\n    mu_assert(rc == 0, \"Bubble sort failed on empty list.\");\n    mu_assert(is_sorted(words), \"Words should be sorted if empty.\");\n\n    List_destroy(words);\n\n    return NULL;\n}\n\nchar *test_merge_sort()\n{\n    List *words = create_words();\n\n    \/\/ should work on a list that needs sorting\n    List *res = List_merge_sort(words, (List_compare)strcmp);\n    mu_assert(is_sorted(res), \"Words are not sorted after merge sort.\");\n\n    List *res2 = List_merge_sort(res, (List_compare)strcmp);\n    mu_assert(is_sorted(res), \"Should still be sorted after merge sort.\");\n    List_destroy(res2);\n    List_destroy(res);\n\n    List_destroy(words);\n    return NULL;\n}\n\n\nchar *all_tests()\n{\n    mu_suite_start();\n\n    mu_run_test(test_bubble_sort);\n    mu_run_test(test_merge_sort);\n\n    return NULL;\n}\n\nRUN_TESTS(all_tests);\n\u5efa\u8bae\u4f60\u4ece\u5192\u6ce1\u6392\u5e8f\u5f00\u59cb\uff0c\u4f7f\u5b83\u6b63\u786e\uff0c\u4e4b\u540e\u518d\u6d4b\u8bd5\u5f52\u5e76\u3002\u6211\u6240\u505a\u7684\u5c31\u662f\u7f16\u5199\u51fd\u6570\u539f\u578b\u548c\u4e3b\u5e72\uff0c\u8ba9\u8fd9\u4e09\u4e2a\u6587\u4ef6\u80fd\u591f\u7f16\u8bd1\uff0c\u4f46\u4e0d\u80fd\u901a\u8fc7\u6d4b\u8bd5\u3002\u4e4b\u540e\u4f60\u5c06\u5b9e\u73b0\u586b\u5145\u8fdb\u5165\u4e4b\u540e\u624d\u80fd\u591f\u5de5\u4f5c\u3002\n\u5b9e\u73b0\n\u4f60\u4f5c\u5f0a\u4e86\u5417\uff1f\u4e4b\u540e\u7684\u7ec3\u4e60\u4e2d\uff0c\u6211\u53ea\u4f1a\u7ed9\u4f60\u5355\u5143\u6d4b\u8bd5\uff0c\u5e76\u4e14\u8ba9\u81ea\u5df1\u5b9e\u73b0\u5b83\u3002\u5bf9\u4e8e\u4f60\u6765\u8bf4\uff0c\u4e0d\u770b\u8fd9\u6bb5\u4ee3\u7801\u77e5\u9053\u4f60\u81ea\u5df1\u5b9e\u73b0\u5b83\u662f\u4e00\u79cd\u5f88\u597d\u7684\u7ec3\u4e60\u3002\u4e0b\u9762\u662flist_algos.c\u548clist_algos.h\u7684\u4ee3\u7801\uff1a\n#ifndef lcthw_List_algos_h\n#define lcthw_List_algos_h\n\n#include &lt;lcthw\/list.h&gt;\n\ntypedef int (*List_compare)(const void *a, const void *b);\n\nint List_bubble_sort(List *list, List_compare cmp);\n\nList *List_merge_sort(List *list, List_compare cmp);\n\n#endif\n#include &lt;lcthw\/list_algos.h&gt;\n#include &lt;lcthw\/dbg.h&gt;\n\ninline void ListNode_swap(ListNode *a, ListNode *b)\n{\n    void *temp = a-&gt;value;\n    a-&gt;value = b-&gt;value;\n    b-&gt;value = temp;\n}\n\nint List_bubble_sort(List *list, List_compare cmp)\n{\n    int sorted = 1;\n\n    if(List_count(list) &lt;= 1) {\n        return 0;  \/\/ already sorted\n    }\n\n    do {\n        sorted = 1;\n        LIST_FOREACH(list, first, next, cur) {\n            if(cur-&gt;next) {\n                if(cmp(cur-&gt;value, cur-&gt;next-&gt;value) &gt; 0) {\n                    ListNode_swap(cur, cur-&gt;next);\n                    sorted = 0;\n                }\n            }\n        }\n    } while(!sorted);\n\n    return 0;\n}\n\ninline List *List_merge(List *left, List *right, List_compare cmp)\n{\n    List *result = List_create();\n    void *val = NULL;\n\n    while(List_count(left) &gt; 0 || List_count(right) &gt; 0) {\n        if(List_count(left) &gt; 0 &amp;&amp; List_count(right) &gt; 0) {\n            if(cmp(List_first(left), List_first(right)) &lt;= 0) {\n                val = List_shift(left);\n            } else {\n                val = List_shift(right);\n            }\n\n            List_push(result, val);\n        } else if(List_count(left) &gt; 0) {\n            val = List_shift(left);\n            List_push(result, val);\n        } else if(List_count(right) &gt; 0) {\n            val = List_shift(right);\n            List_push(result, val);\n        }\n    }\n\n    return result;\n}\n\nList *List_merge_sort(List *list, List_compare cmp)\n{\n    if(List_count(list) &lt;= 1) {\n        return list;\n    }\n\n    List *left = List_create();\n    List *right = List_create();\n    int middle = List_count(list) \/ 2;\n\n    LIST_FOREACH(list, first, next, cur) {\n        if(middle &gt; 0) {\n            List_push(left, cur-&gt;value);\n        } else {\n            List_push(right, cur-&gt;value);\n        }\n\n        middle--;\n    }\n\n    List *sort_left = List_merge_sort(left, cmp);\n    List *sort_right = List_merge_sort(right, cmp);\n\n    if(sort_left != left) List_destroy(left);\n    if(sort_right != right) List_destroy(right);\n\n    return List_merge(sort_left, sort_right, cmp);\n}\n\u5192\u6ce1\u6392\u5e8f\u5e76\u4e0d\u96be\u4ee5\u7406\u89e3\uff0c\u867d\u7136\u5b83\u975e\u5e38\u6162\u3002\u5f52\u5e76\u6392\u5e8f\u66f4\u4e3a\u590d\u6742\uff0c\u5b9e\u8bdd\u8bb2\u5982\u679c\u6211\u60f3\u8981\u727a\u7272\u53ef\u8bfb\u6027\u7684\u8bdd\uff0c\u6211\u4f1a\u82b1\u4e00\u70b9\u65f6\u95f4\u6765\u4f18\u5316\u4ee3\u7801\u3002\n\u5f52\u5e76\u6392\u5e8f\u6709\u53e6\u4e00\u79cd\u201c\u81ea\u5e95\u5411\u4e0a\u201d\u7684\u5b9e\u73b0\u65b9\u5f0f\uff0c\u4f46\u662f\u5b83\u592a\u96be\u4e86\uff0c\u6211\u5c31\u6ca1\u6709\u9009\u62e9\u5b83\u3002\u5c31\u50cf\u6211\u521a\u624d\u8bf4\u7684\u90a3\u6837\uff0c\u5728\u94fe\u8868\u4e0a\u7f16\u5199\u6392\u5e8f\u7b97\u6cd5\u6ca1\u6709\u4ec0\u4e48\u610f\u601d\u3002\u4f60\u53ef\u4ee5\u628a\u65f6\u95f4\u90fd\u82b1\u5728\u4f7f\u5b83\u66f4\u5feb\uff0c\u5b83\u6bd4\u8d77\u5176\u4ed6\u53ef\u6392\u5e8f\u7684\u6570\u636e\u7ed3\u6784\u4f1a\u76f8\u5f53\u7248\u3002\u94fe\u8868\u7684\u672c\u8d28\u51b3\u5b9a\u4e86\u5982\u679c\u4f60\u9700\u8981\u5bf9\u6570\u636e\u8fdb\u884c\u6392\u5e8f\uff0c\u4f60\u5c31\u4e0d\u8981\u4f7f\u7528\u5b83\u4eec\uff08\u5c24\u5176\u662f\u5355\u5411\u7684\uff09\u3002\n\u4f60\u4f1a\u770b\u5230\u4ec0\u4e48\n\u5982\u679c\u4e00\u5207\u90fd\u6b63\u5e38\u5de5\u4f5c\uff0c\u4f60\u4f1a\u770b\u5230\u8fd9\u4e9b\uff1a\n$ make clean all\nrm -rf build src\/lcthw\/list.o src\/lcthw\/list_algos.o tests\/list_algos_tests tests\/list_tests\nrm -f tests\/tests.log\nfind . -name \"*.gc*\" -exec rm {} \\;\nrm -rf `find . -name \"*.dSYM\" -print`\ncc -g -O2 -Wall -Wextra -Isrc -rdynamic -DNDEBUG  -fPIC   -c -o src\/lcthw\/list.o src\/lcthw\/list.c\ncc -g -O2 -Wall -Wextra -Isrc -rdynamic -DNDEBUG  -fPIC   -c -o src\/lcthw\/list_algos.o src\/lcthw\/list_algos.c\nar rcs build\/liblcthw.a src\/lcthw\/list.o src\/lcthw\/list_algos.o\nranlib build\/liblcthw.a\ncc -shared -o build\/liblcthw.so src\/lcthw\/list.o src\/lcthw\/list_algos.o\ncc -g -O2 -Wall -Wextra -Isrc -rdynamic -DNDEBUG  build\/liblcthw.a    tests\/list_algos_tests.c   -o tests\/list_algos_tests\ncc -g -O2 -Wall -Wextra -Isrc -rdynamic -DNDEBUG  build\/liblcthw.a    tests\/list_tests.c   -o tests\/list_tests\nsh .\/tests\/runtests.sh\nRunning unit tests:\n----\nRUNNING: .\/tests\/list_algos_tests\nALL TESTS PASSED\nTests run: 2\ntests\/list_algos_tests PASS\n----\nRUNNING: .\/tests\/list_tests\nALL TESTS PASSED\nTests run: 6\ntests\/list_tests PASS\n$\n\u8fd9\u4e2a\u7ec3\u4e60\u4e4b\u540e\u6211\u5c31\u4e0d\u4f1a\u5411\u4f60\u5c55\u793a\u8fd9\u6837\u7684\u8f93\u51fa\u4e86\uff0c\u9664\u975e\u6709\u5fc5\u8981\u5411\u4f60\u5c55\u793a\u5b83\u7684\u5de5\u4f5c\u539f\u7406\u3002\u4f60\u5e94\u8be5\u80fd\u77e5\u9053\u6211\u8fd0\u884c\u4e86\u6d4b\u8bd5\uff0c\u5e76\u4e14\u901a\u8fc7\u4e86\u6240\u6709\u6d4b\u8bd5\u3002\n\u5982\u4f55\u6539\u8fdb\n\u9000\u56de\u53bb\u67e5\u770b\u7b97\u6cd5\u63cf\u8ff0\uff0c\u6709\u4e00\u4e9b\u65b9\u6cd5\u53ef\u7528\u4e8e\u6539\u8fdb\u8fd9\u4e9b\u5b9e\u73b0\uff0c\u5176\u4e2d\u4e00\u4e9b\u662f\u5f88\u663e\u7136\u7684\uff1a\n\n\u5f52\u5e76\u6392\u5e8f\u505a\u4e86\u5927\u91cf\u7684\u94fe\u8868\u590d\u5236\u548c\u521b\u5efa\u64cd\u4f5c\uff0c\u5bfb\u627e\u51cf\u5c11\u5b83\u4eec\u7684\u529e\u6cd5\u3002\n\u5f52\u5e76\u6392\u5e8f\u7684\u7ef4\u57fa\u767e\u79d1\u63cf\u8ff0\u63d0\u5230\u4e86\u4e00\u4e9b\u4f18\u5316\uff0c\u5b9e\u73b0\u5b83\u4eec\u3002\n\u4f60\u80fd\u4f7f\u7528List_split\u548cList_join\uff08\u5982\u679c\u4f60\u5b9e\u73b0\u4e86\u7684\u8bdd\uff09\u6765\u6539\u8fdb\u5f52\u5e76\u6392\u5e8f\u561b\uff1f\n\u6d4f\u89c8\u6240\u6709\u9632\u5fa1\u6027\u7f16\u7a0b\u539f\u5219\uff0c\u68c0\u67e5\u5e76\u63d0\u5347\u8fd9\u4e00\u5b9e\u73b0\u7684\u5065\u58ee\u6027\uff0c\u907f\u514dNULL\u6307\u9488\uff0c\u5e76\u4e14\u521b\u5efa\u4e00\u4e2a\u53ef\u9009\u7684\u8c03\u8bd5\u7ea7\u522b\u7684\u4e0d\u53d8\u91cf\uff0c\u5728\u6392\u5e8f\u540e\u5b9e\u73b0is_sorted\u7684\u529f\u80fd\u3002\n\n\u9644\u52a0\u9898\n\n\u521b\u5efa\u5355\u5143\u6d4b\u8bd5\u6765\u6bd4\u8f83\u8fd9\u4e24\u4e2a\u7b97\u6cd5\u7684\u6027\u80fd\u3002\u4f60\u9700\u8981man 3 time\u6765\u67e5\u8be2\u57fa\u672c\u7684\u65f6\u95f4\u51fd\u6570\uff0c\u5e76\u4e14\u9700\u8981\u8fd0\u884c\u8db3\u591f\u7684\u8fed\u4ee3\u6b21\u6570\uff0c\u81f3\u5c11\u4ee5\u51e0\u79d2\u949f\u4f5c\u4e3a\u6837\u672c\u3002\n\u6539\u53d8\u9700\u8981\u6392\u5e8f\u7684\u94fe\u8868\u4e2d\u7684\u6570\u636e\u603b\u91cf\uff0c\u770b\u770b\u8017\u65f6\u5982\u4f55\u53d8\u5316\u3002\n\u5bfb\u627e\u65b9\u6cd5\u6765\u521b\u5efa\u4e0d\u540c\u957f\u5ea6\u7684\u968f\u673a\u94fe\u8868\uff0c\u5e76\u4e14\u6d4b\u91cf\u9700\u8981\u591a\u5c11\u65f6\u95f4\uff0c\u4e4b\u540e\u5c06\u5b83\u53ef\u89c6\u5316\u5e76\u4e0e\u7b97\u6cd5\u7684\u63cf\u8ff0\u5bf9\u6bd4\u3002\n\u5c1d\u8bd5\u89e3\u91ca\u4e3a\u4ec0\u4e48\u5bf9\u94fe\u8868\u6392\u5e8f\u5341\u5206\u9ebb\u70e6\u3002\n\u5b9e\u73b0List_insert_sorted\uff08\u6709\u5e8f\u94fe\u8868\uff09\uff0c\u5b83\u4f7f\u7528List_compare\uff0c\u63a5\u6536\u4e00\u4e2a\u503c\uff0c\u5c06\u5176\u63d2\u5165\u5230\u6b63\u786e\u7684\u4f4d\u7f6e\uff0c\u4f7f\u94fe\u8868\u6709\u5e8f\u3002\u5b83\u4e0e\u521b\u5efa\u94fe\u8868\u540e\u518d\u8fdb\u884c\u6392\u5e8f\u76f8\u6bd4\u600e\u4e48\u6837\uff1f\n\u5c1d\u8bd5\u5b9e\u73b0\u7ef4\u57fa\u767e\u79d1\u4e0a\u201c\u81ea\u5e95\u5411\u4e0a\u201d\u7684\u5f52\u5e76\u6392\u5e8f\u3002\u4e0a\u9762\u7684\u4ee3\u7801\u5df2\u7ecf\u662fC\u5199\u7684\u4e86\uff0c\u6240\u4ee5\u5f88\u5bb9\u6613\u91cd\u65b0\u521b\u5efa\uff0c\u4f46\u662f\u8981\u8bd5\u7740\u7406\u89e3\u5b83\u7684\u5de5\u4f5c\u539f\u7406\uff0c\u5e76\u4e0e\u8fd9\u91cc\u7684\u4f4e\u6548\u7248\u672c\u5bf9\u6bd4\u3002\n","categories":"\u7ec3\u4e608","tags":["\u7b97\u6cd5","\u94fe\u8868","\u6392\u5e8f"]},{"title":"\u52a8\u6001\u6570\u7ec4","url":"https:\/\/naka507.github.io\/posts\/4375976486E9101E.html","content":"\u52a8\u6001\u6570\u7ec4\n\u52a8\u6001\u6570\u7ec4\u662f\u81ea\u589e\u957f\u7684\u6570\u7ec4\uff0c\u5b83\u4e0e\u94fe\u8868\u6709\u5f88\u591a\u76f8\u540c\u7684\u7279\u6027\u3002\u5b83\u901a\u5e38\u5360\u636e\u66f4\u5c11\u7684\u7a7a\u95f4\uff0c\u8dd1\u5f97\u66f4\u5feb\uff0c\u8fd8\u6709\u4e00\u4e9b\u5176\u5b83\u7684\u4f18\u52bf\u5c5e\u6027\u3002\u8fd9\u4e2a\u7ec3\u4e60\u4f1a\u6d89\u53ca\u5230\u5b83\u7684\u4e00\u4e9b\u7f3a\u70b9\uff0c\u6bd4\u5982\u4ece\u5f00\u5934\u79fb\u9664\u5143\u7d20\u4f1a\u5f88\u6162\uff0c\u5e76\u7ed9\u51fa\u89e3\u51b3\u65b9\u6848\uff08\u53ea\u4ece\u672b\u5c3e\u79fb\u9664\uff09\u3002\n\u52a8\u6001\u6570\u7ec4\u7b80\u5355\u5730\u5b9e\u73b0\u4e3avoid **\u6307\u9488\u7684\u6570\u7ec4\uff0c\u5b83\u662f\u9884\u5206\u914d\u5185\u5b58\u7684\uff0c\u5e76\u4e14\u6307\u5411\u6570\u636e\u3002\u5728\u94fe\u8868\u4e2d\u4f60\u521b\u5efa\u4e86\u5b8c\u6574\u7684\u7ed3\u6784\u4f53\u6765\u50a8\u5b58void *value\u6307\u9488\uff0c\u4f46\u662f\u52a8\u6001\u6570\u7ec4\u4e2d\u4f60\u53ea\u9700\u8981\u4e00\u4e2a\u50a8\u5b58\u5b83\u4eec\u7684\u5355\u4e2a\u6570\u7ec4\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u4f60\u5e76\u4e0d\u9700\u8981\u521b\u5efa\u4efb\u4f55\u5176\u5b83\u7684\u6307\u9488\u50a8\u5b58\u4e0a\u4e00\u4e2a\u6216\u4e0b\u4e00\u4e2a\u5143\u7d20\u3002\u5b83\u4eec\u53ef\u4ee5\u76f4\u63a5\u7d22\u5f15\u3002\n\u6211\u4f1a\u7ed9\u4f60\u5934\u6587\u4ef6\u4f5c\u4e3a\u8d77\u59cb\uff0c\u4f60\u9700\u8981\u4e3a\u5b9e\u73b0\u6253\u4e0b\u5b83\u4eec\uff1a\n#ifndef _DArray_h\n#define _DArray_h\n#include &lt;stdlib.h&gt;\n#include &lt;assert.h&gt;\n#include &lt;lcthw\/dbg.h&gt;\n\ntypedef struct DArray {\n    int end;\n    int max;\n    size_t element_size;\n    size_t expand_rate;\n    void **contents;\n} DArray;\n\nDArray *DArray_create(size_t element_size, size_t initial_max);\n\nvoid DArray_destroy(DArray *array);\n\nvoid DArray_clear(DArray *array);\n\nint DArray_expand(DArray *array);\n\nint DArray_contract(DArray *array);\n\nint DArray_push(DArray *array, void *el);\n\nvoid *DArray_pop(DArray *array);\n\nvoid DArray_clear_destroy(DArray *array);\n\n#define DArray_last(A) ((A)-&gt;contents[(A)-&gt;end - 1])\n#define DArray_first(A) ((A)-&gt;contents[0])\n#define DArray_end(A) ((A)-&gt;end)\n#define DArray_count(A) DArray_end(A)\n#define DArray_max(A) ((A)-&gt;max)\n\n#define DEFAULT_EXPAND_RATE 300\n\n\nstatic inline void DArray_set(DArray *array, int i, void *el)\n{\n    check(i &lt; array-&gt;max, \"darray attempt to set past max\");\n    if(i &gt; array-&gt;end) array-&gt;end = i;\n    array-&gt;contents[i] = el;\nerror:\n    return;\n}\n\nstatic inline void *DArray_get(DArray *array, int i)\n{\n    check(i &lt; array-&gt;max, \"darray attempt to get past max\");\n    return array-&gt;contents[i];\nerror:\n    return NULL;\n}\n\nstatic inline void *DArray_remove(DArray *array, int i)\n{\n    void *el = array-&gt;contents[i];\n\n    array-&gt;contents[i] = NULL;\n\n    return el;\n}\n\nstatic inline void *DArray_new(DArray *array)\n{\n    check(array-&gt;element_size &gt; 0, \"Can't use DArray_new on 0 size darrays.\");\n\n    return calloc(1, array-&gt;element_size);\n\nerror:\n    return NULL;\n}\n\n#define DArray_free(E) free((E))\n\n#endif\n\u8fd9\u4e2a\u5934\u6587\u4ef6\u5411\u4f60\u5c55\u793a\u4e86static inline\u7684\u65b0\u6280\u5de7\uff0c\u5b83\u5c31\u7c7b\u4f3c#define\u5b8f\u7684\u5de5\u4f5c\u65b9\u5f0f\uff0c\u4f46\u662f\u5b83\u4eec\u66f4\u6e05\u695a\uff0c\u5e76\u4e14\u6613\u4e8e\u7f16\u5199\u3002\u5982\u679c\u4f60\u9700\u8981\u521b\u5efa\u4e00\u5757\u4ee3\u7801\u4f5c\u4e3a\u5b8f\uff0c\u5e76\u4e14\u4e0d\u9700\u8981\u4ee3\u7801\u751f\u6210\uff0c\u53ef\u4ee5\u4f7f\u7528static inline\u51fd\u6570\u3002\n\u4e3a\u94fe\u8868\u751f\u6210for\u5faa\u73af\u7684LIST_FOREACH\u4e0d\u53ef\u80fd\u5199\u4e3astatic inline\u51fd\u6570\uff0c\u56e0\u4e3a\u5b83\u9700\u8981\u751f\u6210\u5faa\u73af\u7684\u5185\u90e8\u4ee3\u7801\u5757\u3002\u5b9e\u73b0\u5b83\u7684\u552f\u4e00\u65b9\u5f0f\u662f\u7070\u8c03\u51fd\u6570\uff0c\u4f46\u662f\u8fd9\u4e0d\u591f\u5757\uff0c\u5e76\u4e14\u96be\u4ee5\u4f7f\u7528\u3002\n\u4e4b\u540e\u6211\u4f1a\u4fee\u6539\u4ee3\u7801\uff0c\u5e76\u4e14\u8ba9\u4f60\u521b\u5efaDArray\u7684\u5355\u5143\u6d4b\u8bd5\u3002\n#include \"minunit.h\"\n#include &lt;lcthw\/darray.h&gt;\n\nstatic DArray *array = NULL;\nstatic int *val1 = NULL;\nstatic int *val2 = NULL;\n\nchar *test_create()\n{\n    array = DArray_create(sizeof(int), 100);\n    mu_assert(array != NULL, \"DArray_create failed.\");\n    mu_assert(array-&gt;contents != NULL, \"contents are wrong in darray\");\n    mu_assert(array-&gt;end == 0, \"end isn't at the right spot\");\n    mu_assert(array-&gt;element_size == sizeof(int), \"element size is wrong.\");\n    mu_assert(array-&gt;max == 100, \"wrong max length on initial size\");\n\n    return NULL;\n}\n\nchar *test_destroy()\n{\n    DArray_destroy(array);\n\n    return NULL;\n}\n\nchar *test_new()\n{\n    val1 = DArray_new(array);\n    mu_assert(val1 != NULL, \"failed to make a new element\");\n\n    val2 = DArray_new(array);\n    mu_assert(val2 != NULL, \"failed to make a new element\");\n\n    return NULL;\n}\n\nchar *test_set()\n{\n    DArray_set(array, 0, val1);\n    DArray_set(array, 1, val2);\n\n    return NULL;\n}\n\nchar *test_get()\n{\n    mu_assert(DArray_get(array, 0) == val1, \"Wrong first value.\");\n    mu_assert(DArray_get(array, 1) == val2, \"Wrong second value.\");\n\n    return NULL;\n}\n\nchar *test_remove()\n{\n    int *val_check = DArray_remove(array, 0);\n    mu_assert(val_check != NULL, \"Should not get NULL.\");\n    mu_assert(*val_check == *val1, \"Should get the first value.\");\n    mu_assert(DArray_get(array, 0) == NULL, \"Should be gone.\");\n    DArray_free(val_check);\n\n    val_check = DArray_remove(array, 1);\n    mu_assert(val_check != NULL, \"Should not get NULL.\");\n    mu_assert(*val_check == *val2, \"Should get the first value.\");\n    mu_assert(DArray_get(array, 1) == NULL, \"Should be gone.\");\n    DArray_free(val_check);\n\n    return NULL;\n}\n\nchar *test_expand_contract()\n{\n    int old_max = array-&gt;max;\n    DArray_expand(array);\n    mu_assert((unsigned int)array-&gt;max == old_max + array-&gt;expand_rate, \"Wrong size after expand.\");\n\n    DArray_contract(array);\n    mu_assert((unsigned int)array-&gt;max == array-&gt;expand_rate + 1, \"Should stay at the expand_rate at least.\");\n\n    DArray_contract(array);\n    mu_assert((unsigned int)array-&gt;max == array-&gt;expand_rate + 1, \"Should stay at the expand_rate at least.\");\n\n    return NULL;\n}\n\nchar *test_push_pop()\n{\n    int i = 0;\n    for(i = 0; i &lt; 1000; i++) {\n        int *val = DArray_new(array);\n        *val = i * 333;\n        DArray_push(array, val);\n    }\n\n    mu_assert(array-&gt;max == 1201, \"Wrong max size.\");\n\n    for(i = 999; i &gt;= 0; i--) {\n        int *val = DArray_pop(array);\n        mu_assert(val != NULL, \"Shouldn't get a NULL.\");\n        mu_assert(*val == i * 333, \"Wrong value.\");\n        DArray_free(val);\n    }\n\n    return NULL;\n}\n\n\nchar * all_tests() {\n    mu_suite_start();\n\n    mu_run_test(test_create);\n    mu_run_test(test_new);\n    mu_run_test(test_set);\n    mu_run_test(test_get);\n    mu_run_test(test_remove);\n    mu_run_test(test_expand_contract);\n    mu_run_test(test_push_pop);\n    mu_run_test(test_destroy);\n\n    return NULL;\n}\n\nRUN_TESTS(all_tests);\n\u8fd9\u5411\u4f60\u5c55\u793a\u4e86\u6240\u6709\u64cd\u4f5c\u90fd\u5982\u4f55\u4f7f\u7528\uff0c\u5b83\u4f1a\u4f7fDArray\u7684\u5b9e\u73b0\u53d8\u5f97\u5bb9\u6613\uff1a\n#include &lt;lcthw\/darray.h&gt;\n#include &lt;assert.h&gt;\n\n\nDArray *DArray_create(size_t element_size, size_t initial_max)\n{\n    DArray *array = malloc(sizeof(DArray));\n    check_mem(array);\n    array-&gt;max = initial_max;\n    check(array-&gt;max &gt; 0, \"You must set an initial_max &gt; 0.\");\n\n    array-&gt;contents = calloc(initial_max, sizeof(void *));\n    check_mem(array-&gt;contents);\n\n    array-&gt;end = 0;\n    array-&gt;element_size = element_size;\n    array-&gt;expand_rate = DEFAULT_EXPAND_RATE;\n\n    return array;\n\nerror:\n    if(array) free(array);\n    return NULL;\n}\n\nvoid DArray_clear(DArray *array)\n{\n    int i = 0;\n    if(array-&gt;element_size &gt; 0) {\n        for(i = 0; i &lt; array-&gt;max; i++) {\n            if(array-&gt;contents[i] != NULL) {\n                free(array-&gt;contents[i]);\n            }\n        }\n    }\n}\n\nstatic inline int DArray_resize(DArray *array, size_t newsize)\n{\n    array-&gt;max = newsize;\n    check(array-&gt;max &gt; 0, \"The newsize must be &gt; 0.\");\n\n    void *contents = realloc(array-&gt;contents, array-&gt;max * sizeof(void *));\n    \/\/ check contents and assume realloc doesn't harm the original on error\n\n    check_mem(contents);\n\n    array-&gt;contents = contents;\n\n    return 0;\nerror:\n    return -1;\n}\n\nint DArray_expand(DArray *array)\n{\n    size_t old_max = array-&gt;max;\n    check(DArray_resize(array, array-&gt;max + array-&gt;expand_rate) == 0,\n            \"Failed to expand array to new size: %d\",\n            array-&gt;max + (int)array-&gt;expand_rate);\n\n    memset(array-&gt;contents + old_max, 0, array-&gt;expand_rate + 1);\n    return 0;\n\nerror:\n    return -1;\n}\n\nint DArray_contract(DArray *array)\n{\n    int new_size = array-&gt;end &lt; (int)array-&gt;expand_rate ? (int)array-&gt;expand_rate : array-&gt;end;\n\n    return DArray_resize(array, new_size + 1);\n}\n\n\nvoid DArray_destroy(DArray *array)\n{\n    if(array) {\n        if(array-&gt;contents) free(array-&gt;contents);\n        free(array);\n    }\n}\n\nvoid DArray_clear_destroy(DArray *array)\n{\n    DArray_clear(array);\n    DArray_destroy(array);\n}\n\nint DArray_push(DArray *array, void *el)\n{\n    array-&gt;contents[array-&gt;end] = el;\n    array-&gt;end++;\n\n    if(DArray_end(array) &gt;= DArray_max(array)) {\n        return DArray_expand(array);\n    } else {\n        return 0;\n    }\n}\n\nvoid *DArray_pop(DArray *array)\n{\n    check(array-&gt;end - 1 &gt;= 0, \"Attempt to pop from empty array.\");\n\n    void *el = DArray_remove(array, array-&gt;end - 1);\n    array-&gt;end--;\n\n    if(DArray_end(array) &gt; (int)array-&gt;expand_rate &amp;&amp; DArray_end(array) % array-&gt;expand_rate) {\n        DArray_contract(array);\n    }\n\n    return el;\nerror:\n    return NULL;\n}\n\u8fd9\u5360\u4f60\u5c55\u793a\u4e86\u53e6\u4e00\u79cd\u5904\u7406\u590d\u6742\u4ee3\u7801\u7684\u65b9\u6cd5\uff0c\u89c2\u5bdf\u5934\u6587\u4ef6\u5e76\u9605\u8bfb\u5355\u5143\u6d4b\u8bd5\uff0c\u800c\u4e0d\u662f\u4e00\u5934\u624e\u8fdb.c\u5b9e\u73b0\u4e2d\u3002\u8fd9\u79cd\u201c\u5177\u4f53\u7684\u62bd\u8c61\u201d\u8ba9\u4f60\u7406\u89e3\u4ee3\u7801\u5982\u4f55\u4e00\u8d77\u5de5\u4f5c\uff0c\u5e76\u4e14\u66f4\u5bb9\u6613\u8bb0\u4f4f\u3002\n\u4f18\u70b9\u548c\u7f3a\u70b9\nDArray\u5728\u4f60\u9700\u8981\u8fd9\u4e9b\u64cd\u4f5c\u65f6\u5360\u4f18\u52bf\u3002\n\n\u8fed\u4ee3\u3002\u4f60\u53ef\u4ee5\u4ec5\u4ec5\u4f7f\u7528\u57fa\u672c\u7684for\u5faa\u73af\uff0c\u4f7f\u7528DArray_count\u548cDArray_get\u6765\u5b8c\u6210\u4efb\u52a1\u3002\u4e0d\u9700\u8981\u4efb\u4f55\u7279\u6b8a\u7684\u5b8f\u3002\u5e76\u4e14\u7531\u4e8e\u4e0d\u5904\u7406\u6307\u9488\uff0c\u5b83\u975e\u5e38\u5feb\u3002\n\u7d22\u5f15\u3002\u4f60\u53ef\u4ee5\u4f7f\u7528DArray_get\u548cDArray_set\u6765\u968f\u673a\u8bbf\u95ee\u4efb\u4f55\u5143\u7d20\uff0c\u4f46\u662fList\u4e0a\u4f60\u5c31\u5fc5\u987b\u7ecf\u8fc7\u7b2cN\u4e2a\u5143\u7d20\u6765\u8bbf\u95ee\u7b2cN+1\u4e2a\u5143\u7d20\u3002\n\u9500\u6bc1\u3002\u4f60\u53ea\u9700\u8981\u4ee5\u4e24\u4e2a\u64cd\u4f5c\u9500\u6bc1\u7ed3\u6784\u4f53\u548ccontent\u3002\u4f46\u662fList\u9700\u8981\u4e00\u4e9b\u5217\u7684free\u8c03\u7528\u540c\u65f6\u904d\u5386\u6bcf\u4e2a\u5143\u7d20\u3002\n\u514b\u9686\u3002\u4f60\u53ea\u9700\u8981\u590d\u5236\u7ed3\u6784\u4f53\u548ccontent\uff0c\u7528\u4e24\u6b65\u590d\u5236\u6574\u4e2a\u7ed3\u6784\u3002List\u9700\u8981\u904d\u5386\u6240\u6709\u5143\u7d20\u5e76\u4e14\u590d\u5236\u6bcf\u4e2aListNode\u548c\u503c\u3002\n\u6392\u5e8f\u3002\u4f60\u5df2\u7ecf\u89c1\u8fc7\u4e86\uff0c\u5982\u679c\u4f60\u9700\u8981\u5bf9\u6570\u636e\u6392\u5e8f\uff0cList\u975e\u5e38\u9ebb\u70e6\u3002DArray\u4e0a\u53ef\u4ee5\u5b9e\u73b0\u6240\u6709\u9ad8\u6548\u7684\u6392\u5e8f\u7b97\u6cd5\uff0c\u56e0\u4e3a\u4f60\u53ef\u4ee5\u968f\u673a\u8bbf\u95ee\u4efb\u4f55\u5143\u7d20\u3002\n\u5927\u91cf\u6570\u636e\u3002\u5982\u679c\u4f60\u9700\u8981\u50a8\u5b58\u5927\u91cf\u6570\u636e\uff0cDArray\u7531\u4e8e\u57fa\u4e8econtent\uff0c\u6bd4\u8d77\u76f8\u540c\u6570\u91cf\u7684ListNode\u5360\u7528\u66f4\u5c11\u7a7a\u95f4\u800c\u5360\u4f18\u3002\n\n\u7136\u800cList\u5728\u8fd9\u4e9b\u64cd\u4f5c\u4e0a\u5360\u4f18\u52bf\u3002\n\n\u5728\u5f00\u5934\u63d2\u5165\u548c\u79fb\u9664\u5143\u7d20\u3002DArray\u9700\u8981\u7279\u6b8a\u7684\u4f18\u5316\u6765\u9ad8\u6548\u5730\u5b8c\u6210\u5b83\uff0c\u5e76\u4e14\u901a\u5e38\u8fd8\u9700\u8981\u4e00\u4e9b\u590d\u5236\u64cd\u4f5c\u3002\n\u5206\u5272\u548c\u8fde\u63a5\u3002List\u53ea\u9700\u8981\u590d\u5236\u4e00\u4e9b\u6307\u9488\u5c31\u80fd\u5b8c\u6210\uff0c\u4f46\u662fDArray\u9700\u8981\u590d\u5236\u6d89\u53ca\u5230\u7684\u6240\u6709\u6570\u7ec4\u3002\n\u5c11\u91cf\u6570\u636e\u3002\u5982\u679c\u4f60\u53ea\u9700\u8981\u5b58\u50a8\u51e0\u4e2a\u5143\u7d20\uff0c\u901a\u5e38\u4f7f\u7528List\u6240\u9700\u7684\u7a7a\u95f4\u8981\u5c11\u4e8eDArray\uff0c\u56e0\u4e3aDArray\u9700\u8981\u8003\u8651\u5230\u65e5\u540e\u7684\u6dfb\u52a0\u800c\u6269\u5c55\u80cc\u540e\u7684\u7a7a\u95f4\uff0c\u4f46\u662fList\u53ea\u9700\u8981\u5143\u7d20\u6240\u9700\u7684\u7a7a\u95f4\u3002\n\n\u8003\u8651\u5230\u8fd9\u4e9b\uff0c\u6211\u66f4\u503e\u5411\u4f7f\u7528DArray\u6765\u5b8c\u6210\u5176\u5b83\u4eba\u4f7f\u7528List\u6240\u505a\u7684\u5927\u90e8\u5206\u4e8b\u60c5\u3002\u5bf9\u4e8e\u4efb\u4f55\u9700\u8981\u5c11\u91cf\u8282\u70b9\u5e76\u4e14\u5728\u4e24\u7aef\u63d2\u5165\u5220\u9664\u7684\uff0c\u6211\u4f1a\u4f7f\u7528List\u3002\u6211\u4f1a\u60f3\u4f60\u5c55\u793a\u4e24\u4e2a\u76f8\u4f3c\u7684\u6570\u636e\u7ed3\u6784\uff0c\u53eb\u505aStack\u548cQueue\uff0c\u5b83\u4eec\u4e5f\u5f88\u91cd\u8981\u3002\n\u5982\u4f55\u6539\u8fdb\n\u50cf\u5f80\u5e38\u4e00\u6837\uff0c\u6d4f\u89c8\u6bcf\u4e2a\u51fd\u6570\u548c\u64cd\u4f5c\uff0c\u5e76\u4e14\u6267\u884c\u9632\u5fa1\u6027\u7f16\u7a0b\u68c0\u67e5\uff0c\u4ee5\u53ca\u6dfb\u52a0\u5148\u51b3\u6761\u4ef6\u3001\u4e0d\u53d8\u91cf\u7b49\u4efb\u4f55\u53ef\u4ee5\u4f7f\u5b9e\u73b0\u66f4\u5065\u58ee\u7684\u4e1c\u897f\u3002\n\u9644\u52a0\u9898\n\n\u6539\u8fdb\u5355\u5143\u6d4b\u8bd5\u6765\u8986\u76d6\u8015\u4f5c\u64cd\u4f5c\uff0c\u5e76\u4f7f\u7528for\u5faa\u73af\u6765\u6d4b\u8bd5\u8fed\u4ee3\u3002\n\u7814\u7a76DArray\u4e0a\u5982\u4f55\u5b9e\u73b0\u5192\u6ce1\u6392\u5e8f\u548c\u5f52\u5e76\u6392\u5e8f\uff0c\u4f46\u662f\u4e0d\u8981\u9a6c\u4e0a\u5b9e\u73b0\u5b83\u4eec\u3002\u6211\u4f1a\u5728\u4e0b\u4e00\u5f20\u5b9e\u73b0DArray\u7684\u7b97\u6cd5\uff0c\u4e4b\u540e\u4f60\u53ef\u4ee5\u5b8c\u6210\u5b83\u3002\n\u4e3a\u4e00\u4e9b\u5e38\u7528\u7684\u64cd\u4f5c\u7f16\u5199\u4e00\u4e9b\u6027\u80fd\u6d4b\u8bd5\uff0c\u5e76\u4e0eList\u4e2d\u7684\u76f8\u540c\u64cd\u4f5c\u6bd4\u8f83\u3002\u4f60\u5df2\u7ecf\u505a\u8fc7\u5f88\u591a\u6b21\u4e86\uff0c\u4f46\u662f\u8fd9\u6b21\u9700\u8981\u7f16\u5199\u91cd\u590d\u6267\u884c\u6240\u6d89\u53ca\u64cd\u4f5c\u7684\u5355\u5143\u6d4b\u8bd5\uff0c\u4e4b\u540e\u5728\u4e3b\u8fd0\u884c\u5668\u4e2d\u8ba1\u65f6\u3002\n\u89c2\u5bdfDArray_expand\u5982\u4f55\u4f7f\u7528\u56fa\u5b9a\u589e\u957f\uff08size + 300\uff09\u6765\u5b9e\u73b0\u3002\u901a\u5e38\u52a8\u6001\u6570\u7ec4\u90fd\u4ee5\u500d\u6570\u589e\u957f\uff08size * 2\uff09\u7684\u65b9\u5f0f\u5b9e\u73b0\uff0c\u4f46\u662f\u6211\u53d1\u73b0\u5b83\u4f1a\u82b1\u8d39\u65e0\u7528\u7684\u5185\u5b58\u5e76\u4e14\u6ca1\u6709\u771f\u6b63\u53d6\u5f97\u6027\u80fd\u6536\u76ca\u3002\u6d4b\u8bd5\u6211\u7684\u65ad\u8a00\uff0c\u5e76\u4e14\u770b\u770b\u4ec0\u4e48\u60c5\u51b5\u4e0b\u9700\u8981\u500d\u6570\u589e\u957f\u800c\u4e0d\u662f\u56fa\u5b9a\u589e\u957f\u3002\n","categories":"\u7ec3\u4e609","tags":["\u6570\u7ec4","\u52a8\u6001","minunit"]},{"title":"\u6392\u5e8f\u548c\u641c\u7d22","url":"https:\/\/naka507.github.io\/posts\/F674E4CC423F4082.html","content":"\u6392\u5e8f\u548c\u641c\u7d22\n\u8fd9\u4e2a\u7ec3\u4e60\u4e2d\u6211\u6253\u7b97\u6d89\u53ca\u5230\u56db\u4e2a\u6392\u5e8f\u7b97\u6cd5\u548c\u4e00\u4e2a\u641c\u7d22\u7b97\u6cd5\u3002\u6392\u5e8f\u7b97\u6cd5\u662f\u5feb\u901f\u6392\u5e8f\u3001\u5806\u6392\u5e8f\u3001\u5f52\u5e76\u6392\u5e8f\u548c\u57fa\u6570\u6392\u5e8f\u3002\u4e4b\u540e\u5728\u4f60\u5b8c\u6210\u57fa\u6570\u6392\u5e8f\u4e4b\u540e\uff0c\u6211\u6253\u7b97\u60f3\u4f60\u5c55\u793a\u4e8c\u5206\u641c\u7d22\u3002\n\u7136\u800c\uff0c\u6211\u662f\u4e00\u4e2a\u61d2\u4eba\uff0c\u5927\u591a\u6570C\u6807\u51c6\u5e93\u90fd\u5b9e\u73b0\u4e86\u5806\u6392\u5e8f\u3001\u5feb\u901f\u6392\u5e8f\u548c\u5f52\u5e76\u6392\u5e8f\u7b97\u6cd5\uff0c\u4f60\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u5b83\u4eec\uff1a\n#include &lt;lcthw\/darray_algos.h&gt;\n#include &lt;stdlib.h&gt;\n\nint DArray_qsort(DArray *array, DArray_compare cmp)\n{\n    qsort(array-&gt;contents, DArray_count(array), sizeof(void *), cmp);\n    return 0;\n}\n\nint DArray_heapsort(DArray *array, DArray_compare cmp)\n{\n    return heapsort(array-&gt;contents, DArray_count(array), sizeof(void *), cmp);\n}\n\nint DArray_mergesort(DArray *array, DArray_compare cmp)\n{\n    return mergesort(array-&gt;contents, DArray_count(array), sizeof(void *), cmp);\n}\n\u8fd9\u5c31\u662fdarray_algos.c\u6587\u4ef6\u7684\u6574\u4e2a\u5b9e\u73b0\uff0c\u5b83\u5728\u5927\u591a\u6570\u73b0\u4ee3Unix\u7cfb\u7edf\u4e0a\u90fd\u80fd\u8fd0\u884c\u3002\u5b83\u4eec\u7684\u6bcf\u4e00\u4e2a\u90fd\u4f7f\u7528DArray_compare\u5bf9contents\u4e2d\u50a8\u5b58\u7684\u65e0\u7c7b\u578b\u6307\u9488\u8fdb\u884c\u6392\u5e8f\u3002\u6211\u4e5f\u8981\u5411\u4f60\u5c55\u793a\u8fd9\u4e2a\u5934\u6587\u4ef6\uff1a\n#ifndef darray_algos_h\n#define darray_algos_h\n\n#include &lt;lcthw\/darray.h&gt;\n\ntypedef int (*DArray_compare)(const void *a, const void *b);\n\nint DArray_qsort(DArray *array, DArray_compare cmp);\n\nint DArray_heapsort(DArray *array, DArray_compare cmp);\n\nint DArray_mergesort(DArray *array, DArray_compare cmp);\n\n#endif\n\u5927\u5c0f\u51e0\u4e4e\u4e00\u6837\uff0c\u4f60\u4e5f\u5e94\u8be5\u80fd\u9884\u6599\u5230\u3002\u63a5\u4e0b\u6765\u4f60\u53ef\u4ee5\u4e86\u89e3\u5355\u5143\u6d4b\u8bd5\u4e2d\u8fd9\u4e09\u4e2a\u51fd\u6570\u5982\u4f55\u4f7f\u7528\uff1a\n#include \"minunit.h\"\n#include &lt;lcthw\/darray_algos.h&gt;\n\nint testcmp(char **a, char **b)\n{\n    return strcmp(*a, *b);\n}\n\nDArray *create_words()\n{\n    DArray *result = DArray_create(0, 5);\n    char *words[] = {\"asdfasfd\", \"werwar\", \"13234\", \"asdfasfd\", \"oioj\"};\n    int i = 0;\n\n    for(i = 0; i &lt; 5; i++) {\n        DArray_push(result, words[i]);\n    }\n\n    return result;\n}\n\nint is_sorted(DArray *array)\n{\n    int i = 0;\n\n    for(i = 0; i &lt; DArray_count(array) - 1; i++) {\n        if(strcmp(DArray_get(array, i), DArray_get(array, i+1)) &gt; 0) {\n            return 0;\n        }\n    }\n\n    return 1;\n}\n\nchar *run_sort_test(int (*func)(DArray *, DArray_compare), const char *name)\n{\n    DArray *words = create_words();\n    mu_assert(!is_sorted(words), \"Words should start not sorted.\");\n\n    debug(\"--- Testing %s sorting algorithm\", name);\n    int rc = func(words, (DArray_compare)testcmp);\n    mu_assert(rc == 0, \"sort failed\");\n    mu_assert(is_sorted(words), \"didn't sort it\");\n\n    DArray_destroy(words);\n\n    return NULL;\n}\n\nchar *test_qsort()\n{\n    return run_sort_test(DArray_qsort, \"qsort\");\n}\n\nchar *test_heapsort()\n{\n    return run_sort_test(DArray_heapsort, \"heapsort\");\n}\n\nchar *test_mergesort()\n{\n    return run_sort_test(DArray_mergesort, \"mergesort\");\n}\n\n\nchar * all_tests()\n{\n    mu_suite_start();\n\n    mu_run_test(test_qsort);\n    mu_run_test(test_heapsort);\n    mu_run_test(test_mergesort);\n\n    return NULL;\n}\n\nRUN_TESTS(all_tests);\n\u4f60\u9700\u8981\u6ce8\u610f\u7684\u4e8b\u60c5\u662f\u7b2c\u56db\u884ctestcmp\u7684\u5b9a\u4e49\uff0c\u5b83\u56f0\u6270\u4e86\u6211\u4e00\u6574\u5929\u3002\u4f60\u5fc5\u987b\u4f7f\u7528char **\u800c\u4e0d\u662fchar *\uff0c\u56e0\u4e3aqsort\u4f1a\u5411\u4f60\u63d0\u4f9b\u6307\u5411content\u6570\u7ec4\u4e2d\u6307\u9488\u7684\u6307\u9488\u3002\u539f\u56e0\u662fqsort\u4f1a\u6253\u626b\u6570\u7ec4\uff0c\u4f7f\u7528\u4f60\u7684\u6bd4\u8f83\u51fd\u6570\u6765\u5904\u7406\u6570\u7ec4\u4e2d\u6bcf\u4e2a\u5143\u7d20\u7684\u6307\u9488\u3002\u56e0\u4e3a\u6211\u5728contents\u4e2d\u5b58\u50a8\u6307\u9488\uff0c\u6240\u4ee5\u4f60\u9700\u8981\u4f7f\u7528\u6307\u9488\u7684\u6307\u9488\u3002\n\u6709\u4e86\u8fd9\u4e9b\u4e4b\u540e\uff0c\u4f60\u53ea\u9700\u8981\u5b9e\u73b0\u4e09\u4e2a\u56f0\u96be\u7684\u641c\u7d22\u7b97\u6cd5\uff0c\u6bcf\u4e2a\u5927\u7ea620\u884c\u3002\u4f60\u5e94\u8be5\u5728\u8fd9\u91cc\u505c\u4e0b\u6765\uff0c\u4e0d\u8fc7\u8fd9\u672c\u4e66\u7684\u4e00\u90e8\u5206\u5c31\u662f\u5b66\u4e60\u8fd9\u4e9b\u7b97\u6cd5\u7684\u539f\u7406\uff0c\u9644\u52a0\u9898\u4f1a\u6d89\u53ca\u5230\u5b9e\u73b0\u8fd9\u4e9b\u7b97\u6cd5\u3002\n\u57fa\u6570\u6392\u5e8f\u548c\u4e8c\u5206\u641c\u7d22\n\u65e2\u7136\u4f60\u6253\u7b97\u81ea\u5df1\u5b9e\u73b0\u5feb\u901f\u6392\u5e8f\u3001\u5806\u6392\u5e8f\u548c\u5f52\u5e76\u6392\u5e8f\uff0c\u6211\u6253\u7b97\u5411\u4f60\u5c55\u793a\u4e00\u4e2a\u6d41\u884c\u7684\u7b97\u6cd5\u53eb\u505a\u57fa\u6570\u6392\u5e8f\u3002\u5b83\u7684\u5b9e\u7528\u6027\u5f88\u5c0f\uff0c\u53ea\u80fd\u7528\u4e8e\u6574\u6570\u6570\u7ec4\uff0c\u5e76\u4e14\u770b\u4e0a\u53bb\u50cf\u9b54\u6cd5\u4e00\u6837\u3002\u8fd9\u91cc\u6211\u6253\u7b97\u5e38\u89c1\u4e00\u4e2a\u7279\u6b8a\u7684\u6570\u636e\u7ed3\u6784\uff0c\u53eb\u505aRadixMap\uff0c\u7528\u4e8e\u5c06\u4e00\u4e2a\u6574\u6570\u6620\u5c04\u4e3a\u53e6\u4e00\u4e2a\u3002\n\u4e0b\u9762\u662f\u4e3a\u65b0\u7b97\u6cd5\u521b\u5efa\u7684\u5934\u6587\u4ef6\uff0c\u5176\u4e2d\u4e5f\u542b\u6709\u6570\u636e\u7ed3\u6784\uff1a\n#ifndef _radixmap_h\n#include &lt;stdint.h&gt;\n\ntypedef union RMElement {\n    uint64_t raw;\n    struct {\n        uint32_t key;\n        uint32_t value;\n    } data;\n} RMElement;\n\ntypedef struct RadixMap {\n    size_t max;\n    size_t end;\n    uint32_t counter;\n    RMElement *contents;\n    RMElement *temp;\n} RadixMap;\n\n\nRadixMap *RadixMap_create(size_t max);\n\nvoid RadixMap_destroy(RadixMap *map);\n\nvoid RadixMap_sort(RadixMap *map);\n\nRMElement *RadixMap_find(RadixMap *map, uint32_t key);\n\nint RadixMap_add(RadixMap *map, uint32_t key, uint32_t value);\n\nint RadixMap_delete(RadixMap *map, RMElement *el);\n\n#endif\n\u4f60\u770b\u5230\u4e86\u5176\u4e2d\u6709\u8bb8\u591a\u548cDynamic Array\u6216List\u6570\u636e\u7ed3\u6784\u76f8\u540c\u7684\u64cd\u4f5c\uff0c\u4e0d\u540c\u5c31\u5728\u4e8e\u6211\u53ea\u5904\u7406\u56fa\u5b9a32\u4f4d\u5927\u5c0f\u7684uint32_t\u6b63\u5ffd\u89c6\u3002\u6211\u4e5f\u4f1a\u60f3\u4f60\u4ecb\u7ecdC\u8bed\u8a00\u7684\u4e00\u4e2a\u65b0\u6982\u5ff5\uff0c\u53eb\u505aunion\u3002\nC\u8054\u5408\u4f53\n\u8054\u5408\u4f53\u662f\u4f7f\u7528\u4e0d\u540c\u65b9\u5f0f\u5f15\u7528\u5185\u5b58\u4e2d\u540c\u4e00\u5757\u533a\u57df\u7684\u65b9\u6cd5\u3002\u5b83\u4eec\u7684\u5de5\u4f5c\u65b9\u5f0f\uff0c\u5c31\u50cf\u4f60\u628a\u5b83\u5b9a\u4e49\u4e3asturct\uff0c\u7136\u800c\uff0c\u6bcf\u4e2a\u5143\u7d20\u5171\u4eab\u540c\u4e00\u7247\u5185\u5b58\u533a\u57df\u3002\u4f60\u53ef\u4ee5\u8ba4\u4e3a\uff0c\u8054\u5408\u4f53\u662f\u5185\u5b58\u4e2d\u7684\u4e00\u5e45\u753b\uff0c\u6240\u6709\u989c\u8272\u4e0d\u540c\u7684\u5143\u7d20\u90fd\u91cd\u53e0\u5728\u5b83\u4e0a\u9762\u3002\n\u5b83\u53ef\u4ee5\u7528\u4e8e\u8282\u7ea6\u5185\u5b58\uff0c\u6216\u5728\u4e0d\u540c\u683c\u5f0f\u4e4b\u95f4\u8f6c\u6362\u5185\u5b58\u5757\u3002\u5b83\u7684\u7b2c\u4e00\u4e2a\u7528\u9014\u5c31\u662f\u5b9e\u73b0\u201c\u53ef\u53d8\u7c7b\u578b\u201d\uff0c\u4f60\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u5e26\u6709\u7c7b\u578b\u201c\u6807\u7b7e\u201d\u7684\u7ed3\u6784\u4f53\uff0c\u4e4b\u540e\u5728\u5176\u4e2d\u521b\u5efa\u542b\u6709\u591a\u79cd\u7c7b\u578b\u7684\u8054\u5408\u4f53\u3002\u7528\u4e8e\u5728\u5185\u5b58\u7684\u4e0d\u540c\u683c\u5f0f\u4e4b\u95f4\u8f6c\u6362\u65f6\uff0c\u53ea\u9700\u8981\u5b9a\u4e49\u4e24\u4e2a\u7ed3\u6784\u4f53\uff0c\u8bbf\u95ee\u6b63\u786e\u7684\u90a3\u4e2a\u7c7b\u578b\u3002\n\u9996\u5148\u8ba9\u6211\u5411\u4f60\u5c55\u793a\u5982\u4f55\u4f7f\u7528C\u8054\u5408\u4f53\u6784\u9020\u53ef\u53d8\u7c7b\u578b\uff1a\n#include &lt;stdio.h&gt;\n\ntypedef enum {\n    TYPE_INT,\n    TYPE_FLOAT,\n    TYPE_STRING,\n} VariantType;\n\nstruct Variant {\n    VariantType type;\n    union {\n        int as_integer;\n        float as_float;\n        char *as_string;\n    } data;\n};\n\ntypedef struct Variant Variant;\n\nvoid Variant_print(Variant *var)\n{\n    switch(var-&gt;type) {\n        case TYPE_INT:\n           printf(\"INT: %d\\n\", var-&gt;data.as_integer);\n           break;\n        case TYPE_FLOAT:\n           printf(\"FLOAT: %f\\n\", var-&gt;data.as_float);\n           break;\n        case TYPE_STRING:\n           printf(\"STRING: %s\\n\", var-&gt;data.as_string);\n           break;\n        default:\n           printf(\"UNKNOWN TYPE: %d\", var-&gt;type);\n    }\n}\n\nint main(int argc, char *argv[])\n{\n    Variant a_int = {.type = TYPE_INT, .data.as_integer = 100};\n    Variant a_float = {.type = TYPE_FLOAT, .data.as_float = 100.34};\n    Variant a_string = {.type = TYPE_STRING, .data.as_string = \"YO DUDE!\"};\n\n    Variant_print(&amp;a_int);\n    Variant_print(&amp;a_float);\n    Variant_print(&amp;a_string);\n\n    \/\/ here's how you access them\n    a_int.data.as_integer = 200;\n    a_float.data.as_float = 2.345;\n    a_string.data.as_string = \"Hi there.\";\n\n    Variant_print(&amp;a_int);\n    Variant_print(&amp;a_float);\n    Variant_print(&amp;a_string);\n\n    return 0;\n}\n\u4f60\u53ef\u4ee5\u5728\u8bb8\u591a\u52a8\u6001\u8bed\u8a00\u5b9e\u73b0\u4e2d\u53d1\u73b0\u5b83\u3002\u5bf9\u4e8e\u4e3a\u8bed\u8a00\u4e2d\u6240\u6709\u57fa\u672c\u7c7b\u578b\uff0c\u4ee3\u7801\u4e2d\u9996\u5148\u5b9a\u4e49\u4e86\u4e00\u4e9b\u5e26\u6709\u53d8\u8fc1\u7684\u53ef\u53d8\u7c7b\u578b\uff0c\u4e4b\u540e\u901a\u5e38\u7ed9\u4f60\u6240\u521b\u5efa\u7684\u7c7b\u578b\u6253\u4e0aobject\u6807\u7b7e\u3002\u8fd9\u6837\u7684\u597d\u5904\u5c31\u662fVariant\u901a\u5e38\u53ea\u9700\u8981VariantType type\u6807\u7b7e\u7684\u7a7a\u95f4\uff0c\u52a0\u4e0a\u8054\u5408\u4f53\u6700\u5927\u6210\u5458\u7684\u7a7a\u95f4\uff0c\u56e0\u4e3aC\u5c06Variant.data\u7684\u6bcf\u4e2a\u5143\u7d20\u5806\u8d77\u6765\uff0c\u5b83\u4eec\u662f\u91cd\u53e0\u7684\uff0c\u53ea\u4fdd\u8bc1\u6709\u8db3\u591f\u7684\u7a7a\u95f4\u653e\u4e0b\u6700\u5927\u7684\u5143\u7d20\u3002\nradixmap.h\u6587\u4ef6\u4e2d\u6211\u521b\u5efa\u4e86RMElement\u8054\u5408\u4f53\uff0c\u7528\u4e8e\u5728\u7c7b\u578b\u4e4b\u95f4\u8f6c\u6362\u5185\u5b58\u5757\u3002\u8fd9\u91cc\uff0c\u6211\u5e0c\u671b\u5b58\u50a8uint64_t\u5b9a\u957f\u6574\u6570\u7528\u4e8e\u6392\u5e8f\u76ee\u5f55\uff0c\u4f46\u662f\u6211\u4e5f\u5e0c\u671b\u4f7f\u7528\u4e24\u4e2auint32_t\u7528\u4e8e\u8868\u793a\u6570\u636e\u7684key\u548cvalue\u5bf9\u3002\u901a\u8fc7\u4f7f\u7528\u8054\u5408\u4f53\u6211\u5c31\u80fd\u591f\u4f7f\u7528\u6240\u9700\u7684\u4e24\u79cd\u4e0d\u540c\u65b9\u6cd5\u6765\u8bbf\u95ee\u5185\u5b58\u3002\n\u5b9e\u73b0\n\u63a5\u4e0b\u6765\u662f\u5b9e\u9645\u7684RadixMap\u5bf9\u4e8e\u8fd9\u4e9b\u64cd\u4f5c\u7684\u5b9e\u73b0\uff1a\n\/*\n* Based on code by Andre Reinald then heavily modified by Zed A. Shaw.\n*\/\n\n#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;assert.h&gt;\n#include &lt;lcthw\/radixmap.h&gt;\n#include &lt;lcthw\/dbg.h&gt;\n\nRadixMap *RadixMap_create(size_t max)\n{\n    RadixMap *map = calloc(sizeof(RadixMap), 1);\n    check_mem(map);\n\n    map-&gt;contents = calloc(sizeof(RMElement), max + 1);\n    check_mem(map-&gt;contents);\n\n    map-&gt;temp = calloc(sizeof(RMElement), max + 1);\n    check_mem(map-&gt;temp);\n\n    map-&gt;max = max;\n    map-&gt;end = 0;\n\n    return map;\nerror:\n    return NULL;\n}\n\nvoid RadixMap_destroy(RadixMap *map)\n{\n    if(map) {\n        free(map-&gt;contents);\n        free(map-&gt;temp);\n        free(map);\n    }\n}\n\n\n#define ByteOf(x,y) (((uint8_t *)x)[(y)])\n\nstatic inline void radix_sort(short offset, uint64_t max, uint64_t *source, uint64_t *dest)\n{\n    uint64_t count[256] = {0};\n    uint64_t *cp = NULL;\n    uint64_t *sp = NULL;\n    uint64_t *end = NULL;\n    uint64_t s = 0;\n    uint64_t c = 0;\n\n    \/\/ count occurences of every byte value\n    for (sp = source, end = source + max; sp &lt; end; sp++) {\n        count[ByteOf(sp, offset)]++;\n    }\n\n    \/\/ transform count into index by summing elements and storing into same array\n    for (s = 0, cp = count, end = count + 256; cp &lt; end; cp++) {\n        c = *cp;\n        *cp = s;\n        s += c;\n    }\n\n    \/\/ fill dest with the right values in the right place\n    for (sp = source, end = source + max; sp &lt; end; sp++) {\n        cp = count + ByteOf(sp, offset);\n        dest[*cp] = *sp;\n        ++(*cp);\n    }\n}\n\nvoid RadixMap_sort(RadixMap *map)\n{\n    uint64_t *source = &amp;map-&gt;contents[0].raw;\n    uint64_t *temp = &amp;map-&gt;temp[0].raw;\n\n    radix_sort(0, map-&gt;end, source, temp);\n    radix_sort(1, map-&gt;end, temp, source);\n    radix_sort(2, map-&gt;end, source, temp);\n    radix_sort(3, map-&gt;end, temp, source);\n}\n\nRMElement *RadixMap_find(RadixMap *map, uint32_t to_find)\n{\n    int low = 0;\n    int high = map-&gt;end - 1;\n    RMElement *data = map-&gt;contents;\n\n    while (low &lt;= high) {\n        int middle = low + (high - low)\/2;\n        uint32_t key = data[middle].data.key;\n\n        if (to_find &lt; key) {\n            high = middle - 1;\n        } else if (to_find &gt; key) {\n            low = middle + 1;\n        } else {\n            return &amp;data[middle];\n        }\n    }\n\n    return NULL;\n}\n\nint RadixMap_add(RadixMap *map, uint32_t key, uint32_t value)\n{\n    check(key &lt; UINT32_MAX, \"Key can't be equal to UINT32_MAX.\");\n\n    RMElement element = {.data = {.key = key, .value = value}};\n    check(map-&gt;end + 1 &lt; map-&gt;max, \"RadixMap is full.\");\n\n    map-&gt;contents[map-&gt;end++] = element;\n\n    RadixMap_sort(map);\n\n    return 0;\n\nerror:\n    return -1;\n}\n\nint RadixMap_delete(RadixMap *map, RMElement *el)\n{\n    check(map-&gt;end &gt; 0, \"There is nothing to delete.\");\n    check(el != NULL, \"Can't delete a NULL element.\");\n\n    el-&gt;data.key = UINT32_MAX;\n\n    if(map-&gt;end &gt; 1) {\n        \/\/ don't bother resorting a map of 1 length\n        RadixMap_sort(map);\n    }\n\n    map-&gt;end--;\n\n    return 0;\nerror:\n    return -1;\n}\n\u50cf\u5f80\u5e38\u4e00\u6837\u952e\u5165\u5b83\u5e76\u4f7f\u5b83\u901a\u8fc7\u5355\u5143\u6d4b\u8bd5\uff0c\u4e4b\u540e\u6211\u4f1a\u89e3\u91ca\u5b83\u3002\u5c24\u5176\u8981\u6ce8\u610fradix_sort\u51fd\u6570\uff0c\u6211\u5b9e\u73b0\u5b83\u7684\u65b9\u6cd5\u975e\u5e38\u7279\u522b\u3002\n#include \"minunit.h\"\n#include &lt;lcthw\/radixmap.h&gt;\n#include &lt;time.h&gt;\n\nstatic int make_random(RadixMap *map)\n{\n    size_t i = 0;\n\n    for (i = 0; i &lt; map-&gt;max - 1; i++) {\n        uint32_t key = (uint32_t)(rand() | (rand() &lt;&lt; 16));\n        check(RadixMap_add(map, key, i) == 0, \"Failed to add key %u.\", key);\n    }\n\n    return i;\n\nerror:\n    return 0;\n}\n\nstatic int check_order(RadixMap *map)\n{\n    RMElement d1, d2;\n    unsigned int i = 0;\n\n    \/\/ only signal errors if any (should not be)\n    for (i = 0; map-&gt;end &gt; 0 &amp;&amp; i &lt; map-&gt;end-1; i++) {\n        d1 = map-&gt;contents[i];\n        d2 = map-&gt;contents[i+1];\n\n        if(d1.data.key &gt; d2.data.key) {\n            debug(\"FAIL:i=%u, key: %u, value: %u, equals max? %d\\n\", i, d1.data.key, d1.data.value,\n                    d2.data.key == UINT32_MAX);\n            return 0;\n        }\n    }\n\n    return 1;\n}\n\nstatic int test_search(RadixMap *map)\n{\n    unsigned i = 0;\n    RMElement *d = NULL;\n    RMElement *found = NULL;\n\n    for(i = map-&gt;end \/ 2; i &lt; map-&gt;end; i++) {\n        d = &amp;map-&gt;contents[i];\n        found = RadixMap_find(map, d-&gt;data.key);\n        check(found != NULL, \"Didn't find %u at %u.\", d-&gt;data.key, i);\n        check(found-&gt;data.key == d-&gt;data.key, \"Got the wrong result: %p:%u looking for %u at %u\",\n                found, found-&gt;data.key, d-&gt;data.key, i);\n    }\n\n    return 1;\nerror:\n    return 0;\n}\n\n\/\/ test for big number of elements\nstatic char *test_operations()\n{\n    size_t N = 200;\n\n    RadixMap *map = RadixMap_create(N);\n    mu_assert(map != NULL, \"Failed to make the map.\");\n    mu_assert(make_random(map), \"Didn't make a random fake radix map.\");\n\n    RadixMap_sort(map);\n    mu_assert(check_order(map), \"Failed to properly sort the RadixMap.\");\n\n    mu_assert(test_search(map), \"Failed the search test.\");\n    mu_assert(check_order(map), \"RadixMap didn't stay sorted after search.\");\n\n    while(map-&gt;end &gt; 0) {\n        RMElement *el = RadixMap_find(map, map-&gt;contents[map-&gt;end \/ 2].data.key);\n        mu_assert(el != NULL, \"Should get a result.\");\n\n        size_t old_end = map-&gt;end;\n\n        mu_assert(RadixMap_delete(map, el) == 0, \"Didn't delete it.\");\n        mu_assert(old_end - 1 == map-&gt;end, \"Wrong size after delete.\");\n\n        \/\/ test that the end is now the old value, but uint32 max so it trails off\n        mu_assert(check_order(map), \"RadixMap didn't stay sorted after delete.\");\n    }\n\n    RadixMap_destroy(map);\n\n    return NULL;\n}\n\n\nchar *all_tests()\n{\n    mu_suite_start();\n    srand(time(NULL));\n\n    mu_run_test(test_operations);\n\n    return NULL;\n}\n\nRUN_TESTS(all_tests);\n\u6211\u4e0d\u5e94\u8be5\u5411\u4f60\u89e3\u91ca\u5173\u4e8e\u6d4b\u8bd5\u7684\u8fc7\u591a\u4e1c\u897f\uff0c\u5b83\u53ea\u662f\u6a21\u62df\u5c06\u968f\u673a\u6b63\u662f\u653e\u5165RadixMap\uff0c\u786e\u4fdd\u4f60\u53ef\u4ee5\u53ef\u9760\u5730\u5c06\u5176\u53d6\u51fa\u3002\u4e5f\u4e0d\u662f\u975e\u5e38\u6709\u8da3\u3002\n\u5728radixmap.c\u4e2d\u7684\u5927\u591a\u6570\u64cd\u4f5c\u90fd\u6613\u4e8e\u7406\u89e3\uff0c\u5982\u679c\u4f60\u9605\u8bfb\u4ee3\u7801\u7684\u8bdd\u3002\u4e0b\u9762\u662f\u6bcf\u4e2a\u57fa\u672c\u51fd\u6570\u4f5c\u7528\u53ca\u5176\u5de5\u4f5c\u539f\u7406\u7684\u63cf\u8ff0\uff1a\nRadixMap_create\n\u50cf\u5f80\u5e38\u4e00\u6837\uff0c\u6211\u5206\u914d\u4e86\u7ed3\u6784\u4f53\u6240\u9700\u7684\u5185\u5b58\uff0c\u7ed3\u6784\u4f53\u5728radixmap.h\u4e2d\u5b9a\u4e49\u3002\u5f53\u540e\u9762\u6d89\u53ca\u5230radix_sort\u65f6\u6211\u4f1a\u4f7f\u7528temp\u548ccontents\u3002\nRadixMap_destroy\n\u540c\u6837\uff0c\u9500\u6bc1\u6211\u6240\u521b\u5efa\u7684\u4e1c\u897f\u3002\nradix_sort\n\u8fd9\u4e2a\u6570\u636e\u7ed3\u6784\u7684\u7075\u9b42\uff0c\u6211\u4f1a\u5728\u4e0b\u4e00\u8282\u4e2d\u89e3\u91ca\u5176\u4f5c\u7528\u3002\nRadixMap_sort\n\u5b83\u4f7f\u7528\u4e86radix_sort\u51fd\u6570\u6765\u5b9e\u9645\u5bf9contents\u8fdb\u884c\u6392\u5e8f\u3002\nRadixMap_find\n\u4f7f\u7528\u4e8c\u5206\u641c\u7d22\u7b97\u6cd5\u6765\u5bfb\u627e\u63d0\u4f9b\u7684key\uff0c\u6211\u4e4b\u540e\u4f1a\u89e3\u91ca\u5b83\u7684\u539f\u7406\u3002\nRadixMap_add\n\u4f7f\u7528RadixMap_sort\u51fd\u6570\uff0c\u5b83\u4f1a\u5728\u672b\u5c3e\u6dfb\u52a0key\u548cvalue\uff0c\u7136\u540e\u7b80\u5355\u5730\u91cd\u65b0\u6392\u5e8f\u4f7f\u4e00\u5207\u5143\u7d20\u90fd\u6709\u5e8f\u3002\u4e00\u65e6\u6392\u5e8f\u5b8c\uff0cRadixMap_find\u4f1a\u6b63\u786e\u5de5\u4f5c\uff0c\u56e0\u4e3a\u5b83\u662f\u4e8c\u5206\u641c\u7d22\u3002\nRadixMap_delete\n\u5de5\u4f5c\u65b9\u5f0f\u7c7b\u4f3cRadixMap_add\uff0c\u9664\u4e86\u201c\u5220\u9664\u201d\u7ed3\u6784\u4e2d\u7684\u5143\u7d20\uff0c\u901a\u8fc7\u5c06\u5b83\u4eec\u7684\u503c\u8bbe\u4e3a\u65e0\u7b26\u53f7\u768432\u4e3a\u6574\u6570\u7684\u6700\u5927\u503c\uff0c\u4e5f\u5c31\u662fUINT32_MAX\u3002\u8fd9\u610f\u5473\u7740\u4f60\u4e0d\u80fd\u4f7f\u7528\u8fd9\u4e2a\u503c\u4f5c\u4e3a\u5408\u6cd5\u7684\u952e\uff0c\u4f46\u662f\u5b83\u662f\u5143\u7d20\u5220\u9664\u53d8\u5f97\u5bb9\u6613\u3002\u7b80\u5355\u8bbe\u7f6e\u5b83\u4e4b\u540e\u6392\u5e8f\uff0c\u5b83\u4f1a\u88ab\u79fb\u52a8\u5230\u672b\u5c3e\uff0c\u8fd9\u5c31\u7b97\u5220\u9664\u4e86\u3002\n\u5b66\u4e60\u6211\u6240\u63cf\u8ff0\u7684\u4ee3\u7801\uff0c\u63a5\u4e0b\u6765\u8fd8\u5269RadixMap_sort\uff0cradix_sort\u548cRadixMap_find\u9700\u8981\u4e86\u89e3\u3002\nRadixMap_find \u548c\u4e8c\u5206\u641c\u7d22\n\u6211\u9996\u5148\u4ee5\u4e8c\u5206\u641c\u7d22\u5982\u4f55\u5b9e\u73b0\u5f00\u59cb\u3002\u4e8c\u5206\u641c\u7d22\u662f\u4e00\u79cd\u7b80\u5355\u7b97\u6cd5\uff0c\u5927\u591a\u6570\u4eba\u90fd\u53ef\u4ee5\u76f4\u89c2\u5730\u7406\u89e3\u3002\u5b9e\u9645\u4e0a\uff0c\u4f60\u53ef\u4ee5\u53d6\u4e00\u53e0\u6e38\u620f\u5361\u7247\uff08\u6216\u5e26\u6709\u6570\u5b57\u7684\u5361\u7247\uff09\u6765\u624b\u52a8\u64cd\u4f5c\u3002\u4e0b\u9762\u662f\u8be5\u51fd\u6570\u7684\u5de5\u4f5c\u65b9\u5f0f\uff0c\u4e5f\u662f\u4e8c\u5206\u641c\u7d22\u7684\u539f\u7406\uff1a\n\n\u57fa\u4e8e\u6570\u7ec4\u5927\u5c0f\u8bbe\u7f6e\u4e0a\u754c\u548c\u4e0b\u754c\u3002\n\u83b7\u53d6\u4e0a\u4e0b\u754c\u4e4b\u95f4\u7684\u4e2d\u95f4\u5143\u7d20\u3002\n\u5982\u679c\u952e\u5c0f\u4e8e\u8fd9\u4e2a\u5143\u7d20\u7684\u503c\uff0c\u5c31\u4e00\u5b9a\u5728\u5b83\u524d\u9762\uff0c\u6240\u4ee5\u4e0a\u754c\u8bbe\u7f6e\u4e3a\u4e2d\u95f4\u5143\u7d20\u3002\n\u5982\u679c\u952e\u5927\u4e8e\u8fd9\u4e2a\u5143\u7d20\u7684\u503c\uff0c\u5c31\u4e00\u5b9a\u5728\u5b83\u540e\u9762\uff0c\u6240\u4ee5\u4e0b\u754c\u8bbe\u7f6e\u4e3a\u4e2d\u95f4\u5143\u7d20\u3002\n\u7ee7\u7eed\u5faa\u73af\u76f4\u5230\u4e0a\u754c\u548c\u4e0b\u754c\u8d8a\u8fc7\u4e86\u5f7c\u6b64\u3002\u5982\u679c\u9000\u51fa\u4e86\u5faa\u73af\u5219\u6ca1\u6709\u627e\u5230\u3002\n\n\u4f60\u5b9e\u9645\u4e0a\u6240\u505a\u7684\u4e8b\u60c5\u662f\uff0c\u901a\u8fc7\u6311\u9009\u4e2d\u95f4\u7684\u503c\u6765\u6bd4\u8f83\uff0c\u731c\u51fakey\u53ef\u80fd\u7684\u4f4d\u7f6e\u3002\u7531\u4e8e\u6570\u636e\u662f\u6709\u5e8f\u7684\uff0c\u4f60\u77e5\u9053key\u4e00\u5b9a\u4f1a\u5728\u5b83\u524d\u9762\u6216\u8005\u540e\u9762\uff0c\u8fd9\u6837\u5c31\u80fd\u628a\u641c\u7d22\u533a\u57df\u5206\u6210\u4e24\u534a\u3002\u4e4b\u540e\u4f60\u7ee7\u7eed\u641c\u7d22\u77e5\u9053\u627e\u5230\u4ed6\uff0c\u6216\u8005\u8d8a\u8fc7\u4e86\u8fb9\u754c\u5e76\u7a77\u5c3d\u4e86\u641c\u7d22\u7a7a\u95f4\u3002\nRadixMap_sort \u548c radix_sort\n\u5982\u679c\u4f60\u4e8b\u5148\u624b\u52a8\u6a21\u62df\u57fa\u6570\u6392\u5e8f\uff0c\u5b83\u5c31\u5f88\u6613\u4e8e\u7406\u89e3\u3002\u8fd9\u4e2a\u7b97\u6cd5\u5229\u7528\u4e86\u4e00\u4e2a\u73b0\u8c61\uff0c\u6570\u5b57\u90fd\u4ee5\u5341\u8fdb\u5236\u5b57\u7b26\u7684\u5e8f\u5217\u6765\u8868\u793a\uff0c\u6309\u7167\u201c\u4e0d\u91cd\u8981\u201d\u5230\u201c\u91cd\u8981\u201d\u7684\u987a\u5e8f\u6392\u5217\u3002\u4e4b\u540e\u5b83\u901a\u8fc7\u5341\u8fdb\u5236\u5b57\u7b26\u6765\u9009\u53d6\u6570\u5b57\u5e76\u4e14\u5c06\u5b83\u4eec\u50a8\u5b58\u5728\u6876\u4e2d\uff0c\u5f53\u5b83\u5904\u7406\u5b8c\u6240\u6709\u5b57\u7b26\u65f6\uff0c\u6570\u5b57\u5c31\u6392\u597d\u5e8f\u4e86\u3002\u4e00\u5f00\u59cb\u5b83\u770b\u4e0a\u53bb\u50cf\u662f\u9b54\u6cd5\uff0c\u6d4f\u89c8\u4ee3\u7801\u4e5f\u7684\u786e\u5982\u6b64\uff0c\u4f46\u662f\u4f60\u8981\u5c1d\u8bd5\u624b\u52a8\u6267\u884c\u5b83\u3002\n\u4e3a\u4e86\u89e3\u91ca\u8fd9\u4e2a\u7b97\u6cd5\uff0c\u9700\u8981\u5148\u5199\u4e0b\u4e00\u7ec4\u4e09\u4f4d\u7684\u5341\u8fdb\u5236\u6570\uff0c\u4ee5\u968f\u673a\u7684\u987a\u5e8f\uff0c\u5047\u8bbe\u5c31\u662f223\u3001912\u3001275\u3001100\u3001633\u3001120 \u548c 380\u3002\n\n\u6309\u7167\u5b83\u4eec\u7684\u4e2a\u4f4d\uff0c\u5c06\u6570\u5b57\u653e\u5165\u6876\u4e2d\uff1a[380, 100, 120], [912], [633, 223], [275]\u3002\n\u73b0\u5728\u904d\u5386\u6bcf\u4e2a\u6876\u4e2d\u7684\u6570\u5b57\uff0c\u63a5\u7740\u6309\u5341\u4f4d\u6392\u5e8f\uff1a[100], [912], [120, 223], [633], [275], [380]\u3002\n\u73b0\u5728\u6bcf\u4e2a\u6876\u90fd\u5305\u542b\u4e86\u6309\u7167\u4e2a\u4f4d\u548c\u5341\u4f4d\u6392\u5e8f\u540e\u7684\u6570\u5b57\u3002\u63a5\u7740\u6211\u9700\u8981\u6309\u7167\u8fd9\u4e2a\u987a\u5e8f\u904d\u5386\uff0c\u5e76\u628a\u5b83\u4eec\u653e\u5165\u6700\u540e\u767e\u4f4d\u7684\u6876\u4e2d\uff1a[100, 120], [223, 275], [380], [633], [912]\u3002\n\u5230\u73b0\u5728\u4e3a\u6b62\uff0c\u6bcf\u4e2a\u6570\u5b57\u90fd\u6309\u7167\u767e\u4f4d\u3001\u5341\u4f4d\u548c\u4e2a\u4f4d\u6392\u5e8f\uff0c\u5e76\u4e14\u5982\u679c\u6211\u6309\u7167\u987a\u5e8f\u904d\u5386\u6bcf\u4e2a\u6876\uff0c\u6211\u4f1a\u5f97\u5230\u6700\u7ec8\u6392\u5e8f\u7684\u7ed3\u679c\uff1a100, 120, 223, 275, 380, 633, 912\u3002\n\n\u786e\u4fdd\u4f60\u591a\u6b21\u91cd\u590d\u4e86\u8fd9\u4e2a\u8fc7\u7a0b\uff0c\u4fbf\u4e8e\u4f60\u7406\u89e3\u5b83\u5982\u4f55\u5de5\u4f5c\u3002\u8fd9\u5b9e\u5728\u662f\u4e00\u79cd\u673a\u667a\u7684\u7b97\u6cd5\uff0c\u5e76\u4e14\u6700\u91cd\u8981\u7684\u662f\u5b83\u5bf9\u4e8e\u4efb\u4f55\u5927\u5c0f\u7684\u6570\u5b57\u90fd\u6709\u6548\u3002\u6240\u4ee5\u4f60\u53ef\u4ee5\u7528\u5b83\u6765\u6392\u5e8f\u6bd4\u8f83\u5927\u7684\u6570\u5b57\uff0c\u56e0\u4e3a\u4f60\u4e00\u6b21\u53ea\u662f\u5904\u7406\u4e00\u4f4d\u3002\n\u5728\u6211\u7684\u73af\u5883\u4e0b\uff0c\u201c\u5b57\u7b26\u201d\u662f\u72ec\u7acb\u76848\u4f4d\u5b57\u8282\uff0c\u6240\u4ee5\u6211\u9700\u8981256\u4e2a\u6876\u6765\u50a8\u5b58\u8fd9\u4e9b\u6570\u5b57\u6309\u7167\u5b57\u8282\u7684\u5206\u5e03\u7ed3\u679c\u3002\u6211\u9700\u8981\u4e00\u79cd\u65b9\u6cd5\u6765\u50a8\u5b58\u5b83\uff0c\u5e76\u4e14\u4e0d\u9700\u8981\u82b1\u8d39\u592a\u591a\u7684\u7a7a\u95f4\u3002\u5982\u679c\u4f60\u67e5\u770bradix_sort\uff0c\u9996\u5148\u6211\u4f1a\u6784\u5efacount\u76f4\u65b9\u56fe\uff0c\u4fbf\u4e8e\u6211\u4e86\u89e3\u5bf9\u4e8e\u7ed9\u5b9a\u7684offset\uff0c\u6bcf\u4e2a\u5b57\u8282\u7684\u9891\u7387\u3002\n\u4e00\u65e6\u6211\u77e5\u9053\u4e86\u6bcf\u4e00\u79cd\u5b57\u8282\u7684\u6570\u91cf\uff08\u5171\u6709256\u79cd\uff09\uff0c\u6211\u5c31\u53ef\u4ee5\u5c06\u76ee\u6807\u6570\u7ec4\u7528\u4e8e\u5b58\u50a8\u8fd9\u4e9b\u503c\u7684\u5206\u5e03\u3002\u6bd4\u5982\uff0c\u5982\u679c0x00\u7684\u6570\u91cf\u4e3a10\u4e2a\uff0c\u6211\u5c31\u53ef\u4ee5\u5c06\u5b83\u4eec\u653e\u5728\u76ee\u6807\u6570\u7ec4\u7684\u524d10\u4e2a\u4f4d\u7f6e\u4e2d\u3002\u8fd9\u53ef\u4ee5\u8ba9\u6211\u7d22\u5f15\u5230\u5b83\u4eec\u5728\u76ee\u6807\u6570\u7ec4\u4e2d\u7684\u4f4d\u7f6e\uff0c\u8fd9\u5c31\u662fradix_sort\u4e2d\u7684\u7b2c\u4e8c\u4e2afor\u5faa\u73af\u3002\n\u6700\u540e\uff0c\u5f53\u6211\u77e5\u9053\u5b83\u4eec\u5728\u76ee\u6807\u6570\u7ec4\u4e2d\u50a8\u5b58\u5728\u54ea\u91cc\uff0c\u6211\u53ea\u662f\u904d\u5386source\u6570\u7ec4\u5bf9\u4e8e\u5f53\u524doffset\u7684\u6240\u6709\u5b57\u8282\uff0c\u5e76\u4e14\u5c06\u6570\u503c\u6309\u987a\u5e8f\u653e\u5165\u5b83\u4eec\u7684\u4f4d\u7f6e\u4e2d\u3002ByteOf\u5b8f\u7684\u4f7f\u7528\u6709\u52a9\u4e8e\u4fdd\u6301\u4ee3\u7801\u6574\u6d01\uff0c\u56e0\u4e3a\u5b83\u9700\u8981\u4e00\u4e9b\u6307\u9488\u7684\u9ed1\u9b54\u6cd5\uff0c\u4f46\u662f\u6700\u540e\u5f53for\u5faa\u73af\u7ed3\u675f\u4e4b\u540e\uff0c\u6240\u6709\u6574\u6570\u90fd\u4f1a\u6309\u7167\u5b83\u4eec\u7684\u5b57\u8282\u653e\u5165\u6876\u4e2d\u3002\n\u6211\u5728RadixMap_sort\u4e2d\u5bf9\u8fd9\u4e9b64\u4f4d\u7684\u6574\u6570\u6309\u7167\u5b83\u4eec\u7684\u524d32\u4f4d\u8fdb\u884c\u6392\u5e8f\uff0c\u8fd9\u975e\u5e38\u6709\u610f\u601d\u3002\u8fd8\u8bb0\u5f97\u6211\u662f\u5982\u4f55\u5c06\u952e\u548c\u503c\u653e\u5165RMElement\u7c7b\u578b\u7684\u8054\u5408\u4f53\u4e86\u5417\uff1f\u8fd9\u610f\u5473\u7740\u5982\u679c\u8981\u6309\u7167\u952e\u6765\u5bf9\u8fd9\u4e2a\u6570\u7ec4\u6392\u5e8f\uff0c\u6211\u53ea\u9700\u8981\u5bf9\u6bcf\u4e2a\u6574\u6570\u524d4\u4e2a\u5b57\u8282\uff0832\u4f4d\/8\u4f4d\u6bcf\u5b57\u8282\uff09\u8fdb\u884c\u6392\u5e8f\u3002\n\u5982\u679c\u4f60\u89c2\u5bdfRadixMap_sort\uff0c\u4f60\u4f1a\u770b\u5230\u6211\u83b7\u53d6\u4e86contents\u548ctemp\u7684\u4fbf\u5229\u6307\u9488\uff0c\u7528\u4e8e\u6e90\u6570\u7ec4\u548c\u76ee\u6807\u6570\u7ec4\uff0c\u4e4b\u540e\u6211\u56db\u6b21\u8c03\u7528radix_sort\u3002\u6bcf\u6b21\u8c03\u7528\u6211\u5c06\u6e90\u6570\u7ec4\u548c\u76ee\u6807\u6570\u7ec4\u66ff\u6362\u4e3a\u4e0b\u4e00\u5b57\u8282\u7684\u60c5\u51b5\u3002\u5f53\u6211\u5b8c\u6210\u65f6\uff0cradix_sort\u5c31\u5b8c\u6210\u4e86\u4efb\u52a1\uff0c\u5e76\u4e14contents\u4e2d\u4e5f\u6709\u4e86\u6700\u540e\u7684\u7ed3\u679c\u3002\n\u5982\u4f55\u6539\u8fdb\n\u8fd9\u4e2a\u5b9e\u73b0\u6709\u4e2a\u5f88\u5927\u7684\u7f3a\u70b9\uff0c\u5c31\u662f\u5b83\u904d\u5386\u4e86\u6574\u4e2a\u6570\u7ec4\u56db\u6b21\u3002\u5b83\u6267\u884c\u5730\u5f88\u5feb\uff0c\u4f46\u662f\u5982\u679c\u4f60\u901a\u8fc7\u9700\u8981\u6392\u5e8f\u7684\u6570\u503c\u5927\u5c0f\u6765\u9650\u5236\u6392\u5e8f\u7684\u603b\u91cf\uff0c\u4f1a\u66f4\u597d\u4e00\u4e9b\u3002\n\u6709\u4e24\u4e2a\u65b9\u6cd5\u53ef\u4ee5\u7528\u4e8e\u6539\u8fdb\u8fd9\u4e2a\u5b9e\u73b0\uff1a\n\n\u4f7f\u7528\u4e8c\u5206\u641c\u7d22\u6765\u5bfb\u627e\u65b0\u5143\u7d20\u7684\u6700\u5c0f\u4f4d\u7f6e\uff0c\u53ea\u5bf9\u8fd9\u4e2a\u4f4d\u7f6e\u5230\u5fae\u672b\u4e4b\u95f4\u8fdb\u884c\u6392\u5e8f\u3002\u4f60\u9700\u8981\u627e\u5230\u5b83\uff0c\u5c06\u65b0\u5143\u7d20\u653e\u5230\u672b\u5c3e\uff0c\u4e4b\u540e\u5bf9\u5b83\u4eec\u4e4b\u95f4\u8fdb\u884c\u6392\u5e8f\u3002\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u8fd9\u4f1a\u663e\u8457\u5730\u7f29\u51cf\u6392\u5e8f\u8303\u56f4\u3002\n\u8ddf\u8e2a\u5f53\u524d\u6240\u4f7f\u7528\u7684\u6700\u5927\u7684\u952e\uff0c\u4e4b\u540e\u53ea\u5bf9\u8db3\u591f\u7684\u4f4d\u6570\u8fdb\u884c\u6392\u5e8f\uff0c\u6765\u5904\u7406\u8fd9\u4e2a\u952e\u3002\u4f60\u4e5f\u53ef\u4ee5\u8ddf\u8e2a\u6700\u5c0f\u7684\u6570\u503c\uff0c\u4e4b\u540e\u53ea\u5bf9\u8303\u56f4\u4e2d\u5fc5\u8981\u7684\u5b57\u8282\u8fdb\u884c\u6392\u5e8f\u3002\u4e3a\u4e86\u8fd9\u6837\u505a\uff0c\u4f60\u9700\u8981\u5173\u5fc3CPU\u7684\u6574\u6570\u5b58\u50a8\u987a\u5e8f\uff08\u5927\u5c0f\u7aef\u5e8f\uff09\u3002\n\n\u9644\u52a0\u9898\n\n\u5b9e\u73b0\u5feb\u901f\u6392\u5e8f\u3001\u5806\u6392\u5e8f\u548c\u5f52\u5e76\u6392\u5e8f\uff0c\u5e76\u4e14\u63d0\u4f9b\u4e00\u4e2a#define\u8ba9\u5176\u4ed6\u4eba\u5728\u4e8c\u8005\uff08\u6807\u51c6\u5e93\u548c\u4f60\u7684\u5b9e\u73b0\uff09\u5f53\u4e2d\u8fdb\u884c\u9009\u62e9\uff0c\u6216\u8005\u521b\u5efa\u53e6\u4e00\u5957\u4e0d\u540c\u540d\u79f0\u7684\u51fd\u6570\u3002\u4f7f\u7528\u6211\u6559\u7ed9\u4f60\u7684\u6280\u5de7\uff0c\u9605\u8bfb\u7ef4\u57fa\u767e\u79d1\u7684\u7b97\u6cd5\u9875\u9762\uff0c\u4e4b\u540e\u53c2\u7167\u4f2a\u4ee3\u7801\u6765\u5b9e\u73b0\u5b83\u3002\n\u5bf9\u6bd4\u4f60\u7684\u5b9e\u73b0\u548c\u6807\u51c6\u5e93\u5b9e\u73b0\u7684\u6027\u80fd\u3002\n\u4f7f\u7528\u8fd9\u4e9b\u6392\u5e8f\u51fd\u6570\u521b\u5efaDArray_sort_add\uff0c\u5b83\u53ef\u4ee5\u5411DArray\u6dfb\u52a0\u5143\u7d20\uff0c\u4f46\u662f\u968f\u540e\u5bf9\u6570\u7ec4\u6392\u5e8f\u3002\n\u7f16\u5199DArray_find\uff0c\u4f7f\u7528RadixMap_find\u4e2d\u7684\u4e8c\u5206\u641c\u7d22\u7b97\u6cd5\u548cDArray_compare\uff0c\u6765\u5728\u6709\u5e8f\u7684DArray\u4e2d\u5bfb\u627e\u5143\u7d20\u3002\n","categories":"\u7ec3\u4e6010","tags":["\u6392\u5e8f","\u641c\u7d22","\u7b97\u6cd5"]},{"title":"\u66f4\u5b89\u5168\u7684\u5b57\u7b26\u4e32","url":"https:\/\/naka507.github.io\/posts\/95C8D9CEC85F55BD.html","content":"\u66f4\u5b89\u5168\u7684\u5b57\u7b26\u4e32\n\u6211\u5df2\u7ecf\u5728\u7ec3\u4e6026\u4e2d\uff0c\u6784\u5efadevpkg\u7684\u65f6\u5019\u4ecb\u7ecd\u4e86Better String\u5e93\u3002\u8fd9\u4e2a\u7ec3\u4e60\u8ba9\u4f60\u4ece\u73b0\u5728\u5f00\u59cb\u719f\u6089bstring\u5e93\uff0c\u5e76\u4e14\u660e\u767dC\u98ce\u683c\u5b57\u7b26\u4e32\u4e3a\u4ec0\u4e48\u5341\u5206\u7cdf\u7cd5\u3002\u4e4b\u540e\u4f60\u9700\u8981\u4fee\u6539liblcthw\u7684\u4ee3\u7801\u6765\u4f7f\u7528bstring\u3002\n\u4e3a\u4ec0\u4e48C\u98ce\u683c\u5b57\u7b26\u4e32\u5341\u5206\u7cdf\u7cd5\n\u5f53\u4eba\u4eec\u8c08\u8bbaC\u7684\u95ee\u9898\u65f6\uff0c\u201c\u5b57\u7b26\u4e32\u201d\u7684\u6982\u5ff5\u6c38\u8fdc\u662f\u9996\u8981\u7f3a\u9677\u4e4b\u4e00\u3002\u4f60\u5df2\u7ecf\u7528\u8fc7\u5b83\u4eec\uff0c\u5e76\u4e14\u6211\u4e5f\u8c08\u8bba\u8fc7\u5b83\u4eec\u7684\u79cd\u79cd\u7f3a\u9677\uff0c\u4f46\u662f\u5bf9\u4e3a\u4ec0\u4e48C\u5b57\u7b26\u4e32\u62e5\u6709\u7f3a\u9677\uff0c\u4ee5\u53ca\u4e3a\u4ec0\u4e48\u4e00\u76f4\u662f\u8fd9\u6837\u6ca1\u6709\u660e\u786e\u7684\u89e3\u91ca\u3002\u6211\u4f1a\u8bd5\u7740\u73b0\u5728\u505a\u51fa\u89e3\u91ca\uff0c\u90e8\u5206\u539f\u56e0\u662fC\u98ce\u683c\u5b57\u7b26\u4e32\u7ecf\u8fc7\u6570\u5341\u5e74\u7684\u4f7f\u7528\uff0c\u6709\u8db3\u591f\u7684\u8bc1\u636e\u8868\u660e\u5b83\u4eec\u662f\u4e2a\u975e\u5e38\u7cdf\u7cd5\u7684\u4e1c\u897f\u3002\n\u5bf9\u4e8e\u7ed9\u5b9a\u7684\u4efb\u4f55C\u98ce\u683c\u5b57\u7b26\u4e32\uff0c\u90fd\u4e0d\u53ef\u80fd\u9a8c\u8bc1\u5b83\u662f\u5426\u6709\u6548\u3002\n\n\u4ee5'\\0'\u7ed3\u5c3e\u7684C\u5b57\u7b26\u4e32\u662f\u6709\u6548\u7684\u3002\n\u4efb\u4f55\u5904\u7406\u65e0\u6548C\u5b57\u7b26\u4e32\u7684\u5faa\u73af\u90fd\u662f\u65e0\u9650\u7684\uff08\u6216\u8005\u9020\u6210\u7f13\u51b2\u533a\u6ea2\u51fa\uff09\u3002\nC\u5b57\u7b26\u4e32\u6ca1\u6709\u786e\u5b9a\u7684\u957f\u5ea6\uff0c\u6240\u4ee5\u68c0\u67e5\u5b83\u4eec\u7684\u552f\u4e00\u65b9\u6cd5\u5c31\u662f\u904d\u5386\u5b83\u6765\u89c2\u5bdf\u5faa\u73af\u662f\u5426\u6b63\u786e\u7ec8\u6b62\u3002\n\u6240\u4ee5\uff0c\u4e0d\u901a\u8fc7\u6709\u9650\u7684\u5faa\u73af\u5c31\u4e0d\u53ef\u80fd\u9a8c\u8bc1C\u5b57\u7b26\u4e32\u3002\n\n\u8fd9\u4e2a\u903b\u8f91\u975e\u5e38\u7b80\u5355\u3002\u4f60\u4e0d\u80fd\u7f16\u5199\u4e00\u4e2a\u5faa\u73af\u6765\u9a8c\u8bc1C\u5b57\u7b26\u4e32\u662f\u5426\u6709\u6548\uff0c\u56e0\u4e3a\u65e0\u6548\u7684\u5b57\u7b26\u4e32\u5bfc\u81f4\u5faa\u73af\u6c38\u8fdc\u4e0d\u4f1a\u505c\u6b62\u3002\u5c31\u662f\u8fd9\u6837\uff0c\u552f\u4e00\u7684\u89e3\u51b3\u65b9\u6848\u5c31\u662f\u5305\u542b\u5927\u5c0f\u3002\u4e00\u65e6\u4f60\u77e5\u9053\u4e86\u5927\u5c0f\uff0c\u4f60\u53ef\u4ee5\u907f\u514d\u65e0\u9650\u5faa\u73af\u95ee\u9898\u3002\u5982\u679c\u4f60\u89c2\u5bdf\u7ec3\u4e6027\u4e2d\u6211\u5411\u4f60\u5c55\u793a\u7684\u4e24\u4e2a\u51fd\u6570\uff1a\n\n\u8bd1\u8005\u6ce8\uff1a\u68c0\u9a8cC\u98ce\u683c\u5b57\u7b26\u4e32\u662f\u5426\u6709\u6548\u7b49\u4ef7\u4e8e\u201c\u505c\u673a\u95ee\u9898\u201d\uff0c\u8fd9\u662f\u4e00\u4e2a\u975e\u5e38\u8457\u540d\u7684\u4e0d\u53ef\u89e3\u95ee\u9898\u3002\n\nvoid copy(char to[], char from[])\n{\n    int i = 0;\n\n    \/\/ while loop will not end if from isn't '\\0' terminated\n    while((to[i] = from[i]) != '\\0') {\n        ++i;\n    }\n}\n\nint safercopy(int from_len, char *from, int to_len, char *to)\n{\n    int i = 0;\n    int max = from_len &gt; to_len - 1 ? to_len - 1 : from_len;\n\n    \/\/ to_len must have at least 1 byte\n    if(from_len &lt; 0 || to_len &lt;= 0) return -1;\n\n    for(i = 0; i &lt; max; i++) {\n        to[i] = from[i];\n    }\n\n    to[to_len - 1] = '\\0';\n\n    return i;\n}\n\u60f3\u8c61\u4f60\u60f3\u8981\u5411copy\u51fd\u6570\u6dfb\u52a0\u68c0\u67e5\u6765\u786e\u4fddfrom\u5b57\u7b26\u4e32\u6709\u6548\u3002\u4f60\u8be5\u600e\u4e48\u505a\u5462\uff1f\u4f60\u7f16\u5199\u4e86\u4e00\u4e2a\u5faa\u73af\u6765\u68c0\u67e5\u5b57\u7b26\u4e32\u662f\u5426\u5df2'\\0'\u7ed3\u5c3e\u3002\u54e6\uff0c\u7b49\u4e00\u4e0b\uff0c\u5982\u679c\u5b57\u7b26\u4e32\u4e0d\u4ee5'\\0'\u7ed3\u5c3e\uff0c\u90a3\u5b83\u600e\u4e48\u8ba9\u5faa\u73af\u505c\u4e0b\uff1f\u4e0d\u53ef\u80fd\u505c\u4e0b\uff0c\u6240\u4ee5\u65e0\u89e3\u3002\n\u65e0\u8bba\u4f60\u600e\u4e48\u505a\uff0c\u4f60\u90fd\u4e0d\u80fd\u5728\u4e0d\u77e5\u9053\u5b57\u7b26\u4e32\u957f\u5ea6\u7684\u60c5\u51b5\u4e0b\u68c0\u67e5C\u5b57\u7b26\u4e32\u7684\u6709\u6548\u6027\uff0c\u8fd9\u91ccsafercopy\u5305\u542b\u4e86\u7a0b\u5ea6\u3002\u8fd9\u4e2a\u51fd\u6570\u6ca1\u6709\u76f8\u540c\u7684\u95ee\u9898\uff0c\u56e0\u4e3a\u4ed6\u7684\u5faa\u73af\u4e00\u5b9a\u4f1a\u4e2d\u6b62\uff0c\u5373\u4f7f\u4f60\u4f20\u5165\u4e86\u9519\u8bef\u7684\u5927\u5c0f\uff0c\u5927\u5c0f\u4e5f\u662f\u6709\u9650\u7684\u3002\n\n\u8bd1\u8005\u6ce8\uff1a\u4f46\u662f\u95ee\u9898\u6765\u4e86\uff0c\u5bf9\u4e8e\u4e00\u4e2aC\u5b57\u7b26\u4e32\uff0c\u4f60\u600e\u4e48\u83b7\u53d6\u5176\u5927\u5c0f\uff1f\u4f60\u9700\u8981\u5728\u8fd9\u4e2a\u51fd\u6570\u4e4b\u524d\u8c03\u7528strlen\uff0c\u53c8\u662f\u4e00\u4e2a\u65e0\u9650\u5faa\u73af\u95ee\u9898\u3002\n\n\u4e8e\u662f\uff0cbstring\u5e93\u6240\u505a\u7684\u4e8b\u60c5\u5c31\u662f\u521b\u5efa\u4e00\u4e2a\u7ed3\u6784\u4f53\uff0c\u5b83\u603b\u662f\u5305\u542b\u5b57\u7b26\u4e32\u957f\u5ea6\u3002\u7531\u4e8e\u8fd9\u4e2a\u957f\u5ea6\u5bf9\u4e8ebstring\u6765\u8bf4\u603b\u662f\u53ef\u8bbf\u95ee\u7684\uff0c\u5b83\u4e0a\u9762\u7684\u6240\u6709\u64cd\u4f5c\u90fd\u4f1a\u66f4\u5b89\u5168\u3002\u5faa\u73af\u662f\u6709\u9650\u7684\uff0c\u5185\u5bb9\u4e5f\u662f\u6709\u6548\u7684\uff0c\u5e76\u4e14\u8fd9\u4e2a\u4e3b\u8981\u7684\u7f3a\u9677\u4e5f\u4e0d\u5b58\u5728\u4e86\u3002BString\u5e93\u4e5f\u5e26\u6709\u5927\u91cf\u6240\u9700\u7684\u5b57\u4e32\u64cd\u4f5c\uff0c\u6bd4\u5982\u5206\u5272\u3001\u683c\u5f0f\u5316\u3001\u641c\u7d22\uff0c\u5e76\u4e14\u5927\u591a\u6570\u90fd\u4f1a\u6b63\u786e\u5e76\u5b89\u5168\u5730\u6267\u884c\u3002\nbstring\u4e2d\u4e5f\u53ef\u80fd\u6709\u7f3a\u9677\uff0c\u4f46\u662f\u7ecf\u8fc7\u8fd9\u4e48\u957f\u65f6\u95f4\uff0c\u53ef\u80fd\u6027\u5df2\u7ecf\u5f88\u4f4e\u4e86\u3002glibc\u4e2d\u4e5f\u6709\u7f3a\u9677\uff0c\u6240\u4ee5\u4f60\u8ba9\u7a0b\u5e8f\u5458\u600e\u4e48\u505a\u624d\u597d\u5462\uff1f\n\u4f7f\u7528 bstrlib\n\u6709\u5f88\u591a\u6539\u8fdb\u540e\u7684\u5b57\u7b26\u4e32\u5e93\uff0c\u4f46\u662f\u6211\u6700\u559c\u6b22bstrlib\uff0c\u56e0\u4e3a\u5b83\u53ea\u6709\u4e00\u4e2a\u7a0b\u5e8f\u96c6\uff0c\u5e76\u4e14\u5177\u6709\u5927\u591a\u6570\u6240\u9700\u7684\u5b57\u7b26\u4e32\u529f\u80fd\u3002\u4f60\u5df2\u7ecf\u5728\u4f7f\u7528\u5b83\u4e86\uff0c\u6240\u4ee5\u8fd9\u4e2a\u7ec3\u4e60\u4e2d\u4f60\u9700\u8981\u4eceBetter String\u83b7\u53d6\u4e24\u4e2a\u6587\u4ef6\uff0cbstrlib.c\u548cbstrlib.h\u3002\n\u4e0b\u9762\u662f\u6211\u5728liblcthw\u9879\u76ee\u76ee\u5f55\u91cc\u6240\u505a\u7684\u4e8b\u60c5\uff1a\n$ mkdir bstrlib\n$ cd bstrlib\/\n$ unzip ~\/Downloads\/bstrlib-05122010.zip\nArchive:  \/Users\/zedshaw\/Downloads\/bstrlib-05122010.zip\n...\n$ ls\nbsafe.c             bstraux.c       bstrlib.h       bstrwrap.h      license.txt     test.cpp\nbsafe.h             bstraux.h       bstrlib.txt     cpptest.cpp     porting.txt     testaux.c\nbstest.c    bstrlib.c       bstrwrap.cpp    gpl.txt         security.txt\n$ mv bstrlib.h bstrlib.c ..\/src\/lcthw\/\n$ cd ..\/\n$ rm -rf bstrlib\n# make the edits\n$ vim src\/lcthw\/bstrlib.c\n$ make clean all\n...\n$\n\u5728\u7b2c14\u884c\u4f60\u53ef\u4ee5\u770b\u5230\uff0c\u6211\u7f16\u8f91\u4e86bstrlib.c\u6587\u4ef6\uff0c\u6765\u5c06\u5b83\u79fb\u52a8\u5230\u65b0\u7684\u4f4d\u7f6e\uff0c\u5e76\u4e14\u4fee\u590dOSX\u4e0a\u7684bug\u3002\u4e0b\u9762\u662f\u5dee\u5f02\uff1a\n25c25\n&lt; #include \"bstrlib.h\"\n---\n&gt; #include &lt;lcthw\/bstrlib.h&gt;\n2759c2759\n&lt; #ifdef __GNUC__\n---\n&gt; #if defined(__GNUC__) &amp;&amp; !defined(__APPLE__)\n\u6211\u628a\u5305\u542b\u4fee\u6539\u4e3a&lt;lcthw\/bstrlib.h&gt;\uff0c\u7136\u540e\u4fee\u590d2759\u884cifdef\u7684\u95ee\u9898\u3002\n\u5b66\u4e60\u4f7f\u7528\u8be5\u5e93\n\u8fd9\u4e2a\u7ec3\u4e60\u5f88\u77ed\uff0c\u53ea\u662f\u8ba9\u4f60\u51c6\u5907\u597d\u5269\u4f59\u7684\u7ec3\u4e60\uff0c\u5b83\u4eec\u4f1a\u7528\u5230\u8fd9\u4e2a\u5e93\u3002\u63a5\u4e0b\u6765\u4e24\u4e2a\u8054\u7cfb\u4e2d\uff0c\u6211\u4f1a\u4f7f\u7528bstrlib.c\u6765\u521b\u5efaHashmap`\u6570\u636e\u7ed3\u6784\u3002\n\u4f60\u73b0\u5728\u5e94\u8be5\u9605\u8bfb\u5934\u6587\u4ef6\u548c\u5b9e\u73b0\uff0c\u4e4b\u540e\u7f16\u5199tests\/bstr_tests.c\u6765\u6d4b\u8bd5\u4e0b\u5217\u51fd\u6570\uff0c\u6765\u719f\u6089\u8fd9\u4e2a\u5e93\uff1a\nbfromcstr\n\u4eceC\u98ce\u683c\u5b57\u7b26\u4e32\u4e2d\u521b\u5efa\u4e00\u4e2abstring\u3002\nblk2bstr\n\u4e0e\u4e0a\u9762\u76f8\u540c\uff0c\u4f46\u662f\u53ef\u4ee5\u63d0\u4f9b\u7f13\u51b2\u533a\u957f\u5ea6\u3002\nbstrcpy\n\u590d\u5236bstring\u3002\nbassign\n\u5c06\u4e00\u4e2abstring\u8d4b\u503c\u4e3a\u53e6\u4e00\u4e2a\u3002\nbassigncstr\n\u5c06bsting\u7684\u5185\u5bb9\u8bbe\u7f6e\u4e3aC\u5b57\u7b26\u4e32\u7684\u5185\u5bb9\u3002\nbassignblk\n\u5c06bsting\u7684\u5185\u5bb9\u8bbe\u7f6e\u4e3aC\u5b57\u7b26\u4e32\u7684\u5185\u5bb9\uff0c\u4f46\u662f\u53ef\u4ee5\u63d0\u4f9b\u957f\u5ea6\u3002\nbdestroy\n\u9500\u6bc1bstring\u3002\nbconcat\n\u5728\u4e00\u4e2abstring\u672b\u5c3e\u8fde\u63a5\u53e6\u4e00\u4e2a\u3002\nbstricmp\n\u6bd4\u8f83\u4e24\u4e2abstring\uff0c\u8fd4\u56de\u503c\u4e0estrcmp\u76f8\u540c\u3002\nbiseq\n\u68c0\u67e5\u4e24\u4e2abstring\u662f\u5426\u76f8\u7b49\u3002\nbinstr\n\u5224\u65ad\u4e00\u4e2abstring\u662f\u5426\u88ab\u5305\u542b\u4e8e\u53e6\u4e00\u4e2a\u3002\nbfindreplace\n\u5728\u4e00\u4e2abstring\u4e2d\u5bfb\u627e\u53e6\u4e00\u4e2a\uff0c\u5e76\u4e14\u5c06\u5176\u66ff\u6362\u4e3a\u522b\u7684\u3002\nbsplit\n\u5c06bstring\u5206\u5272\u4e3abstrList\u3002\nbformat\n\u6267\u884c\u5b57\u7b26\u4e32\u683c\u5f0f\u5316\uff0c\u5341\u5206\u4fbf\u5229\u3002\nblength\n\u83b7\u53d6bstring\u7684\u957f\u5ea6\u3002\nbdata\n\u83b7\u53d6bstring\u7684\u6570\u636e\u3002\nbchar\n\u83b7\u5f97bstring\u4e2d\u7684\u5b57\u7b26\u3002\n\u4f60\u7684\u6d4b\u8bd5\u5e94\u8be5\u8986\u76d6\u5230\u6240\u6709\u8fd9\u4e9b\u64cd\u4f5c\uff0c\u4ee5\u53ca\u4f60\u4ece\u5934\u6587\u4ef6\u4e2d\u53d1\u73b0\u7684\u66f4\u591a\u6709\u8da3\u7684\u4e1c\u897f\u3002\u5728valgrind\u4e0b\u8fd0\u884c\u6d4b\u8bd5\uff0c\u786e\u4fdd\u5185\u5b58\u4f7f\u7528\u6b63\u786e\u3002","categories":"\u7ec3\u4e6011","tags":["\u5b57\u7b26\u4e32","valgrind"]},{"title":"\u54c8\u5e0c\u8868","url":"https:\/\/naka507.github.io\/posts\/19B22BBE112EDD42.html","content":"\u54c8\u5e0c\u8868\n\u54c8\u5e0c\u8868\uff08HashMap\u3001HashTable\u4ee5\u53caDictionary\uff09\u5e7f\u6cdb\u7528\u4e8e\u8bb8\u591a\u52a8\u6001\u7f16\u7a0b\u8bed\u8a00\u6765\u50a8\u5b58\u952e\u503c\u5bf9\u7684\u6570\u636e\u3002\u54c8\u5e0c\u8868\u901a\u8fc7\u5728\u952e\u4e0a\u6267\u884c\u201c\u54c8\u5e0c\u201d\u8fd0\u7b97\u4ea7\u751f\u6574\u6570\uff0c\u4e4b\u540e\u4f7f\u7528\u5b83\u6765\u5bfb\u627e\u76f8\u5e94\u7684\u6876\u6765\u83b7\u53d6\u6216\u50a8\u5b58\u503c\u3002\u5b83\u662f\u975e\u5e38\u5feb\u901f\u7684\u4f7f\u7528\u6570\u636e\u7ed3\u6784\uff0c\u56e0\u4e3a\u5b83\u9002\u7528\u4e8e\u4efb\u4f55\u6570\u636e\u5e76\u4e14\u6613\u4e8e\u5b9e\u73b0\u3002\n\u4e0b\u9762\u662f\u54c8\u5e0c\u8868\uff08\u4e5f\u53eb\u4f5c\u5b57\u5178\uff09\u7684\u4e00\u4e2a\u4f7f\u7528\u793a\u4f8b\uff1a\nfruit_weights = {'Apples': 10, 'Oranges': 100, 'Grapes': 1.0}\n\nfor key, value in fruit_weights.items():\n    print key, \"=\", value\n\u51e0\u4e4e\u6240\u6709\u73b0\u4ee3\u8bed\u8a00\u90fd\u5177\u5907\u8fd9\u79cd\u7279\u6027\uff0c\u6240\u4ee5\u8bb8\u591a\u4eba\u5199\u5b8c\u4ee3\u7801\u90fd\u4e0d\u77e5\u9053\u5b83\u5b9e\u9645\u4e0a\u5982\u4f55\u5de5\u4f5c\u3002\u901a\u8fc7\u5728C\u4e2d\u521b\u5efaHashmap\u6570\u636e\u7ed3\u6784\uff0c\u6211\u4f1a\u5411\u4f60\u5c55\u793a\u5b83\u7684\u5de5\u4f5c\u539f\u7406\u3002\u6211\u4f1a\u4ece\u5934\u6587\u4ef6\u5f00\u59cb\uff0c\u6765\u8c08\u8bba\u6574\u4e2a\u6570\u636e\u7ed3\u6784\u3002\n#ifndef _lcthw_Hashmap_h\n#define _lcthw_Hashmap_h\n\n#include &lt;stdint.h&gt;\n#include &lt;lcthw\/darray.h&gt;\n\n#define DEFAULT_NUMBER_OF_BUCKETS 100\n\ntypedef int (*Hashmap_compare)(void *a, void *b);\ntypedef uint32_t (*Hashmap_hash)(void *key);\n\ntypedef struct Hashmap {\n    DArray *buckets;\n    Hashmap_compare compare;\n    Hashmap_hash hash;\n} Hashmap;\n\ntypedef struct HashmapNode {\n    void *key;\n    void *data;\n    uint32_t hash;\n} HashmapNode;\n\ntypedef int (*Hashmap_traverse_cb)(HashmapNode *node);\n\nHashmap *Hashmap_create(Hashmap_compare compare, Hashmap_hash);\nvoid Hashmap_destroy(Hashmap *map);\n\nint Hashmap_set(Hashmap *map, void *key, void *data);\nvoid *Hashmap_get(Hashmap *map, void *key);\n\nint Hashmap_traverse(Hashmap *map, Hashmap_traverse_cb traverse_cb);\n\nvoid *Hashmap_delete(Hashmap *map, void *key);\n\n#endif\n\u8fd9\u4e2a\u7ed3\u6784\u5c31\u662fHashmap\uff0c\u542b\u6709\u8bb8\u591aHashmapNode\u8282\u70b9\u3002\u89c2\u5bdfHashmap\u4f60\u4f1a\u770b\u5230\u5b83\u7c7b\u4f3c\u8fd9\u6837\uff1a\nDArray *buckets\n\u4e00\u4e2a\u52a8\u6001\u6570\u7ec4\uff0c\u8bbe\u7f6e\u4e3a100\u4e2a\u6876\u7684\u56fa\u5b9a\u5927\u5c0f\u3002\u6bcf\u4e2a\u6876\u4f1a\u542b\u6709\u4e00\u4e2aDArray\uff0c\u6765\u5b9e\u9645\u5b58\u6863HashmapNode\u5bf9\u3002\nHashmap_compare compare\n\u8fd9\u662f\u4e00\u4e2a\u6bd4\u8f83\u51fd\u6570\uff0c\u88abHashmap\u7528\u4e8e\u5b9e\u9645\u7528\u8fc7\u952e\u5bfb\u627e\u5143\u7d20\u3002\u5b83\u5e94\u8be5\u548c\u5176\u5b83\u7684\u6bd4\u8f83\u51fd\u6570\u7c7b\u4f3c\uff0c\u5e76\u4e14\u9ed8\u8ba4\u8bbe\u7f6e\u4e3abstrcmp\u6765\u6bd4\u8f83\u5b57\u7b26\u4e32\u3002\nHashmap_hash\n\u8fd9\u662f\u54c8\u5e0c\u51fd\u6570\uff0c\u5b83\u7528\u4e8e\u63a5\u6536\u952e\uff0c\u5904\u7406\u5b83\u7684\u5185\u5bb9\uff0c\u4e4b\u540e\u4ea7\u751f\u4e00\u4e2auint32_t\u7d22\u5f15\u6570\u503c\u3002\u4e4b\u540e\u4f60\u4f1a\u770b\u5230\u9ed8\u8ba4\u7684\u5b9e\u73b0\u3002\n\u8fd9\u4e9b\u544a\u8bc9\u4e86\u4f60\u6570\u636e\u5982\u4f55\u5b58\u50a8\uff0c\u4f46\u662f\u7528\u4f5cbuckets\u7684DArray\u8fd8\u6ca1\u6709\u521b\u5efa\u3002\u8981\u8bb0\u4f4f\u5b83\u5177\u6709\u4e8c\u5c42\u7ed3\u6784\uff1b\n\n\u7b2c\u4e00\u5c42\u6709100\u4e2a\u6876\uff0c\u6570\u636e\u57fa\u4e8e\u5b83\u4eec\u7684\u54c8\u5e0c\u503c\u50a8\u5b58\u5728\u6876\u4e2d\u3002\n\u6bcf\u4e2a\u6876\u90fd\u662f\u4e00\u4e2aDArray\uff0c\u5176\u4e2d\u542b\u6709HashmapNode\uff0c\u6dfb\u52a0\u65f6\u53ea\u662f\u7b80\u5355\u5730\u9644\u52a0\u5230\u672b\u5c3e\u3002\n\nHashMapNode\u7531\u4e0b\u9762\u4e09\u4e2a\u5143\u7d20\u7ec4\u6210\uff1a\nvoid *key\n\u952e\u503c\u5bf9\u7684\u952e\u3002\nvoid *value\n\u952e\u503c\u5bf9\u7684\u503c\u3002\nuint32_t hash\n\u8ba1\u7b97\u51fa\u7684\u54c8\u5e0c\u503c\uff0c\u5b83\u7528\u4e8e\u4f7f\u67e5\u627e\u8be5\u8282\u70b9\u66f4\u52a0\u8fc5\u901f\uff0c\u53ea\u8981\u5224\u65ad\u952e\u662f\u5426\u76f8\u7b49\u3002\n\u6709\u6587\u4ef6\u7684\u5269\u4f59\u90e8\u5206\u6ca1\u6709\u65b0\u7684\u4e1c\u897f\uff0c\u6240\u4ee5\u6211\u73b0\u5728\u53ef\u4ee5\u5411\u4f60\u5c55\u793ahashmap.c\u7684\u5b9e\u73b0\u4e86\uff1a\n#undef NDEBUG\n#include &lt;stdint.h&gt;\n#include &lt;lcthw\/hashmap.h&gt;\n#include &lt;lcthw\/dbg.h&gt;\n#include &lt;lcthw\/bstrlib.h&gt;\n\nstatic int default_compare(void *a, void *b)\n{\n    return bstrcmp((bstring)a, (bstring)b);\n}\n\n\/**\n * Simple Bob Jenkins's hash algorithm taken from the\n * wikipedia description.\n *\/\nstatic uint32_t default_hash(void *a)\n{\n    size_t len = blength((bstring)a);\n    char *key = bdata((bstring)a);\n    uint32_t hash = 0;\n    uint32_t i = 0;\n\n    for(hash = i = 0; i &lt; len; ++i)\n    {\n        hash += key[i];\n        hash += (hash &lt;&lt; 10);\n        hash ^= (hash &gt;&gt; 6);\n    }\n\n    hash += (hash &lt;&lt; 3);\n    hash ^= (hash &gt;&gt; 11);\n    hash += (hash &lt;&lt; 15);\n\n    return hash;\n}\n\n\nHashmap *Hashmap_create(Hashmap_compare compare, Hashmap_hash hash)\n{\n    Hashmap *map = calloc(1, sizeof(Hashmap));\n    check_mem(map);\n\n    map-&gt;compare = compare == NULL ? default_compare : compare;\n    map-&gt;hash = hash == NULL ? default_hash : hash;\n    map-&gt;buckets = DArray_create(sizeof(DArray *), DEFAULT_NUMBER_OF_BUCKETS);\n    map-&gt;buckets-&gt;end = map-&gt;buckets-&gt;max; \/\/ fake out expanding it\n    check_mem(map-&gt;buckets);\n\n    return map;\n\nerror:\n    if(map) {\n        Hashmap_destroy(map);\n    }\n\n    return NULL;\n}\n\n\nvoid Hashmap_destroy(Hashmap *map)\n{\n    int i = 0;\n    int j = 0;\n\n    if(map) {\n        if(map-&gt;buckets) {\n            for(i = 0; i &lt; DArray_count(map-&gt;buckets); i++) {\n                DArray *bucket = DArray_get(map-&gt;buckets, i);\n                if(bucket) {\n                    for(j = 0; j &lt; DArray_count(bucket); j++) {\n                        free(DArray_get(bucket, j));\n                    }\n                    DArray_destroy(bucket);\n                }\n            }\n            DArray_destroy(map-&gt;buckets);\n        }\n\n        free(map);\n    }\n}\n\nstatic inline HashmapNode *Hashmap_node_create(int hash, void *key, void *data)\n{\n    HashmapNode *node = calloc(1, sizeof(HashmapNode));\n    check_mem(node);\n\n    node-&gt;key = key;\n    node-&gt;data = data;\n    node-&gt;hash = hash;\n\n    return node;\n\nerror:\n    return NULL;\n}\n\n\nstatic inline DArray *Hashmap_find_bucket(Hashmap *map, void *key,\n        int create, uint32_t *hash_out)\n{\n    uint32_t hash = map-&gt;hash(key);\n    int bucket_n = hash % DEFAULT_NUMBER_OF_BUCKETS;\n    check(bucket_n &gt;= 0, \"Invalid bucket found: %d\", bucket_n);\n    *hash_out = hash; \/\/ store it for the return so the caller can use it\n\n\n    DArray *bucket = DArray_get(map-&gt;buckets, bucket_n);\n\n    if(!bucket &amp;&amp; create) {\n        \/\/ new bucket, set it up\n        bucket = DArray_create(sizeof(void *), DEFAULT_NUMBER_OF_BUCKETS);\n        check_mem(bucket);\n        DArray_set(map-&gt;buckets, bucket_n, bucket);\n    }\n\n    return bucket;\n\nerror:\n    return NULL;\n}\n\n\nint Hashmap_set(Hashmap *map, void *key, void *data)\n{\n    uint32_t hash = 0;\n    DArray *bucket = Hashmap_find_bucket(map, key, 1, &amp;hash);\n    check(bucket, \"Error can't create bucket.\");\n\n    HashmapNode *node = Hashmap_node_create(hash, key, data);\n    check_mem(node);\n\n    DArray_push(bucket, node);\n\n    return 0;\n\nerror:\n    return -1;\n}\n\nstatic inline int Hashmap_get_node(Hashmap *map, uint32_t hash, DArray *bucket, void *key)\n{\n    int i = 0;\n\n    for(i = 0; i &lt; DArray_end(bucket); i++) {\n        debug(\"TRY: %d\", i);\n        HashmapNode *node = DArray_get(bucket, i);\n        if(node-&gt;hash == hash &amp;&amp; map-&gt;compare(node-&gt;key, key) == 0) {\n            return i;\n        }\n    }\n\n    return -1;\n}\n\nvoid *Hashmap_get(Hashmap *map, void *key)\n{\n    uint32_t hash = 0;\n    DArray *bucket = Hashmap_find_bucket(map, key, 0, &amp;hash);\n    if(!bucket) return NULL;\n\n    int i = Hashmap_get_node(map, hash, bucket, key);\n    if(i == -1) return NULL;\n\n    HashmapNode *node = DArray_get(bucket, i);\n    check(node != NULL, \"Failed to get node from bucket when it should exist.\");\n\n    return node-&gt;data;\n\nerror: \/\/ fallthrough\n    return NULL;\n}\n\n\nint Hashmap_traverse(Hashmap *map, Hashmap_traverse_cb traverse_cb)\n{\n    int i = 0;\n    int j = 0;\n    int rc = 0;\n\n    for(i = 0; i &lt; DArray_count(map-&gt;buckets); i++) {\n        DArray *bucket = DArray_get(map-&gt;buckets, i);\n        if(bucket) {\n            for(j = 0; j &lt; DArray_count(bucket); j++) {\n                HashmapNode *node = DArray_get(bucket, j);\n                rc = traverse_cb(node);\n                if(rc != 0) return rc;\n            }\n        }\n    }\n\n    return 0;\n}\n\nvoid *Hashmap_delete(Hashmap *map, void *key)\n{\n    uint32_t hash = 0;\n    DArray *bucket = Hashmap_find_bucket(map, key, 0, &amp;hash);\n    if(!bucket) return NULL;\n\n    int i = Hashmap_get_node(map, hash, bucket, key);\n    if(i == -1) return NULL;\n\n    HashmapNode *node = DArray_get(bucket, i);\n    void *data = node-&gt;data;\n    free(node);\n\n    HashmapNode *ending = DArray_pop(bucket);\n\n    if(ending != node) {\n        \/\/ alright looks like it's not the last one, swap it\n        DArray_set(bucket, i, ending);\n    }\n\n    return data;\n}\n\u8fd9\u4e2a\u5b9e\u73b0\u4e2d\u5e76\u6ca1\u6709\u4ec0\u4e48\u590d\u6742\u7684\u4e1c\u897f\uff0c\u4f46\u662fdefault_hash\u548cHashmap_find_bucket\u9700\u8981\u4e00\u4e9b\u89e3\u91ca\u3002\u5f53\u4f60\u4f7f\u7528Hashmap_create\u65f6\uff0c\u4f60\u53ef\u4ee5\u4f20\u5165\u4efb\u4f55\u5b9a\u5236\u7684\u6bd4\u8f83\u548c\u54c8\u5e0c\u51fd\u6570\u3002\u4f46\u662f\u5982\u679c\u4f60\u6ca1\u6709\u5219\u4f1a\u4f7f\u7528default_compare\u548cdefault_hash\u51fd\u6570\u3002\n\u9700\u8981\u89c2\u5bdf\u7684\u7b2c\u4e00\u4ef6\u4e8b\uff0c\u662fdefault_hash\u7684\u884c\u4e3a\u3002\u8fd9\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u54c8\u5e0c\u51fd\u6570\uff0c\u53eb\u505a\u201cJenkins hash\u201d\uff0c\u4ee5Bob Jenkins\u7684\u540d\u5b57\u547d\u540d\u3002\u6211\u4ece\u7ef4\u57fa\u767e\u79d1\u4e0a\u83b7\u5f97\u4e86\u8fd9\u4e2a\u7b97\u6cd5\u3002\u5b83\u4ec5\u4ec5\u904d\u5386\u952e\uff08bstring\uff09\u7684\u6bcf\u4e2a\u5b57\u8282\u6765\u8ba1\u7b97\u54c8\u5e0c\uff0c\u4ee5\u4fbf\u5f97\u51fauint32_t\u7684\u7ed3\u679c\u3002\u5b83\u4f7f\u7528\u4e00\u4e9b\u52a0\u6cd5\u548c\u5f02\u6216\u8fd0\u7b97\u6765\u5b9e\u73b0\u3002\n\u54c8\u5e0c\u51fd\u6570\u6709\u5f88\u591a\u4e2d\uff0c\u5b83\u4eec\u5177\u6709\u4e0d\u540c\u7684\u7279\u6027\uff0c\u7136\u800c\u4e00\u65e6\u4f60\u9009\u62e9\u4e86\u4e00\u79cd\uff0c\u5c31\u9700\u8981\u4e00\u79cd\u65b9\u6cd5\u6765\u4f7f\u7528\u5b83\u627e\u5230\u6b63\u786e\u7684\u6876\u3002Hashmap_find_bucket\u50cf\u8fd9\u6837\u5b9e\u73b0\u5b83\uff1a\n\n\u9996\u5148\u8c03\u7528map-&gt;hash(key)\u6765\u83b7\u5f97\u952e\u7684\u54c8\u5e0c\u503c\u3002\n\u4e4b\u540e\u4f7f\u7528hash % DEFAULT_NUMBER_OF_BUCKETS\uff0c\u8fd9\u6837\u65e0\u8bba\u54c8\u5e0c\u503c\u6709\u591a\u5927\uff0c\u90fd\u80fd\u627e\u5230\u5339\u914d\u7684\u6876\u3002\n\u627e\u5230\u6876\u4e4b\u540e\uff0c\u5b83\u662f\u4e2aDArray\uff0c\u53ef\u80fd\u8fd8\u6ca1\u6709\u521b\u5efa\uff0c\u8fd9\u53d6\u51b3\u4e0ecreate\u53d8\u91cf\u7684\u5185\u5bb9\u3002\n\u4e00\u65e6\u627e\u5230\u4e86\u6b63\u786e\u7684DArray\u6876\uff0c\u5c31\u4f1a\u5c06\u5b83\u8fd4\u56de\uff0c\u5e76\u4e14hash_out\u53d8\u91cf\u7528\u4e8e\u5411\u8c03\u7528\u8005\u63d0\u4f9b\u6240\u627e\u5230\u7684\u54c8\u5e0c\u503c\u3002\n\n\u5176\u5b83\u51fd\u6570\u90fd\u4f7f\u7528Hashmap_find_bucket\u6765\u5b8c\u6210\u5de5\u4f5c\uff1a\n\n\u8bbe\u7f6e\u952e\u503c\u5bf9\u6d89\u53ca\u5230\u627e\u5230\u6b63\u786e\u7684\u6876\uff0c\u4e4b\u540e\u521b\u5efaHashmapNode\uff0c\u5c06\u5b83\u6dfb\u52a0\u5230\u6876\u4e2d\u3002\n\u83b7\u53d6\u952e\u503c\u6d89\u53ca\u5230\u627e\u5230\u6b63\u786e\u7684\u6876\uff0c\u4e4b\u540e\u627e\u5230\u5339\u914dhash\u548ckey\u7684HashmapNode\u3002\n\u5220\u9664\u5143\u7d20\u4e5f\u9700\u8981\u627e\u5230\u6b63\u786e\u7684\u6876\uff0c\u627e\u5230\u6240\u9700\u7684\u8282\u70b9\uff0c\u4e4b\u540e\u901a\u8fc7\u4e0e\u672b\u5c3e\u7684\u8282\u70b9\u4ea4\u6362\u4f4d\u7f6e\u6765\u5220\u9664\u3002\n\n\u4f60\u9700\u8981\u5b66\u4e60\u7684\u552f\u4e00\u4e00\u4e2a\u5176\u4ed6\u51fd\u6570\u662fHashmap_travers\uff0c\u5b83\u4ec5\u4ec5\u904d\u5386\u6bcf\u4e2a\u6876\uff0c\u5bf9\u4e8e\u4efb\u4f55\u542b\u6709\u503c\u7684\u6876\uff0c\u5728\u6bcf\u4e2a\u503c\u4e0a\u8c03\u7528traverse_cb\u3002\u8fd9\u5c31\u662f\u626b\u63cf\u6574\u4e2aHashmap\u7684\u529e\u6cd5\u3002\n\u5355\u5143\u6d4b\u8bd5\n\u6700\u540e\u4f60\u9700\u8981\u7f16\u5199\u5355\u5143\u6d4b\u8bd5\uff0c\u5bf9\u4e8e\u6240\u6709\u8fd9\u4e9b\u64cd\u4f5c\uff1a\n#include \"minunit.h\"\n#include &lt;lcthw\/hashmap.h&gt;\n#include &lt;assert.h&gt;\n#include &lt;lcthw\/bstrlib.h&gt;\n\nHashmap *map = NULL;\nstatic int traverse_called = 0;\nstruct tagbstring test1 = bsStatic(\"test data 1\");\nstruct tagbstring test2 = bsStatic(\"test data 2\");\nstruct tagbstring test3 = bsStatic(\"xest data 3\");\nstruct tagbstring expect1 = bsStatic(\"THE VALUE 1\");\nstruct tagbstring expect2 = bsStatic(\"THE VALUE 2\");\nstruct tagbstring expect3 = bsStatic(\"THE VALUE 3\");\n\nstatic int traverse_good_cb(HashmapNode *node)\n{\n    debug(\"KEY: %s\", bdata((bstring)node-&gt;key));\n    traverse_called++;\n    return 0;\n}\n\n\nstatic int traverse_fail_cb(HashmapNode *node)\n{\n    debug(\"KEY: %s\", bdata((bstring)node-&gt;key));\n    traverse_called++;\n\n    if(traverse_called == 2) {\n        return 1;\n    } else {\n        return 0;\n    }\n}\n\n\nchar *test_create()\n{\n    map = Hashmap_create(NULL, NULL);\n    mu_assert(map != NULL, \"Failed to create map.\");\n\n    return NULL;\n}\n\nchar *test_destroy()\n{\n    Hashmap_destroy(map);\n\n    return NULL;\n}\n\n\nchar *test_get_set()\n{\n    int rc = Hashmap_set(map, &amp;test1, &amp;expect1);\n    mu_assert(rc == 0, \"Failed to set &amp;test1\");\n    bstring result = Hashmap_get(map, &amp;test1);\n    mu_assert(result == &amp;expect1, \"Wrong value for test1.\");\n\n    rc = Hashmap_set(map, &amp;test2, &amp;expect2);\n    mu_assert(rc == 0, \"Failed to set test2\");\n    result = Hashmap_get(map, &amp;test2);\n    mu_assert(result == &amp;expect2, \"Wrong value for test2.\");\n\n    rc = Hashmap_set(map, &amp;test3, &amp;expect3);\n    mu_assert(rc == 0, \"Failed to set test3\");\n    result = Hashmap_get(map, &amp;test3);\n    mu_assert(result == &amp;expect3, \"Wrong value for test3.\");\n\n    return NULL;\n}\n\nchar *test_traverse()\n{\n    int rc = Hashmap_traverse(map, traverse_good_cb);\n    mu_assert(rc == 0, \"Failed to traverse.\");\n    mu_assert(traverse_called == 3, \"Wrong count traverse.\");\n\n    traverse_called = 0;\n    rc = Hashmap_traverse(map, traverse_fail_cb);\n    mu_assert(rc == 1, \"Failed to traverse.\");\n    mu_assert(traverse_called == 2, \"Wrong count traverse for fail.\");\n\n    return NULL;\n}\n\nchar *test_delete()\n{\n    bstring deleted = (bstring)Hashmap_delete(map, &amp;test1);\n    mu_assert(deleted != NULL, \"Got NULL on delete.\");\n    mu_assert(deleted == &amp;expect1, \"Should get test1\");\n    bstring result = Hashmap_get(map, &amp;test1);\n    mu_assert(result == NULL, \"Should delete.\");\n\n    deleted = (bstring)Hashmap_delete(map, &amp;test2);\n    mu_assert(deleted != NULL, \"Got NULL on delete.\");\n    mu_assert(deleted == &amp;expect2, \"Should get test2\");\n    result = Hashmap_get(map, &amp;test2);\n    mu_assert(result == NULL, \"Should delete.\");\n\n    deleted = (bstring)Hashmap_delete(map, &amp;test3);\n    mu_assert(deleted != NULL, \"Got NULL on delete.\");\n    mu_assert(deleted == &amp;expect3, \"Should get test3\");\n    result = Hashmap_get(map, &amp;test3);\n    mu_assert(result == NULL, \"Should delete.\");\n\n    return NULL;\n}\n\nchar *all_tests()\n{\n    mu_suite_start();\n\n    mu_run_test(test_create);\n    mu_run_test(test_get_set);\n    mu_run_test(test_traverse);\n    mu_run_test(test_delete);\n    mu_run_test(test_destroy);\n\n    return NULL;\n}\n\nRUN_TESTS(all_tests);\n\u9700\u8981\u5b66\u4e60\u7684\u552f\u4e00\u4e00\u4ef6\u4e8b\u60c5\u5c31\u662f\u6211\u5728\u5355\u5143\u6d4b\u8bd5\u7684\u9876\u7aef\u4f7f\u7528\u4e86bstring\u7684\u7279\u6027\u6765\u521b\u5efa\u9759\u6001\u5b57\u7b26\u4e32\u7528\u4e8e\u6d4b\u8bd5\u3002\u6211\u4f7f\u7528tagbstring\u548cbsStatic\u57287~13\u884c\u521b\u5efa\u4ed6\u4eec\u3002\n\u5982\u4f55\u6539\u8fdb\n\u8fd9\u662f\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684Hashmap\u5b9e\u73b0\uff0c\u5c31\u50cf\u4e66\u4e2d\u7684\u5927\u591a\u6570\u5176\u4ed6\u6570\u636e\u7ed3\u6784\u90a3\u6837\u3002\u6211\u7684\u76ee\u6807\u4e0d\u662f\u8ba9\u4f60\u4ee5\u975e\u5e38\u5feb\u7684\u901f\u5ea6\u6765\u638c\u63e1\u6570\u636e\u7ed3\u6784\u3002\u901a\u5e38\u8fd9\u4e9b\u8ba8\u8bba\u8d77\u6765\u975e\u5e38\u590d\u6742\uff0c\u5e76\u4e14\u4f1a\u8ba9\u4f60\u504f\u79bb\u771f\u6b63\u7684\u57fa\u7840\u548c\u5b9e\u7528\u7684\u6570\u636e\u7ed3\u6784\u3002\u6211\u7684\u76ee\u6807\u662f\u63d0\u4f9b\u4e00\u4e2a\u6613\u4e8e\u7406\u89e3\u7684\u8d77\u59cb\u70b9\uff0c\u7136\u540e\u518d\u6539\u8fdb\u6216\u7406\u89e3\u5b83\u4eec\u5982\u4f55\u5b9e\u73b0\u3002\n\u5bf9\u4e8e\u8fd9\u548c\u7ec3\u4e60\uff0c\u4e0b\u9762\u662f\u4f60\u80fd\u591f\u7528\u4e8e\u6539\u8fdb\u8fd9\u4e2a\u5b9e\u73b0\u7684\u65b9\u6cd5\uff1a\n\n\u4f60\u53ef\u4ee5\u5bf9\u6bcf\u4e2a\u6876\u8fdb\u884c\u6392\u5e8f\uff0c\u4f7f\u5b83\u4eec\u6709\u5e8f\u3002\u8fd9\u4f1a\u589e\u52a0\u4f60\u7684\u63d2\u5165\u65f6\u95f4\uff0c\u4f46\u662f\u51cf\u5c11\u5bfb\u627e\u65f6\u95f4\uff0c\u56e0\u4e3a\u4f60\u53ef\u4ee5\u4f7f\u7528\u4e8c\u5206\u641c\u7d22\u6765\u5bfb\u627e\u6bcf\u4e2a\u8282\u70b9\u3002\u5230\u73b0\u5728\u4e3a\u6b62\u5b83\u904d\u5386\u6876\u4e2d\u7684\u6240\u6709\u8282\u70b9\u6765\u5bfb\u627e\u5143\u7d20\u3002\n\u4f60\u53ef\u4ee5\u52a8\u6001\u8bbe\u5b9a\u6876\u7684\u6570\u91cf\uff0c\u6216\u8005\u8ba9\u8c03\u7528\u8005\u6307\u5b9a\u6bcf\u4e2aHashmap\u4e2d\u7684\u8be5\u503c\u3002\n\u4f60\u53ef\u4ee5\u4f7f\u7528\u66f4\u597d\u7684default_hash\u51fd\u6570\uff0c\u6709\u8bb8\u591a\u8fd9\u6837\u7684\u51fd\u6570\u3002\n\u8fd9\u4e2a\u5b9e\u73b0\u4ee5\u53ca\u51e0\u4e4e\u6240\u6709\u5b9e\u73b0\u90fd\u6709\u5c06\u4e00\u4e9b\u7279\u5b9a\u7684\u952e\u5b58\u5230\u4e00\u4e2a\u6876\u4e2d\u7684\u98ce\u9669\u3002\u8fd9\u4f1a\u4f7f\u4f60\u7684\u7a0b\u5e8f\u8fd0\u884c\u901f\u5ea6\u53d8\u6162\uff0c\u56e0\u4e3a\u5b83\u4f7fHashmap\u7684\u5904\u7406\u8fc7\u7a0b\u53d8\u6210\u4e86\u5904\u7406\u5355\u4e2a\u7684DArray\u3002\u5982\u679c\u4f60\u5bf9\u6876\u4e2d\u7684\u6570\u7ec4\u6392\u5e8f\u4f1a\u6709\u5e2e\u52a9\uff0c\u4f46\u662f\u4f60\u53ef\u4ee5\u4ec5\u4ec5\u4f7f\u7528\u66f4\u597d\u7684\u54c8\u5e0c\u51fd\u6570\u6765\u907f\u514d\uff0c\u5e76\u4e14\u5bf9\u4e8e\u771f\u6b63\u7684\u504f\u6267\u72c2\uff0c\u4f60\u53ef\u4ee5\u6dfb\u52a0\u4e00\u4e2a\u968f\u673a\u7684\u76d0\uff0c\u8ba9\u952e\u4e0d\u53ef\u9884\u6d4b\u3002\n\u4f60\u53ef\u4ee5\u5220\u6389\u4e0d\u6b6a\u6709\u4efb\u4f55\u8282\u70b9\u7684\u6876\u6765\u8282\u7ea6\u7a7a\u95f4\uff0c\u6216\u8005\u5c06\u7a7a\u7684\u6876\u5f53\u5982\u7f13\u5b58\u4e2d\uff0c\u4fbf\u4e8e\u8282\u7ea6\u521b\u5efa\u548c\u9500\u6bc1\u5b83\u4eec\u7684\u5f00\u9500\u3002\n\u73b0\u5728\u4e3a\u6b62\u5b83\u53ef\u4ee5\u6dfb\u52a0\u5df2\u5b58\u5728\u7684\u5143\u7d20\uff0c\u7f16\u5199\u4e00\u4e2a\u66ff\u4ee3\u7684\u5b9e\u73b0\uff0c\u4f7f\u5b83\u53ea\u80fd\u591f\u6dfb\u52a0\u4e0d\u5b58\u5728\u7684\u5143\u7d20\u3002\n\n\u50cf\u5f80\u5e38\u4e00\u6837\uff0c\u4f60\u9700\u8981\u6d4f\u89c8\u6bcf\u4e2a\u51fd\u6570\uff0c\u5e76\u4e14\u4f7f\u4e4b\u5065\u58ee\u3002Hashmap\u4e5f\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e9b\u8c03\u8bd5\u8bbe\u7f6e\uff0c\u6765\u6267\u884c\u4e0d\u53d8\u91cf\u68c0\u67e5\u3002\n\u9644\u52a0\u9898\n\n\u7814\u7a76\u4f60\u6700\u559c\u6b22\u7684\u7f16\u7a0b\u8bed\u8a00\u7684Hashmap\u5b9e\u73b0\uff0c\u4e86\u89e3\u5b83\u4eec\u5177\u6709\u4ec0\u4e48\u7279\u6027\u3002\n\u627e\u5230Hashmap\u7684\u4e3b\u8981\u7f3a\u70b9\uff0c\u4ee5\u53ca\u5982\u4f55\u907f\u514d\u5b83\u4eec\u3002\u4f8b\u5982\uff0c\u5b83\u4eec\u4e0d\u505a\u7279\u5b9a\u7684\u4fee\u6539\u5c31\u4e0d\u80fd\u4fdd\u5b58\u987a\u5e8f\uff0c\u5e76\u4e14\u5f53\u4f60\u57fa\u4e8e\u952e\u7684\u4e00\u90e8\u5206\u6765\u67e5\u627e\u5143\u7d20\u65f6\uff0c\u5b83\u4eec\u5c31\u4e0d\u80fd\u751f\u6548\u3002\n\u7f16\u5199\u5355\u5143\u6d4b\u8bd5\u6765\u5c55\u793a\u5c06\u952e\u90fd\u586b\u5145\u5230Hashmap\u7684\u4e00\u4e2a\u6876\u4e2d\u6240\u5e26\u6765\u7684\u7f3a\u9677\uff0c\u4e4b\u540e\u6d4b\u8bd5\u8fd9\u6837\u5982\u4f55\u5f71\u54cd\u6027\u80fd\u3002\u4e00\u4e2a\u5b9e\u73b0\u5b83\u7684\u597d\u65b9\u6cd5\uff0c\u5c31\u662f\u628a\u6876\u7684\u6570\u91cf\u51cf\u5c11\u5230\u4e00\u4e2a\u611a\u8822\u7684\u6570\u503c\uff0c\u6bd4\u59821\u3002\n","categories":"\u7ec3\u4e6012","tags":["\u54c8\u5e0c","\u7ed3\u6784"]},{"title":"\u54c8\u5e0c\u7b97\u6cd5","url":"https:\/\/naka507.github.io\/posts\/8ACDB75ECC6C4448.html","content":"\u54c8\u5e0c\u7b97\u6cd5\n\u4f60\u9700\u8981\u5728\u8fd9\u4e2a\u7ec3\u4e60\u4e2d\u5b9e\u73b0\u4e0b\u9762\u8fd9\u4e09\u4e2a\u54c8\u5e0c\u51fd\u6570\uff1a\nFNV-1a\n\u4ee5\u521b\u9020\u8005Glenn Fowler\u3001Phong Vo \u548c Landon Curt Noll\u7684\u540d\u5b57\u547d\u540d\u3002\u8fd9\u4e2a\u7b97\u6cd5\u4ea7\u751f\u5408\u7406\u7684\u6570\u503c\u5e76\u4e14\u76f8\u5f53\u5feb\u3002\nAdler-32\n\u4ee5Mark Adler\u547d\u540d\u3002\u4e00\u4e2a\u6bd4\u8f83\u7cdf\u7cd5\u7684\u7b97\u6cd5\uff0c\u4f46\u662f\u7531\u6765\u5df2\u4e45\u5e76\u4e14\u9002\u4e8e\u5b66\u4e60\u3002\nDJB Hash\n\u7531Dan J. Bernstein (DJB)\u53d1\u660e\u7684\u54c8\u5e0c\u7b97\u6cd5\uff0c\u4f46\u662f\u96be\u4ee5\u627e\u5230\u8fd9\u4e2a\u7b97\u6cd5\u7684\u8ba8\u8bba\u3002\u5b83\u975e\u5e38\u5feb\uff0c\u4f46\u662f\u7ed3\u679c\u4e0d\u662f\u5f88\u597d\u3002\n\u4f60\u5e94\u8be5\u770b\u5230\u6211\u4f7f\u7528\u4e86Jenkins hash\u4f5c\u4e3aHashmap\u6570\u636e\u7ed3\u6784\u7684\u9ed8\u8ba4\u54c8\u5e0c\u51fd\u6570\uff0c\u6240\u4ee5\u8fd9\u4e2a\u7ec3\u4e60\u7684\u91cd\u70b9\u4f1a\u653e\u5728\u8fd9\u4e09\u4e2a\u65b0\u7684\u51fd\u6570\u4e0a\u3002\u5b83\u4eec\u7684\u4ee3\u7801\u901a\u5e38\u6765\u8bf4\u4e0d\u591a\uff0c\u5e76\u4e14\u6ca1\u6709\u4efb\u4f55\u4f18\u5316\u3002\u50cf\u5f80\u5e38\u4e00\u6837\u6211\u4f1a\u653e\u6162\u901f\u5ea6\u6765\u8ba9\u4f60\u7406\u89e3\u3002\n\u5934\u6587\u4ef6\u975e\u5e38\u7b80\u5355\uff0c\u6240\u4ee5\u6211\u4ee5\u5b83\u5f00\u59cb\uff1a\n#ifndef hashmap_algos_h\n#define hashmap_algos_h\n\n#include &lt;stdint.h&gt;\n\nuint32_t Hashmap_fnv1a_hash(void *data);\n\nuint32_t Hashmap_adler32_hash(void *data);\n\nuint32_t Hashmap_djb_hash(void *data);\n\n#endif\n\u6211\u53ea\u662f\u58f0\u660e\u4e86\u4e09\u4e2a\u51fd\u6570\uff0c\u6211\u4f1a\u5728hashmap_algos.c\u6587\u4ef6\u4e2d\u5b9e\u73b0\u5b83\u4eec\uff1a\n#include &lt;lcthw\/hashmap_algos.h&gt;\n#include &lt;lcthw\/bstrlib.h&gt;\n\n\/\/ settings taken from\n\/\/ http:\/\/www.isthe.com\/chongo\/tech\/comp\/fnv\/index.html#FNV-param\nconst uint32_t FNV_PRIME = 16777619;\nconst uint32_t FNV_OFFSET_BASIS = 2166136261;\n\nuint32_t Hashmap_fnv1a_hash(void *data)\n{\n    bstring s = (bstring)data;\n    uint32_t hash = FNV_OFFSET_BASIS;\n    int i = 0;\n\n    for(i = 0; i &lt; blength(s); i++) {\n        hash ^= bchare(s, i, 0);\n        hash *= FNV_PRIME;\n    }\n\n    return hash;\n}\n\nconst int MOD_ADLER = 65521;\n\nuint32_t Hashmap_adler32_hash(void *data)\n{\n    bstring s = (bstring)data;\n    uint32_t a = 1, b = 0;\n    int i = 0;\n\n    for (i = 0; i &lt; blength(s); i++)\n    {\n        a = (a + bchare(s, i, 0)) % MOD_ADLER;\n        b = (b + a) % MOD_ADLER;\n    }\n\n    return (b &lt;&lt; 16) | a;\n}\n\nuint32_t Hashmap_djb_hash(void *data)\n{\n    bstring s = (bstring)data;\n    uint32_t hash = 5381;\n    int i = 0;\n\n    for(i = 0; i &lt; blength(s); i++) {\n        hash = ((hash &lt;&lt; 5) + hash) + bchare(s, i, 0); \/* hash * 33 + c *\/\n    }\n\n    return hash;\n}\n\u8fd9\u4e2a\u6587\u4ef6\u4e2d\u6709\u4e09\u4e2a\u54c8\u5e0c\u51fd\u6570\u3002\u4f60\u5e94\u8be5\u6ce8\u610f\u5230\u6211\u9ed8\u8ba4\u4f7f\u7528bstring\u4f5c\u4e3a\u952e\uff0c\u5e76\u4e14\u4f7f\u7528\u4e86bchare\u51fd\u6570\u4ece\u5b57\u7b26\u4e32\u83b7\u53d6\u5b57\u7b26\uff0c\u7136\u800c\u5982\u679c\u5b57\u7b26\u8d85\u51fa\u4e86\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u4f1a\u8fd4\u56de0\u3002\n\u8fd9\u4e9b\u7b97\u6cd5\u4e2d\u6bcf\u4e2a\u90fd\u53ef\u4ee5\u5728\u7f51\u4e0a\u641c\u7d22\u5230\uff0c\u6240\u4ee5\u4f60\u9700\u8981\u641c\u7d22\u5b83\u4eec\u5e76\u9605\u8bfb\u76f8\u5173\u5185\u5bb9\u3002\u540c\u65f6\u6211\u4e3b\u8981\u4f7f\u7528\u7ef4\u57fa\u767e\u79d1\u4e0a\u7684\u7ed3\u679c\uff0c\u4e4b\u540e\u53c2\u7167\u4e86\u5176\u5b83\u6765\u6e90\u3002\n\u63a5\u7740\u6211\u4e3a\u6bcf\u4e2a\u7b97\u6cd5\u7f16\u5199\u4e86\u5355\u5143\u6d4b\u8bd5\uff0c\u540c\u65f6\u4e5f\u6d4b\u8bd5\u4e86\u5b83\u4eec\u5728\u591a\u4e2a\u6876\u4e2d\u7684\u5206\u5e03\u60c5\u51b5\u3002\n#include &lt;lcthw\/bstrlib.h&gt;\n#include &lt;lcthw\/hashmap.h&gt;\n#include &lt;lcthw\/hashmap_algos.h&gt;\n#include &lt;lcthw\/darray.h&gt;\n#include \"minunit.h\"\n\nstruct tagbstring test1 = bsStatic(\"test data 1\");\nstruct tagbstring test2 = bsStatic(\"test data 2\");\nstruct tagbstring test3 = bsStatic(\"xest data 3\");\n\nchar *test_fnv1a()\n{\n    uint32_t hash = Hashmap_fnv1a_hash(&amp;test1);\n    mu_assert(hash != 0, \"Bad hash.\");\n\n    hash = Hashmap_fnv1a_hash(&amp;test2);\n    mu_assert(hash != 0, \"Bad hash.\");\n\n    hash = Hashmap_fnv1a_hash(&amp;test3);\n    mu_assert(hash != 0, \"Bad hash.\");\n\n    return NULL;\n}\n\nchar *test_adler32()\n{\n    uint32_t hash = Hashmap_adler32_hash(&amp;test1);\n    mu_assert(hash != 0, \"Bad hash.\");\n\n    hash = Hashmap_adler32_hash(&amp;test2);\n    mu_assert(hash != 0, \"Bad hash.\");\n\n    hash = Hashmap_adler32_hash(&amp;test3);\n    mu_assert(hash != 0, \"Bad hash.\");\n\n    return NULL;\n}\n\nchar *test_djb()\n{\n    uint32_t hash = Hashmap_djb_hash(&amp;test1);\n    mu_assert(hash != 0, \"Bad hash.\");\n\n    hash = Hashmap_djb_hash(&amp;test2);\n    mu_assert(hash != 0, \"Bad hash.\");\n\n    hash = Hashmap_djb_hash(&amp;test3);\n    mu_assert(hash != 0, \"Bad hash.\");\n\n    return NULL;\n}\n\n#define BUCKETS 100\n#define BUFFER_LEN 20\n#define NUM_KEYS BUCKETS * 1000\nenum { ALGO_FNV1A, ALGO_ADLER32, ALGO_DJB};\n\nint gen_keys(DArray *keys, int num_keys)\n{\n    int i = 0;\n    FILE *urand = fopen(\"\/dev\/urandom\", \"r\");\n    check(urand != NULL, \"Failed to open \/dev\/urandom\");\n\n    struct bStream *stream = bsopen((bNread)fread, urand);\n    check(stream != NULL, \"Failed to open \/dev\/urandom\");\n\n    bstring key = bfromcstr(\"\");\n    int rc = 0;\n\n    \/\/ FNV1a histogram\n    for(i = 0; i &lt; num_keys; i++) {\n        rc = bsread(key, stream, BUFFER_LEN);\n        check(rc &gt;= 0, \"Failed to read from \/dev\/urandom.\");\n\n        DArray_push(keys, bstrcpy(key));\n    }\n\n    bsclose(stream);\n    fclose(urand);\n    return 0;\n\nerror:\n    return -1;\n}\n\nvoid destroy_keys(DArray *keys)\n{\n    int i = 0;\n    for(i = 0; i &lt; NUM_KEYS; i++) {\n        bdestroy(DArray_get(keys, i));\n    }\n\n    DArray_destroy(keys);\n}\n\nvoid fill_distribution(int *stats, DArray *keys, Hashmap_hash hash_func)\n{\n    int i = 0;\n    uint32_t hash = 0;\n\n    for(i = 0; i &lt; DArray_count(keys); i++) {\n        hash = hash_func(DArray_get(keys, i));\n        stats[hash % BUCKETS] += 1;\n    }\n\n}\n\nchar *test_distribution()\n{\n    int i = 0;\n    int stats[3][BUCKETS] = {{0}};\n    DArray *keys = DArray_create(0, NUM_KEYS);\n\n    mu_assert(gen_keys(keys, NUM_KEYS) == 0, \"Failed to generate random keys.\");\n\n    fill_distribution(stats[ALGO_FNV1A], keys, Hashmap_fnv1a_hash);\n    fill_distribution(stats[ALGO_ADLER32], keys, Hashmap_adler32_hash);\n    fill_distribution(stats[ALGO_DJB], keys, Hashmap_djb_hash);\n\n    fprintf(stderr, \"FNV\\tA32\\tDJB\\n\");\n\n    for(i = 0; i &lt; BUCKETS; i++) {\n        fprintf(stderr, \"%d\\t%d\\t%d\\n\",\n                stats[ALGO_FNV1A][i],\n                stats[ALGO_ADLER32][i],\n                stats[ALGO_DJB][i]);\n    }\n\n    destroy_keys(keys);\n\n    return NULL;\n}\n\nchar *all_tests()\n{\n    mu_suite_start();\n\n    mu_run_test(test_fnv1a);\n    mu_run_test(test_adler32);\n    mu_run_test(test_djb);\n    mu_run_test(test_distribution);\n\n    return NULL;\n}\n\nRUN_TESTS(all_tests);\n\u6211\u5728\u4ee3\u7801\u4e2d\u5c06BUCKETS\u7684\u503c\u8bbe\u7f6e\u5f97\u975e\u5e38\u9ad8\uff0c\u56e0\u4e3a\u6211\u7684\u7535\u8111\u8db3\u591f\u5feb\u3002\u5982\u679c\u4f60\u5c06\u5b83\u548cNUM_KEYS\u8c03\u4f4e\uff0c\u5c31\u4f1a\u6bd4\u8f83\u6162\u4e86\u3002\u8fd9\u4e2a\u6d4b\u8bd5\u8fd0\u884c\u4e4b\u540e\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u54c8\u5e0c\u51fd\u6570\uff0c\u901a\u8fc7\u4f7f\u7528R\u8bed\u8a00\u505a\u7edf\u8ba1\u5206\u6790\uff0c\u53ef\u4ee5\u89c2\u5bdf\u952e\u7684\u5206\u5e03\u60c5\u51b5\u3002\n\u6211\u5b9e\u73b0\u5b83\u7684\u65b9\u5f0f\u662f\u4f7f\u7528gen_keys\u51fd\u6570\u751f\u6210\u952e\u7684\u5927\u578b\u5217\u8868\u3002\u8fd9\u4e9b\u952e\u4ece\/dev\/urandom\u8bbe\u5907\u4e2d\u83b7\u5f97\uff0c\u5b83\u4eec\u662f\u4e00\u4e9b\u968f\u673a\u7684\u5b57\u8282\u3002\u4e4b\u540e\u6211\u4f7f\u7528\u4e86\u8fd9\u4e9b\u952e\u6765\u8c03\u7528fill_distribution\uff0c\u586b\u5145\u4e86stats\u6570\u7ec4\uff0c\u8fd9\u4e9b\u952e\u8ba1\u7b97\u54c8\u5e0c\u503c\u540e\u4f1a\u88ab\u653e\u5165\u7406\u8bba\u4e0a\u7684\u4e00\u4e9b\u6876\u4e2d\u3002\u6240\u6709\u8fd9\u7c7b\u51fd\u6570\u4f1a\u904d\u5386\u6240\u6709\u952e\uff0c\u8ba1\u7b97\u54c8\u5e0c\uff0c\u4e4b\u540e\u6267\u884c\u7c7b\u4f3cHashmap\u6240\u505a\u7684\u4e8b\u60c5\u6765\u5bfb\u627e\u6b63\u786e\u7684\u6876\u3002\n\u6700\u540e\u6211\u53ea\u662f\u7b80\u5355\u6253\u5370\u51fa\u4e00\u4e2a\u4e09\u5217\u7684\u8868\u683c\uff0c\u5305\u542b\u6bcf\u4e2a\u6876\u7684\u6700\u7ec8\u6570\u91cf\uff0c\u5c55\u793a\u4e86\u6bcf\u4e2a\u6876\u4e2d\u968f\u673a\u50a8\u5b58\u4e86\u591a\u5c11\u4e2a\u952e\u3002\u4e4b\u540e\u53ef\u4ee5\u89c2\u5bdf\u8fd9\u4e9b\u6570\u503c\uff0c\u6765\u5224\u65ad\u8fd9\u4e9b\u54c8\u5e0c\u51fd\u6570\u662f\u5426\u5408\u7406\u5bf9\u952e\u8fdb\u884c\u5206\u914d\u3002\n\u4f60\u4f1a\u770b\u5230\u4ec0\u4e48\n\u6559\u6388R\u662f\u8fd9\u672c\u4e66\u8303\u56f4\u4e4b\u5916\u7684\u5185\u5bb9\uff0c\u4f46\u662f\u5982\u679c\u4f60\u60f3\u8bd5\u8bd5\u5b83\uff0c\u53ef\u4ee5\u8bbf\u95eer-project.org\u3002\n\u4e0b\u9762\u662f\u4e00\u4e2a\u7b80\u7565\u7684shell\u4f1a\u8bdd\uff0c\u5411\u4f60\u5c55\u793a\u4e86\u6211\u5982\u4f55\u8fd0\u884c1tests\/hashmap_algos_test\u6765\u83b7\u53d6test_distribution\u4ea7\u751f\u7684\u8868\uff08\u8fd9\u91cc\u6ca1\u6709\u5c55\u793a\uff09\uff0c\u4e4b\u540e\u4f7f\u7528R\u6765\u89c2\u5bdf\u7edf\u8ba1\u7ed3\u679c\uff1a\n$ tests\/hashmap_algos_tests\n# copy-paste the table it prints out\n$ vim hash.txt\n$ R\n&gt; hash &lt;- read.table(\"hash.txt\", header=T)\n&gt; summary(hash)\n      FNV            A32              DJB      \n Min.   : 945   Min.   : 908.0   Min.   : 927  \n 1st Qu.: 980   1st Qu.: 980.8   1st Qu.: 979  \n Median : 998   Median :1000.0   Median : 998  \n Mean   :1000   Mean   :1000.0   Mean   :1000  \n 3rd Qu.:1016   3rd Qu.:1019.2   3rd Qu.:1021  \n Max.   :1072   Max.   :1075.0   Max.   :1082  \n\u9996\u5148\u6211\u53ea\u662f\u8fd0\u884c\u6d4b\u8bd5\uff0c\u5b83\u4f1a\u5728\u5c4f\u5e55\u4e0a\u6253\u5370\u8868\u683c\u3002\u4e4b\u540e\u6211\u5c06\u5b83\u590d\u5236\u7c98\u8d34\u5230\u4e0b\u6765\u5e76\u4f7f\u7528vim hash.txt\u6765\u50a8\u5b58\u6570\u636e\u3002\u5982\u679c\u4f60\u89c2\u5bdf\u6570\u636e\uff0c\u5b83\u4f1a\u5e26\u6709\u663e\u793a\u8fd9\u4e09\u4e2a\u7b97\u6cd5\u7684FNV A32 DJB\u8868\u5934\u3002\n\u63a5\u7740\uff0c\u6211\u8fd0\u884cR\u6765\u4f7f\u7528read.table\u547d\u4ee4\u52a0\u8f7d\u6570\u636e\u96c6\u3002\u5b83\u662f\u4e2a\u975e\u5e38\u667a\u80fd\u7684\u51fd\u6570\uff0c\u9002\u7528\u4e8e\u8fd9\u79cdtab\u5206\u9694\u7684\u6570\u636e\uff0c\u6211\u53ea\u8981\u544a\u8bc9\u5b83header=T\uff0c\u5b83\u5c31\u77e5\u9053\u6570\u636e\u96c6\u4e2d\u5e26\u6709\u8868\u5934\u3002\n\u6700\u540e\uff0c\u6211\u5bb6\u5728\u4e86\u6570\u636e\u5e76\u4e14\u53ef\u4ee5\u4f7f\u7528summary\u6765\u6253\u5370\u51fa\u5b83\u6bcf\u884c\u7684\u7edf\u8ba1\u7ed3\u679c\u3002\u8fd9\u91cc\u4f60\u53ef\u4ee5\u770b\u5230\u6bcf\u4e2a\u51fd\u6570\u5904\u7406\u968f\u673a\u6570\u636e\u5b9e\u9645\u4e0a\u90fd\u6ca1\u6709\u95ee\u9898\u3002\u6211\u4f1a\u89e3\u91ca\u6bcf\u4e2a\u884c\u7684\u610f\u4e49\uff1a\nMin.\n\u5b83\u662f\u5217\u51fa\u6570\u636e\u7684\u6700\u5c0f\u503c\u3002FNV\u4f3c\u4e4e\u5728\u8fd9\u65b9\u9762\u662f\u6700\u4f18\u7684\uff0c\u56e0\u4e3a\u5b83\u6709\u6700\u5927\u7684\u7ed3\u679c\uff0c\u4e5f\u5c31\u662f\u8bf4\u5b83\u7684\u4e0b\u754c\u6700\u4e25\u683c\u3002\n1st Qu.\n\u6570\u636e\u7684\u7b2c\u4e00\u4e2a\u56db\u5206\u4f4d\u70b9\u3002\nMedian\n\u5982\u679c\u4f60\u5bf9\u5b83\u4eec\u6392\u5e8f\uff0c\u8fd9\u4e2a\u6570\u503c\u5c31\u662f\u6700\u91cd\u70b9\u7684\u90a3\u4e2a\u6570\u3002\u4e2d\u4f4d\u6570\u6bd4\u8d77\u5747\u503c\u6765\u8bb2\u66f4\u6709\u7528\u4e00\u4e9b\u3002\nMean\n\u5747\u503c\u5bf9\u5927\u591a\u6570\u4eba\u610f\u5473\u7740\u201c\u5e73\u5747\u201d\uff0c\u5b83\u662f\u6570\u636e\u7684\u603b\u6570\u6bd4\u6570\u91cf\u3002\u5982\u679c\u4f60\u89c2\u5bdf\u5b83\u4eec\uff0c\u6240\u6709\u5747\u503c\u90fd\u662f1000\uff0c\u8fd9\u975e\u5e38\u68d2\u3002\u5982\u679c\u4f60\u5c06\u5b83\u53bb\u4e2d\u4f4d\u6570\u5bf9\u6bd4\uff0c\u4f60\u4f1a\u53d1\u73b0\uff0c\u8fd9\u4e09\u4e2a\u4e2d\u4f4d\u6570\u90fd\u5f88\u63a5\u8fd1\u5747\u503c\u3002\u8fd9\u5c31\u610f\u5473\u7740\u8fd9\u4e9b\u6570\u636e\u90fd\u6ca1\u6709\u201c\u504f\u5411\u201d\u4e00\u7aef\uff0c\u6240\u4ee5\u5747\u503c\u662f\u53ef\u4fe1\u7684\u3002\n3rd Qu.\n\u6570\u636e\u540e\u56db\u5206\u4e4b\u4e00\u7684\u8d77\u59cb\u70b9\uff0c\u4ee3\u8868\u4e86\u5c3e\u90e8\u7684\u6570\u503c\u3002\nMax.\n\u8fd9\u662f\u6570\u636e\u4e2d\u7684\u6700\u5927\u503c\uff0c\u4ee3\u8868\u4e86\u5b83\u4eec\u7684\u4e0a\u754c\u3002\n\u89c2\u5bdf\u8fd9\u4e9b\u6570\u636e\uff0c\u4f60\u4f1a\u53d1\u73b0\u8fd9\u4e9b\u54c8\u5e0c\u7b97\u6cd5\u4f3c\u4e4e\u90fd\u9002\u7528\u4e8e\u968f\u673a\u7684\u952e\uff0c\u5e76\u4e14\u5747\u503c\u4e0e\u6211\u8bbe\u7f6e\u7684NUM_KEYS\u5339\u914d\u3002\u6211\u6240\u8981\u627e\u7684\u5c31\u662f\u5982\u679c\u6211\u4e3a\u6bcf\u4e2a\u6876\u4e2d\u751f\u6210\u4e861000\u4e2a\u952e\uff0c\u90a3\u4e48\u5e73\u5747\u6bcf\u4e2a\u6876\u4e2d\u5c31\u5e94\u8be5\u6709100\u4e2a\u952e\u3002\u5982\u679c\u54c8\u5e0c\u51fd\u6570\u5de5\u4f5c\u4e0d\u6b63\u5e38\uff0c\u4f60\u4f1a\u53d1\u73b0\u7edf\u8ba1\u7ed3\u679c\u4e2d\u5747\u503c\u4e0d\u662f1000\uff0c\u5e76\u4e14\u7b2c\u4e00\u4e2a\u548c\u7b2c\u4e09\u4e2a\u56db\u5206\u4f4d\u70b9\u975e\u5e38\u9ad8\u3002\u4e00\u4e2a\u597d\u7684\u54c8\u5e0c\u7b97\u6cd5\u5e94\u8be5\u4f7f\u5e73\u5747\u503c\u4e3a1000\uff0c\u5e76\u4e14\u5177\u6709\u4e25\u683c\u7684\u8303\u56f4\u3002\n\u540c\u65f6\uff0c\u4f60\u5e94\u8be5\u660e\u767d\u5373\u4f7f\u5728\u8fd9\u4e2a\u5355\u5143\u6d4b\u8bd5\u7684\u4e0d\u540c\u8fd0\u884c\u4e4b\u95f4\uff0c\u4f60\u7684\u6570\u636e\u7684\u5927\u591a\u6570\u5e94\u8be5\u548c\u6211\u4e0d\u540c\u3002\n\u5982\u4f55\u4f7f\u5b83\u5d29\u6e83\n\u8fd9\u4e2a\u7ec3\u4e60\u7684\u6700\u540e\uff0c\u6211\u6253\u7b97\u5411\u4f60\u4ecb\u7ecd\u4f7f\u5b83\u5d29\u6e83\u7684\u65b9\u6cd5\u3002\u6211\u9700\u8981\u8ba9\u4f60\u53d8\u5199\u4f60\u80fd\u7f16\u5199\u7684\u6700\u70c2\u7684\u54c8\u5e0c\u51fd\u6570\uff0c\u5e76\u4e14\u6211\u4f1a\u4f7f\u7528\u6570\u636e\u6765\u8bc1\u660e\u5b83\u786e\u5b9e\u5f88\u70c2\u3002\u4f60\u53ef\u4ee5\u4f7f\u7528R\u6765\u8fdb\u884c\u7edf\u8ba1\uff0c\u5c31\u50cf\u6211\u4e0a\u9762\u4e00\u6837\uff0c\u4f46\u4e5f\u53ef\u80fd\u4f60\u77e5\u9053\u5176\u4ed6\u53ef\u4ee5\u4f7f\u7528\u7684\u5de5\u5177\u6765\u8fdb\u884c\u76f8\u540c\u7684\u7edf\u8ba1\u64cd\u4f5c\u3002\n\u8fd9\u91cc\u7684\u76ee\u6807\u662f\u8ba9\u4e00\u4e2a\u54c8\u5e0c\u51fd\u6570\uff0c\u5b83\u8868\u9762\u770b\u8d77\u6765\u662f\u6b63\u5e38\u7684\uff0c\u4f46\u5b9e\u9645\u8fd0\u884c\u5c31\u5f97\u5230\u4e00\u4e2a\u7cdf\u7cd5\u7684\u5747\u503c\uff0c\u5e76\u4e14\u5206\u5e03\u5e7f\u6cdb\u3002\u8fd9\u610f\u5473\u7740\u4f60\u4e0d\u80fd\u53ea\u8ba9\u4f60\u8fd4\u56de1\uff0c\u800c\u662f\u9700\u8981\u8fd4\u56de\u4e00\u4e9b\u770b\u4f3c\u6b63\u5e38\u7684\u6570\u503c\uff0c\u4f46\u662f\u5206\u5e03\u5e7f\u6cdb\u5e76\u4e14\u90fd\u586b\u5145\u5230\u76f8\u540c\u7684\u6876\u4e2d\u3002\n\u5982\u679c\u4f60\u5bf9\u8fd9\u56db\u4e2a\u51fd\u6570\u4e4b\u4e00\u505a\u4e86\u4e00\u4e9b\u5c0f\u4fee\u6539\u6765\u5b8c\u6210\u4efb\u52a1\uff0c\u6211\u4f1a\u7ed9\u4f60\u989d\u5916\u7684\u5206\u6570\u3002\n\u8fd9\u4e2a\u7ec3\u4e60\u7684\u76ee\u7684\u662f\uff0c\u60f3\u50cf\u4e00\u4e0b\u4e00\u4e9b\u201c\u53cb\u597d\u201d\u7684\u7a0b\u5e8f\u5458\u89c1\u5230\u4f60\u5e76\u4e14\u6253\u7b97\u6539\u8fdb\u4f60\u7684\u54c8\u5e0c\u51fd\u6570\uff0c\u4f46\u662f\u5b9e\u9645\u4e0a\u53ea\u662f\u7559\u4e86\u4e2a\u628a\u4f60\u7684Hashmap\u641e\u7838\u7684\u540e\u95e8\u3002\n\u9644\u52a0\u9898\n\n\u5c06hashmap.c\u4e2d\u7684default_hash\u6362\u6210hashmap_algos.c\u4e2d\u7684\u7b97\u6cd5\u4e4b\u4e00\uff0c\u5e76\u4e14\u518d\u6b21\u901a\u8fc7\u6240\u6709\u6d4b\u8bd5\u3002\n\u5411hashmap_algos_tests.c\u6dfb\u52a0default_hash\uff0c\u5e76\u5c06\u5b83\u4e0e\u5176\u5b83\u4e09\u4e2a\u54c8\u5e0c\u51fd\u6570\u6bd4\u8f83\u3002\n\u5bfb\u627e\u4e00\u4e9b\u66f4\u591a\u7684\u54c8\u5e0c\u51fd\u6570\u5e76\u6dfb\u52a0\u8fdb\u6765\uff0c\u4f60\u6c38\u8fdc\u90fd\u4e0d\u53ef\u80fd\u627e\u5230\u592a\u591a\u7684\u54c8\u5e0c\u51fd\u6570\uff01\n","categories":"\u7ec3\u4e6013","tags":["\u51fd\u6570","\u7ed3\u6784"]},{"title":"\u5b57\u7b26\u4e32\u7b97\u6cd5","url":"https:\/\/naka507.github.io\/posts\/1D54A74DB0C212CF.html","content":"\u5b57\u7b26\u4e32\u7b97\u6cd5\n\u8fd9\u4e2a\u7ec3\u4e60\u4e2d\uff0c\u6211\u4f1a\u5411\u4f60\u5c55\u793a\u53ef\u80fd\u662f\u6700\u5feb\u7684\u5b57\u7b26\u4e32\u641c\u7d22\u7b97\u6cd5\u4e4b\u4e00\uff0c\u5e76\u4e14\u5c06\u5b83\u4e0ebstrlib.c\u4e2d\u73b0\u6709\u7684binstr\u6bd4\u8f83\u3002binstr\u7684\u6587\u6863\u8bf4\u5b83\u4ec5\u4ec5\u4f7f\u7528\u4e86\u201c\u66b4\u529b\u641c\u7d22\u201d\u7684\u5b57\u7b26\u4e32\u7b97\u6cd5\u6765\u5bfb\u627e\u7b2c\u4e00\u4e2a\u5b9e\u4f8b\u3002\u6211\u6240\u5b9e\u73b0\u7684\u51fd\u6570\u4f7f\u7528Boyer-Moore-Horspool\uff08BMH\uff09\u7b97\u6cd5\uff0c\u5982\u679c\u4f60\u5206\u6790\u7406\u8bba\u65f6\u95f4\u7684\u8bdd\uff0c\u4e00\u822c\u8ba4\u4e3a\u5b83\u4f1a\u66f4\u5feb\u3002\u4f60\u4e5f\u4f1a\u770b\u5230\uff0c\u5982\u679c\u6211\u7684\u5b9e\u73b0\u6ca1\u6709\u4efb\u4f55\u7f3a\u9677\uff0cBMH\u7684\u5b9e\u9645\u65f6\u95f4\u4f1a\u6bd4binstr\u7b80\u5355\u7684\u66b4\u529b\u641c\u7d22\u66f4\u7cdf\u3002\n\u8fd9\u4e2a\u7ec3\u4e60\u7684\u8981\u70b9\u5e76\u4e0d\u662f\u771f\u6b63\u89e3\u91ca\u7b97\u6cd5\u672c\u8eab\uff0c\u56e0\u4e3a\u4f60\u53ef\u4ee5\u76f4\u63a5\u53bbBoyer-Moore-Horspool \u7684\u7ef4\u57fa\u767e\u79d1\u9875\u9762\u53bb\u9605\u8bfb\u5b83\u3002\u8fd9\u4e2a\u7b97\u6cd5\u7684\u8981\u70b9\u5c31\u662f\u5b83\u4f1a\u8ba1\u7b97\u51fa\u201c\u8df3\u8dc3\u5b57\u7b26\u5217\u8868\u201d\u4f5c\u4e3a\u7b2c\u4e00\u6b65\u64cd\u4f5c\uff0c\u4e4b\u540e\u5b83\u4f7f\u7528\u8fd9\u4e2a\u5217\u8868\u6765\u5feb\u901f\u626b\u63cf\u6574\u4e2a\u5b57\u7b26\u4e32\u3002\u5b83\u5e94\u5f53\u6bd4\u66b4\u529b\u641c\u7d22\u66f4\u5feb\uff0c\u6240\u4ee5\u8ba9\u6211\u4eec\u5728\u6587\u4ef6\u91cc\u5199\u51fa\u4ee3\u7801\u6765\u770b\u770b\u5427\u3002\n\u9996\u5148\uff0c\u521b\u5efa\u5934\u6587\u4ef6\uff1a\n#ifndef string_algos_h\n#define string_algos_h\n\n#include &lt;lcthw\/bstrlib.h&gt;\n#include &lt;lcthw\/darray.h&gt;\n\ntypedef struct StringScanner {\n    bstring in;\n    const unsigned char *haystack;\n    ssize_t hlen;\n    const unsigned char *needle;\n    ssize_t nlen;\n    size_t skip_chars[UCHAR_MAX + 1];\n} StringScanner;\n\nint String_find(bstring in, bstring what);\n\nStringScanner *StringScanner_create(bstring in);\n\nint StringScanner_scan(StringScanner *scan, bstring tofind);\n\nvoid StringScanner_destroy(StringScanner *scan);\n\n#endif\n\u4e3a\u4e86\u89c2\u5bdf\u201c\u8df3\u8dc3\u5b57\u7b26\u5217\u8868\u201d\u7684\u6548\u679c\uff0c\u6211\u6253\u7b97\u521b\u5efa\u8fd9\u4e2a\u7b97\u6cd5\u7684\u4e24\u79cd\u7248\u672c\uff1a\nString_find\n\u53ea\u662f\u5728\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e2d\uff0c\u5bfb\u627e\u53e6\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u9996\u4e2a\u5b9e\u4f8b\uff0c\u4ee5\u4e00\u4e2a\u52a8\u4f5c\u6267\u884c\u6574\u4e2a\u7b97\u6cd5\u3002\nStringScanner_scan\n\u4f7f\u7528StringScanner\u72b6\u6001\u7ed3\u6784\uff0c\u5c06\u8df3\u8dc3\u5217\u8868\u7684\u6784\u5efa\u548c\u5b9e\u9645\u7684\u67e5\u627e\u64cd\u4f5c\u5206\u5f00\u3002\u8fd9\u8ba9\u6211\u80fd\u770b\u5230\u4ec0\u4e48\u5f71\u54cd\u4e86\u6027\u80fd\u3002\u8fd9\u4e2a\u6a21\u578b\u6709\u53e6\u4e00\u4e2a\u4f18\u70b9\uff0c\u5c31\u662f\u6211\u53ef\u4ee5\u5728\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e2d\u9010\u6b65\u641c\u7d22\uff0c\u5e76\u4e14\u5feb\u901f\u5730\u627e\u5230\u6240\u6709\u5b9e\u4f8b\u3002\n\u4e00\u65e6\u4f60\u5b8c\u6210\u4e86\u5934\u6587\u4ef6\uff0c\u4e0b\u9762\u5c31\u662f\u5b9e\u73b0\u4e86\uff1a\n#include &lt;lcthw\/string_algos.h&gt;\n#include &lt;limits.h&gt;\n\nstatic inline void String_setup_skip_chars(\n        size_t *skip_chars,\n        const unsigned char *needle, ssize_t nlen)\n{\n    size_t i = 0;\n    size_t last = nlen - 1;\n\n    for(i = 0; i &lt; UCHAR_MAX + 1; i++) {\n        skip_chars[i] = nlen;\n    }\n\n    for (i = 0; i &lt; last; i++) {\n        skip_chars[needle[i]] = last - i;\n    }\n}\n\n\nstatic inline const unsigned char *String_base_search(\n        const unsigned char *haystack, ssize_t hlen,\n        const unsigned char *needle, ssize_t nlen,\n        size_t *skip_chars)\n{\n    size_t i = 0;\n    size_t last = nlen - 1;\n\n    assert(haystack != NULL &amp;&amp; \"Given bad haystack to search.\");\n    assert(needle != NULL &amp;&amp; \"Given bad needle to search for.\");\n\n    check(nlen &gt; 0, \"nlen can't be &lt;= 0\");\n    check(hlen &gt; 0, \"hlen can't be &lt;= 0\");\n\n    while (hlen &gt;= nlen)\n    {\n        for (i = last; haystack[i] == needle[i]; i--) {\n            if (i == 0) {\n                return haystack;\n            }\n        }\n\n        hlen -= skip_chars[haystack[last]];\n        haystack += skip_chars[haystack[last]];\n    }\n\nerror: \/\/ fallthrough\n    return NULL;\n}\n\nint String_find(bstring in, bstring what)\n{\n    const unsigned char *found = NULL;\n\n    const unsigned char *haystack = (const unsigned char *)bdata(in);\n    ssize_t hlen = blength(in);\n    const unsigned char *needle = (const unsigned char *)bdata(what);\n    ssize_t nlen = blength(what);\n    size_t skip_chars[UCHAR_MAX + 1] = {0};\n\n    String_setup_skip_chars(skip_chars, needle, nlen);\n\n    found = String_base_search(haystack, hlen, needle, nlen, skip_chars);\n\n    return found != NULL ? found - haystack : -1;\n}\n\nStringScanner *StringScanner_create(bstring in)\n{\n    StringScanner *scan = calloc(1, sizeof(StringScanner));\n    check_mem(scan);\n\n    scan-&gt;in = in;\n    scan-&gt;haystack = (const unsigned char *)bdata(in);\n    scan-&gt;hlen = blength(in);\n\n    assert(scan != NULL &amp;&amp; \"fuck\");\n    return scan;\n\nerror:\n    free(scan);\n    return NULL;\n}\n\nstatic inline void StringScanner_set_needle(StringScanner *scan, bstring tofind)\n{\n    scan-&gt;needle = (const unsigned char *)bdata(tofind);\n    scan-&gt;nlen = blength(tofind);\n\n    String_setup_skip_chars(scan-&gt;skip_chars, scan-&gt;needle, scan-&gt;nlen);\n}\n\nstatic inline void StringScanner_reset(StringScanner *scan)\n{\n    scan-&gt;haystack = (const unsigned char *)bdata(scan-&gt;in);\n    scan-&gt;hlen = blength(scan-&gt;in);\n}\n\nint StringScanner_scan(StringScanner *scan, bstring tofind)\n{\n    const unsigned char *found = NULL;\n    ssize_t found_at = 0;\n\n    if(scan-&gt;hlen &lt;= 0) {\n        StringScanner_reset(scan);\n        return -1;\n    }\n\n    if((const unsigned char *)bdata(tofind) != scan-&gt;needle) {\n        StringScanner_set_needle(scan, tofind);\n    }\n\n    found = String_base_search(\n            scan-&gt;haystack, scan-&gt;hlen,\n            scan-&gt;needle, scan-&gt;nlen,\n            scan-&gt;skip_chars);\n\n    if(found) {\n        found_at = found - (const unsigned char *)bdata(scan-&gt;in);\n        scan-&gt;haystack = found + scan-&gt;nlen;\n        scan-&gt;hlen -= found_at - scan-&gt;nlen;\n    } else {\n        \/\/ done, reset the setup\n        StringScanner_reset(scan);\n        found_at = -1;\n    }\n\n    return found_at;\n}\n\n\nvoid StringScanner_destroy(StringScanner *scan)\n{\n    if(scan) {\n        free(scan);\n    }\n}\n\u6574\u4e2a\u7b97\u6cd5\u90fd\u5728\u4e24\u4e2astatic inline\u7684\u51fd\u6570\u4e2d\uff0c\u53eb\u505aString_setup_skip_chars \u548c String_base_search\u3002\u5b83\u4eec\u5728\u522b\u7684\u51fd\u6570\u4e2d\u4f7f\u7528\uff0c\u7528\u4e8e\u5b9e\u73b0\u6211\u60f3\u8981\u7684\u7684\u641c\u7d22\u5f62\u5f0f\u3002\u7814\u7a76\u8fd9\u4e24\u4e2a\u51fd\u6570\uff0c\u5e76\u4e14\u4e0e\u7ef4\u57fa\u767e\u79d1\u7684\u63cf\u8ff0\u5bf9\u6bd4\uff0c\u4f60\u5c31\u53ef\u4ee5\u77e5\u9053\u5b83\u7684\u5de5\u4f5c\u539f\u7406\u3002\n\u4e4b\u540eString_find\u4f7f\u7528\u8fd9\u4e24\u4e2a\u51fd\u6570\u6765\u5bfb\u627e\u5e76\u8fd4\u56de\u6240\u53d1\u73b0\u7684\u4f4d\u7f6e\u3002\u5b83\u975e\u5e38\u7b80\u5355\u5e76\u4e14\u6211\u4f7f\u7528\u5b83\u6765\u67e5\u770b\u201c\u8df3\u8dc3\u5b57\u7b26\u5217\u8868\u201d\u7684\u6784\u5efa\u5982\u4f55\u5f71\u54cd\u5230\u771f\u5b9e\u6027\u80fd\u3002\u8981\u6ce8\u610f\uff0c\u4f60\u6216\u8bb8\u53ef\u4ee5\u4f7f\u5b83\u66f4\u5feb\uff0c\u4f46\u662f\u6211\u8981\u6559\u7ed9\u4f60\u5728\u4f60\u5b9e\u73b0\u7b97\u6cd5\u4e4b\u540e\u5982\u4f55\u9a8c\u8bc1\u7406\u8bba\u901f\u5ea6\u3002\nStringScanner_scan\u51fd\u6570\u968f\u540e\u6309\u7167\u201c\u521b\u5efa\u3001\u626b\u63cf\u3001\u9500\u6bc1\u201d\u7684\u5e38\u7528\u6a21\u5f0f\uff0c\u5e76\u4e14\u7528\u4e8e\u5728\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e2d\u9010\u6b65\u641c\u7d22\u53e6\u4e00\u4e2a\u5b57\u7b26\u4e32\u3002\u5f53\u6211\u5411\u4f60\u5c55\u793a\u5355\u5143\u6d4b\u8bd5\u7684\u65f6\u5019\uff0c\u4f60\u4f1a\u770b\u5230\u5b83\u5982\u4f55\u4f7f\u7528\u3002\n\u6700\u540e\uff0c\u6211\u7f16\u5199\u4e86\u5355\u5143\u6d4b\u8bd5\u6765\u786e\u4fdd\u7b97\u6cd5\u6709\u6548\uff0c\u4e4b\u540e\u5728\u5b83\u7684\u6ce8\u91ca\u90e8\u5206\uff0c\u6211\u4e3a\u4e09\u4e2a\u641c\u7d22\u51fd\u6570\u8fd0\u884c\u4e86\u7b80\u5355\u7684\u6027\u80fd\u6d4b\u8bd5\uff1a\n#include \"minunit.h\"\n#include &lt;lcthw\/string_algos.h&gt;\n#include &lt;lcthw\/bstrlib.h&gt;\n#include &lt;time.h&gt;\n\nstruct tagbstring IN_STR = bsStatic(\"I have ALPHA beta ALPHA and oranges ALPHA\");\nstruct tagbstring ALPHA = bsStatic(\"ALPHA\");\nconst int TEST_TIME = 1;\n\nchar *test_find_and_scan()\n{\n    StringScanner *scan = StringScanner_create(&amp;IN_STR);\n    mu_assert(scan != NULL, \"Failed to make the scanner.\");\n\n    int find_i = String_find(&amp;IN_STR, &amp;ALPHA);\n    mu_assert(find_i &gt; 0, \"Failed to find 'ALPHA' in test string.\");\n\n    int scan_i = StringScanner_scan(scan, &amp;ALPHA);\n    mu_assert(scan_i &gt; 0, \"Failed to find 'ALPHA' with scan.\");\n    mu_assert(scan_i == find_i, \"find and scan don't match\");\n\n    scan_i = StringScanner_scan(scan, &amp;ALPHA);\n    mu_assert(scan_i &gt; find_i, \"should find another ALPHA after the first\");\n\n    scan_i = StringScanner_scan(scan, &amp;ALPHA);\n    mu_assert(scan_i &gt; find_i, \"should find another ALPHA after the first\");\n\n    mu_assert(StringScanner_scan(scan, &amp;ALPHA) == -1, \"shouldn't find it\");\n\n    StringScanner_destroy(scan);\n\n    return NULL;\n}\n\nchar *test_binstr_performance()\n{\n    int i = 0;\n    int found_at = 0;\n    unsigned long find_count = 0;\n    time_t elapsed = 0;\n    time_t start = time(NULL);\n\n    do {\n        for(i = 0; i &lt; 1000; i++) {\n            found_at = binstr(&amp;IN_STR, 0, &amp;ALPHA);\n            mu_assert(found_at != BSTR_ERR, \"Failed to find!\");\n            find_count++;\n        }\n\n        elapsed = time(NULL) - start;\n    } while(elapsed &lt;= TEST_TIME);\n\n    debug(\"BINSTR COUNT: %lu, END TIME: %d, OPS: %f\",\n            find_count, (int)elapsed, (double)find_count \/ elapsed);\n    return NULL;\n}\n\nchar *test_find_performance()\n{\n    int i = 0;\n    int found_at = 0;\n    unsigned long find_count = 0;\n    time_t elapsed = 0;\n    time_t start = time(NULL);\n\n    do {\n        for(i = 0; i &lt; 1000; i++) {\n            found_at = String_find(&amp;IN_STR, &amp;ALPHA);\n            find_count++;\n        }\n\n        elapsed = time(NULL) - start;\n    } while(elapsed &lt;= TEST_TIME);\n\n    debug(\"FIND COUNT: %lu, END TIME: %d, OPS: %f\",\n            find_count, (int)elapsed, (double)find_count \/ elapsed);\n\n    return NULL;\n}\n\nchar *test_scan_performance()\n{\n    int i = 0;\n    int found_at = 0;\n    unsigned long find_count = 0;\n    time_t elapsed = 0;\n    StringScanner *scan = StringScanner_create(&amp;IN_STR);\n\n    time_t start = time(NULL);\n\n    do {\n        for(i = 0; i &lt; 1000; i++) {\n            found_at = 0;\n\n            do {\n                found_at = StringScanner_scan(scan, &amp;ALPHA);\n                find_count++;\n            } while(found_at != -1);\n        }\n\n        elapsed = time(NULL) - start;\n    } while(elapsed &lt;= TEST_TIME);\n\n    debug(\"SCAN COUNT: %lu, END TIME: %d, OPS: %f\",\n            find_count, (int)elapsed, (double)find_count \/ elapsed);\n\n    StringScanner_destroy(scan);\n\n    return NULL;\n}\n\n\nchar *all_tests()\n{\n    mu_suite_start();\n\n    mu_run_test(test_find_and_scan);\n\n    \/\/ this is an idiom for commenting out sections of code\n#if 0\n    mu_run_test(test_scan_performance);\n    mu_run_test(test_find_performance);\n    mu_run_test(test_binstr_performance);\n#endif\n\n    return NULL;\n}\n\nRUN_TESTS(all_tests);\n\u6211\u628a\u5b83\u4eec\u5199\u5728#if 0\u4e2d\u95f4\uff0c\u5b83\u662f\u4f7f\u7528C\u9884\u5904\u7406\u5668\u6765\u6ce8\u91ca\u4e00\u6bb5\u4ee3\u7801\u7684\u65b9\u6cd5\u3002\u50cf\u8fd9\u6837\u8f93\u5165\uff0c\u5e76\u4e14\u628a\u5b83\u548c#endif\u79fb\u9664\uff0c\u4f60\u5c31\u53ef\u4ee5\u8fd0\u884c\u6027\u80fd\u6d4b\u8bd5\u3002\u5f53\u4f60\u7ee7\u7eed\u8fd9\u672c\u4e66\u65f6\uff0c\u9700\u8981\u7b80\u5355\u5730\u628a\u5b83\u4eec\u518d\u6b21\u6ce8\u91ca\uff0c\u4ee5\u9632\u5b83\u4eec\u6d6a\u8d39\u4f60\u7684\u5f00\u53d1\u65f6\u95f4\u3002\n\u8fd9\u4e2a\u5355\u5143\u6d4b\u8bd5\u6ca1\u6709\u4ec0\u4e48\u795e\u5947\u4e4b\u5904\uff0c\u5b83\u53ea\u662f\u5728\u5c0a\u6362\u79cd\u8c03\u7528\u6bcf\u4e2a\u4e0d\u540c\u7684\u51fd\u6570\uff0c\u5faa\u73af\u9700\u8981\u6301\u7eed\u8db3\u591f\u957f\u7684\u65f6\u95f4\u6765\u5f97\u5230\u4e00\u4e2a\u51e0\u79d2\u7684\u6837\u672c\u3002\u7b2c\u4e00\u4e2a\u6d4b\u8bd5\uff08test_find_and_scan\uff09\u53ea\u662f\u786e\u4fdd\u6211\u6240\u7f16\u5199\u7684\u4ee3\u7801\u6b63\u5e38\u5de5\u4f5c\uff0c\u56e0\u4e3a\u6d4b\u8bd5\u65e0\u6548\u7684\u4ee3\u7801\u6ca1\u6709\u610f\u4e49\u3002\u4e4b\u540e\uff0c\u4e0b\u9762\u7684\u4e09\u4e2a\u51fd\u6570\u4f7f\u7528\u4e09\u4e2a\u51fd\u6570\u4e2d\u7684\u6bcf\u4e00\u4e2a\u6765\u6267\u884c\u5927\u91cf\u7684\u641c\u7d22\u3002\n\u9700\u8981\u6ce8\u610f\u7684\u4e00\u4e2a\u6280\u5de7\u662f\uff0c\u6211\u5728start\u4e2d\u5b58\u50a8\u4e86\u8d77\u59cb\u65f6\u95f4\uff0c\u4e4b\u540e\u4e00\u76f4\u5faa\u73af\u5230\u81f3\u5c11\u8fc7\u4e86TEST_TIME\u79d2\u3002\u8fd9\u786e\u4fdd\u4e86\u6211\u80fd\u6216\u5f97\u5230\u8db3\u591f\u597d\u7684\u6837\u672c\u7528\u4e8e\u6bd4\u8f83\u4e09\u8005\u3002\u6211\u4e4b\u540e\u4f1a\u4f7f\u7528\u4e0d\u540c\u7684TEST_TIME\u8bbe\u7f6e\u6765\u8fd0\u884c\u6d4b\u8bd5\uff0c\u5e76\u4e14\u5206\u6790\u7ed3\u679c\u3002\n\u4f60\u4f1a\u770b\u5230\u4ec0\u4e48\n\u5f53\u6211\u5728\u6211\u7684\u7b14\u8bb0\u672c\u4e0a\u8fd0\u884c\u6d4b\u8bd5\u65f6\uff0c\u6211\u5f97\u5230\u7684\u6570\u636e\u662f\u8fd9\u6837\u7684\uff1a\n$ .\/tests\/string_algos_tests\nDEBUG tests\/string_algos_tests.c:124: ----- RUNNING: .\/tests\/string_algos_tests\n----\nRUNNING: .\/tests\/string_algos_tests\nDEBUG tests\/string_algos_tests.c:116:\n----- test_find_and_scan\nDEBUG tests\/string_algos_tests.c:117:\n----- test_scan_performance\nDEBUG tests\/string_algos_tests.c:105: SCAN COUNT: 110272000, END TIME: 2, OPS: 55136000.000000\nDEBUG tests\/string_algos_tests.c:118:\n----- test_find_performance\nDEBUG tests\/string_algos_tests.c:76: FIND COUNT: 12710000, END TIME: 2, OPS: 6355000.000000\nDEBUG tests\/string_algos_tests.c:119:\n----- test_binstr_performance\nDEBUG tests\/string_algos_tests.c:54: BINSTR COUNT: 72736000, END TIME: 2, OPS: 36368000.000000\nALL TESTS PASSED\nTests run: 4\n$\n\u6211\u770b\u5230\u4e86\u5b83\uff0c\u89c9\u5f97\u6bcf\u8f6e\u8fd0\u884c\u5e94\u8be5\u8d85\u8fc7\u4e24\u79d2\u3002\u5e76\u4e14\uff0c\u6211\u6253\u7b97\u591a\u6b21\u8fd0\u884c\u5b83\uff0c\u5e76\u4e14\u50cf\u4e4b\u524d\u4e00\u6837\u4f7f\u7528R\u6765\u9a8c\u8bc1\u3002\u4e0b\u9762\u662f\u6211\u83b7\u5f97\u768410\u4e2a\u6837\u4f8b\uff0c\u6bcf\u4e2a\u57fa\u672c\u4e0a\u662f10\u79d2\uff1a\nscan find binstr\n71195200 6353700 37110200\n75098000 6358400 37420800\n74910000 6351300 37263600\n74859600 6586100 37133200\n73345600 6365200 37549700\n74754400 6358000 37162400\n75343600 6630400 37075000\n73804800 6439900 36858700\n74995200 6384300 36811700\n74781200 6449500 37383000\n\u6211\u5728shell\u7684\u4e00\u70b9\u70b9\u5e2e\u52a9\u4e0b\u83b7\u53d6\u6570\u636e\uff0c\u4e4b\u540e\u7f16\u8f91\u8f93\u51fa\uff1a\n$ for i in 1 2 3 4 5 6 7 8 9 10; do echo \"RUN --- $i\" &gt;&gt; times.log; .\/tests\/string_algos_tests 2&gt;&amp;1 | grep COUNT &gt;&gt; times.log ; done\n$ less times.log\n$ vim times.log\n\u73b0\u5728\u4f60\u53ef\u4ee5\u770b\u5230scan\u7cfb\u7edf\u8981\u4f18\u4e8e\u53e6\u5916\u4e24\u4e2a\uff0c\u4f46\u662f\u6211\u4f1a\u5728R\u4e2d\u6253\u5f00\u5b83\u5e76\u4e14\u9a8c\u8bc1\u7ed3\u679c\uff1a\n&gt; times &lt;- read.table(\"times.log\", header=T)\n&gt; summary(times)\n      scan               find             binstr        \n Min.   :71195200   Min.   :6351300   Min.   :36811700  \n 1st Qu.:74042200   1st Qu.:6358100   1st Qu.:37083800  \n Median :74820400   Median :6374750   Median :37147800  \n Mean   :74308760   Mean   :6427680   Mean   :37176830  \n 3rd Qu.:74973900   3rd Qu.:6447100   3rd Qu.:37353150  \n Max.   :75343600   Max.   :6630400   Max.   :37549700  \n&gt;\n\u4e3a\u4e86\u7406\u89e3\u6211\u4e3a\u4ec0\u4e48\u8981\u751f\u6210\u8fd9\u4efd\u6982\u8981\u7edf\u8ba1\uff0c\u6211\u5fc5\u987b\u5bf9\u4f60\u89e3\u91ca\u4e00\u4e9b\u7edf\u8ba1\u5b66\u6982\u5ff5\u3002\u6211\u5728\u8fd9\u4e9b\u6570\u5b57\u4e2d\u5bfb\u627e\u7684\u4e1c\u897f\u80fd\u591f\u7b80\u5355\u5730\u544a\u8bc9\u6211\uff0c\u201c\u8fd9\u4e09\u4e2a\u51fd\u6570\uff08scan\u3001find\u3001binstr\uff09\u5b9e\u9645\u4e0a\u4e0d\u540c\u5417\uff1f\u201d\u6211\u77e5\u9053\u6bcf\u6b21\u6211\u8fd0\u884c\u6d4b\u8bd5\u51fd\u6570\u7684\u65f6\u5019\uff0c\u6211\u90fd\u4f1a\u5f97\u5230\u6709\u4e9b\u4e0d\u540c\u7684\u6570\u503c\uff0c\u5e76\u4e14\u90a3\u4e9b\u6570\u503c\u59cb\u7ec8\u5904\u7406\u4e00\u4e2a\u56fa\u5b9a\u7684\u8303\u56f4\u3002\u4f60\u53ef\u4ee5\u770b\u5230\u4e24\u4e2a\u56db\u5206\u4f4d\u6570\u53cd\u6620\u4e86\u8fd9\u4e00\u70b9\u3002\n\u6211\u9996\u5148\u4f1a\u53bb\u770b\u5747\u503c\uff0c\u5e76\u4e14\u6211\u4f1a\u89c2\u5bdf\u6bcf\u4e2a\u6837\u4f8b\u7684\u5747\u503c\u662f\u5426\u4e0d\u540c\u4e8e\u5176\u5b83\u7684\u3002\u6211\u53ef\u4ee5\u6e05\u695a\u5730\u770b\u5230scan\u4f18\u4e8ebinstr\uff0c\u540c\u65f6\u540e\u8005\u4f18\u4e8efind\u3002\u7136\u800c\u95ee\u9898\u6765\u4e86\uff0c\u5982\u679c\u6211\u53ea\u4f7f\u7528\u5747\u503c\uff0c\u5c31\u53ef\u4ee5\u51fa\u73b0\u6bcf\u4e2a\u6837\u4f8b\u7684\u8303\u56f4\u4f1a\u91cd\u53e0\u7684\u53ef\u80fd\u6027\u3002\n\u5982\u679c\u5747\u503c\u4e0d\u540c\uff0c\u4f46\u662f\u4e24\u4e2a\u56db\u5206\u4f4d\u70b9\u91cd\u53e0\u4f1a\u600e\u4e48\u7528\uff1f\u8fd9\u79cd\u60c5\u51b5\u4e0b\u6211\u53ea\u80fd\u8bf4\u6709\u8fd9\u79cd\u53ef\u80fd\u6027\uff0c\u5e76\u4e14\u5982\u679c\u6211\u518d\u6b21\u8fd0\u884c\u6d4b\u8bd5\uff0c\u5747\u503c\u5c31\u53ef\u80fd\u4e0d\u540c\u4e86\u3002\u5f88\u53ef\u80fd\u51fa\u73b0\u7684\u8303\u56f4\u4e0a\u7684\u91cd\u53e0\u662f\uff0c\u6211\u7684\u4e24\u4e2a\u6837\u4f8b\uff08\u4ee5\u53ca\u4e24\u4e2a\u51fd\u6570\uff09\u5e76\u975e\u5b9e\u9645\u4e0a\u4e0d\u540c\u3002\u4efb\u4f55\u6211\u770b\u5230\u7684\u5dee\u5f02\u90fd\u662f\u968f\u673a\u4ea7\u751f\u7684\u7ed3\u679c\u3002\n\u7edf\u8ba1\u5b66\u62e5\u6709\u5927\u91cf\u5de5\u5177\u6765\u89e3\u51b3\u8fd9\u4e00\u95ee\u9898\uff0c\u4f46\u662f\u5728\u6211\u4eec\u7684\u4f8b\u5b50\u4e2d\u6211\u53ef\u4ee5\u4ec5\u4ec5\u89c2\u5bdf\u4e24\u4e2a\u56db\u5206\u4f4d\u503c\uff0c\u4ee5\u53ca\u6240\u6709\u6837\u4f8b\u7684\u5747\u503c\u3002\u5982\u679c\u5747\u503c\u4e0d\u540c\uff0c\u5e76\u4e14\u56db\u5206\u4f4d\u503c\u4e0d\u53ef\u80fd\u91cd\u53e0\uff0c\u5c31\u53ef\u4ee5\u8bf4\u5b83\u4eec\u5b8c\u5168\u4e0d\u540c\u3002\n\u5728\u6211\u7684\u4e09\u4e2a\u6837\u4f8b\u4e2d\uff0c\u6211\u53ef\u4ee5\u8bf4scan\u3001find\u548cbinstr\u90fd\u662f\u4e0d\u540c\u7684\uff0c\u8303\u56f4\u4e0a\u6ca1\u6709\u91cd\u53e0\uff0c\u5e76\u4e14\uff08\u6700\u91cd\u8981\u7684\u662f\uff09\u6211\u53ef\u4ee5\u76f8\u4fe1\u6570\u636e\u3002\n\u5206\u6790\u7ed3\u679c\n\u4ece\u7ed3\u679c\u4e2d\u53ef\u4ee5\u770b\u51faString_find\u6bd4\u5176\u5b83\u4e24\u4e2a\u66f4\u6162\u3002\u5b9e\u9645\u4e0a\uff0c\u6211\u8ba4\u4e3a\u6162\u7684\u539f\u56e0\u662f\u6211\u5b9e\u73b0\u7684\u65b9\u5f0f\u6709\u4e9b\u95ee\u9898\u3002\u7136\u800c\u5f53\u6211\u5c06\u5b83\u4e0eStringScanner_scan\u6bd4\u8f83\u65f6\uff0c\u6211\u53d1\u73b0\u6b63\u662f\u6784\u9020\u8df3\u8dc3\u5217\u8868\u7684\u90a3\u4e00\u90e8\u5206\u6700\u6d88\u8017\u65f6\u95f4\u3002\u5e76\u4e14\u5b83\u7684\u529f\u80fd\u6bd4scan\u8981\u5c11\uff0c\u56e0\u4e3a\u5b83\u4ec5\u4ec5\u627e\u5230\u4e86\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u800cscan\u627e\u5230\u4e86\u5168\u90e8\u3002\n\u6211\u4e5f\u53ef\u4ee5\u53d1\u73b0scan\u4ee5\u5f88\u5927\u4f18\u52bf\u4f18\u4e8ebinstr\u3002\u540c\u65f6\u6211\u53ef\u4ee5\u8bf4scan\u7684\u529f\u80fd\u6bd4\u5176\u4ed6\u4e24\u4e2a\u8981\u591a\uff0c\u901f\u5ea6\u4e5f\u66f4\u5feb\u3002\n\u4e0b\u9762\u662f\u8fd9\u4e2a\u5206\u6790\u7684\u4e00\u4e9b\u6ce8\u89e3\uff1a\n\n\u6211\u53ef\u80fd\u5c06\u5b9e\u73b0\u6216\u6d4b\u8bd5\u5f04\u4e71\u4e86\u3002\u73b0\u5728\u6211\u6253\u7b97\u7814\u7a76\u6240\u6709\u5b9e\u73b0BMH\u7684\u53ef\u80fd\u65b9\u5f0f\u6765\u6539\u8fdb\u5b83\u3002\u6211\u4e5f\u4f1a\u786e\u4fdd\u6211\u6240\u505a\u7684\u4e8b\u60c5\u6b63\u786e\u3002\n\u5982\u679c\u4f60\u4fee\u6539\u4e86\u6d4b\u8bd5\u8fd0\u884c\u7684\u65f6\u95f4\uff0c\u4f60\u4f1a\u5f97\u5230\u4e0d\u540c\u7684\u7ed3\u679c\u3002\u8fd9\u5c31\u662f\u6211\u6ca1\u6709\u8003\u8651\u7684\u201d\u70ed\u8eab\u201c\u73af\u8282\u3002\ntest_scan_performance\u5355\u5143\u6d4b\u8bd5\u548c\u5176\u5b83\u4e24\u4e2a\u5e76\u4e0d\u76f8\u540c\uff0c\u4f46\u662f\u5b83\u6bd4\u5176\u5b83\u6d4b\u8bd5\u505a\u5f97\u66f4\u591a\uff08\u5e76\u4e14\u4e5f\u662f\u6309\u7167\u65f6\u95f4\u548c\u64cd\u4f5c\u6570\u91cf\u8ba1\u7b97\u7684\uff09\uff0c\u6240\u4ee5\u4ed6\u53ef\u80fd\u662f\u5408\u7406\u7684\u3002\n\u6211\u53ea\u901a\u8fc7\u5728\u4e00\u4e2a\u5b57\u7b26\u4e32\u5185\u641c\u7d22\u53e6\u4e00\u4e2a\u6765\u6267\u884c\u6d4b\u8bd5\u3002\u6211\u5e94\u8be5\u4f7f\u6240\u67e5\u627e\u7684\u5b57\u7b26\u4e32\u968f\u673a\u5316\uff0c\u6765\u79fb\u9664\u5b83\u4eec\u7684\u4f4d\u7f6e\u548c\u957f\u5ea6\uff0c\u4f5c\u4e3a\u5e72\u6270\u56e0\u7d20\u3002\nbinstr\u7684\u5b9e\u73b0\u53ef\u80fd\u6bd4\u201c\u66b4\u529b\u641c\u7d22\u201d\u8981\u597d\u3002\uff08\u6240\u4ee5\u5e94\u8be5\u81ea\u5df1\u7f16\u5199\u66b4\u529b\u641c\u7d22\u4f5c\u4e3a\u5bf9\u7167\u3002\uff09\n\u6211\u53ef\u80fd\u4ee5\u4e0d\u5e78\u7684\u987a\u5e8f\u6765\u6267\u884c\u8fd9\u4e9b\u51fd\u6570\uff0c\u5e76\u4e14\u968f\u673a\u5316\u9996\u5148\u8fd0\u884c\u7684\u6d4b\u8bd5\u53ef\u80fd\u4f1a\u5f97\u5230\u66f4\u597d\u7684\u7ed3\u679c\u3002\n\n\u53ef\u4ee5\u4ece\u4e2d\u5b66\u5230\u7684\u662f\uff0c\u4f60\u9700\u8981\u786e\u4fdd\u77e5\u5df1\u7684\u6027\u80fd\uff0c\u5373\u4f7f\u4f60\u201c\u6b63\u786e\u201d\u5b9e\u73b0\u4e86\u4e00\u4e2a\u7b97\u6cd5\u3002\u5728\u8fd9\u91ccBMH\u7b97\u6cd5\u5e94\u8be5\u4f18\u4e8ebinstr\u7b97\u6cd5\uff0c\u4f46\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u6d4b\u8bd5\u8bc1\u660e\u4e86\u5b83\u662f\u9519\u8bef\u3002\u5982\u679c\u6211\u6ca1\u6709\u8fd9\u4e9b\u6d4b\u8bd5\uff0c\u6211\u53ef\u80fd\u5c31\u4f7f\u7528\u4e86\u4e00\u4e2a\u52a3\u7b49\u7684\u7b97\u6cd5\u5b9e\u73b0\u800c\u4e0d\u81ea\u77e5\u3002\u53c2\u7167\u8fd9\u4e9b\u5ea6\u91cf\uff0c\u6211\u53ef\u4ee5\u5f00\u59cb\u8c03\u4f18\u6211\u7684\u5b9e\u73b0\uff0c\u6216\u8005\u53ea\u662f\u629b\u5f03\u5b83\u5e76\u5bfb\u627e\u65b0\u7684\u7b97\u6cd5\u3002\n\u9644\u52a0\u9898\n\n\u770b\u770b\u4f60\u80fd\u4e0d\u80fd\u4f7fScan_find\u66f4\u5feb\u3002\u4e3a\u4ec0\u4e48\u6211\u7684\u5b9e\u73b0\u8fd9\u4e48\u6162\uff1f\n\u5c1d\u8bd5\u4e00\u4e9b\u4e0d\u540c\u7684\u641c\u7d22\u65f6\u957f\uff0c\u770b\u770b\u4f60\u662f\u5426\u80fd\u5f97\u5230\u4e0d\u540c\u7684\u6570\u503c\u3002\u5f53\u4f60\u6539\u53d8scan\u7684\u6d4b\u8bd5\u65f6\u95f4\u65f6\uff0c\u65f6\u95f4\u7684\u957f\u5ea6\u4f1a\u6709\u4ec0\u4e48\u5f71\u54cd\uff1f\u5bf9\u4e8e\u8fd9\u4e9b\u7ed3\u679c\u4f60\u80fd\u5f97\u51fa\u4ec0\u4e48\u7ed3\u8bba\uff1f\n\u4fee\u6539\u5355\u5143\u6d4b\u8bd5\uff0c\u4f7f\u5b83\u6700\u5f00\u59cb\u6267\u884c\u6bcf\u4e2a\u51fd\u6570\u4e00\u5c0f\u6bb5\u65f6\u95f4\uff0c\u6765\u6d88\u9664\u4efb\u4f55\u201c\u70ed\u8eab\u201d\u7f13\u89e3\u3002\u8fd9\u6837\u4f1a\u4fee\u6539\u6240\u8fd0\u884c\u65f6\u957f\u7684\u4f9d\u8d56\u6027\u5417\uff1f\u6bcf\u79d2\u53ef\u80fd\u51fa\u73b0\u591a\u5c11\u6b21\u64cd\u4f5c\uff1f\n\u4f7f\u5355\u5143\u6d4b\u8bd5\u4e2d\u7684\u6240\u67e5\u627e\u5b57\u7b26\u4e32\u968f\u673a\u5316\uff0c\u4e4b\u540e\u6d4b\u91cf\u4f60\u7684\u5f97\u5230\u7684\u6027\u80fd\u3002\u4e00\u79cd\u5b9e\u73b0\u5b83\u7684\u65b9\u5f0f\u5c31\u662f\u4f7f\u7528bstrlib.h\u4e2d\u7684bsplit\u51fd\u6570\u5728\u7a7a\u683c\u5904\u5206\u5272IN_STR\u3002\u4e4b\u540e\u4f7f\u7528\u4f60\u5f97\u5230\u7684strList\u7ed3\u6784\u8bbf\u95ee\u5b83\u8fd4\u56de\u7684\u6bcf\u4e2a\u5b57\u7b26\u4e32\u3002\u8fd9\u4e5f\u6559\u7ed9\u4f60\u5982\u4f55\u4f7f\u7528bstrList\u64cd\u4f5c\u8fdb\u884c\u5b57\u7b26\u4e32\u5904\u7406\u3002\n\u5c1d\u8bd5\u4e00\u4e9b\u4e0d\u540c\u987a\u5e8f\u7684\u6d4b\u8bd5\uff0c\u770b\u770b\u80fd\u5426\u5f97\u5230\u4e0d\u540c\u7684\u7ed3\u679c\u3002\n","categories":"\u7ec3\u4e6014","tags":["bstrlib","\u5b57\u7b26\u4e32"]},{"title":"\u4e8c\u53c9\u641c\u7d22\u6811","url":"https:\/\/naka507.github.io\/posts\/64206F3FDC812F26.html","content":"\u4e8c\u53c9\u641c\u7d22\u6811\n\u4e8c\u53c9\u6811\u662f\u6700\u7b80\u5355\u7684\u6811\u5f62\u6570\u636e\u7ed3\u6784\uff0c\u867d\u7136\u5b83\u5728\u8bb8\u591a\u8bed\u8a00\u4e2d\u88ab\u54c8\u5e0c\u8868\u53d6\u4ee3\uff0c\u4f46\u4ecd\u65e7\u5bf9\u4e8e\u4e00\u4e9b\u5e94\u7528\u5f88\u5b9e\u7528\u3002\u4e8c\u53c9\u6811\u7684\u5404\u79cd\u53d8\u4f53\u53ef\u7528\u4e8e\u4e00\u4e9b\u975e\u5e38\u5b9e\u7528\u4e1c\u897f\uff0c\u6bd4\u5982\u6570\u636e\u5e93\u7684\u7d22\u5f15\u3001\u641c\u7d22\u7b97\u6cd5\u7ed3\u6784\u3001\u4ee5\u53ca\u56fe\u50cf\u5904\u7406\u3002\n\u6211\u628a\u6211\u7684\u4e8c\u53c9\u6811\u53eb\u505aBSTree\uff0c\u63cf\u8ff0\u5b83\u7684\u6700\u4f73\u65b9\u6cd5\u5c31\u662f\u5b83\u662f\u53e6\u4e00\u79cdHashmap\u5f62\u5f0f\u7684\u952e\u503c\u5bf9\u50a8\u5b58\u5bb9\u5668\u3002\u5b83\u4eec\u7684\u5dee\u5f02\u5728\u4e8e\uff0c\u54c8\u5e0c\u8868\u4e3a\u952e\u8ba1\u7b97\u54c8\u5e0c\u503c\u6765\u5bfb\u627e\u4f4d\u7f6e\uff0c\u800c\u4e8c\u53c9\u6811\u5c06\u952e\u4e0e\u6811\u4e2d\u7684\u8282\u70b9\u8fdb\u884c\u5bf9\u6bd4\uff0c\u4e4b\u540e\u6df1\u5165\u6811\u4e2d\u627e\u5230\u50a8\u5b58\u5b83\u7684\u6700\u4f73\u4f4d\u7f6e\uff0c\u57fa\u4e8e\u5b83\u4e0e\u5176\u5b83\u8282\u70b9\u7684\u5173\u7cfb\u3002\n\u5728\u6211\u771f\u6b63\u89e3\u91ca\u5b83\u7684\u5de5\u4f5c\u539f\u7406\u4e4b\u524d\uff0c\u8ba9\u6211\u5411\u4f60\u5c55\u793abstree.h\u5934\u6587\u4ef6\uff0c\u4fbf\u4e8e\u4f60\u770b\u5230\u6570\u636e\u7ed3\u6784\uff0c\u4e4b\u540e\u6211\u4f1a\u7528\u5b83\u6765\u89e3\u91ca\u5982\u4f55\u6784\u5efa\u3002\n#ifndef _lcthw_BSTree_h\n#define _lcthw_BSTree_h\n\n\ntypedef int (*BSTree_compare)(void *a, void *b);\n\ntypedef struct BSTreeNode {\n    void *key;\n    void *data;\n\n    struct BSTreeNode *left;\n    struct BSTreeNode *right;\n    struct BSTreeNode *parent;\n} BSTreeNode;\n\ntypedef struct BSTree {\n    int count;\n    BSTree_compare compare;\n    BSTreeNode *root;\n} BSTree;\n\ntypedef int (*BSTree_traverse_cb)(BSTreeNode *node);\n\nBSTree *BSTree_create(BSTree_compare compare);\nvoid BSTree_destroy(BSTree *map);\n\nint BSTree_set(BSTree *map, void *key, void *data);\nvoid *BSTree_get(BSTree *map, void *key);\n\nint BSTree_traverse(BSTree *map, BSTree_traverse_cb traverse_cb);\n\nvoid *BSTree_delete(BSTree *map, void *key);\n\n#endif\n\u8fd9\u9075\u5faa\u4e86\u6211\u4e4b\u524d\u7528\u8fc7\u7684\u76f8\u540c\u6a21\u5f0f\uff0c\u6211\u521b\u5efa\u4e86\u4e00\u4e2a\u57fa\u5bb9\u5668\u53eb\u505aBSTree\uff0c\u5b83\u542b\u6709\u53eb\u505aBSTreeNode\u7684\u8282\u70b9\uff0c\u7ec4\u6210\u5b9e\u9645\u5185\u5bb9\u3002\u538c\u5026\u4e86\u5417\uff1f\u662f\u7684\uff0c\u8fd9\u79cd\u7ed3\u6784\u4e5f\u6ca1\u6709\u4ec0\u4e48\u9ad8\u660e\u4e4b\u5904\u3002\n\u6700\u91cd\u8981\u7684\u90e8\u5206\u662f\uff0cBSTreeNode\u5982\u4f55\u914d\u7f6e\uff0c\u4ee5\u53ca\u5b83\u5982\u4f55\u7528\u4e8e\u8fdb\u884c\u6bcf\u4e2a\u64cd\u4f5c\uff1a\u8bbe\u7f6e\u3001\u83b7\u53d6\u548c\u5220\u9664\u3002\u6211\u4f1a\u9996\u5148\u8bb2\u89e3get\uff0c\u56e0\u4e3a\u5b83\u662f\u6700\u7b80\u5355\u7684\u64cd\u4f5c\uff0c\u5e76\u4e14\u6211\u4f1a\u5728\u6570\u636e\u7ed3\u6784\u4e0a\u624b\u52a8\u64cd\u4f5c\uff1a\n\n\u6211\u83b7\u5f97\u4f60\u8981\u627e\u7684\u952e\uff0c\u5e76\u4e14\u7528\u6839\u8282\u70b9\u5f00\u59cb\u904d\u5386\uff0c\u9996\u5148\u6211\u5c06\u4f60\u7684\u952e\u4e0e\u8fd9\u4e2a\u8282\u70b9\u7684\u952e\u8fdb\u884c\u5bf9\u6bd4\u3002\n\u5982\u679c\u4f60\u7684\u952e\u5c0f\u4e8enode.key\uff0c\u6211\u4f7f\u7528left\u6307\u9488\u6765\u8be6\u7ec6\u904d\u5386\u3002\n\u5982\u679c\u4f60\u7684\u952e\u5927\u4e8enode.key\uff0c\u6211\u4f7f\u7528right\u6307\u9488\u6765\u8be6\u7ec6\u904d\u5386\u3002\n\u91cd\u590d\u7b2c\u4e8c\u6b65\u548c\u7b2c\u4e09\u90e8\uff0c\u77e5\u9053\u6211\u627e\u5230\u4e86\u5339\u914dnode.key\u7684\u8282\u70b9\uff0c\u6216\u8005\u6211\u904d\u5386\u5230\u4e86\u6ca1\u6709\u5de6\u5b50\u6811\u6216\u53f3\u5b50\u6811\u7684\u8282\u70b9\u3002\u8fd9\u79cd\u60c5\u51b5\u6211\u4f1a\u8fd4\u56denode.data\uff0c\u5176\u5b83\u60c5\u51b5\u4f1a\u8fd4\u56deNULL\u3002\n\n\u8fd9\u5c31\u662fget\u7684\u5168\u90e8\u64cd\u4f5c\uff0c\u73b0\u5728\u662fset\uff0c\u5b83\u51e0\u4e4e\u6267\u884c\u76f8\u540c\u7684\u64cd\u4f5c\uff0c\u9664\u4e86\u4f60\u5728\u5bfb\u627e\u9632\u6b62\u65b0\u8282\u70b9\u7684\u4f4d\u7f6e\u3002\n\n\u5982\u679cBSTree.root\u4e3a\u7a7a\uff0c\u5c31\u7b97\u662f\u6267\u884c\u5b8c\u6210\u4e86\u3002\u5b83\u5c31\u662f\u7b2c\u4e00\u4e2a\u8282\u70b9\u3002\n\u4e4b\u540e\u6211\u4f1a\u5c06\u4f60\u7684\u952e\u4e0enode.key\u8fdb\u884c\u6bd4\u5bf9\uff0c\u4ece\u6839\u8282\u70b9\u5f00\u59cb\u3002\n\u5982\u679c\u4f60\u7684\u952e\u5c0f\u4e8e\u6216\u7b49\u4e8enode.key\uff0c\u6211\u4f1a\u904d\u5386\u5de6\u5b50\u6811\uff0c\u5426\u5219\u662f\u53f3\u5b50\u6811\u3002\n\u91cd\u590d\u7b2c\u4e09\u6b65\uff0c\u76f4\u5230\u6211\u5230\u8fbe\u4e86\u6ca1\u6709\u5de6\u5b50\u6811\u6216\u53f3\u5b50\u6811\u7684\u8282\u70b9\uff0c\u4f46\u662f\u8fd9\u662f\u6211\u9700\u8981\u9009\u62e9\u7684\u65b9\u5411\u3002\n\u6211\u9009\u62e9\u4e86\u8fd9\u4e2a\u65b9\u5411\uff08\u5de6\u6216\u8005\u53f3\uff09\u6765\u653e\u7f6e\u65b0\u7684\u8282\u70b9\uff0c\u5e76\u4e14\u5c06\u8fd9\u4e2a\u65b0\u8282\u70b9\u7684\u7236\u8282\u70b9\u8bbe\u4e3a\u6211\u6765\u65f6\u7684\u4e0a\u4e00\u4e2a\u8282\u70b9\u3002\u5f53\u6211\u5220\u9664\u5b83\u65f6\uff0c\u6211\u4f1a\u4f7f\u7528\u5b83\u7684\u7236\u8282\u70b9\u3002\n\n\u8fd9\u4e5f\u89e3\u91ca\u4e86\u5b83\u5982\u4f55\u5de5\u4f5c\u3002\u5982\u679c\u5bfb\u627e\u4e00\u4e2a\u8282\u70b9\u6d89\u53ca\u5230\u6309\u7167\u952e\u7684\u5bf9\u6bd4\u6765\u904d\u5386\u5de6\u5b50\u6811\u6216\u53f3\u5b50\u6811\uff0c\u90a3\u4e48\u8bbe\u7f6e\u4e00\u4e2a\u8282\u70b9\u6d89\u53ca\u5230\u76f8\u540c\u7684\u4e8b\u60c5\uff0c\u76f4\u5230\u6211\u627e\u5230\u4e86\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u53ef\u4ee5\u5728\u5176\u5de6\u5b50\u6811\u6216\u53f3\u5b50\u6811\u4e0a\u653e\u7f6e\u65b0\u7684\u8282\u70b9\u3002\n\u82b1\u4e00\u4e9b\u65f6\u95f4\u5728\u7eb8\u4e0a\u753b\u51fa\u4e00\u4e9b\u6811\u5e76\u4e14\u904d\u5386\u4e00\u4e9b\u8282\u70b9\u6765\u8fdb\u884c\u67e5\u627e\u6216\u8bbe\u7f6e\uff0c\u4f60\u5c31\u53ef\u4ee5\u7406\u89e3\u5b83\u5982\u4f55\u5de5\u4f5c\u3002\u4e4b\u540e\u4f60\u8981\u51c6\u5907\u597d\u6765\u770b\u4e00\u770b\u5b9e\u73b0\uff0c\u6211\u5728\u5176\u4e2d\u89e3\u91ca\u4e86\u5220\u9664\u64cd\u4f5c\u3002\u5220\u9664\u4e00\u4e2a\u8282\u70b9\u975e\u5e38\u9ebb\u70e6\uff0c\u56e0\u6b64\u5b83\u6700\u9002\u5408\u9010\u884c\u7684\u4ee3\u7801\u5206\u89e3\u3002\n#include &lt;lcthw\/dbg.h&gt;\n#include &lt;lcthw\/bstree.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;lcthw\/bstrlib.h&gt;\n\nstatic int default_compare(void *a, void *b)\n{\n    return bstrcmp((bstring)a, (bstring)b);\n}\n\n\nBSTree *BSTree_create(BSTree_compare compare)\n{\n    BSTree *map = calloc(1, sizeof(BSTree));\n    check_mem(map);\n\n    map-&gt;compare = compare == NULL ? default_compare : compare;\n\n    return map;\n\nerror:\n    if(map) {\n        BSTree_destroy(map);\n    }\n    return NULL;\n}\n\nstatic int BSTree_destroy_cb(BSTreeNode *node)\n{\n    free(node);\n    return 0;\n}\n\nvoid BSTree_destroy(BSTree *map)\n{\n    if(map) {\n        BSTree_traverse(map, BSTree_destroy_cb);\n        free(map);\n    }\n}\n\n\nstatic inline BSTreeNode *BSTreeNode_create(BSTreeNode *parent, void *key, void *data)\n{\n    BSTreeNode *node = calloc(1, sizeof(BSTreeNode));\n    check_mem(node);\n\n    node-&gt;key = key;\n    node-&gt;data = data;\n    node-&gt;parent = parent;\n    return node;\n\nerror:\n    return NULL;\n}\n\n\nstatic inline void BSTree_setnode(BSTree *map, BSTreeNode *node, void *key, void *data)\n{\n    int cmp = map-&gt;compare(node-&gt;key, key);\n\n    if(cmp &lt;= 0) {\n        if(node-&gt;left) {\n            BSTree_setnode(map, node-&gt;left, key, data);\n        } else {\n            node-&gt;left = BSTreeNode_create(node, key, data);\n        }\n    } else {\n        if(node-&gt;right) {\n            BSTree_setnode(map, node-&gt;right, key, data);\n        } else {\n            node-&gt;right = BSTreeNode_create(node, key, data);\n        }\n    }\n}\n\n\nint BSTree_set(BSTree *map, void *key, void *data)\n{\n    if(map-&gt;root == NULL) {\n        \/\/ first so just make it and get out\n        map-&gt;root = BSTreeNode_create(NULL, key, data);\n        check_mem(map-&gt;root);\n    } else {\n        BSTree_setnode(map, map-&gt;root, key, data);\n    }\n\n    return 0;\nerror:\n    return -1;\n}\n\nstatic inline BSTreeNode *BSTree_getnode(BSTree *map, BSTreeNode *node, void *key)\n{\n    int cmp = map-&gt;compare(node-&gt;key, key);\n\n    if(cmp == 0) {\n        return node;\n    } else if(cmp &lt; 0) {\n        if(node-&gt;left) {\n            return BSTree_getnode(map, node-&gt;left, key);\n        } else {\n            return NULL;\n        }\n    } else {\n        if(node-&gt;right) {\n            return BSTree_getnode(map, node-&gt;right, key);\n        } else {\n            return NULL;\n        }\n    }\n}\n\nvoid *BSTree_get(BSTree *map, void *key)\n{\n    if(map-&gt;root == NULL) {\n        return NULL;\n    } else {\n        BSTreeNode *node = BSTree_getnode(map, map-&gt;root, key);\n        return node == NULL ? NULL : node-&gt;data;\n    }\n}\n\n\nstatic inline int BSTree_traverse_nodes(BSTreeNode *node, BSTree_traverse_cb traverse_cb)\n{\n    int rc = 0;\n\n    if(node-&gt;left) {\n        rc = BSTree_traverse_nodes(node-&gt;left, traverse_cb);\n        if(rc != 0) return rc;\n    }\n\n    if(node-&gt;right) {\n        rc = BSTree_traverse_nodes(node-&gt;right, traverse_cb);\n        if(rc != 0) return rc;\n    }\n\n    return traverse_cb(node);\n}\n\nint BSTree_traverse(BSTree *map, BSTree_traverse_cb traverse_cb)\n{\n    if(map-&gt;root) {\n        return BSTree_traverse_nodes(map-&gt;root, traverse_cb);\n    }\n\n    return 0;\n}\n\nstatic inline BSTreeNode *BSTree_find_min(BSTreeNode *node)\n{\n    while(node-&gt;left) {\n        node = node-&gt;left;\n    }\n\n    return node;\n}\n\nstatic inline void BSTree_replace_node_in_parent(BSTree *map, BSTreeNode *node, BSTreeNode *new_value)\n{\n    if(node-&gt;parent) {\n        if(node == node-&gt;parent-&gt;left) {\n            node-&gt;parent-&gt;left = new_value;\n        } else {\n            node-&gt;parent-&gt;right = new_value;\n        }\n    } else {\n        \/\/ this is the root so gotta change it\n        map-&gt;root = new_value;\n    }\n\n    if(new_value) {\n        new_value-&gt;parent = node-&gt;parent;\n    }\n}\n\nstatic inline void BSTree_swap(BSTreeNode *a, BSTreeNode *b)\n{\n    void *temp = NULL;\n    temp = b-&gt;key; b-&gt;key = a-&gt;key; a-&gt;key = temp;\n    temp = b-&gt;data; b-&gt;data = a-&gt;data; a-&gt;data = temp;\n}\n\nstatic inline BSTreeNode *BSTree_node_delete(BSTree *map, BSTreeNode *node, void *key)\n{\n    int cmp = map-&gt;compare(node-&gt;key, key);\n\n    if(cmp &lt; 0) {\n        if(node-&gt;left) {\n            return BSTree_node_delete(map, node-&gt;left, key);\n        } else {\n            \/\/ not found\n            return NULL;\n        }\n    } else if(cmp &gt; 0) {\n        if(node-&gt;right) {\n            return BSTree_node_delete(map, node-&gt;right, key);\n        } else {\n            \/\/ not found\n            return NULL;\n        }\n    } else {\n        if(node-&gt;left &amp;&amp; node-&gt;right) {\n            \/\/ swap this node for the smallest node that is bigger than us\n            BSTreeNode *successor = BSTree_find_min(node-&gt;right);\n            BSTree_swap(successor, node);\n\n            \/\/ this leaves the old successor with possibly a right child\n            \/\/ so replace it with that right child\n            BSTree_replace_node_in_parent(map, successor, successor-&gt;right);\n\n            \/\/ finally it's swapped, so return successor instead of node\n            return successor;\n        } else if(node-&gt;left) {\n            BSTree_replace_node_in_parent(map, node, node-&gt;left);\n        } else if(node-&gt;right) {\n            BSTree_replace_node_in_parent(map, node, node-&gt;right);\n        } else {\n            BSTree_replace_node_in_parent(map, node, NULL);\n        }\n\n        return node;\n    }\n}\n\nvoid *BSTree_delete(BSTree *map, void *key)\n{\n    void *data = NULL;\n\n    if(map-&gt;root) {\n        BSTreeNode *node = BSTree_node_delete(map, map-&gt;root, key);\n\n        if(node) {\n            data = node-&gt;data;\n            free(node);\n        }\n    }\n\n    return data;\n}\n\u5728\u8bb2\u89e3BSTree_delete\u5982\u4f55\u5de5\u4f5c\u4e4b\u524d\uff0c\u6211\u6253\u7b97\u89e3\u91ca\u4e00\u4e0b\u6211\u7528\u4e8e\u6267\u884c\u9012\u5f52\u51fd\u6570\u7684\u6a21\u5f0f\u3002\u4f60\u4f1a\u53d1\u73b0\u8bb8\u591a\u6811\u5f62\u6570\u636e\u7ed3\u6784\u90fd\u6613\u4e8e\u4f7f\u7528\u9012\u5f52\u6765\u7f16\u5199\uff0c\u800c\u5199\u6210\u5355\u4e2a\u51fd\u6570\u7684\u5f62\u5f0f\u76f8\u5f53\u56f0\u96be\u3002\u4e00\u90e8\u5206\u539f\u56e0\u5728\u4e8e\u4f60\u9700\u8981\u4e3a\u7b2c\u4e00\u6b21\u64cd\u4f5c\u5efa\u7acb\u4e00\u4e9b\u521d\u59cb\u7684\u6570\u636e\uff0c\u4e4b\u540e\u5728\u6570\u636e\u7ed3\u6784\u4e2d\u9012\u5f52\uff0c\u8fd9\u96be\u4ee5\u5199\u6210\u4e00\u4e2a\u51fd\u6570\u3002\n\u89e3\u51b3\u529e\u6cd5\u5c31\u662f\u4f7f\u7528\u4e24\u4e2a\u51fd\u6570\u3002\u4e00\u4e2a\u51fd\u6570\u201c\u5efa\u7acb\u201d\u6570\u636e\u7ed3\u6784\u548c\u9996\u6b21\u9012\u5f52\u7684\u6761\u4ef6\u4f7f\u7b2c\u4e8c\u5c42\u51fd\u6570\u80fd\u591f\u6267\u884c\u771f\u6b63\u7684\u903b\u8f91\u3002\u9996\u5148\u770b\u4e00\u770bBSTree_get\u6765\u7406\u89e3\u6211\u6240\u8bf4\u7684\u3002\n\n\u6211\u8bbe\u7f6e\u4e86\u521d\u59cb\u6761\u4ef6\u6765\u5904\u7406\u9012\u5f52\uff0c\u5982\u679cmap-&gt;NULL\u662fNULL\uff0c\u90a3\u4e48\u5c31\u8fd4\u56deNULL\u5e76\u4e14\u4e0d\u9700\u8981\u9012\u5f52\u3002\n\u4e4b\u540e\u6211\u6267\u884c\u4e86\u771f\u6b63\u7684\u9012\u5f52\u8c03\u7528\uff0c\u5b83\u5c31\u662fBSTree_getnode\u3002\u6211\u8bbe\u7f6e\u4e86\u6839\u8282\u70b9\u7684\u521d\u59cb\u6761\u4ef6\u3001key\u548cmap\u3002\n\u4e4b\u540e\u5728BSTree_getnode\u4e2d\uff0c\u6211\u6267\u884c\u4e86\u771f\u6b63\u7684\u9012\u5f52\u903b\u8f91\uff0c\u6211\u5c06\u662f\u7528map-&gt;compare(node-&gt;key, key)\u6765\u8fdb\u884c\u952e\u7684\u6bd4\u5bf9\uff0c\u5e76\u4e14\u6839\u636e\u7ed3\u679c\u904d\u5386\u5de6\u5b50\u6811\u6216\u53f3\u5b50\u6811\uff0c\u6216\u8005\u76f8\u7b49\u3002\n\u7531\u4e8e\u8fd9\u4e2a\u51fd\u6570\u65f6\u201c\u81ea\u76f8\u4f3c\u201d\u7684\uff0c\u5e76\u4e14\u4e0d\u7528\u5904\u7406\u4efb\u4f55\u521d\u59cb\u6761\u4ef6\uff08\u56e0\u4e3aBSTree_get\u5904\u7406\u4e86\uff09\uff0c\u6211\u5c31\u53ef\u4ee5\u4f7f\u5b83\u975e\u5e38\u7b80\u5355\u3002\u5f53\u5b83\u5b8c\u6210\u65f6\u4f1a\u8fd4\u56de\u7ed9\u8c03\u7528\u8005\uff0c\u6700\u540e\u628a\u7ed3\u6784\u8fd4\u56de\u7ed9BSTree_get\u3002\n\u6700\u540e\uff0c\u5728\u7ed3\u679c\u4e0d\u4e3aNULL\u7684\u60c5\u51b5\u4e0b\uff0cBSTree_get\u5904\u7406\u83b7\u5f97\u7684node.data\u5143\u7d20\u3002\n\n\u8fd9\u79cd\u6784\u9020\u9012\u5f52\u7b97\u6cd5\u7684\u65b9\u6cd5\uff0c\u4e0e\u6211\u6784\u9020\u9012\u5f52\u6570\u636e\u7ed3\u6784\u7684\u65b9\u6cd5\u4e00\u81f4\u3002\u6211\u521b\u5efa\u4e86\u4e00\u4e2a\u8d77\u59cb\u7684\u201c\u57fa\u51fd\u6570\u201d\uff0c\u5b83\u5904\u7406\u521d\u59cb\u6761\u4ef6\u548c\u4e00\u4e9b\u8fb9\u754c\u60c5\u51b5\uff0c\u4e4b\u540e\u5b83\u8c03\u7528\u4e86\u4e00\u4e2a\u7b80\u6d01\u7684\u9012\u5f52\u51fd\u6570\u6765\u6267\u884c\u4efb\u52a1\u3002\u4e0e\u4e4b\u76f8\u6bd4\uff0c\u6211\u5728BStree\u4e2d\u521b\u5efa\u4e86\u201c\u57fa\u7ed3\u6784\u201d\uff0c\u5b83\u6301\u6709\u9012\u5f52\u7684BSTreeNode\u7ed3\u6784\uff0c\u6bcf\u4e2a\u8282\u70b9\u90fd\u5f15\u7528\u6811\u4e2d\u7684\u5176\u5b83\u8282\u70b9\u3002\u4f7f\u7528\u8fd9\u79cd\u6a21\u5f0f\u8ba9\u6211\u66f4\u5bb9\u6613\u5904\u7406\u9012\u5f52\u5e76\u4fdd\u6301\u7b80\u6d01\u3002\n\u63a5\u4e0b\u6765\uff0c\u6d4f\u89c8BSTree_set \u548c BSTree_setnode\uff0c\u6765\u89c2\u5bdf\u76f8\u540c\u7684\u6a21\u5f0f\u3002\u6211\u4f7f\u7528BSTree_set\u6765\u786e\u4fdd\u521d\u59cb\u6761\u4ef6\u548c\u4fbf\u6377\u60c5\u51b5\u3002\u5e38\u89c1\u7684\u8fb9\u754c\u60c5\u51b5\u5c31\u662f\u6811\u4e2d\u6ca1\u6709\u6839\u8282\u70b9\uff0c\u4e8e\u662f\u6211\u9700\u8981\u521b\u5efa\u4e00\u4e2a\u51fd\u6570\u6765\u521d\u59cb\u5316\u5b83\u4eec\u3002\n\u8fd9\u4e2a\u6a21\u5f0f\u9002\u7528\u4e8e\u51e0\u4e4e\u4efb\u4f55\u9012\u5f52\u7684\u7b97\u6cd5\u3002\u6211\u6309\u7167\u8fd9\u79cd\u6a21\u5f0f\u6765\u7f16\u5199\u5b83\u4eec\uff1a\n\n\u7406\u89e3\u521d\u59cb\u53d8\u91cf\uff0c\u5b83\u4eec\u5982\u4f55\u6539\u53d8\uff0c\u4ee5\u53ca\u9012\u5f52\u6bcf\u4e00\u6b65\u7684\u7ec8\u6b62\u6761\u4ef6\u3002\n\u7f16\u5199\u8c03\u7528\u81ea\u8eab\u7684\u9012\u5f52\u51fd\u6570\uff0c\u5e26\u6709\u53c2\u6570\u4f5c\u4e3a\u7ec8\u6b62\u6761\u4ef6\u548c\u521d\u59cb\u53d8\u91cf\u3002\n\u7f16\u7a0b\u4e00\u4e2a\u542f\u52a8\u51fd\u6570\u6765\u8bbe\u7f6e\u7b97\u6cd5\u7684\u521d\u59cb\u6761\u4ef6\uff0c\u5e76\u4e14\u5904\u7406\u8fb9\u754c\u60c5\u51b5\uff0c\u4e4b\u540e\u8c03\u7528\u9012\u5f52\u51fd\u6570\u3002\n\u6700\u540e\uff0c\u542f\u52a8\u51fd\u6570\u8fd4\u56de\u6700\u540e\u7684\u7ed3\u679c\uff0c\u5e76\u4e14\u5982\u679c\u9012\u5f52\u51fd\u6570\u4e0d\u80fd\u5904\u7406\u6700\u7ec8\u7684\u8fb9\u754c\u60c5\u51b5\u53ef\u80fd\u8fd8\u8981\u505a\u8c03\u6574\u3002\n\n\u8fd9\u5f15\u5bfc\u4e86\u6211\u5b8c\u6210BSTree_delete\u548cBSTree_node_delete\u3002\u9996\u5148\u4f60\u53ef\u4ee5\u770b\u4e00\u4e0bBSTree_delete\u548c\u5b83\u7684\u542f\u52a8\u51fd\u6570\uff0c\u5b83\u83b7\u53d6\u7ed3\u679c\u8282\u70b9\u7684\u6570\u636e\uff0c\u5e76\u4e14\u91ca\u653e\u627e\u5230\u7684\u8282\u70b9\u3002\u5728BSTree_node_delete\u4e2d\u4e8b\u60c5\u5c31\u53d8\u5f97\u590d\u6742\u4e86\uff0c\u56e0\u4e3a\u8981\u5728\u6811\u4e2d\u4efb\u610f\u4f4d\u7f6e\u5220\u9664\u4e00\u4e2a\u8282\u70b9\uff0c\u6211\u9700\u8981\u5c06\u5b50\u8282\u70b9\u7ffb\u8f6c\u4e0a\u6765\u3002\u6211\u4f1a\u9010\u884c\u62c6\u5206\u8fd9\u4e2a\u51fd\u6570\uff1a\nbstree.c:190\n\u6211\u6267\u884c\u6bd4\u8f83\u51fd\u6570\u6765\u627e\u51fa\u5e94\u8be5\u9009\u62e9\u7684\u65b9\u5411\u3002\nbstree.c:192-198\n\u8fd9\u662f\u201c\u5c0f\u4e8e\u201d\u7684\u5206\u652f\uff0c\u6211\u5e94\u8be5\u79fb\u5230\u5de6\u5b50\u6811\u3002\u8fd9\u91cc\u5de6\u5b50\u6811\u5e76\u4e0d\u5b58\u5728\u5e76\u4e14\u8fd4\u56de\u4e86NULL\u6765\u8868\u793a\u201c\u672a\u627e\u5230\u201d\u3002\u8fd9\u5904\u7406\u4e86\u4e00\u4e9b\u4e0d\u5728BSTree\u4e2d\u5143\u7d20\u7684\u5220\u9664\u64cd\u4f5c\u3002\nbstree.c:199-205\n\u548c\u4e0a\u9762\u76f8\u540c\uff0c\u4f46\u662f\u662f\u5bf9\u4e8e\u6811\u7684\u53f3\u4fa7\u5206\u652f\u3002\u8fd9\u5c31\u50cf\u5176\u5b83\u51fd\u6570\u4e00\u6837\u53ea\u662f\u5728\u6811\u4e2d\u5411\u4e0b\u904d\u5386\uff0c\u5e76\u4e14\u5728\u4e0d\u5b58\u5728\u65f6\u8fd4\u56deNULL\u3002\nbstree.c:206\n\u8fd9\u91cc\u662f\u53d1\u73b0\u76ee\u6807\u8282\u70b9\u7684\u5730\u65b9\uff0c\u56e0\u4e3a\u952e\u662f\u76f8\u7b49\u7684\uff08compare\u8fd4\u56de\u4e860\uff09\u3002\nbstree.c:207\n\u8fd9\u4e2a\u8282\u70b9\u540c\u65f6\u5177\u6709left\u548cright\u5206\u652f\uff0c\u6240\u4ee5\u5b83\u6df1\u6df1\u5d4c\u5165\u5728\u6811\u4e2d\u3002\nbstree.c:209\n\u8981\u79fb\u9664\u8fd9\u4e2a\u8282\u70b9\uff0c\u6211\u9996\u5148\u8981\u627e\u5230\u5927\u4e8e\u8fd9\u4e2a\u8282\u70b9\u7684\u6700\u5c0f\u8282\u70b9\uff0c\u8fd9\u91cc\u6211\u5728\u53f3\u5b50\u6811\u4e0a\u8c03\u7528\u4e86BSTree_find_min\u3002\nbstree.c:210\n\u4e00\u65e6\u6211\u83b7\u5f97\u4e86\u8fd9\u4e2a\u51e0\u70b9\uff0c\u6211\u5c06\u5b83\u7684key\u548cdata\u4e0e\u5f53\u524d\u8282\u70b9\u4e92\u6362\u3002\u8fd9\u6837\u5c31\u9ad8\u6548\u5730\u5c06\u5f53\u524d\u8282\u70b9\u79fb\u52a8\u5230\u6811\u7684\u6700\u5e95\u7aef\uff0c\u5e76\u4e14\u4e0d\u540c\u901a\u8fc7\u5b83\u7684\u6307\u9488\u6765\u8c03\u6574\u8282\u70b9\u3002\nbstree.c:214\n\u73b0\u5728successor\u662f\u4e00\u4e2a\u65e0\u6548\u7684\u5206\u652f\uff0c\u50a8\u5b58\u4e86\u5f53\u524d\u8282\u70b9\u7684\u503c\u3002\u7136\u800c\u5b83\u53ef\u80fd\u8fd8\u5e26\u6709\u53f3\u5b50\u6811\uff0c\u4e5f\u5c31\u662f\u8bf4\u6211\u5fc5\u987b\u505a\u4e00\u4e2a\u65cb\u8f6c\u4f7f\u5b83\u7684\u53f3\u8282\u70b9\u4e0a\u6765\u4ee3\u66ff\u5b83\u3002\nbstree.c:217\n\u5230\u6b64\u4e3a\u6b62\uff0csuccessor\u5df2\u7ecf\u4ece\u6811\u4e2d\u79fb\u51fa\u4e86\uff0c\u5b83\u7684\u503c\u88ab\u5f53\u524d\u8282\u70b9\u7684\u503c\u4ee3\u66ff\uff0c\u5b83\u7684\u4efb\u4f55\u5b50\u6811\u90fd\u5408\u5e76\u8fdb\u4e86\u5b83\u7684\u7236\u8282\u70b9\u3002\u6211\u53ef\u4ee5\u50cfnode\u4e00\u6837\u8fd4\u56de\u5b83\u3002\nbstree.c:218\n\u8fd9\u4e2a\u5206\u652f\u4e2d\uff0c\u6211\u4e86\u89e3\u5230\u8fd9\u4e2a\u8282\u70b9\u6ca1\u6709\u53f3\u5b50\u6811\u53ea\u6709\u5de6\u5b50\u6811\uff0c\u6240\u4ee5\u6211\u53ef\u4ee5\u7b80\u5355\u5730\u7528\u5de6\u8282\u70b9\u6765\u66ff\u4ee3\u5b83\u3002\nbstree.c:219\n\u6211\u518d\u6b21\u4f7f\u7528BSTree_replace_node_in_parent\u6765\u6267\u884c\u66ff\u6362\uff0c\u628a\u5de6\u8282\u70b9\u65cb\u8f6c\u4e0a\u53bb\u3002\nbstree.c:220\n\u8fd9\u662f\u53ea\u6709\u53f3\u5b50\u6811\u800c\u6ca1\u6709\u5de6\u5b50\u6811\u7684\u60c5\u51b5\uff0c\u6240\u4ee5\u9700\u8981\u5c06\u53f3\u8282\u70b9\u65cb\u8f6c\u4e0a\u53bb\u3002\nbstree.c:221\n\u518d\u6b21\u4f7f\u7528\u76f8\u540c\u7684\u51fd\u6570\uff0c\u8fd9\u6b21\u662f\u9488\u5bf9\u53f3\u8282\u70b9\u3002\nbstree.c:222\n\u6700\u540e\uff0c\u5bf9\u4e8e\u6211\u53d1\u73b0\u7684\u8282\u70b9\u53ea\u5269\u4e0b\u4e00\u79cd\u60c5\u51b5\uff0c\u5c31\u662f\u5b83\u6ca1\u6709\u4efb\u4f55\u5b50\u6811\uff08\u6ca1\u6709\u505a\u5b50\u6811\u4e5f\u6ca1\u6709\u53f3\u5b50\u6811\uff09\u3002\u8fd9\u79cd\u60c5\u51b5\uff0c\u6211\u53ea\u9700\u8981\u4f7f\u7528\u76f8\u540c\u51fd\u6570\u4ee5NULL\u6765\u6267\u884c\u66ff\u6362\u3002\nbstree.c:210\n\u5728\u6b64\u4e4b\u540e\uff0c\u6211\u5df2\u7ecf\u5c06\u5f53\u524d\u8282\u70b9\u4ece\u4e66\u4e2d\u79fb\u9664\uff0c\u5e76\u4e14\u4ee5\u67d0\u4e2a\u5408\u9002\u7684\u5b50\u8282\u70b9\u7684\u5143\u7d20\u6765\u66ff\u6362\u3002\u6211\u53ea\u9700\u8981\u628a\u5b83\u8fd4\u56de\u7ed9\u8c03\u7528\u8005\uff0c\u4f7f\u5b83\u80fd\u591f\u88ab\u91ca\u653e\u6216\u7ba1\u7406\u3002\n\u8fd9\u4e2a\u64cd\u4f5c\u975e\u5e38\u590d\u6742\uff0c\u5b9e\u8bdd\u8bf4\uff0c\u5728\u4e00\u4e9b\u6811\u5f62\u6570\u636e\u7ed3\u6784\u4e2d\uff0c\u6211\u5e76\u4e0d\u9700\u8981\u6267\u884c\u5220\u9664\uff0c\u800c\u662f\u628a\u5b83\u5f53\u505a\u8f6f\u4ef6\u4e2d\u7684\u5e38\u4eae\u6570\u636e\u3002\u5982\u679c\u6211\u9700\u8981\u505a\u7e41\u6742\u7684\u63d2\u5165\u548c\u5220\u9664\u5de5\u4f5c\uff0c\u6211\u4f1a\u4f7f\u7528Hashmap\u3002\n\u6700\u540e\uff0c\u4f60\u53ef\u4ee5\u67e5\u770b\u5b83\u7684\u5355\u5143\u6d4b\u8bd5\u4ee5\u53ca\u6d4b\u8bd5\u65b9\u6cd5\uff1a\n#include \"minunit.h\"\n#include &lt;lcthw\/bstree.h&gt;\n#include &lt;assert.h&gt;\n#include &lt;lcthw\/bstrlib.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;time.h&gt;\n\nBSTree *map = NULL;\nstatic int traverse_called = 0;\nstruct tagbstring test1 = bsStatic(\"test data 1\");\nstruct tagbstring test2 = bsStatic(\"test data 2\");\nstruct tagbstring test3 = bsStatic(\"xest data 3\");\nstruct tagbstring expect1 = bsStatic(\"THE VALUE 1\");\nstruct tagbstring expect2 = bsStatic(\"THE VALUE 2\");\nstruct tagbstring expect3 = bsStatic(\"THE VALUE 3\");\n\nstatic int traverse_good_cb(BSTreeNode *node)\n{\n    debug(\"KEY: %s\", bdata((bstring)node-&gt;key));\n    traverse_called++;\n    return 0;\n}\n\n\nstatic int traverse_fail_cb(BSTreeNode *node)\n{\n    debug(\"KEY: %s\", bdata((bstring)node-&gt;key));\n    traverse_called++;\n\n    if(traverse_called == 2) {\n        return 1;\n    } else {\n        return 0;\n    }\n}\n\n\nchar *test_create()\n{\n    map = BSTree_create(NULL);\n    mu_assert(map != NULL, \"Failed to create map.\");\n\n    return NULL;\n}\n\nchar *test_destroy()\n{\n    BSTree_destroy(map);\n\n    return NULL;\n}\n\n\nchar *test_get_set()\n{\n    int rc = BSTree_set(map, &amp;test1, &amp;expect1);\n    mu_assert(rc == 0, \"Failed to set &amp;test1\");\n    bstring result = BSTree_get(map, &amp;test1);\n    mu_assert(result == &amp;expect1, \"Wrong value for test1.\");\n\n    rc = BSTree_set(map, &amp;test2, &amp;expect2);\n    mu_assert(rc == 0, \"Failed to set test2\");\n    result = BSTree_get(map, &amp;test2);\n    mu_assert(result == &amp;expect2, \"Wrong value for test2.\");\n\n    rc = BSTree_set(map, &amp;test3, &amp;expect3);\n    mu_assert(rc == 0, \"Failed to set test3\");\n    result = BSTree_get(map, &amp;test3);\n    mu_assert(result == &amp;expect3, \"Wrong value for test3.\");\n\n    return NULL;\n}\n\nchar *test_traverse()\n{\n    int rc = BSTree_traverse(map, traverse_good_cb);\n    mu_assert(rc == 0, \"Failed to traverse.\");\n    mu_assert(traverse_called == 3, \"Wrong count traverse.\");\n\n    traverse_called = 0;\n    rc = BSTree_traverse(map, traverse_fail_cb);\n    mu_assert(rc == 1, \"Failed to traverse.\");\n    mu_assert(traverse_called == 2, \"Wrong count traverse for fail.\");\n\n    return NULL;\n}\n\nchar *test_delete()\n{\n    bstring deleted = (bstring)BSTree_delete(map, &amp;test1);\n    mu_assert(deleted != NULL, \"Got NULL on delete.\");\n    mu_assert(deleted == &amp;expect1, \"Should get test1\");\n    bstring result = BSTree_get(map, &amp;test1);\n    mu_assert(result == NULL, \"Should delete.\");\n\n    deleted = (bstring)BSTree_delete(map, &amp;test1);\n    mu_assert(deleted == NULL, \"Should get NULL on delete\");\n\n    deleted = (bstring)BSTree_delete(map, &amp;test2);\n    mu_assert(deleted != NULL, \"Got NULL on delete.\");\n    mu_assert(deleted == &amp;expect2, \"Should get test2\");\n    result = BSTree_get(map, &amp;test2);\n    mu_assert(result == NULL, \"Should delete.\");\n\n    deleted = (bstring)BSTree_delete(map, &amp;test3);\n    mu_assert(deleted != NULL, \"Got NULL on delete.\");\n    mu_assert(deleted == &amp;expect3, \"Should get test3\");\n    result = BSTree_get(map, &amp;test3);\n    mu_assert(result == NULL, \"Should delete.\");\n\n    \/\/ test deleting non-existent stuff\n    deleted = (bstring)BSTree_delete(map, &amp;test3);\n    mu_assert(deleted == NULL, \"Should get NULL\");\n\n    return NULL;\n}\n\nchar *test_fuzzing()\n{\n    BSTree *store = BSTree_create(NULL);\n    int i = 0;\n    int j = 0;\n    bstring numbers[100] = {NULL};\n    bstring data[100] = {NULL};\n    srand((unsigned int)time(NULL));\n\n    for(i = 0; i &lt; 100; i++) {\n        int num = rand();\n        numbers[i] = bformat(\"%d\", num);\n        data[i] = bformat(\"data %d\", num);\n        BSTree_set(store, numbers[i], data[i]);\n    }\n\n    for(i = 0; i &lt; 100; i++) {\n        bstring value = BSTree_delete(store, numbers[i]);\n        mu_assert(value == data[i], \"Failed to delete the right number.\");\n\n        mu_assert(BSTree_delete(store, numbers[i]) == NULL, \"Should get nothing.\");\n\n        for(j = i+1; j &lt; 99 - i; j++) {\n            bstring value = BSTree_get(store, numbers[j]);\n            mu_assert(value == data[j], \"Failed to get the right number.\");\n        }\n\n        bdestroy(value);\n        bdestroy(numbers[i]);\n    }\n\n    BSTree_destroy(store);\n\n    return NULL;\n}\n\nchar *all_tests()\n{\n    mu_suite_start();\n\n    mu_run_test(test_create);\n    mu_run_test(test_get_set);\n    mu_run_test(test_traverse);\n    mu_run_test(test_delete);\n    mu_run_test(test_destroy);\n    mu_run_test(test_fuzzing);\n\n    return NULL;\n}\n\nRUN_TESTS(all_tests);\n\u6211\u8981\u91cd\u70b9\u8bb2\u89e3test_fuzzing\u51fd\u6570\uff0c\u5b83\u662f\u9488\u5bf9\u590d\u6742\u6570\u636e\u7ed3\u6784\u7684\u4e00\u79cd\u6709\u8da3\u7684\u6d4b\u8bd5\u6280\u5de7\u3002\u521b\u5efa\u4e00\u4e9b\u952e\u6765\u8986\u76d6BSTree_node_delete\u7684\u6240\u6709\u5206\u652f\u76f8\u5f53\u56f0\u96be\uff0c\u800c\u4e14\u6709\u53ef\u80fd\u6211\u4f1a\u9519\u8fc7\u4e00\u4e9b\u8fb9\u754c\u60c5\u51b5\u3002\u66f4\u597d\u7684\u65b9\u6cd5\u5c31\u662f\u521b\u5efa\u4e00\u4e2a\u201c\u6a21\u7cca\u6d4b\u8bd5\u201d\u7684\u51fd\u6570\u6765\u6267\u884c\u6240\u6709\u64cd\u4f5c\uff0c\u5e76\u5c3d\u53ef\u80fd\u4ee5\u4e00\u79cd\u53ef\u6015\u4e14\u968f\u673a\u7684\u65b9\u5f0f\u6267\u884c\u5b83\u4eec\u3002\u8fd9\u91cc\u6211\u63d2\u5165\u4e86\u4e00\u7cfb\u5217\u968f\u673a\u5b57\u7b26\u4e32\u7684\u952e\uff0c\u4e4b\u540e\u6211\u5220\u9664\u4e86\u5b83\u4eec\u5e76\u8bd5\u7740\u5728\u5220\u9664\u4e4b\u540e\u83b7\u53d6\u5b83\u4eec\u7684\u503c\u3002\n\u8fd9\u79cd\u6d4b\u8bd5\u53ef\u4ee5\u907f\u514d\u53ea\u6d4b\u8bd5\u5230\u4f60\u77e5\u9053\u80fd\u6b63\u5e38\u5de5\u4f5c\u7684\u90e8\u5206\uff0c\u8fd9\u610f\u5473\u7740\u4f60\u4e0d\u4f1a\u9057\u6f0f\u4e0d\u77e5\u9053\u7684\u4e8b\u60c5\u3002\u901a\u8fc7\u60f3\u4f60\u7684\u6570\u636e\u7ed3\u6784\u63d2\u5165\u4e00\u4e9b\u968f\u673a\u7684\u5783\u573e\u6570\u636e\uff0c\u4f60\u53ef\u4ee5\u78b0\u5230\u610f\u6599\u4e4b\u5916\u7684\u4e8b\u60c5\uff0c\u5e76\u68c0\u6d4b\u51fa\u4efb\u4f55bug\u3002\n\u5982\u4f55\u6539\u8fdb\n\u4e0d\u8981\u5b8c\u6210\u4e0b\u5217\u4efb\u4f55\u4e60\u9898\uff0c\u56e0\u4e3a\u5728\u4e0b\u4e2a\u7ec3\u4e60\u4e2d\u6211\u4f1a\u4f7f\u7528\u8fd9\u91cc\u7684\u5355\u5143\u6d4b\u8bd5\uff0c\u6765\u6559\u4f60\u4f7f\u7528\u4e00\u4e9b\u6027\u80fd\u8c03\u4f18\u7684\u6280\u5de7\u3002\u5728\u4f60\u5b8c\u6210\u7ec3\u4e6041\u4e4b\u540e\uff0c\u4f60\u9700\u8981\u8fd4\u56de\u6765\u5b8c\u6210\u8fd9\u4e9b\u4e60\u9898\u3002\n\n\u50cf\u4e4b\u524d\u4e00\u6837\uff0c\u4f60\u5e94\u8be5\u6267\u884c\u6240\u6709\u9632\u5fa1\u6027\u7f16\u7a0b\u68c0\u67e5\uff0c\u5e76\u4e14\u4e3a\u4e0d\u5e94\u53d1\u751f\u7684\u60c5\u51b5\u6dfb\u52a0assert\u3002\u4f8b\u5982\uff0c\u4f60\u4e0d\u5e94\u8be5\u5728\u9012\u5f52\u51fd\u6570\u4e2d\u83b7\u53d6\u5230NULL\uff0c\u4e3a\u6b64\u6dfb\u52a0\u65ad\u8a00\u3002\n\u904d\u5386\u51fd\u6570\u6309\u7167\u5de6\u5b50\u6811\u3001\u53f3\u5b50\u6811\u548c\u5f53\u524d\u8282\u70b9\u7684\u987a\u7ec4\u8fdb\u884c\u904d\u5386\u3002\u4f60\u53ef\u4ee5\u521b\u5efa\u76f8\u53cd\u987a\u5e8f\u7684\u904d\u5386\u51fd\u6570\u3002\n\u6bcf\u4e2a\u8282\u70b9\u4e0a\u90fd\u4f1a\u6267\u884c\u5b8c\u6574\u7684\u5b57\u7b26\u4e32\u6bd4\u8f83\uff0c\u4f46\u662f\u6211\u53ef\u4ee5\u4f7f\u7528Hashmap\u7684\u54c8\u5e0c\u51fd\u6570\u6765\u63d0\u5347\u901f\u5ea6\u3002\u6211\u53ef\u4ee5\u8ba1\u7b97\u952e\u7684\u54c8\u5e0c\u503c\uff0c\u5728BSTreeNode\u4e2d\u50a8\u5b58\u5b83\u3002\u4e4b\u540e\u5728\u6bcf\u4e2a\u521b\u5efa\u7684\u51fd\u6570\u4e2d\uff0c\u6211\u53ef\u4ee5\u5b9e\u73b0\u8ba1\u7b97\u51fa\u952e\u7684\u54c8\u5e0c\u503c\uff0c\u7136\u540e\u5728\u9012\u5f52\u4e2d\u5411\u4e0b\u4f20\u9012\u3002\u6211\u53ef\u4ee5\u4f7f\u7528\u54c8\u5e0c\u6765\u5f88\u5feb\u5730\u6bd4\u8f83\u6bcf\u4e2a\u8282\u70b9\uff0c\u5c31\u50cfHashmap\u90a3\u6837\u3002\n\n\u9644\u52a0\u9898\n\u540c\u6837\uff0c\u73b0\u5728\u5148\u4e0d\u8981\u5b8c\u6210\u5b83\u4eec\uff0c\u76f4\u5230\u5b8c\u6210\u7ec3\u4e6041\uff0c\u90a3\u65f6\u4f60\u5c31\u53ef\u4ee5\u4f7f\u7528Valgrind\u7684\u6027\u80fd\u8c03\u4f18\u6280\u5de7\u6765\u5b8c\u6210\u5b83\u4eec\u4e86\u3002\n\n\u6709\u4e00\u79cd\u4e0d\u4f7f\u7528\u9012\u5f52\u7684\u66ff\u4ee3\u7684\u65b9\u6cd5\uff0c\u4e5f\u53ef\u4ee5\u64cd\u4f5c\u8fd9\u4e2a\u6570\u636e\u7ed3\u6784\u3002\u7ef4\u57fa\u767e\u79d1\u4e0a\u4ecb\u7ecd\u4e86\u4e0d\u4f7f\u7528\u9012\u5f52\u6765\u5b8c\u6210\u76f8\u540c\u4e8b\u60c5\u7684\u66ff\u4ee3\u65b9\u6cd5\u3002\u8fd9\u6837\u505a\u4f1a\u66f4\u597d\u8fd8\u662f\u66f4\u7cdf\uff1f\n\u67e5\u8be2\u4f60\u80fd\u627e\u5230\u7684\u6240\u6709\u4e0d\u540c\u7684\u6811\u7684\u76f8\u5173\u8d44\u6599\u3002\u6bd4\u5982AVL\u6811\u3001\u7ea2\u9ed1\u6811\u3001\u4ee5\u53ca\u4e00\u4e9b\u975e\u6811\u5f62\u7ed3\u6784\u4f8b\u5982\u8df3\u8f6c\u8868\u3002\n","categories":"\u7ec3\u4e6015","tags":["\u4e8c\u53c9\u6811","\u7ed3\u6784","\u7b97\u6cd5"]},{"title":"\u5c06 Cachegrind \u548c Callgrind \u7528\u4e8e\u6027\u80fd\u8c03\u4f18","url":"https:\/\/naka507.github.io\/posts\/35162CDAACDA8825.html","content":"\u5c06 Cachegrind \u548c Callgrind \u7528\u4e8e\u6027\u80fd\u8c03\u4f18\n\u8fd9\u4e2a\u7ec3\u4e60\u4e2d\uff0c\u6211\u6253\u7b97\u4e0a\u4e00\u8282\u901f\u6210\u8bfe\uff0c\u5185\u5bb9\u662f\u4f7f\u7528Valgrind\u7684\u4e24\u4e2a\u5de5\u5177callgrind\u548ccachegrind\u3002\u8fd9\u4e24\u4e2a\u5de5\u5177\u4f1a\u5206\u6790\u4f60\u7a0b\u5e8f\u7684\u6267\u884c\uff0c\u5e76\u4e14\u544a\u8bc9\u4f60\u54ea\u4e00\u90e8\u5206\u8fd0\u884c\u7f13\u6162\u3002\u8fd9\u4e9b\u7ed3\u679c\u975e\u5e38\u7cbe\u786e\uff0c\u56e0\u4e3aValgrind\u7684\u5de5\u4f5c\u65b9\u5f0f\u6709\u52a9\u4e8e\u4f60\u89e3\u51b3\u4e00\u4e9b\u95ee\u9898\uff0c\u6bd4\u5982\u6267\u884c\u8fc7\u591a\u7684\u4ee3\u7801\u884c\uff0c\u70ed\u70b9\uff0c\u5185\u5bb9\u8bbf\u95ee\u95ee\u9898\uff0c\u751a\u81f3\u662fCPU\u7684\u7f13\u5b58\u672a\u547d\u4e2d\u3002\n\u4e3a\u4e86\u505a\u8fd9\u4e2a\u7ec3\u4e60\uff0c\u6211\u6253\u7b97\u4f7f\u7528bstree_tests\u5355\u5143\u6d4b\u8bd5\uff0c\u4f60\u4e4b\u524d\u7528\u4e8e\u5bfb\u627e\u80fd\u63d0\u5347\u7b97\u6cd5\u7684\u5730\u65b9\u3002\u4f60\u9700\u8981\u786e\u4fdd\u4f60\u8fd9\u4e9b\u7a0b\u5e8f\u7684\u7248\u672c\u6ca1\u6709\u4efb\u4f55valgrind\u9519\u8bef\uff0c\u5e76\u4e14\u548c\u6211\u7684\u4ee3\u7801\u975e\u5e38\u76f8\u4f3c\uff0c\u56e0\u4e3a\u6211\u4f1a\u4f7f\u7528\u6211\u7684\u4ee3\u7801\u7684\u8f6c\u50a8\u6765\u8c08\u8bbacachegrind\u548ccallgrind\u5982\u4f55\u5de5\u4f5c\u3002\n\u8fd0\u884c Callgrind\n\u4e3a\u4e86\u8fd0\u884cCallgrind\uff0c\u4f60\u9700\u8981\u5411valgrind\u4f20\u5165--tool=callgrind\u9009\u9879\uff0c\u4e4b\u540e\u5b83\u4f1a\u4ea7\u751fcallgrind.out.PID\u6587\u4ef6\uff08\u5176\u4e2dPID\u4e3a\u6240\u8fd0\u884c\u7a0b\u5e8f\u7684\u8fdb\u7a0bPID\uff09\u3002\u4e00\u65e6\u4f60\u8fd9\u6837\u8fd0\u884c\u4e86\uff0c\u4f60\u5c31\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u53eb\u505acallgrind_annotate\u7684\u5de5\u5177\u5206\u6790callgrind.out\u6587\u4ef6\uff0c\u5b83\u4f1a\u544a\u8bc9\u4f60\u54ea\u4e2a\u51fd\u6570\u8fd0\u884c\u4e2d\u4f7f\u7528\u4e86\u6700\u591a\u7684\u6307\u4ee4\u3002\u4e0b\u9762\u662f\u4e2a\u4f8b\u5b50\uff0c\u6211\u5728bstree_tests\u4e0a\u8fd0\u884c\u4e86callgrind\uff0c\u4e4b\u540e\u5f97\u5230\u4e86\u8fd9\u4e2a\u4fe1\u606f\uff1a\n$ valgrind --dsymutil=yes --tool=callgrind tests\/bstree_tests\n...\n$ callgrind_annotate callgrind.out.1232\n--------------------------------------------------------------------------------\nProfile data file 'callgrind.out.1232' (creator: callgrind-3.7.0.SVN)\n--------------------------------------------------------------------------------\nI1 cache:\nD1 cache:\nLL cache:\nTimerange: Basic block 0 - 1098689\nTrigger: Program termination\nProfiled target:  tests\/bstree_tests (PID 1232, part 1)\nEvents recorded:  Ir\nEvents shown:     Ir\nEvent sort order: Ir\nThresholds:       99\nInclude dirs:     \nUser annotated:   \nAuto-annotation:  off\n\n--------------------------------------------------------------------------------\n       Ir\n--------------------------------------------------------------------------------\n4,605,808  PROGRAM TOTALS\n\n--------------------------------------------------------------------------------\n       Ir  file:function\n--------------------------------------------------------------------------------\n  670,486  src\/lcthw\/bstrlib.c:bstrcmp [tests\/bstree_tests]\n  194,377  src\/lcthw\/bstree.c:BSTree_get [tests\/bstree_tests]\n   65,580  src\/lcthw\/bstree.c:default_compare [tests\/bstree_tests]\n   16,338  src\/lcthw\/bstree.c:BSTree_delete [tests\/bstree_tests]\n   13,000  src\/lcthw\/bstrlib.c:bformat [tests\/bstree_tests]\n   11,000  src\/lcthw\/bstrlib.c:bfromcstralloc [tests\/bstree_tests]\n    7,774  src\/lcthw\/bstree.c:BSTree_set [tests\/bstree_tests]\n    5,800  src\/lcthw\/bstrlib.c:bdestroy [tests\/bstree_tests]\n    2,323  src\/lcthw\/bstree.c:BSTreeNode_create [tests\/bstree_tests]\n    1,183  \/private\/tmp\/pkg-build\/coregrind\/\/vg_preloaded.c:vg_cleanup_env [\/usr\/local\/lib\/valgrind\/vgpreload_core-amd64-darwin.so]\n\n$\n\u6211\u5df2\u7ecf\u79fb\u9664\u4e86\u5355\u5143\u6d4b\u8bd5\u548cvalgrind\u8f93\u51fa\uff0c\u56e0\u4e3a\u5b83\u4eec\u5bf9\u8fd9\u4e2a\u7ec3\u4e60\u6ca1\u6709\u7528\u3002\u4f60\u5e94\u8be5\u770b\u5230\u4e86callgrind_anotate\u8f93\u51fa\uff0c\u5b83\u5411\u4f60\u5c55\u793a\u4e86\u6bcf\u4e2a\u51fd\u6570\u6240\u8fd0\u884c\u7684\u6307\u4ee4\u6570\u91cf\uff08valgrind\u4e2d\u53eb\u505aIr\uff09\uff0c\u7531\u9ad8\u5230\u4f4e\u6392\u5e8f\u3002\u4f60\u901a\u5e38\u53ef\u4ee5\u5ffd\u7565\u5934\u6587\u4ef6\u7684\u6570\u636e\uff0c\u76f4\u63a5\u8df3\u5230\u51fd\u6570\u5217\u8868\u3002\n\n\u6ce8\n\n\n\u5982\u679c\u4f60\u83b7\u53d6\u5230\u4e00\u5806\u201c???:Image\u201d\u7684\u884c\uff0c\u5e76\u4e14\u5b83\u4eec\u4e0d\u662f\u4f60\u7a0b\u5e8f\u4e2d\u7684\u4e1c\u897f\uff0c\u90a3\u4e48\u4f60\u8bfb\u5230\u7684\u662fOS\u7684\u5783\u573e\u3002\u53ea\u9700\u8981\u5728\u672b\u5c3e\u6dfb\u52a0| grep -v \"???\"\u6765\u8fc7\u6ee4\u6389\u5b83\u4eec\u3002\n\n\u6211\u73b0\u5728\u53ef\u4ee5\u5bf9\u8fd9\u4e2a\u8f93\u51fa\u505a\u4e2a\u7b80\u77ed\u7684\u5206\u89e3\uff0c\u6765\u627e\u51fa\u4e0b\u4e00\u6b65\u89c2\u5bdf\u4ec0\u4e48\uff1a\n\n\u6bcf\u4e00\u884c\u90fd\u5217\u51fa\u4e86Ir\u5e8f\u53f7\u548c\u6267\u884c\u5b83\u4eec\u7684file:function\u3002Ir\u662f\u6307\u4ee4\u6570\u91cf\uff0c\u5e76\u4e14\u5982\u679c\u5b83\u8d8a\u5c11\u5c31\u8d8a\u5feb\u3002\u8fd9\u91cc\u6709\u4e9b\u590d\u6742\uff0c\u4f46\u662f\u9996\u5148\u8981\u7740\u773c\u4e8eIr\u3002\n\u89e3\u51b3\u8fd9\u4e2a\u7a0b\u5e8f\u7684\u65b9\u5f0f\u662f\u89c2\u5bdf\u6700\u4e0a\u9762\u7684\u51fd\u6570\uff0c\u4e4b\u540e\u770b\u770b\u4f60\u9996\u5148\u53ef\u4ee5\u6539\u8fdb\u54ea\u4e00\u4e2a\u3002\u8fd9\u91cc\uff0c\u6211\u53ef\u4ee5\u6539\u8fdbbstrcmp\u6216\u8005BStree_get\u3002\u53ef\u80fd\u4ee5BStree_get\u5f00\u59cb\u66f4\u5bb9\u6613\u4e9b\u3002\n\u8fd9\u4e9b\u51fd\u6570\u7684\u4e00\u90e8\u5206\u7531\u5355\u5143\u6d4b\u8bd5\u8c03\u7528\uff0c\u6240\u4ee5\u6211\u53ef\u4ee5\u5ffd\u7565\u5b83\u4eec\u3002\u7c7b\u4f3cbformat\uff0cbfromcstralloc\u548c bdestroy\u5c31\u662f\u8fd9\u6837\u7684\u51fd\u6570\u3002\n\u6211\u4e5f\u53ef\u4ee5\u627e\u5230\u6211\u53ef\u4ee5\u7b80\u5355\u5730\u907f\u514d\u8c03\u7528\u7684\u51fd\u6570\u3002\u4f8b\u5982\uff0c\u6216\u8bb8\u6211\u53ef\u4ee5\u5047\u8bbeBSTree\u4ec5\u4ec5\u5904\u7406bstring\u952e\uff0c\u4e4b\u540e\u6211\u53ef\u4ee5\u4e0d\u4f7f\u7528\u56de\u8c03\u7cfb\u7edf\uff0c\u5e76\u4e14\u5b8c\u5168\u79fb\u9664default_compare\u3002\n\n\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u53ea\u77e5\u9053\u6211\u6253\u7b97\u6539\u8fdbBSTree_get\uff0c\u5e76\u4e14\u4e0d\u662f\u56e0\u4e3aBSTree_get\u6267\u884c\u6162\u3002\u8fd9\u662f\u5206\u6790\u7684\u7b2c\u4e8c\u9636\u6bb5\u3002\nCallgrind \u6ce8\u89e3\u6e90\u6587\u4ef6\n\u4e0b\u4e00\u6b65\u6211\u4f7f\u7528callgrind_annotate\u8f93\u51fabstree.c\u6587\u4ef6\uff0c\u5e76\u4e14\u4f7f\u7528\u6240\u5e26\u6709\u7684Ir\u5bf9\u6bcf\u4e00\u884c\u505a\u6ce8\u89e3\u3002\u4f60\u53ef\u4ee5\u901a\u8fc7\u8fd0\u884c\u4e0b\u9762\u7684\u547d\u4ee4\u6765\u5f97\u5230\u6ce8\u89e3\u540e\u7684\u6e90\u6587\u4ef6\uff1a\n$ callgrind_annotate callgrind.out.1232 src\/lcthw\/bstree.c\n...\n\u4f60\u7684\u8f93\u51fa\u4f1a\u662f\u8fd9\u4e2a\u6e90\u6587\u4ef6\u7684\u4e00\u4e2a\u8f83\u5927\u7684\u8f6c\u50a8\uff0c\u4f46\u662f\u6211\u4f1a\u5c06\u5b83\u4eec\u526a\u5207\u6210\u5305\u542bBSTree_get\u548cBSTree_getnode\u7684\u90e8\u5206\uff1a\n--------------------------------------------------------------------------------\n-- User-annotated source: src\/lcthw\/bstree.c\n--------------------------------------------------------------------------------\n    Ir\n\n\n 2,453  static inline BSTreeNode *BSTree_getnode(BSTree *map, BSTreeNode *node, void *key)\n     .  {\n61,853      int cmp = map-&gt;compare(node-&gt;key, key);\n663,908  =&gt; src\/lcthw\/bstree.c:default_compare (14850x)\n     .\n14,850      if(cmp == 0) {\n     .          return node;\n24,794      } else if(cmp &lt; 0) {\n30,623          if(node-&gt;left) {\n     .              return BSTree_getnode(map, node-&gt;left, key);\n     .          } else {\n     .              return NULL;\n     .          }\n     .      } else {\n13,146          if(node-&gt;right) {\n     .              return BSTree_getnode(map, node-&gt;right, key);\n     .          } else {\n     .              return NULL;\n     .          }\n     .      }\n     .  }\n     .\n     .  void *BSTree_get(BSTree *map, void *key)\n 4,912  {\n24,557      if(map-&gt;root == NULL) {\n14,736          return NULL;\n     .      } else {\n     .          BSTreeNode *node = BSTree_getnode(map, map-&gt;root, key);\n 2,453          return node == NULL ? NULL : node-&gt;data;\n     .      }\n     .  }\n\u6bcf\u4e00\u884c\u90fd\u663e\u793a\u5b83\u7684Ir\uff08\u6307\u4ee4\uff09\u6570\u91cf\uff0c\u6216\u8005\u4e00\u4e2a\u70b9\uff08.\uff09\u6765\u8868\u793a\u5b83\u5e76\u4e0d\u91cd\u8981\u3002\u6211\u6240\u8981\u627e\u7684\u5c31\u662f\u4e00\u4e9b\u70ed\u70b9\uff0c\u6216\u8005\u5e26\u6709\u5de8\u5927\u6570\u503c\u7684Ir\u7684\u884c\uff0c\u5b83\u80fd\u591f\u88ab\u4f18\u5316\u6389\u3002\u8fd9\u91cc\uff0c\u7b2c\u5341\u884c\u7684\u8f93\u51fa\u8868\u660e\uff0cBSTree_getnode\u5f00\u9500\u975e\u5e38\u5927\u7684\u539f\u56e0\u662f\u5b83\u8c03\u7528\u4e86default_comapre\uff0c\u5b83\u53c8\u8c03\u7528\u4e86bstrcmp\u3002\u6211\u5df2\u7ecf\u77e5\u9053\u4e86bstrcmp\u662f\u6027\u80fd\u6700\u5dee\u7684\u51fd\u6570\uff0c\u6240\u4ee5\u5982\u679c\u6211\u60f3\u8981\u6539\u8fdbBSTree_getnode\u7684\u901f\u5ea6\uff0c\u6211\u5e94\u8be5\u9996\u5148\u89e3\u51b3\u6389\u5b83\u3002\n\u4e4b\u540e\u6211\u4ee5\u76f8\u540c\u65b9\u5f0f\u67e5\u770bbstrcmp\uff1a\n 98,370  int bstrcmp (const_bstring b0, const_bstring b1) {\n      .  int i, v, n;\n      .\n196,740     if (b0 == NULL || b1 == NULL || b0-&gt;data == NULL || b1-&gt;data == NULL ||\n 32,790             b0-&gt;slen &lt; 0 || b1-&gt;slen &lt; 0) return SHRT_MIN;\n 65,580     n = b0-&gt;slen; if (n &gt; b1-&gt;slen) n = b1-&gt;slen;\n 89,449     if (b0-&gt;slen == b1-&gt;slen &amp;&amp; (b0-&gt;data == b1-&gt;data || b0-&gt;slen == 0))\n      .             return BSTR_OK;\n      .\n 23,915     for (i = 0; i &lt; n; i ++) {\n163,642             v = ((char) b0-&gt;data[i]) - ((char) b1-&gt;data[i]);\n      .             if (v != 0) return v;\n      .             if (b0-&gt;data[i] == (unsigned char) '\\0') return BSTR_OK;\n      .     }\n      .\n      .     if (b0-&gt;slen &gt; n) return 1;\n      .     if (b1-&gt;slen &gt; n) return -1;\n      .     return BSTR_OK;\n      .  }\n\u8f93\u51fa\u4e2d\u8ba9\u6211\u9884\u6599\u4e4b\u5916\u7684\u4e8b\u60c5\u5c31\u662fbstrcmp\u6700\u7cdf\u7cd5\u7684\u4e00\u884c\u5e76\u4e0d\u662f\u6211\u60f3\u8c61\u4e2d\u7684\u5b57\u7b26\u6bd4\u8f83\u3002\u5bf9\u4e8e\u5185\u5b58\u8bbf\u95ee\uff0c\u9876\u90e8\u7684\u9632\u5fa1\u6027if\u8bed\u53e5\u5c06\u6240\u6709\u53ef\u80fd\u7684\u65e0\u6548\u53d8\u91cf\u90fd\u68c0\u67e5\u4e86\u4e00\u904d\u3002\u4e0e\u7b2c\u5341\u4e03\u884c\u6bd4\u8f83\u5b57\u7b26\u7684\u8bed\u53e5\u76f8\u6bd4\uff0c\u8fd9\u4e2aif\u8bed\u53e5\u8fdb\u884c\u4e86\u591a\u4e8e\u4e24\u500d\u7684\u5185\u5b58\u8bbf\u95ee\u3002\u5982\u679c\u6211\u8981\u4f18\u5316bstcmp\uff0c\u6211\u4f1a\u5b8c\u5168\u628a\u5b83\u53bb\u6389\uff0c\u6216\u8005\u5728\u5176\u5b83\u4e00\u4e9b\u5730\u65b9\u6765\u6267\u884c\u5b83\u3002\n\u53e6\u4e00\u79cd\u9009\u62e9\u662f\u5c06\u8fd9\u4e2a\u68c0\u67e5\u6539\u4e3aassert\uff0c\u5b83\u53ea\u5728\u5f00\u53d1\u65f6\u7684\u8fd0\u884c\u4e2d\u5b58\u5728\uff0c\u4e4b\u540e\u5728\u53d1\u5e03\u65f6\u628a\u5b83\u53bb\u6389\u3002\u6211\u6ca1\u6709\u8db3\u591f\u7684\u8bc1\u660e\u6765\u8868\u660e\u8fd9\u884c\u4ee3\u7801\u4e0d\u9002\u4e8e\u8fd9\u4e2a\u6570\u636e\u7ed3\u6784\uff0c\u6240\u4ee5\u6211\u53ef\u4ee5\u8bc1\u660e\u79fb\u9664\u5b83\u662f\u53ef\u884c\u7684\u3002\n\u7136\u800c\uff0c\u6211\u5e76\u4e0d\u60f3\u5f31\u5316\u8fd9\u4e2a\u51fd\u6570\u7684\u9632\u5fa1\u6027\uff0c\u6765\u5f97\u5230\u4e00\u4e9b\u6027\u80fd\u3002\u5728\u771f\u5b9e\u7684\u6027\u80fd\u4f18\u5316\u73af\u5883\uff0c\u6211\u4f1a\u7b80\u5355\u5730\u628a\u5b83\u653e\u5230\u5217\u8868\u4e2d\uff0c\u4e4b\u540e\u6316\u6398\u7a0b\u5e8f\u4e2d\u80fd\u5f97\u5230\u7684\u5176\u5b83\u6536\u76ca\u3002\n\u8c03\u4f18\u4e4b\u9053\n\n\u6211\u4eec\u5e94\u8be5\u5ffd\u7565\u5fae\u5c0f\u7684\u6548\u7387\uff0c\u5bf9\u4e8e97%\u7684\u60c5\u51b5\uff1a\u8fc7\u65e9\u4f18\u5316\u662f\u4e07\u6076\u4e4b\u6e90\u3002\n\n\n-- \u9ad8\u5fb7\u7eb3\n\n\u5728\u6211\u770b\u6765\uff0c\u8fd9\u4e2a\u5f15\u8ff0\u4f3c\u4e4e\u5ffd\u7565\u4e86\u4e00\u4e2a\u5173\u4e8e\u6027\u80fd\u8c03\u4f18\u7684\u91cd\u70b9\u3002\u5728\u9ad8\u5fb7\u7eb3\u7684\u8bdd\u4e2d\uff0c\u5f53\u4f60\u505a\u6027\u80fd\u8c03\u4f18\u65f6\uff0c\u5982\u679c\u4f60\u8fc7\u65e9\u53bb\u505a\u5b83\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u5404\u79cd\u95ee\u9898\u3002\u6839\u636e\u4ed6\u7684\u8bdd\uff0c\u4f18\u5316\u5e94\u8be5\u6267\u884c\u4e8e\u201c\u7a0d\u665a\u7684\u67d0\u4e2a\u65f6\u95f4\u201d\uff0c\u6216\u8005\u8fd9\u53ea\u662f\u6211\u7684\u731c\u6d4b\u3002\u8c01\u77e5\u9053\u5462\u3002\n\u6211\u6253\u7b97\u6f84\u6e05\u8fd9\u4e2a\u5f15\u8ff0\u5e76\u4e0d\u662f\u5b8c\u5168\u9519\u8bef\uff0c\u800c\u662f\u5ffd\u7565\u4e86\u67d0\u4e9b\u4e1c\u897f\uff0c\u5e76\u4e14\u6211\u6253\u7b97\u7ed9\u51fa\u6211\u7684\u5f15\u8ff0\u3002\u4f60\u53ef\u4ee5\u5f15\u7528\u6211\u7684\u8fd9\u6bb5\u8bdd\uff1a\n\n\u4f7f\u7528\u8bc1\u636e\u6765\u5bfb\u627e\u6700\u5927\u7684\u4f18\u5316\u5e76\u82b1\u8d39\u6700\u5c11\u7684\u7cbe\u529b\u3002\n\n\n-- \u6cfd\u5fb7 A. \u8096\n\n\u4f60\u4ec0\u4e48\u65f6\u5019\u4f18\u5316\u5e76\u4e0d\u91cd\u8981\uff0c\u4f46\u662f\u4f60\u9700\u8981\u5f04\u6e05\u695a\u4f60\u7684\u4f18\u5316\u662f\u5426\u771f\u6b63\u80fd\u6539\u8fdb\u8f6f\u4ef6\uff0c\u4ee5\u53ca\u9700\u8981\u6295\u5165\u591a\u5c11\u7cbe\u529b\u6765\u5b9e\u73b0\u5b83\u3002\u901a\u8fc7\u8bc1\u636e\u4f60\u5c31\u53ef\u4ee5\u627e\u5230\u4ee3\u7801\u4e2d\u7684\u4f4d\u7f6e\uff0c\u7528\u4e00\u70b9\u70b9\u7cbe\u529b\u5c31\u80fd\u53d6\u5f97\u6700\u5927\u7684\u63d0\u5347\u3002\u901a\u5e38\u8fd9\u4e9b\u5730\u65b9\u90fd\u662f\u4e00\u4e9b\u611a\u8822\u7684\u51b3\u5b9a\uff0c\u5c31\u50cfbstrcmp\u8bd5\u56fe\u68c0\u67e5\u4efb\u4f55\u4e1c\u897f\u4e0d\u4e3aNULL\u4e00\u6837\u3002\n\u5728\u67d0\u4e2a\u7279\u5b9a\u65f6\u95f4\u70b9\u4e0a\uff0c\u4ee3\u7801\u4e2d\u9700\u8981\u8c03\u4f18\u7684\u5730\u65b9\u53ea\u5269\u4e0b\u6781\u5176\u5fae\u5c0f\u7684\u4f18\u5316\uff0c\u6bd4\u5982\u91cd\u65b0\u7ec4\u7ec7if\u8bed\u53e5\uff0c\u6216\u8005\u7c7b\u4f3c\u8fbe\u592b\u8bbe\u5907\u8fd9\u6837\u7684\u7279\u6b8a\u5faa\u73af\u3002\u8fd9\u65f6\u5019\uff0c\u4f60\u5e94\u8be5\u505c\u6b62\u4f18\u5316\uff0c\u56e0\u4e3a\u8fd9\u662f\u4e00\u4e2a\u597d\u673a\u4f1a\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u91cd\u65b0\u8bbe\u8ba1\u8f6f\u4ef6\u5e76\u4e14\u907f\u514d\u8fd9\u4e9b\u4e8b\u60c5\u6765\u83b7\u5f97\u66f4\u591a\u6536\u76ca\u3002\n\u8fd9\u662f\u4e00\u4e9b\u53ea\u60f3\u505a\u4f18\u5316\u7684\u7a0b\u5e8f\u5458\u6ca1\u6709\u770b\u5230\u7684\u4e8b\u60c5\u3002\u8bb8\u591a\u65f6\u5019\uff0c\u628a\u4e00\u4ef6\u4e8b\u60c5\u505a\u5feb\u7684\u6700\u597d\u65b9\u6cd5\u5c31\u662f\u5bfb\u627e\u907f\u514d\u5b83\u4eec\u7684\u529e\u6cd5\u3002\u5728\u4e0a\u9762\u7684\u5206\u6790\u4e2d\uff0c\u6211\u4e0d\u6253\u7b97\u4f18\u5316bstrcmp\uff0c\u6211\u4f1a\u5bfb\u627e\u4e00\u4e2a\u4e0d\u4f7f\u7528\u5b83\u7684\u65b9\u6cd5\u3002\u4e5f\u8bb8\u6211\u53ef\u4ee5\u4f7f\u7528\u4e00\u79cd\u54c8\u5e0c\u7b97\u6cd5\u6765\u6267\u884c\u53ef\u6392\u5e8f\u7684\u54c8\u5e0c\u8ba1\u7b97\u800c\u4e0d\u662f\u59cb\u7ec8\u4f7f\u7528bstrcmp\u3002\u4e5f\u8bb8\u6211\u53ef\u4ee5\u901a\u8fc7\u9996\u5148\u5c1d\u8bd5\u7b2c\u4e00\u4e2a\u5b57\u7b26\uff0c\u5982\u679c\u5b83\u4eec\u4e0d\u5339\u914d\u5c31\u6ca1\u5fc5\u8981\u8c03\u7528bstrcmp\u3002\n\u5982\u679c\u5728\u6b64\u4e4b\u540e\u4f60\u6839\u672c\u4e0d\u80fd\u91cd\u65b0\u8bbe\u8ba1\uff0c\u90a3\u4e48\u5c31\u5f00\u59cb\u5bfb\u627e\u5fae\u5c0f\u7684\u4f18\u5316\uff0c\u4f46\u662f\u8981\u59cb\u7ec8\u786e\u4fdd\u5b83\u4eec\u80fd\u591f\u63d0\u5347\u901f\u5ea6\u3002\u8981\u8bb0\u4f4f\u76ee\u6807\u662f\u4f7f\u7528\u6700\u5c11\u7684\u7cbe\u529b\u5c3d\u53ef\u80fd\u5f97\u5230\u6700\u5927\u7684\u6548\u679c\u3002\n\u4f7f\u7528 KCachegrind\n\u8fd9\u4e2a\u7ec3\u4e60\u6700\u540e\u4e00\u90e8\u5206\u5c31\u662f\u5411\u4f60\u4ecb\u7ecd\u4e00\u4e2a\u53eb\u505aKCachegrind\u7684\u795e\u5947\u7684GUI\u5de5\u5177\uff0c\u7528\u4e8e\u5206\u6790callgrind \u548c cachegrind\u7684\u8f93\u51fa\u3002\u6211\u4f7f\u7528Linux\u6216BSD\u7535\u8111\u4e0a\u5de5\u4f5c\u65f6\u51e0\u4e4e\u90fd\u4f1a\u4f7f\u7528\u5b83\uff0c\u5e76\u4e14\u6211\u5b9e\u9645\u4e0a\u4e3a\u4e86\u4f7f\u7528KCachegrind\u800c\u5207\u6362\u5230Linux\u6765\u7f16\u5199\u4ee3\u7801\u3002\n\u6559\u4f1a\u4f60\u5982\u4f55\u4f7f\u7528\u662f\u8fd9\u4e2a\u7ec3\u4e60\u4e4b\u5916\u7684\u5185\u5bb9\uff0c\u4f60\u9700\u8981\u5728\u8fd9\u4e2a\u7ec3\u4e60\u4e4b\u540e\u81ea\u5df1\u5b66\u4e60\u5982\u4f55\u7528\u5b83\u3002\u8f93\u51fa\u51e0\u4e4e\u662f\u76f8\u540c\u7684\uff0c\u9664\u4e86KCachegrind\u53ef\u4ee5\u8ba9\u4f60\u505a\u8fd9\u4e9b\uff1a\n\n\u56fe\u5f62\u5316\u5730\u6d4f\u89c8\u6e90\u7801\u548c\u6267\u884c\u6b21\u6570\uff0c\u5e76\u4f7f\u7528\u5404\u79cd\u6392\u5e8f\u6765\u641c\u7d22\u53ef\u4f18\u5316\u7684\u4e1c\u897f\u3002\n\u5206\u6790\u4e0d\u540c\u7684\u56fe\u8868\uff0c\u6765\u53ef\u89c6\u5316\u5730\u89c2\u5bdf\u4ec0\u4e48\u5360\u636e\u4e86\u5927\u591a\u6570\u65f6\u95f4\uff0c\u4ee5\u53ca\u5b83\u8c03\u7528\u4e86\u4ec0\u4e48\u3002\n\u67e5\u770b\u771f\u5b9e\u7684\u6c47\u7f16\u673a\u5668\u7801\u8f93\u51fa\uff0c\u4f7f\u4f60\u80fd\u591f\u770b\u5230\u5b9e\u9645\u7684\u6307\u4ee4\uff0c\u7ed9\u4f60\u66f4\u591a\u7684\u7ebf\u7d22\u3002\n\u53ef\u89c6\u5316\u5730\u663e\u793a\u6e90\u7801\u4e2d\u7684\u5faa\u73af\u548c\u5206\u652f\u7684\u8df3\u8dc3\u65b9\u5f0f\uff0c\u4fbf\u4e8e\u4f60\u66f4\u5bb9\u6613\u5730\u627e\u5230\u4f18\u5316\u4ee3\u7801\u7684\u65b9\u6cd5\u3002\n\n\u4f60\u5e94\u8be5\u5728\u83b7\u53d6\u3001\u5b89\u88c5\u548c\u73a9\u8f6cKCachegrind\u4e0a\u82b1\u4e00\u4e9b\u65f6\u95f4\u3002\n\u9644\u52a0\u9898\n\n\u9605\u8bfb callgrind \u624b\u518c\u9875\u5e76\u4e14\u5c1d\u8bd5\u4e00\u4e9b\u9ad8\u7ea7\u9009\u9879\u3002\n\u9605\u8bfb cachegrind \u624b\u518c\u9875\u5e76\u4e14\u4e5f\u5c1d\u8bd5\u4e00\u4e9b\u9ad8\u7ea7\u9009\u9879\u3002\n\u5728\u6240\u6709\u5355\u5143\u6d4b\u8bd5\u4e0a\u4f7f\u7528callgrind \u548c cachegrind\uff0c\u770b\u770b\u4f60\u80fd\u5426\u627e\u5230\u53ef\u4f18\u5316\u7684\u5730\u65b9\u3002\u4f60\u627e\u5230\u4e00\u4e9b\u9884\u6599\u4e4b\u5916\u7684\u4e8b\u60c5\u4e86\u5417\uff1f\u5982\u679c\u6ca1\u6709\uff0c\u4f60\u53ef\u80fd\u89c2\u5bdf\u5730\u4e0d\u591f\u4ed4\u7ec6\u3002\n\u4f7f\u7528 KCachegrind \u5e76\u4e14\u89c2\u5bdf\u5b83\u548c\u6211\u8fd9\u91cc\u7684\u8f93\u51fa\u6709\u4ec0\u4e48\u4e0d\u540c\u3002\n\u73b0\u5728\u4f7f\u7528\u8fd9\u4e9b\u5de5\u5177\u6765\u5b8c\u6210\u7ec3\u4e6040\u7684\u9644\u52a0\u9898\u548c\u6539\u8fdb\u90e8\u5206\u3002\n","categories":"\u7ec3\u4e6016","tags":["Valgrind"]},{"title":"\u6808\u548c\u961f\u5217","url":"https:\/\/naka507.github.io\/posts\/288E5C87D0D80787.html","content":"\u6808\u548c\u961f\u5217\n\u5230\u73b0\u5728\u4e3a\u6b62\uff0c\u4f60\u5df2\u7ecf\u77e5\u9053\u4e86\u5927\u591a\u6570\u7528\u4e8e\u6784\u5efa\u5176\u5b83\u6570\u636e\u7ed3\u6784\u7684\u6570\u636e\u7ed3\u6784\u3002\u5982\u679c\u4f60\u62e5\u6709\u4e00\u4e9bList\u3001DArray\u3001Hashmap \u548c Tree\uff0c\u4f60\u5c31\u80fd\u7528\u4ed6\u4eec\u6784\u9020\u51fa\u5927\u591a\u6570\u5176\u5b83\u7684\u4efb\u4f55\u7ed3\u6784\u3002\u4f60\u78b0\u5230\u7684\u5176\u5b83\u4efb\u4f55\u7ed3\u6784\u8981\u4e48\u53ef\u4ee5\u7528\u5b83\u4eec\u5b9e\u73b0\uff0c\u8981\u4e48\u662f\u5b83\u4eec\u7684\u53d8\u4f53\u3002\u5982\u679c\u4e0d\u662f\u7684\u8bdd\uff0c\u5b83\u53ef\u80fd\u662f\u5916\u6765\u7684\u6570\u636e\u7ed3\u6784\uff0c\u4f60\u53ef\u80fd\u4e0d\u9700\u8981\u5b83\u3002\nStack\u548cQueue\u662f\u975e\u5e38\u7b80\u5355\u7684\u6570\u636e\u7ed3\u6784\uff0c\u5b83\u4eec\u662fList\u7684\u53d8\u4f53\u3002\u5b83\u4eec\u662fList\u7684\u5f31\u5316\u6216\u8005\u8f6c\u6362\u5f62\u5f0f\uff0c\u56e0\u4e3a\u4f60\u53ea\u9700\u8981\u5728List\u7684\u4e00\u7aef\u653e\u7f6e\u5143\u7d20\u3002\u5bf9\u4e8eStack\uff0c\u4f60\u53ea\u80fd\u80fd\u591f\u5728\u4e00\u6bb5\u538b\u5165\u548c\u5f39\u51fa\u5143\u7d20\u3002\u800c\u5bf9\u4e8eQueue\uff0c\u4f60\u53ea\u80fd\u591f\u5728\u5f00\u5934\u538b\u5165\u5143\u7d20\uff0c\u5e76\u5728\u672b\u5c3e\u5f39\u51fa\uff08\u6216\u8005\u53cd\u8fc7\u6765\uff09\u3002\n\u6211\u80fd\u591f\u53ea\u901a\u8fc7C\u9884\u5904\u7406\u5668\u548c\u4e24\u4e2a\u5934\u6587\u4ef6\u6765\u5b9e\u73b0\u8fd9\u4e24\u4e2a\u6570\u636e\u7ed3\u6784\u3002\u6211\u7684\u5934\u6587\u4ef6\u53ea\u670921\u884c\u7684\u957f\u5ea6\uff0c\u5e76\u4e14\u5b9e\u73b0\u4e86\u6240\u6709Stack\u548cQueue\u7684\u64cd\u4f5c\uff0c\u4e0d\u5e26\u6709\u4efb\u4f55\u795e\u5947\u7684\u5b9a\u4e49\u3002\n\u6211\u5c06\u4f1a\u5411\u4f60\u5c55\u793a\u5355\u5143\u6d4b\u8bd5\uff0c\u4f60\u9700\u8981\u5b9e\u73b0\u5934\u6587\u4ef6\u6765\u8ba9\u5b83\u4eec\u6b63\u5e38\u5de5\u4f5c\u3002\u4f60\u4e0d\u80fd\u521b\u5efastack.c \u6216 queue.c\u5b9e\u73b0\u6587\u4ef6\u6765\u901a\u8fc7\u6d4b\u8bd5\uff0c\u53ea\u80fd\u4f7f\u7528stack.h \u548c queue.h\u6765\u4f7f\u6d4b\u8bd5\u8fd0\u884c\u3002\n#include \"minunit.h\"\n#include &lt;lcthw\/stack.h&gt;\n#include &lt;assert.h&gt;\n\nstatic Stack *stack = NULL;\nchar *tests[] = {\"test1 data\", \"test2 data\", \"test3 data\"};\n#define NUM_TESTS 3\n\n\nchar *test_create()\n{\n    stack = Stack_create();\n    mu_assert(stack != NULL, \"Failed to create stack.\");\n\n    return NULL;\n}\n\nchar *test_destroy()\n{\n    mu_assert(stack != NULL, \"Failed to make stack #2\");\n    Stack_destroy(stack);\n\n    return NULL;\n}\n\nchar *test_push_pop()\n{\n    int i = 0;\n    for(i = 0; i &lt; NUM_TESTS; i++) {\n        Stack_push(stack, tests[i]);\n        mu_assert(Stack_peek(stack) == tests[i], \"Wrong next value.\");\n    }\n\n    mu_assert(Stack_count(stack) == NUM_TESTS, \"Wrong count on push.\");\n\n    STACK_FOREACH(stack, cur) {\n        debug(\"VAL: %s\", (char *)cur-&gt;value);\n    }\n\n    for(i = NUM_TESTS - 1; i &gt;= 0; i--) {\n        char *val = Stack_pop(stack);\n        mu_assert(val == tests[i], \"Wrong value on pop.\");\n    }\n\n    mu_assert(Stack_count(stack) == 0, \"Wrong count after pop.\");\n\n    return NULL;\n}\n\nchar *all_tests() {\n    mu_suite_start();\n\n    mu_run_test(test_create);\n    mu_run_test(test_push_pop);\n    mu_run_test(test_destroy);\n\n    return NULL;\n}\n\nRUN_TESTS(all_tests);\n\u4e4b\u540e\u662fqueue_tests.c\uff0c\u51e0\u4e4e\u4ee5\u76f8\u540c\u7684\u65b9\u5f0f\u6765\u4f7f\u7528Queue\uff1a\n#include \"minunit.h\"\n#include &lt;lcthw\/queue.h&gt;\n#include &lt;assert.h&gt;\n\nstatic Queue *queue = NULL;\nchar *tests[] = {\"test1 data\", \"test2 data\", \"test3 data\"};\n#define NUM_TESTS 3\n\n\nchar *test_create()\n{\n    queue = Queue_create();\n    mu_assert(queue != NULL, \"Failed to create queue.\");\n\n    return NULL;\n}\n\nchar *test_destroy()\n{\n    mu_assert(queue != NULL, \"Failed to make queue #2\");\n    Queue_destroy(queue);\n\n    return NULL;\n}\n\nchar *test_send_recv()\n{\n    int i = 0;\n    for(i = 0; i &lt; NUM_TESTS; i++) {\n        Queue_send(queue, tests[i]);\n        mu_assert(Queue_peek(queue) == tests[0], \"Wrong next value.\");\n    }\n\n    mu_assert(Queue_count(queue) == NUM_TESTS, \"Wrong count on send.\");\n\n    QUEUE_FOREACH(queue, cur) {\n        debug(\"VAL: %s\", (char *)cur-&gt;value);\n    }\n\n    for(i = 0; i &lt; NUM_TESTS; i++) {\n        char *val = Queue_recv(queue);\n        mu_assert(val == tests[i], \"Wrong value on recv.\");\n    }\n\n    mu_assert(Queue_count(queue) == 0, \"Wrong count after recv.\");\n\n    return NULL;\n}\n\nchar *all_tests() {\n    mu_suite_start();\n\n    mu_run_test(test_create);\n    mu_run_test(test_send_recv);\n    mu_run_test(test_destroy);\n\n    return NULL;\n}\n\nRUN_TESTS(all_tests);\n\u4f60\u5e94\u8be5\u5728\u4e0d\u4fee\u6539\u6d4b\u8bd5\u6587\u4ef6\u7684\u6761\u4ef6\u4e0b\uff0c\u4f7f\u5355\u5143\u6d4b\u8bd5\u80fd\u591f\u8fd0\u884c\uff0c\u5e76\u4e14\u5b83\u5e94\u8be5\u80fd\u591f\u901a\u8fc7valgrind\u800c\u6ca1\u6709\u4efb\u4f55\u5185\u5b58\u9519\u8bef\u3002\u4e0b\u9762\u662f\u5f53\u6211\u76f4\u63a5\u8fd0\u884cstack_tests\u65f6\u5b83\u7684\u6837\u5b50\uff1a\n$ .\/tests\/stack_tests\nDEBUG tests\/stack_tests.c:60: ----- RUNNING: .\/tests\/stack_tests\n----\nRUNNING: .\/tests\/stack_tests\nDEBUG tests\/stack_tests.c:53:\n----- test_create\nDEBUG tests\/stack_tests.c:54:\n----- test_push_pop\nDEBUG tests\/stack_tests.c:37: VAL: test3 data\nDEBUG tests\/stack_tests.c:37: VAL: test2 data\nDEBUG tests\/stack_tests.c:37: VAL: test1 data\nDEBUG tests\/stack_tests.c:55:\n----- test_destroy\nALL TESTS PASSED\nTests run: 3\n$\nqueue_test\u7684\u8f93\u51fa\u57fa\u672c\u4e00\u6837\uff0c\u6240\u4ee5\u6211\u5728\u8fd9\u91cc\u5c31\u4e0d\u5c55\u793a\u4e86\u3002\n\u5982\u4f55\u6539\u8fdb\n\u4f60\u53ef\u4ee5\u505a\u5230\u7684\u552f\u4e00\u771f\u6b63\u7684\u6539\u8fdb\uff0c\u5c31\u662f\u628a\u6240\u7528\u7684List\u6362\u6210DArray\u3002Queue\u6570\u636e\u7ed3\u6784\u96be\u4ee5\u7528DArray\u5b9e\u73b0\uff0c\u56e0\u4e3a\u5b83\u8981\u540c\u65f6\u5904\u7406\u4e24\u7aef\u7684\u8282\u70b9\u3002\n\u5b8c\u5168\u5728\u5934\u6587\u4ef6\u4e2d\u6765\u5b9e\u73b0\u5b83\u4eec\u7684\u7f3a\u70b9\uff0c\u662f\u4f60\u5e76\u4e0d\u80fd\u591f\u8f7b\u6613\u5730\u5bf9\u5b83\u505a\u6027\u80fd\u8c03\u4f18\u3002\u4f60\u9700\u8981\u4f7f\u7528\u8fd9\u79cd\u6280\u5de7\uff0c\u5efa\u7acb\u4e00\u79cd\u4ee5\u7279\u5b9a\u7684\u65b9\u5f0f\u4f7f\u7528List\u7684\u201c\u534f\u8bae\u201d\u3002\u505a\u6027\u80fd\u8c03\u4f18\u65f6\uff0c\u5982\u679c\u4f60\u4f18\u5316\u4e86List\uff0c\u8fd9\u4e24\u79cd\u6570\u636e\u7ed3\u6784\u90fd\u4f1a\u6709\u6240\u6539\u8fdb\u3002\n\u9644\u52a0\u9898\n\n\u4f7f\u7528DArray\u4ee3\u66ffList\u5b9e\u73b0Stack\uff0c\u5e76\u4fdd\u6301\u5355\u5143\u6d4b\u8bd5\u4e0d\u53d8\u3002\u8fd9\u610f\u5473\u7740\u4f60\u9700\u8981\u521b\u5efa\u4f60\u81ea\u5df1\u7684STACK_FOREACH\u3002\n","categories":"\u7ec3\u4e6017","tags":["\u7ed3\u6784"]},{"title":"\u4e00\u4e2a\u7b80\u5355\u7684\u7edf\u8ba1\u5f15\u64ce","url":"https:\/\/naka507.github.io\/posts\/EFA4890803FAB6F6.html","content":"\u4e00\u4e2a\u7b80\u5355\u7684\u7edf\u8ba1\u5f15\u64ce\n\u8fd9\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u7b97\u6cd5\uff0c\u6211\u5c06\u5176\u7528\u4e8e\u201c\u8054\u673a\u201d\uff08\u4e0d\u50a8\u5b58\u4efb\u4f55\u6837\u672c\uff09\u6536\u96c6\u6982\u8981\u7edf\u8ba1\u3002\u6211\u5728\u4efb\u4f55\u9700\u8981\u6267\u884c\u4e00\u4e9b\u7edf\u8ba1\uff0c\u6bd4\u5982\u5747\u503c\u3001\u6807\u51c6\u5dee\u548c\u6c42\u548c\u4e2d\u4f7f\u7528\u5b83\uff0c\u4f46\u662f\u5176\u4e2d\u6211\u5e76\u4e0d\u4f1a\u50a8\u5b58\u6240\u9700\u7684\u5168\u90e8\u6837\u672c\u3002\u6211\u53ea\u9700\u8981\u50a8\u5b58\u8ba1\u7b97\u51fa\u7684\u7ed3\u679c\uff0c\u5b83\u4eec\u4ec5\u4ec5\u542b\u67095\u4e2a\u6570\u503c\u3002\n\u8ba1\u7b97\u6807\u51c6\u5dee\u548c\u5747\u503c\n\u9996\u5148\u4f60\u9700\u8981\u4e00\u7cfb\u5217\u6837\u672c\u3002\u5b83\u53ef\u4ee5\u4f7f\u4efb\u4f55\u4e8b\u60c5\uff0c\u6bd4\u5982\u5b8c\u6210\u4e00\u4e2a\u4efb\u52a1\u6240\u9700\u7684\u65f6\u95f4\uff0c\u67d0\u4eba\u8bbf\u95ee\u67d0\u4e2a\u4e1c\u897f\u7684\u6b21\u6570\uff0c\u6216\u8005\u751a\u81f3\u662f\u7f51\u7ad9\u7684\u8bc4\u5206\u3002\u662f\u4ec0\u4e48\u5e76\u4e0d\u91cd\u8981\uff0c\u53ea\u8981\u4f60\u80fd\u5f97\u5230\u4e00\u4e9b\u6570\u5b57\uff0c\u5e76\u4e14\u4f60\u60f3\u8981\u77e5\u9053\u5b83\u4eec\u7684\u4e0b\u5217\u6982\u8981\u7edf\u8ba1\u503c\uff1a\nsum\n\u5bf9\u6240\u6709\u6570\u5b57\u6c42\u548c\u3002\nsumsq\uff08\u5e73\u65b9\u548c\uff09\n\u5bf9\u6240\u6709\u6570\u5b57\u6c42\u5e73\u65b9\u548c\u3002\ncount(n)\n\u6c42\u51fa\u6837\u672c\u6570\u91cf\u3002\nmin\n\u6c42\u51fa\u6837\u672c\u6700\u5c0f\u503c\u3002\nmax\n\u6c42\u51fa\u6837\u672c\u6700\u5927\u503c\u3002\nmean\n\u6c42\u51fa\u6837\u672c\u7684\u5747\u503c\u3002\u5b83\u7c7b\u4f3c\u4e8e\u4f46\u53c8\u4e0d\u662f\u4e2d\u4f4d\u6570\uff0c\u4f46\u53ef\u4f5c\u4e3a\u4e2d\u4f4d\u6570\u7684\u4f30\u8ba1\u3002\nstddev\n\u4f7f\u7528$sqrt(sumsq - (sum * mean) \/ (n - 1) )\u6765\u8ba1\u7b97\u6807\u51c6\u5dee\uff0c\u5176\u4e2dsqrt\u4e3amath.h\u5934\u6587\u4ef6\u4e2d\u7684\u5e73\u65b9\u6839\u3002\n\u6211\u5c06\u4f1a\u4f7f\u7528R\u6765\u9a8c\u8bc1\u8fd9\u4e9b\u8ba1\u7b97\uff0c\u56e0\u4e3a\u6211\u77e5\u9053R\u80fd\u591f\u8ba1\u7b97\u6b63\u786e\u3002\n&gt; s &lt;- runif(n=10, max=10)\n&gt; s\n [1] 6.1061334 9.6783204 1.2747090 8.2395131 0.3333483 6.9755066 1.0626275\n [8] 7.6587523 4.9382973 9.5788115\n&gt; summary(s)\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.\n 0.3333  2.1910  6.5410  5.5850  8.0940  9.6780\n&gt; sd(s)\n[1] 3.547868\n&gt; sum(s)\n[1] 55.84602\n&gt; sum(s * s)\n[1] 425.1641\n&gt; sum(s) * mean(s)\n[1] 311.8778\n&gt; sum(s * s) - sum(s) * mean(s)\n[1] 113.2863\n&gt; (sum(s * s) - sum(s) * mean(s)) \/ (length(s) - 1)\n[1] 12.58737\n&gt; sqrt((sum(s * s) - sum(s) * mean(s)) \/ (length(s) - 1))\n[1] 3.547868\n&gt;\n\u4f60\u5e76\u4e0d\u9700\u8981\u61c2\u5f97R\uff0c\u53ea\u9700\u8981\u770b\u7740\u6211\u62c6\u5206\u4ee3\u7801\u6765\u89e3\u91ca\u5982\u4f55\u68c0\u67e5\u8fd9\u4e9b\u8fd0\u7b97\uff1a\nlines 1-4\n\u6211\u4f7f\u7528runit\u51fd\u6570\u6765\u83b7\u5f97\u201c\u968f\u673a\u5f62\u5f0f\u201d\u7684\u6570\u5b57\u5206\u5e03\uff0c\u4e4b\u540e\u5c06\u5b83\u4eec\u6253\u5370\u51fa\u6765\u3002\u6211\u4f1a\u5728\u63a5\u4e0b\u6765\u7684\u5355\u5143\u6d4b\u8bd5\u4e2d\u7528\u5230\u5b83\u3002\nlines 5-7\n\u8fd9\u4e2a\u5c31\u662f\u6982\u8981\uff0c\u4fbf\u4e8e\u4f60\u770b\u5230R\u5982\u4f55\u8ba1\u7b97\u5b83\u4eec\u3002\nlines 8-9\n\u8fd9\u662f\u4f7f\u7528sd\u51fd\u6570\u8ba1\u7b97\u7684stddev\u3002\nlines 10-11\n\u73b0\u5728\u6211\u5f00\u59cb\u624b\u52a8\u8fdb\u884c\u8fd9\u4e00\u8ba1\u7b97\uff0c\u9996\u5148\u8ba1\u7b97sum\u3002\nlines 12-13\nstddev\u516c\u5f0f\u4e2d\u7684\u4e0b\u4e00\u90e8\u5206\u662fsumsq\uff0c\u6211\u53ef\u4ee5\u901a\u8fc7sum(s * s)\u6765\u5f97\u5230\uff0c\u5b83\u544a\u8bc9R\u5c06\u6574\u4e2as\u5217\u8868\u4e58\u4ee5\u5176\u81ea\u8eab\uff0c\u4e4b\u540e\u8ba1\u7b97\u5b83\u4eec\u7684sum\u3002R\u7684\u53ef\u4ee5\u5728\u6574\u4e2a\u6570\u636e\u7ed3\u6784\u4e0a\u505a\u8fd0\u7b97\uff0c\u5c31\u50cf\u8fd9\u6837\u3002\nlines 14-15\n\u89c2\u5bdf\u90a3\u4e2a\u516c\u5f0f\uff0c\u6211\u4e4b\u540e\u9700\u8981sum\u4e58\u4e0amean\uff0c\u6240\u4ee5\u6211\u6267\u884c\u4e86sum(s) * mean(s)\u3002\nlines 16-17\n\u6211\u63a5\u7740\u5c06sumsq\u53c2\u4e0e\u8fd0\u7b97\uff0c\u5f97\u5230sum(s * s) - sum(s) * mean(s)\u3002\nlines 18-19\n\u8fd8\u9700\u8981\u9664\u4ee5n - 1\uff0c\u6240\u4ee5\u6211\u6267\u884c\u4e86(sum(s * s) - sum(s) * mean(s)) \/ (length(s) - 1)\u3002\nlines 20-21\n\u968f\u540e\uff0c\u6211\u4f7f\u7528sqrt\u7b97\u51fa\u5e73\u65b9\u6839\uff0c\u5e76\u5f97\u52303.547868\uff0c\u5b83\u7b26\u5408R\u901a\u8fc7sd\u7684\u8fd0\u7b97\u7ed3\u679c\u3002\n\u5b9e\u73b0\n\u8fd9\u5c31\u662f\u8ba1\u7b97stddev\u7684\u65b9\u6cd5\uff0c\u73b0\u5728\u6211\u53ef\u4ee5\u7f16\u5199\u4e00\u4e9b\u7b80\u5355\u7684\u4ee3\u7801\u6765\u5b9e\u73b0\u8fd9\u4e00\u8ba1\u7b97\u3002\n#ifndef lcthw_stats_h\n#define lctwh_stats_h\n\ntypedef struct Stats {\n    double sum;\n    double sumsq;\n    unsigned long n;\n    double min;\n    double max;\n} Stats;\n\nStats *Stats_recreate(double sum, double sumsq, unsigned long n, double min, double max);\n\nStats *Stats_create();\n\ndouble Stats_mean(Stats *st);\n\ndouble Stats_stddev(Stats *st);\n\nvoid Stats_sample(Stats *st, double s);\n\nvoid Stats_dump(Stats *st);\n\n#endif\n\u8fd9\u91cc\u4f60\u53ef\u4ee5\u770b\u5230\u6211\u5c06\u6240\u9700\u7684\u7edf\u8ba1\u91cf\u653e\u5165\u4e00\u4e2astruct\uff0c\u5e76\u4e14\u521b\u5efa\u4e86\u7528\u4e8e\u5904\u7406\u6837\u672c\u548c\u83b7\u5f97\u6570\u503c\u7684\u51fd\u6570\u3002\u5b9e\u73b0\u5b83\u53ea\u662f\u8f6c\u6362\u6570\u5b57\u7684\u4e00\u4e2a\u7ec3\u4e60\uff1a\n#include &lt;math.h&gt;\n#include &lt;lcthw\/stats.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;lcthw\/dbg.h&gt;\n\nStats *Stats_recreate(double sum, double sumsq, unsigned long n, double min, double max)\n{\n    Stats *st = malloc(sizeof(Stats));\n    check_mem(st);\n\n    st-&gt;sum = sum;\n    st-&gt;sumsq = sumsq;\n    st-&gt;n = n;\n    st-&gt;min = min;\n    st-&gt;max = max;\n\n    return st;\n\nerror:\n    return NULL;\n}\n\nStats *Stats_create()\n{\n    return Stats_recreate(0.0, 0.0, 0L, 0.0, 0.0);\n}\n\ndouble Stats_mean(Stats *st)\n{\n    return st-&gt;sum \/ st-&gt;n;\n}\n\ndouble Stats_stddev(Stats *st)\n{\n   return sqrt( (st-&gt;sumsq - ( st-&gt;sum * st-&gt;sum \/ st-&gt;n)) \/ (st-&gt;n - 1) );\n}\n\nvoid Stats_sample(Stats *st, double s)\n{\n    st-&gt;sum += s;\n    st-&gt;sumsq += s * s;\n\n    if(st-&gt;n == 0) {\n        st-&gt;min = s;\n        st-&gt;max = s;\n    } else {\n        if(st-&gt;min &gt; s) st-&gt;min = s;\n        if(st-&gt;max &lt; s) st-&gt;max = s;\n    }\n\n    st-&gt;n += 1;\n}\n\nvoid Stats_dump(Stats *st)\n{\n    fprintf(stderr, \"sum: %f, sumsq: %f, n: %ld, min: %f, max: %f, mean: %f, stddev: %f\",\n            st-&gt;sum, st-&gt;sumsq, st-&gt;n, st-&gt;min, st-&gt;max,\n            Stats_mean(st), Stats_stddev(st));\n}\n\u4e0b\u9762\u662fstats.c\u4e2d\u6bcf\u4e2a\u51fd\u6570\u7684\u4f5c\u7528\uff1a\nStats_recreate\n\u6211\u5e0c\u671b\u4ece\u4e00\u4e9b\u6570\u636e\u4e2d\u52a0\u8f7d\u8fd9\u4e9b\u6570\u636e\uff0c\u8fd9\u548c\u51fd\u6570\u8ba9\u6211\u91cd\u65b0\u521b\u5efaStats\u7ed3\u6784\u4f53\u3002\nStats_create\n\u53ea\u662f\u4ee5\u51680\u7684\u503c\u8c03\u7528Stats_recreate\u3002\nStats_mean\n\u4f7f\u7528sum\u548cn\u8ba1\u7b97\u5747\u503c\u3002\nStats_stddev\n\u5b9e\u73b0\u6211\u4e4b\u524d\u7684\u516c\u5f0f\uff0c\u552f\u4e00\u7684\u4e0d\u540c\u5c31\u662f\u6211\u4f7f\u7528t-&gt;sum \/ st-&gt;n\u6765\u8ba1\u7b97\u5747\u503c\uff0c\u800c\u4e0d\u662f\u8c03\u7528Stats_mean\u3002\nStats_sample\n\u5b83\u7528\u4e8e\u5728Stats\u7ed3\u6784\u4f53\u4e2d\u50a8\u5b58\u6570\u503c\u3002\u5f53\u4f60\u5411\u5b83\u63d0\u4f9b\u6570\u503c\u65f6\uff0c\u5b83\u770b\u5230n\u662f0\uff0c\u5e76\u4e14\u76f8\u5e94\u5730\u8bbe\u7f6emin\u548cmax\u3002\u4e4b\u540e\u7684\u6bcf\u6b21\u8c03\u7528\u90fd\u4f1a\u4f7fsum\u3001sumsq\u548cn\u589e\u52a0\uff0c\u5e76\u4e14\u8ba1\u7b97\u51fa\u8fd9\u4e00\u65b0\u7684\u6837\u672c\u7684min\u548cmax\u503c\u3002\nStats_dump\n\u7b80\u5355\u7684\u8c03\u8bd5\u51fd\u6570\uff0c\u7528\u4e8e\u8f6c\u50a8\u7edf\u8ba1\u91cf\uff0c\u4fbf\u4e8e\u4f60\u770b\u5230\u5b83\u4eec\u3002\n\u6211\u9700\u8981\u5e72\u7684\u6700\u540e\u4e00\u4ef6\u4e8b\uff0c\u5c31\u662f\u786e\u4fdd\u8fd9\u4e9b\u8fd0\u7b97\u6b63\u786e\u3002\u6211\u6253\u7b97\u4f7f\u7528\u6211\u7684\u6837\u672c\uff0c\u4ee5\u53ca\u6765\u81ea\u4e8eR\u4f1a\u8bdd\u4e2d\u7684\u8ba1\u7b97\u7ed3\u679c\u521b\u5efa\u5355\u5143\u6d4b\u8bd5\uff0c\u6765\u786e\u4fdd\u6211\u4f1a\u5f97\u5230\u6b63\u786e\u7684\u7ed3\u679c\u3002\n#include \"minunit.h\"\n#include &lt;lcthw\/stats.h&gt;\n#include &lt;math.h&gt;\n\nconst int NUM_SAMPLES = 10;\ndouble samples[] = {\n    6.1061334, 9.6783204, 1.2747090, 8.2395131, 0.3333483,\n    6.9755066, 1.0626275, 7.6587523, 4.9382973, 9.5788115\n};\n\nStats expect = {\n    .sumsq = 425.1641,\n    .sum = 55.84602,\n    .min = 0.333,\n    .max = 9.678,\n    .n = 10,\n};\ndouble expect_mean = 5.584602;\ndouble expect_stddev = 3.547868;\n\n#define EQ(X,Y,N) (round((X) * pow(10, N)) == round((Y) * pow(10, N)))\n\nchar *test_operations()\n{\n    int i = 0;\n    Stats *st = Stats_create();\n    mu_assert(st != NULL, \"Failed to create stats.\");\n\n    for(i = 0; i &lt; NUM_SAMPLES; i++) {\n        Stats_sample(st, samples[i]);\n    }\n\n    Stats_dump(st);\n\n    mu_assert(EQ(st-&gt;sumsq, expect.sumsq, 3), \"sumsq not valid\");\n    mu_assert(EQ(st-&gt;sum, expect.sum, 3), \"sum not valid\");\n    mu_assert(EQ(st-&gt;min, expect.min, 3), \"min not valid\");\n    mu_assert(EQ(st-&gt;max, expect.max, 3), \"max not valid\");\n    mu_assert(EQ(st-&gt;n, expect.n, 3), \"max not valid\");\n    mu_assert(EQ(expect_mean, Stats_mean(st), 3), \"mean not valid\");\n    mu_assert(EQ(expect_stddev, Stats_stddev(st), 3), \"stddev not valid\");\n\n    return NULL;\n}\n\nchar *test_recreate()\n{\n    Stats *st = Stats_recreate(expect.sum, expect.sumsq, expect.n, expect.min, expect.max);\n\n    mu_assert(st-&gt;sum == expect.sum, \"sum not equal\");\n    mu_assert(st-&gt;sumsq == expect.sumsq, \"sumsq not equal\");\n    mu_assert(st-&gt;n == expect.n, \"n not equal\");\n    mu_assert(st-&gt;min == expect.min, \"min not equal\");\n    mu_assert(st-&gt;max == expect.max, \"max not equal\");\n    mu_assert(EQ(expect_mean, Stats_mean(st), 3), \"mean not valid\");\n    mu_assert(EQ(expect_stddev, Stats_stddev(st), 3), \"stddev not valid\");\n\n    return NULL;\n}\n\nchar *all_tests()\n{\n    mu_suite_start();\n\n    mu_run_test(test_operations);\n    mu_run_test(test_recreate);\n\n    return NULL;\n}\n\nRUN_TESTS(all_tests);\n\u8fd9\u4e2a\u5355\u5143\u6d4b\u8bd5\u4e2d\u6ca1\u4ec0\u4e48\u65b0\u4e1c\u897f\uff0c\u9664\u4e86EQ\u5b8f\u3002\u6211\u6bd4\u8f83\u61d2\uff0c\u5e76\u4e14\u4e0d\u60f3\u67e5\u8be2\u6bd4\u8f83\u4e24\u4e2adouble\u503c\u7684\u6807\u51c6\u65b9\u6cd5\uff0c\u6240\u4ee5\u6211\u4f7f\u7528\u4e86\u8fd9\u4e2a\u5b8f\u3002double\u7684\u95ee\u9898\u662f\u7b49\u6027\u4e0d\u662f\u5b8c\u5168\u76f8\u7b49\uff0c\u56e0\u4e3a\u6211\u4f7f\u7528\u4e86\u4e24\u4e2a\u4e0d\u540c\u7684\u7cfb\u7edf\uff0c\u5e76\u5e26\u6709\u4e0d\u540c\u7684\u56db\u820d\u4e94\u5165\u7684\u4f4d\u6570\u3002\u89e3\u51b3\u65b9\u6848\u5c31\u662f\u5224\u65ad\u4e24\u4e2a\u6570\u201c\u4e58\u4ee510\u7684X\u6b21\u65b9\u662f\u5426\u76f8\u7b49\u201d\u3002\n\u6211\u4f7f\u7528EQ\u6765\u8ba1\u7b97\u6570\u5b57\u768410\u7684\u5e42\uff0c\u4e4b\u540e\u4f7f\u7528round\u51fd\u6570\u6765\u83b7\u5f97\u8bc1\u4e66\u3002\u8fd9\u662f\u4e2a\u7b80\u5355\u7684\u65b9\u6cd5\u6765\u56db\u820d\u4e94\u5165N\u4f4d\u5c0f\u6570\uff0c\u5e76\u4ee5\u6574\u6570\u6bd4\u8f83\u7ed3\u679c\u3002\u6211\u786e\u5b9a\u6709\u6570\u4ee5\u4ebf\u8ba1\u7684\u5176\u5b83\u65b9\u6cd5\u80fd\u505a\u76f8\u540c\u7684\u4e8b\u60c5\uff0c\u4f46\u662f\u73b0\u5728\u6211\u5c31\u7528\u8fd9\u79cd\u3002\n\u9884\u671f\u7ed3\u679c\u50a8\u5b58\u5728Stats struct\u4e2d\uff0c\u4e4b\u540e\u6211\u53ea\u662f\u786e\u4fdd\u6211\u5f97\u5230\u7684\u6570\u503c\u63a5\u8fd1R\u7ed9\u6211\u7684\u6570\u503c\u3002\n\u5982\u4f55\u4f7f\u7528\n\u4f60\u53ef\u4ee5\u4f7f\u7528\u6807\u51c6\u5dee\u548c\u5747\u503c\u6765\u51b3\u5b9a\u4e00\u4e2a\u65b0\u7684\u6837\u672c\u662f\u5426\u662f\u201c\u6709\u8da3\u201d\u7684\uff0c\u6216\u8005\u4f60\u53ef\u4ee5\u4f7f\u7528\u5b83\u4eec\u8ba1\u7b97\u7edf\u8ba1\u91cf\u7684\u7edf\u8ba1\u91cf\u3002\u524d\u8005\u5bf9\u4e8e\u4eba\u4eec\u6765\u8bf4\u66f4\u5bb9\u6613\u7406\u89e3\uff0c\u6240\u4ee5\u6211\u7528\u767b\u5f55\u7684\u4f8b\u5b50\u6765\u505a\u4e2a\u7b80\u77ed\u7684\u89e3\u91ca\u3002\n\u5047\u8bbe\u4f60\u5728\u8ddf\u8e2a\u4eba\u4eec\u82b1\u8d39\u591a\u957f\u65f6\u95f4\u5728\u4e00\u53f0\u670d\u52a1\u5668\u4e0a\uff0c\u5e76\u4e14\u4f60\u6253\u7b97\u7528\u7edf\u8ba1\u6765\u5206\u6790\u5b83\u3002\u6bcf\u6b21\u6709\u4eba\u767b\u5f55\u8fdb\u6765\uff0c\u4f60\u90fd\u5bf9\u5b83\u4eec\u5728\u8fd9\u91cc\u7684\u65f6\u957f\u4fdd\u6301\u8ddf\u8e2a\uff0c\u4e4b\u540e\u8c03\u7528Stats_sample\u51fd\u6570\u3002\u6211\u4f1a\u5bfb\u627e\u505c\u7559\u201c\u8fc7\u957f\u201d\u65f6\u95f4\u7684\u4eba\uff0c\u4ee5\u53ca\u201c\u8fc7\u77ed\u201d\u7684\u4eba\u3002\n\u6bd4\u8d77\u8bbe\u5b9a\u7279\u6b8a\u7684\u7ea7\u522b\uff0c\u6211\u66f4\u503e\u5411\u4e8e\u5c06\u4e00\u4e2a\u4eba\u7684\u505c\u7559\u65f6\u95f4\u4e0emean (plus or minus) 2 * stddev\u8fd9\u4e2a\u8303\u56f4\u8fdb\u884c\u6bd4\u8f83\u3002\u6211\u8ba1\u7b97\u51famean\u548c2 * stddev\uff0c\u5e76\u4e14\u5982\u679c\u5b83\u4eec\u5728\u8fd9\u4e2a\u8303\u56f4\u4e4b\u5916\uff0c\u6211\u5c31\u8ba4\u4e3a\u662f\u201c\u6709\u8da3\u201d\u7684\u3002\u7531\u4e8e\u6211\u4f7f\u7528\u4e86\u8054\u673a\u7b97\u6cd5\u6765\u7ef4\u62a4\u8fd9\u4e9b\u7edf\u8ba1\u91cf\uff0c\u6240\u4ee5\u5b83\u975e\u5e38\u5feb\uff0c\u5e76\u4e14\u6211\u53ef\u4ee5\u4f7f\u8f6f\u4ef6\u6807\u8bb0\u5728\u8fd9\u4e2a\u8303\u56f4\u5916\u7684\u7528\u6237\u3002\n\u8fd9\u4e0d\u4ec5\u4ec5\u7528\u4e8e\u627e\u51fa\u884c\u4e3a\u5f02\u5e38\u7684\u7528\u6237\uff0c\u66f4\u6709\u52a9\u4e8e\u6807\u8bb0\u4e00\u4e9b\u6f5c\u5728\u7684\u95ee\u9898\uff0c\u4f60\u53ef\u4ee5\u67e5\u770b\u5b83\u4eec\u6765\u89c2\u5bdf\u53d1\u751f\u4e86\u4ec0\u4e48\u3002\u5b83\u57fa\u4e8e\u6240\u6709\u7528\u6237\u7684\u884c\u4e3a\u6765\u8ba1\u7b97\uff0c\u8fd9\u4e5f\u907f\u514d\u4e86\u4f60\u4efb\u610f\u6311\u51fa\u4e00\u4e2a\u6570\u503c\u800c\u5e76\u4e0d\u57fa\u4e8e\u5b9e\u9645\u60c5\u51b5\u7684\u95ee\u9898\u3002\n\u4f60\u53ef\u4ee5\u4ece\u4e2d\u5b66\u5230\u7684\u901a\u7528\u89c4\u5219\u662f\uff0cmean (plus or minus) 2 * stddev\u662f90%\u7684\u503c\u9884\u671f\u6240\u5c5e\u7684\u8303\u56f4\u9884\u6d4b\u503c\uff0c\u4efb\u4f55\u5728\u5b83\u4e4b\u5916\u7684\u503c\u90fd\u662f\u6709\u8da3\u7684\u3002\n\u7b2c\u4e8c\u79cd\u5229\u7528\u8fd9\u4e9b\u7edf\u8ba1\u91cf\u7684\u65b9\u5f0f\u5c31\u662f\u7ee7\u7eed\u5c06\u5176\u7528\u4e8e\u5176\u5b83\u7684Stats\u8ba1\u7b97\u3002\u57fa\u672c\u4e0a\u50cf\u901a\u5e38\u4e00\u6837\u4f7f\u7528Stats_sample\uff0c\u4f46\u662f\u4e4b\u540e\u5728min\u3001max\u3001n\u3001mean\u548cstddev\u4e0a\u6267\u884cStats_sample\u3002\u8fd9\u4f1a\u63d0\u4f9b\u4e8c\u7ea7\u7684\u5ea6\u91cf\uff0c\u5e76\u4e14\u8ba9\u4f60\u5bf9\u6bd4\u6837\u672c\u7684\u6837\u672c\u3002\n\u88ab\u641e\u6655\u4e86\u5417\uff1f\u6211\u4f1a\u4ee5\u4e0a\u9762\u7684\u4f8b\u5b50\u57fa\u7840\uff0c\u5e76\u4e14\u5047\u8bbe\u4f60\u62e5\u6709100\u53f0\u670d\u52a1\u5668\uff0c\u6bcf\u53f0\u90fd\u8fd0\u884c\u4e00\u4e2a\u5e94\u7528\u3002\u4f60\u5df2\u7ecf\u5728\u6bcf\u4e2a\u5e94\u7528\u670d\u52a1\u5668\u4e0a\u8ddf\u8e2a\u4e86\u7528\u6237\u7684\u767b\u5f55\u65f6\u957f\uff0c\u4f46\u662f\u4f60\u60f3\u8981\u6bd4\u8f83\u6240\u6709\u7684\u8fd9100\u548c\u5e94\u7528\uff0c\u5e76\u4e14\u6807\u8bb0\u5b83\u4eec\u5f53\u4e2d\u4efb\u4f55\u767b\u5f55\u65f6\u95f4\u8fc7\u957f\u7684\u7528\u6237\u3002\u6700\u7b80\u5355\u7684\u65b9\u5f0f\u5c31\u662f\u6bcf\u6b21\u6709\u4eba\u767b\u5f55\u8fdb\u6765\u65f6\uff0c\u8ba1\u7b97\u65b0\u7684\u767b\u5f55\u7edf\u8ba1\u91cf\uff0c\u4e4b\u540e\u5c06Stats structs\u7684\u5143\u7d20\u6dfb\u52a0\u5230\u7b2c\u4e8c\u4e2aStats\u4e2d\u3002\n\u4f60\u6700\u540e\u5e94\u8be5\u4f1a\u5f97\u5230\u4e00\u4e9b\u7edf\u8ba1\u91cf\uff0c\u5b83\u4eec\u53ef\u4ee5\u8fd9\u6837\u547d\u540d\uff1a\n\u5747\u503c\u7684\u5747\u503c\n\u8fd9\u662f\u4e00\u4e2aStats struct\uff0c\u5b83\u5411\u4f60\u63d0\u4f9b\u6240\u6709\u670d\u52a1\u5668\u7684\u5747\u503c\u7684mean\u548cstddev\u3002\u4f60\u53ef\u4ee5\u7528\u5168\u5c40\u89c6\u89d2\u6765\u89c2\u5bdf\u4efb\u4f55\u5728\u6b64\u4e4b\u5916\u7684\u7528\u6237\u6216\u670d\u52a1\u5668\u3002\n\u6807\u51c6\u5dee\u7684\u5747\u503c\n\u53e6\u4e00\u4e2aStats struct\uff0c\u8ba1\u7b97\u8fd9\u4e9b\u670d\u52a1\u5668\u7684\u5206\u5e03\u7684\u7edf\u8ba1\u91cf\u3002\u4f60\u4e4b\u540e\u53ef\u4ee5\u5206\u6790\u6bcf\u4e2a\u670d\u52a1\u5668\u5e76\u4e14\u89c2\u5bdf\u662f\u5426\u5b83\u4eec\u4e2d\u7684\u4efb\u4f55\u670d\u52a1\u5668\u5177\u6709\u5f02\u5e38\u5206\u6563\u7684\u5206\u5e03\uff0c\u901a\u8fc7\u5c06\u5b83\u4eec\u7684stddev\u548c\u8fd9\u4e2amean of stddevs\u7edf\u8ba1\u91cf\u8fdb\u884c\u5bf9\u6bd4\u3002\n\u4f60\u53ef\u4ee5\u8ba1\u7b97\u51fa\u5168\u90e8\u7edf\u8ba1\u91cf\uff0c\u4f46\u662f\u8fd9\u4e24\u4e2a\u662f\u6700\u6709\u7528\u7684\u3002\u5982\u679c\u4f60\u6253\u7b97\u76d1\u89c6\u670d\u52a1\u5668\u4e0a\u7684\u79fb\u9664\u767b\u5f55\u65f6\u95f4\uff0c\u4f60\u53ef\u4ee5\u8fd9\u6837\u505a\uff1a\n\n\u7528\u6237John\u767b\u5f55\u5e76\u767b\u51fa\u670d\u52a1\u5668A\u3002\u83b7\u53d6\u670d\u52a1\u5668A\u7684\u7edf\u8ba1\u91cf\uff0c\u5e76\u66f4\u65b0\u5b83\u4eec\u3002\n\u83b7\u53d6mean of means\u7edf\u8ba1\u91cf\uff0c\u8ba1\u7b97\u51faA\u7684\u5747\u503c\u5e76\u4e14\u5c06\u5176\u52a0\u5165\u6837\u672c\u3002\u6211\u53eb\u5b83m_of_m\u3002\n\u83b7\u53d6mean of stddev\u7edf\u8ba1\u91cf\uff0c\u5c06A\u7684\u6807\u51c6\u5dee\u6dfb\u52a0\u5230\u6837\u672c\u4e2d\u3002\u6211\u53eb\u5b83m_of_s\u3002\n\u5982\u679cA\u7684mean\u5728m_of_m.mean + 2 * m_of_m.stddev\u8303\u56f4\u5916\uff0c\u6807\u8bb0\u5b83\u53ef\u80fd\u5b58\u5728\u95ee\u9898\u3002\n\u5982\u679cA\u7684stddev\u5728m_of_s.mean + 2 * m_of_s.stddev\u8303\u56f4\u5916\uff0c\u6807\u8bb0\u5b83\u53ef\u80fd\u5b58\u5728\u884c\u4e3a\u5f02\u5e38\u3002\n\u6700\u540e\uff0c\u5982\u679cJohn\u7684\u767b\u5f55\u65f6\u957f\u5728A\u7684\u8303\u56f4\u4e4b\u5916\uff0c\u6216A\u7684m_of_m\u8303\u56f4\u4e4b\u5916\uff0c\u6807\u8bb0\u4e3a\u6709\u8da3\u7684\u3002\n\n\u901a\u8fc7\u8ba1\u7b97\u201c\u5747\u503c\u7684\u5747\u503c\u201d\uff0c\u6216\u8005\u201c\u6807\u51c6\u5dee\u7684\u5747\u503c\u201d\uff0c\u4f60\u53ef\u4ee5\u4ee5\u6700\u5c0f\u7684\u6267\u884c\u548c\u50a8\u5b58\u603b\u91cf\uff0c\u6709\u6548\u5730\u8ddf\u8e2a\u8bb8\u591a\u5ea6\u91cf\u3002\n\u9644\u52a0\u9898\n\n\u5c06Stats_stddev \u548c Stats_mean\u8f6c\u6362\u4e3astatic inline\u51fd\u6570\uff0c\u653e\u5230stats.h\u6587\u4ef6\u4e2d\uff0c\u800c\u4e0d\u662fstats.c\u6587\u4ef6\u3002\n\u4f7f\u7528\u8fd9\u4efd\u4ee3\u7801\u6765\u7f16\u5199string_algos_test.c\u7684\u6027\u80fd\u6d4b\u8bd5\u3002\u4f7f\u5b83\u4e3a\u53ef\u9009\u7684\uff0c\u5e76\u4e14\u8fd0\u884c\u57fa\u51c6\u6d4b\u8bd5\u4f5c\u4e3a\u4e00\u7cfb\u5217\u6837\u672c\uff0c\u4e4b\u540e\u62a5\u544a\u7ed3\u679c\u3002\n\u7f16\u5199\u5b83\u7684\u53e6\u4e00\u4e2a\u8bed\u8a00\u7684\u7248\u672c\u3002\u786e\u4fdd\u8fd9\u4e2a\u7248\u672c\u57fa\u4e8e\u6211\u7684\u6570\u636e\u6b63\u786e\u6267\u884c\u3002\n\u7f16\u5199\u4e00\u4e2a\u5c0f\u578b\u7a0b\u5e8f\uff0c\u5b83\u80fd\u4ece\u6587\u4ef6\u8bfb\u53d6\u6240\u6709\u6570\u5b57\uff0c\u5e76\u6267\u884c\u8fd9\u4e9b\u7edf\u8ba1\u3002\n\u4f7f\u7a0b\u5e8f\u63a5\u6536\u4e00\u4e2a\u6570\u636e\u8868\uff0c\u5176\u4e2d\u7b2c\u4e00\u884c\u662f\u8868\u5934\uff0c\u5269\u4e0b\u7684\u884c\u542b\u6709\u4efb\u610f\u6570\u91cf\u7a7a\u683c\u5206\u9694\u7684\u6570\u503c\u3002\u4f60\u7684\u7a0b\u5e8f\u5e94\u8be5\u6309\u7167\u8868\u5934\u4e2d\u7684\u540d\u79f0\uff0c\u6253\u5370\u51fa\u6bcf\u4e00\u5217\u7684\u7edf\u8ba1\u503c\u3002\n","categories":"\u7ec3\u4e6018","tags":["\u7b97\u6cd5"]},{"title":"\u73af\u5f62\u7f13\u51b2\u533a","url":"https:\/\/naka507.github.io\/posts\/E0AFFDAFB6FE468C.html","content":"\u73af\u5f62\u7f13\u51b2\u533a\n\u73af\u5f62\u7f13\u51b2\u533a\u5728\u5904\u7406\u5f02\u6b65IO\u65f6\u975e\u5e38\u5b9e\u7528\u3002\u5b83\u4eec\u53ef\u4ee5\u5728\u4e00\u7aef\u63a5\u6536\u968f\u673a\u957f\u5ea6\u548c\u533a\u95f4\u7684\u6570\u636e\uff0c\u5728\u53e6\u4e00\u7aef\u4ee5\u76f8\u540c\u957f\u5ea6\u548c\u533a\u95f4\u63d0\u4f9b\u5bc6\u81f4\u7684\u6570\u636e\u5757\u3002\u5b83\u4eec\u662fQueue\u6570\u636e\u7ed3\u6784\u7684\u53d8\u4f53\uff0c\u4f46\u662f\u5b83\u9488\u5bf9\u4e8e\u5b57\u8282\u5757\u800c\u4e0d\u662f\u4e00\u7cfb\u5217\u6307\u9488\u3002\u8fd9\u4e2a\u7ec3\u4e60\u4e2d\u6211\u6253\u7b97\u5411\u4f60\u5c55\u793aRingBuffer\u7684\u4ee3\u7801\uff0c\u5e76\u4e14\u4e4b\u540e\u4f60\u9700\u8981\u5bf9\u5b83\u6267\u884c\u5b8c\u6574\u7684\u5355\u5143\u6d4b\u8bd5\u3002\n#ifndef _lcthw_RingBuffer_h\n#define _lcthw_RingBuffer_h\n\n#include &lt;lcthw\/bstrlib.h&gt;\n\ntypedef struct {\n    char *buffer;\n    int length;\n    int start;\n    int end;\n} RingBuffer;\n\nRingBuffer *RingBuffer_create(int length);\n\nvoid RingBuffer_destroy(RingBuffer *buffer);\n\nint RingBuffer_read(RingBuffer *buffer, char *target, int amount);\n\nint RingBuffer_write(RingBuffer *buffer, char *data, int length);\n\nint RingBuffer_empty(RingBuffer *buffer);\n\nint RingBuffer_full(RingBuffer *buffer);\n\nint RingBuffer_available_data(RingBuffer *buffer);\n\nint RingBuffer_available_space(RingBuffer *buffer);\n\nbstring RingBuffer_gets(RingBuffer *buffer, int amount);\n\n#define RingBuffer_available_data(B) (((B)-&gt;end + 1) % (B)-&gt;length - (B)-&gt;start - 1)\n\n#define RingBuffer_available_space(B) ((B)-&gt;length - (B)-&gt;end - 1)\n\n#define RingBuffer_full(B) (RingBuffer_available_data((B)) - (B)-&gt;length == 0)\n\n#define RingBuffer_empty(B) (RingBuffer_available_data((B)) == 0)\n\n#define RingBuffer_puts(B, D) RingBuffer_write((B), bdata((D)), blength((D)))\n\n#define RingBuffer_get_all(B) RingBuffer_gets((B), RingBuffer_available_data((B)))\n\n#define RingBuffer_starts_at(B) ((B)-&gt;buffer + (B)-&gt;start)\n\n#define RingBuffer_ends_at(B) ((B)-&gt;buffer + (B)-&gt;end)\n\n#define RingBuffer_commit_read(B, A) ((B)-&gt;start = ((B)-&gt;start + (A)) % (B)-&gt;length)\n\n#define RingBuffer_commit_write(B, A) ((B)-&gt;end = ((B)-&gt;end + (A)) % (B)-&gt;length)\n\n#endif\n\u89c2\u5bdf\u8fd9\u4e2a\u6570\u636e\u7ed3\u6784\uff0c\u4f60\u4f1a\u770b\u5230\u5b83\u542b\u6709buffer\u3001start \u548c end\u3002RingBuffer\u7684\u6240\u505a\u7684\u4e8b\u60c5\u53ea\u662f\u5728buffer\u4e2d\u79fb\u52a8start\u548cend\uff0c\u6240\u4ee5\u5f53\u6570\u636e\u5230\u8fbe\u7f13\u51b2\u533a\u672b\u5c3e\u65f6\u8fd8\u53ef\u4ee5\u7ee7\u7eed\u201c\u5faa\u73af\u201d\u3002\u8fd9\u6837\u5c31\u4f1a\u7ed9\u4eba\u4e00\u79cd\u5728\u56fa\u5b9a\u7a7a\u95f4\u5185\u65e0\u9650\u8bfb\u53d6\u7684\u201c\u5e7b\u89c9\u201d\u3002\u63a5\u4e0b\u6765\u6211\u521b\u5efa\u4e86\u4e00\u4e9b\u5b8f\u6765\u57fa\u4e8e\u5b83\u6267\u884c\u5404\u79cd\u8ba1\u7b97\u3002\n\u4e0b\u9762\u662f\u5b83\u7684\u5b9e\u73b0\uff0c\u5b83\u662f\u5bf9\u5de5\u4f5c\u539f\u7406\u66f4\u597d\u7684\u89e3\u91ca\uff1a\n#undef NDEBUG\n#include &lt;assert.h&gt;\n#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;string.h&gt;\n#include &lt;lcthw\/dbg.h&gt;\n#include &lt;lcthw\/ringbuffer.h&gt;\n\nRingBuffer *RingBuffer_create(int length)\n{\n    RingBuffer *buffer = calloc(1, sizeof(RingBuffer));\n    buffer-&gt;length  = length + 1;\n    buffer-&gt;start = 0;\n    buffer-&gt;end = 0;\n    buffer-&gt;buffer = calloc(buffer-&gt;length, 1);\n\n    return buffer;\n}\n\nvoid RingBuffer_destroy(RingBuffer *buffer)\n{\n    if(buffer) {\n        free(buffer-&gt;buffer);\n        free(buffer);\n    }\n}\n\nint RingBuffer_write(RingBuffer *buffer, char *data, int length)\n{\n    if(RingBuffer_available_data(buffer) == 0) {\n        buffer-&gt;start = buffer-&gt;end = 0;\n    }\n\n    check(length &lt;= RingBuffer_available_space(buffer),\n            \"Not enough space: %d request, %d available\",\n            RingBuffer_available_data(buffer), length);\n\n    void *result = memcpy(RingBuffer_ends_at(buffer), data, length);\n    check(result != NULL, \"Failed to write data into buffer.\");\n\n    RingBuffer_commit_write(buffer, length);\n\n    return length;\nerror:\n    return -1;\n}\n\nint RingBuffer_read(RingBuffer *buffer, char *target, int amount)\n{\n    check_debug(amount &lt;= RingBuffer_available_data(buffer),\n            \"Not enough in the buffer: has %d, needs %d\",\n            RingBuffer_available_data(buffer), amount);\n\n    void *result = memcpy(target, RingBuffer_starts_at(buffer), amount);\n    check(result != NULL, \"Failed to write buffer into data.\");\n\n    RingBuffer_commit_read(buffer, amount);\n\n    if(buffer-&gt;end == buffer-&gt;start) {\n        buffer-&gt;start = buffer-&gt;end = 0;\n    }\n\n    return amount;\nerror:\n    return -1;\n}\n\nbstring RingBuffer_gets(RingBuffer *buffer, int amount)\n{\n    check(amount &gt; 0, \"Need more than 0 for gets, you gave: %d \", amount);\n    check_debug(amount &lt;= RingBuffer_available_data(buffer),\n            \"Not enough in the buffer.\");\n\n    bstring result = blk2bstr(RingBuffer_starts_at(buffer), amount);\n    check(result != NULL, \"Failed to create gets result.\");\n    check(blength(result) == amount, \"Wrong result length.\");\n\n    RingBuffer_commit_read(buffer, amount);\n    assert(RingBuffer_available_data(buffer) &gt;= 0 &amp;&amp; \"Error in read commit.\");\n\n    return result;\nerror:\n    return NULL;\n}\n\u8fd9\u4e9b\u5c31\u662f\u4e00\u4e2a\u57fa\u672c\u7684RingBuffer\u5b9e\u73b0\u7684\u5168\u90e8\u4e86\u3002\u4f60\u53ef\u4ee5\u4ece\u4e2d\u8bfb\u53d6\u548c\u5199\u5165\u6570\u636e\uff0c\u83b7\u5f97\u5b83\u7684\u5927\u5c0f\u548c\u5bb9\u91cf\u3002\u4e5f\u6709\u4e00\u4e9b\u7f13\u51b2\u533a\u4f7f\u7528OS\u4e2d\u7684\u6280\u5de7\u6765\u521b\u5efa\u865a\u62df\u7684\u65e0\u9650\u5b58\u50a8\uff0c\u4f46\u5b83\u4eec\u4e0d\u53ef\u79fb\u690d\u3002\n\u7531\u4e8e\u6211\u7684RingBuffer\u5904\u7406\u8bfb\u53d6\u548c\u5199\u5165\u5185\u5b58\u5757\uff0c\u6211\u8981\u4fdd\u8bc1\u4efb\u4f55end == start\u51fa\u73b0\u7684\u65f6\u5019\u6211\u90fd\u8981\u5c06\u5b83\u4eec\u91cd\u7f6e\u4e3a0\uff0c\u4f7f\u5b83\u4eec\u4ece\u9000\u56de\u7f13\u51b2\u533a\u5934\u90e8\u3002\u5728\u7ef4\u57fa\u767e\u79d1\u4e0a\u7684\u7248\u672c\u4e2d\uff0c\u5b83\u5e76\u4e0d\u53ef\u4ee5\u5199\u5165\u6570\u636e\u5757\uff0c\u6240\u4ee5\u53ea\u80fd\u79fb\u52a8end\u548cstart\u6765\u8f6c\u5708\u3002\u4e3a\u4e86\u66f4\u597d\u5730\u5904\u7406\u6570\u636e\u5757\uff0c\u4f60\u9700\u8981\u5728\u6570\u636e\u4e3a\u7a7a\u65f6\u79fb\u52a8\u5230\u5185\u90e8\u7f13\u51b2\u533a\u7684\u5f00\u5934\u3002\n\u5355\u5143\u6d4b\u8bd5\n\u5bf9\u4e8e\u4f60\u7684\u5355\u5143\u6d4b\u8bd5\uff0c\u4f60\u9700\u8981\u6d4b\u8bd5\u5c3d\u53ef\u80fd\u591a\u7684\u60c5\u51b5\u3002\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u5c31\u662f\u9884\u6784\u9020\u4e0d\u540c\u7684RingBuffer\u7ed3\u6784\uff0c\u4e4b\u540e\u624b\u52a8\u68c0\u67e5\u51fd\u6570\u548c\u7b97\u6570\u662f\u5426\u6709\u6548\u3002\u4f8b\u5982\uff0c\u4f60\u53ef\u4ee5\u6784\u9020end\u5728\u7f13\u51b2\u533a\u672b\u5c3e\u7684\u53f3\u8fb9\uff0c\u800cstart\u5728\u7f13\u51b2\u533a\u8303\u56f4\u5185\u7684RingBuffer\uff0c\u6765\u770b\u770b\u5b83\u662f\u5426\u6267\u884c\u6210\u529f\u3002\n\u4f60\u4f1a\u770b\u5230\u4ec0\u4e48\n\u4e0b\u9762\u662f\u6211\u7684ringbuffer_tests\u8fd0\u884c\u7ed3\u679c\uff1a\n$ .\/tests\/ringbuffer_tests\nDEBUG tests\/ringbuffer_tests.c:60: ----- RUNNING: .\/tests\/ringbuffer_tests\n----\nRUNNING: .\/tests\/ringbuffer_tests\nDEBUG tests\/ringbuffer_tests.c:53:\n----- test_create\nDEBUG tests\/ringbuffer_tests.c:54:\n----- test_read_write\nDEBUG tests\/ringbuffer_tests.c:55:\n----- test_destroy\nALL TESTS PASSED\nTests run: 3\n$\n\u4f60\u5e94\u8be5\u6d4b\u8bd5\u81f3\u5c11\u4e09\u6b21\u6765\u786e\u4fdd\u6240\u6709\u57fa\u672c\u64cd\u4f5c\u6709\u6548\uff0c\u5e76\u4e14\u770b\u770b\u5728\u6211\u5b8c\u6210\u4e4b\u524d\u4f60\u80fd\u6d4b\u8bd5\u5230\u989d\u5916\u7684\u591a\u5c11\u4e1c\u897f\u3002\n\u5982\u4f55\u6539\u8fdb\n\u50cf\u5f80\u5e38\u4e00\u6837\uff0c\u4f60\u5e94\u8be5\u4e3a\u8fd9\u4e2a\u7ec3\u4e60\u505a\u9632\u5fa1\u6027\u7f16\u7a0b\u68c0\u67e5\u3002\u6211\u5e0c\u671b\u4f60\u8fd9\u6837\u505a\uff0c\u662f\u56e0\u4e3aliblcthw\u7684\u4ee3\u7801\u57fa\u672c\u4e0a\u6ca1\u6709\u505a\u6211\u6559\u7ed9\u4f60\u7684\u9632\u5fa1\u578b\u7f16\u7a0b\u68c0\u67e5\u3002\u6211\u5c06\u5b83\u4eec\u7559\u7ed9\u4f60\uff0c\u4fbf\u4e8e\u4f60\u719f\u6089\u4f7f\u7528\u8fd9\u4e9b\u989d\u5916\u7684\u68c0\u67e5\u6765\u6539\u8fdb\u4ee3\u7801\u3002\n\u4f8b\u5982\uff0c\u8fd9\u4e2a\u73af\u5f62\u7f13\u51b2\u533a\u5e76\u6ca1\u6709\u8fc7\u591a\u68c0\u67e5\u6bcf\u6b21\u8bbf\u95ee\u662f\u5426\u5b9e\u9645\u4e0a\u90fd\u5728\u7f13\u51b2\u533a\u5185\u3002\n\u5982\u679c\u4f60\u9605\u8bfb\u73af\u5f62\u7f13\u51b2\u533a\u7684\u7ef4\u57fa\u767e\u79d1\u9875\u9762\uff0c\u4f60\u4f1a\u770b\u5230\u201c\u4f18\u5316\u7684POSIX\u5b9e\u73b0\u201d\uff0c\u5b83\u4f7f\u7528POSIX\u7279\u5b9a\u7684\u8c03\u7528\u6765\u521b\u5efa\u4e00\u5757\u65e0\u9650\u7684\u533a\u57df\u3002\u7814\u7a76\u5e76\u4e14\u5728\u9644\u52a0\u9898\u4e2d\u5c1d\u8bd5\u5b9e\u73b0\u5b83\u3002\n\u9644\u52a0\u9898\n\n\u521b\u5efaRingBuffer\u7684\u66ff\u4ee3\u7248\u672c\uff0c\u4f7f\u7528POSIX\u7684\u6280\u5de7\u5e76\u4e3a\u5176\u6267\u884c\u5355\u5143\u6d4b\u8bd5\u3002\n\u4e3a\u4e8c\u8005\u6dfb\u52a0\u4e00\u4e2a\u6027\u80fd\u5bf9\u6bd4\u6d4b\u8bd5\uff0c\u901a\u8fc7\u5e26\u6709\u968f\u673a\u6570\u636e\u548c\u968f\u673a\u8bfb\u5199\u64cd\u4f5c\u7684\u6a21\u7cca\u6d4b\u8bd5\u6765\u6bd4\u8f83\u4e24\u4e2a\u7248\u672c\u3002\u786e\u4fdd\u4f60\u4f60\u5bf9\u6bcf\u4e2a\u7248\u672c\u8fdb\u884c\u4e86\u76f8\u540c\u7684\u64cd\u4f5c\uff0c\u4fbf\u4e8e\u4f60\u5728\u64cd\u4f5c\u4e4b\u95f4\u6bd4\u8f83\u4e8c\u8005\u3002\n\u4f7f\u7528callgrind \u548c cachegrind\u6bd4\u8f83\u4e8c\u8005\u7684\u6027\u80fd\u3002\n","categories":"\u7ec3\u4e6019","tags":["\u7ed3\u6784","\u5b57\u8282","\u6307\u9488"]},{"title":"\u4e00\u4e2a\u7b80\u5355\u7684TCP\/IP\u5ba2\u6237\u7aef","url":"https:\/\/naka507.github.io\/posts\/EEC00C835A3D8361.html","content":"\u4e00\u4e2a\u7b80\u5355\u7684TCP\/IP\u5ba2\u6237\u7aef\n\u6211\u6253\u7b97\u4f7f\u7528RingBuffer\u6765\u521b\u5efa\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684\u5c0f\u578b\u7f51\u7edc\u6d4b\u8bd5\u5de5\u5177\uff0c\u53eb\u505anetclient\u3002\u4e3a\u6b64\u6211\u9700\u8981\u5411Makefile\u6dfb\u52a0\u4e00\u4e9b\u5de5\u5177\uff0c\u6765\u5904\u7406bin\/\u76ee\u5f55\u4e0b\u7684\u5c0f\u7a0b\u5e8f\u3002\n\u6269\u5c55Makefile\n\u9996\u5148\uff0c\u4e3a\u7a0b\u5e8f\u6dfb\u52a0\u4e00\u4e9b\u53d8\u91cf\uff0c\u5c31\u50cf\u5355\u5143\u6d4b\u8bd5\u7684TESTS\u548cTEST_SRC\u53d8\u91cf\uff1a\nPROGRAMS_SRC=$(wildcard bin\/*.c)\nPROGRAMS=$(patsubst %.c,%,$(PROGRAMS_SRC))\n\u4e4b\u540e\u4f60\u53ef\u80fd\u60f3\u8981\u6dfb\u52a0PROGRAMS\u5230\u6240\u6709\u76ee\u6807\u4e2d\uff1a\nall: $(TARGET) $(SO_TARGET) tests $(PROGRAMS)\n\u4e4b\u540e\u5728clean\u76ee\u6807\u4e2d\u5411rm\u90a3\u4e00\u884c\u6dfb\u52a0PROGRAMS\uff1a\nrm -rf build $(OBJECTS) $(TESTS) $(PROGRAMS)\n\u6700\u540e\u4f60\u8fd8\u9700\u8981\u5728\u6700\u540e\u6dfb\u52a0\u4e00\u4e2a\u76ee\u6807\u6765\u6784\u5efa\u5b83\u4eec\uff1a\n$(PROGRAMS): CFLAGS += $(TARGET)\n\u505a\u4e86\u8fd9\u4e9b\u4fee\u6539\u4f60\u5c31\u80fd\u591f\u5c06.c\u6587\u4ef6\u6254\u5230bin\u4e2d\uff0c\u5e76\u4e14\u7f16\u8bd1\u5b83\u4eec\u4ee5\u53ca\u4e3a\u5176\u94fe\u63a5\u5e93\u6587\u4ef6\uff0c\u5c31\u50cf\u6d4b\u8bd5\u90a3\u6837\u3002\nnetclient \u4ee3\u7801\nnetclient\u7684\u4ee3\u7801\u662f\u8fd9\u6837\u7684\uff1a\n#undef NDEBUG\n#include &lt;stdlib.h&gt;\n#include &lt;sys\/select.h&gt;\n#include &lt;stdio.h&gt;\n#include &lt;lcthw\/ringbuffer.h&gt;\n#include &lt;lcthw\/dbg.h&gt;\n#include &lt;sys\/socket.h&gt;\n#include &lt;sys\/types.h&gt;\n#include &lt;sys\/uio.h&gt;\n#include &lt;arpa\/inet.h&gt;\n#include &lt;netdb.h&gt;\n#include &lt;unistd.h&gt;\n#include &lt;fcntl.h&gt;\n\nstruct tagbstring NL = bsStatic(\"\\n\");\nstruct tagbstring CRLF = bsStatic(\"\\r\\n\");\n\nint nonblock(int fd) {\n    int flags = fcntl(fd, F_GETFL, 0);\n    check(flags &gt;= 0, \"Invalid flags on nonblock.\");\n\n    int rc = fcntl(fd, F_SETFL, flags | O_NONBLOCK);\n    check(rc == 0, \"Can't set nonblocking.\");\n\n    return 0;\nerror:\n    return -1;\n}\n\nint client_connect(char *host, char *port)\n{\n    int rc = 0;\n    struct addrinfo *addr = NULL;\n\n    rc = getaddrinfo(host, port, NULL, &amp;addr);\n    check(rc == 0, \"Failed to lookup %s:%s\", host, port);\n\n    int sock = socket(AF_INET, SOCK_STREAM, 0);\n    check(sock &gt;= 0, \"Cannot create a socket.\");\n\n    rc = connect(sock, addr-&gt;ai_addr, addr-&gt;ai_addrlen);\n    check(rc == 0, \"Connect failed.\");\n\n    rc = nonblock(sock);\n    check(rc == 0, \"Can't set nonblocking.\");\n\n    freeaddrinfo(addr);\n    return sock;\n\nerror:\n    freeaddrinfo(addr);\n    return -1;\n}\n\nint read_some(RingBuffer *buffer, int fd, int is_socket)\n{\n    int rc = 0;\n\n    if(RingBuffer_available_data(buffer) == 0) {\n        buffer-&gt;start = buffer-&gt;end = 0;\n    }\n\n    if(is_socket) {\n        rc = recv(fd, RingBuffer_starts_at(buffer), RingBuffer_available_space(buffer), 0);\n    } else {\n        rc = read(fd, RingBuffer_starts_at(buffer), RingBuffer_available_space(buffer));\n    }\n\n    check(rc &gt;= 0, \"Failed to read from fd: %d\", fd);\n\n    RingBuffer_commit_write(buffer, rc);\n\n    return rc;\n\nerror:\n    return -1;\n}\n\n\nint write_some(RingBuffer *buffer, int fd, int is_socket)\n{\n    int rc = 0;\n    bstring data = RingBuffer_get_all(buffer);\n\n    check(data != NULL, \"Failed to get from the buffer.\");\n    check(bfindreplace(data, &amp;NL, &amp;CRLF, 0) == BSTR_OK, \"Failed to replace NL.\");\n\n    if(is_socket) {\n        rc = send(fd, bdata(data), blength(data), 0);\n    } else {\n        rc = write(fd, bdata(data), blength(data));\n    }\n\n    check(rc == blength(data), \"Failed to write everything to fd: %d.\", fd);\n    bdestroy(data);\n\n    return rc;\n\nerror:\n    return -1;\n}\n\n\nint main(int argc, char *argv[])\n{\n    fd_set allreads;\n    fd_set readmask;\n\n    int socket = 0;\n    int rc = 0;\n    RingBuffer *in_rb = RingBuffer_create(1024 * 10);\n    RingBuffer *sock_rb = RingBuffer_create(1024 * 10);\n\n    check(argc == 3, \"USAGE: netclient host port\");\n\n    socket = client_connect(argv[1], argv[2]);\n    check(socket &gt;= 0, \"connect to %s:%s failed.\", argv[1], argv[2]);\n\n    FD_ZERO(&amp;allreads);\n    FD_SET(socket, &amp;allreads);\n    FD_SET(0, &amp;allreads);\n\n    while(1) {\n        readmask = allreads;\n        rc = select(socket + 1, &amp;readmask, NULL, NULL, NULL);\n        check(rc &gt;= 0, \"select failed.\");\n\n        if(FD_ISSET(0, &amp;readmask)) {\n            rc = read_some(in_rb, 0, 0);\n            check_debug(rc != -1, \"Failed to read from stdin.\");\n        }\n\n        if(FD_ISSET(socket, &amp;readmask)) {\n            rc = read_some(sock_rb, socket, 0);\n            check_debug(rc != -1, \"Failed to read from socket.\");\n        }\n\n        while(!RingBuffer_empty(sock_rb)) {\n            rc = write_some(sock_rb, 1, 0);\n            check_debug(rc != -1, \"Failed to write to stdout.\");\n        }\n\n        while(!RingBuffer_empty(in_rb)) {\n            rc = write_some(in_rb, socket, 1);\n            check_debug(rc != -1, \"Failed to write to socket.\");\n        }\n    }\n\n    return 0;\n\nerror:\n    return -1;\n}\n\u4ee3\u7801\u4e2d\u4f7f\u7528\u4e86select\u6765\u5904\u7406stdin\uff08\u6587\u4ef6\u63cf\u8ff0\u7b260\uff09\u548c\u7528\u4e8e\u548c\u670d\u52a1\u5668\u4ea4\u4e92\u7684socket\u4e2d\u7684\u4e8b\u4ef6\u3002\u5b83\u4f7f\u7528\u4e86RingBuffer\u6765\u50a8\u5b58\u548c\u590d\u5236\u6570\u636e\uff0c\u5e76\u4e14\u4f60\u53ef\u4ee5\u8ba4\u4e3aread_some\u548cwrite_some\u51fd\u6570\u90fd\u662fRingBuffer\u4e2d\u76f8\u4f3c\u51fd\u6570\u7684\u539f\u578b\u3002\n\u5728\u8fd9\u4e00\u5c0f\u6bb5\u4ee3\u7801\u4e2d\uff0c\u53ef\u80fd\u6709\u4e00\u4e9b\u4f60\u5e76\u4e0d\u77e5\u9053\u7684\u7f51\u7edc\u51fd\u6570\u3002\u5f53\u4f60\u78b0\u5230\u4e0d\u77e5\u9053\u7684\u51fd\u6570\u65f6\uff0c\u5728\u624b\u518c\u9875\u4e0a\u67e5\u8be2\u5b83\u6765\u786e\u4fdd\u4f60\u7406\u89e3\u4e86\u5b83\u3002\u8fd9\u4e00\u5c0f\u6bb5\u4ee3\u7801\u53ef\u80fd\u9700\u8981\u8ba9\u4f60\u7814\u7a76\u7528\u4e8e\u5c0f\u578b\u670d\u52a1\u5668\u7f16\u7a0b\u7684\u6240\u6709C\u8bed\u8a00API\u3002\n\u4f60\u4f1a\u770b\u5230\u4ec0\u4e48\n\u5982\u679c\u4f60\u5b8c\u6210\u4e86\u6240\u6709\u6784\u5efa\uff0c\u6d4b\u8bd5\u7684\u6700\u5feb\u65b9\u5f0f\u5c31\u662f\u770b\u770b\u4f60\u80fd\u5426\u4ecelearncodethehardway.org\u4e0a\u5f97\u5230\u4e00\u4e2a\u7279\u6b8a\u7684\u6587\u4ef6\uff1a\n$\n$ .\/bin\/netclient learncodethehardway.org 80\nGET \/ex45.txt HTTP\/1.1\nHost: learncodethehardway.org\n\nHTTP\/1.1 200 OK\nDate: Fri, 27 Apr 2012 00:41:25 GMT\nContent-Type: text\/plain\nContent-Length: 41\nLast-Modified: Fri, 27 Apr 2012 00:42:11 GMT\nETag: 4f99eb63-29\nServer: Mongrel2\/1.7.5\n\nLearn C The Hard Way, Exercise 45 works.\n^C\n$\n\u8fd9\u91cc\u6211\u6240\u505a\u7684\u4e8b\u60c5\u662f\u952e\u5165\u521b\u5efa\/ex45.txt\u7684HTTP\u8bf7\u6c42\u6240\u9700\u7684\u8bed\u6cd5\uff0c\u5728Host:\u8bf7\u6c42\u822a\u4e4b\u540e\uff0c\u6309\u4e0bENTER\u952e\u6765\u8f93\u5165\u7a7a\u884c\u3002\u63a5\u7740\u6211\u83b7\u53d6\u76f8\u5e94\uff0c\u5305\u62ec\u54cd\u5e94\u5934\u548c\u5185\u5bb9\u3002\u6700\u540e\u6211\u6309\u4e0bCTRL-C\u6765\u9000\u51fa\u3002\n\u5982\u4f55\u4f7f\u5b83\u5d29\u6e83\n\u8fd9\u6bb5\u4ee3\u7801\u80af\u5b9a\u542b\u6709bug\uff0c\u4f46\u662f\u5f53\u524d\u5728\u672c\u4e66\u7684\u8349\u7a3f\u4e2d\uff0c\u6211\u4f1a\u7ee7\u7eed\u5b8c\u6210\u5b83\u3002\u4e0e\u6b64\u540c\u65f6\uff0c\u5c1d\u8bd5\u5206\u6790\u4ee3\u7801\uff0c\u5e76\u4e14\u7528\u5176\u5b83\u670d\u52a1\u5668\u6765\u51fb\u6e83\u5b83\u3002\u4e00\u79cd\u53eb\u505anetcat\u7684\u5de5\u5177\u53ef\u4ee5\u7528\u4e8e\u5efa\u7acb\u8fd9\u79cd\u670d\u52a1\u5668\u3002\u53e6\u4e00\u79cd\u65b9\u6cd5\u5c31\u662f\u4f7f\u7528Python\u6216Ruby\u4e4b\u7c7b\u7684\u8bed\u8a00\u521b\u5efa\u4e00\u4e2a\u7b80\u5355\u7684\u201c\u5783\u573e\u670d\u52a1\u5668\u201d\uff0c\u6765\u4ea7\u751f\u5783\u573e\u6570\u636e\uff0c\u968f\u673a\u5173\u95ed\u8fde\u63a5\uff0c\u6216\u8005\u5176\u5b83\u5f02\u5e38\u884c\u4e3a\u3002\n\u5982\u679c\u4f60\u627e\u5230\u4e86bug\uff0c\u5728\u8bc4\u8bba\u4e2d\u62a5\u544a\u5b83\u4eec\uff0c\u6211\u4f1a\u4fee\u590d\u5b83\u3002\n\u9644\u52a0\u9898\n\n\u50cf\u6211\u63d0\u5230\u7684\u90a3\u6837\uff0c\u8fd9\u91cc\u9762\u6709\u4e00\u4e9b\u4f60\u4e0d\u77e5\u9053\u7684\u51fd\u6570\uff0c\u53bb\u67e5\u8be2\u4ed6\u4eec\u3002\u5b9e\u9645\u4e0a\uff0c\u5373\u4f7f\u4f60\u77e5\u9053\u5b83\u4eec\u4e5f\u8981\u67e5\u8be2\u3002\n\u5728valgrind\u4e0b\u8fd0\u884c\u5b83\u6765\u5bfb\u627e\u9519\u8bef\u3002\n\u4e3a\u51fd\u6570\u6dfb\u52a0\u5404\u79cd\u9632\u5fa1\u6027\u7f16\u7a0b\u68c0\u67e5\uff0c\u6765\u6539\u8fdb\u5b83\u4eec\u3002\n\u4f7f\u7528getopt\u51fd\u6570\uff0c\u8fd0\u884c\u7528\u6237\u63d0\u4f9b\u9009\u9879\u6765\u9632\u6b62\u5c06\\n\u8f6c\u6362\u4e3a\\r\\n\u3002\u8fd9\u4ec5\u4ec5\u7528\u4e8e\u9700\u8981\u5904\u7406\u884c\u5c3e\u7684\u534f\u8bae\u4f8b\u5982HTTP\u3002\u6709\u65f6\u4f60\u53ef\u80fd\u4e0d\u60f3\u6267\u884c\u8f6c\u6362\uff0c\u6240\u4ee5\u8981\u7ed9\u7528\u6237\u4e00\u4e2a\u9009\u62e9\u3002\n","categories":"\u7ec3\u4e6020","tags":["Makefile"]},{"title":"\u4e09\u53c9\u641c\u7d22\u6811","url":"https:\/\/naka507.github.io\/posts\/51762D35312252D6.html","content":"\u4e09\u53c9\u641c\u7d22\u6811\n\u6211\u6253\u7b97\u5411\u4f60\u4ecb\u7ecd\u7684\u6700\u540e\u4e00\u79cd\u6570\u636e\u7ed3\u6784\u5c31\u662f\u4e09\u53c9\u641c\u7d22\u6811\uff08TSTree\uff09\uff0c\u5b83\u548cBSTree\u5f88\u50cf\uff0c\u9664\u4e86\u5b83\u6709\u4e09\u4e2a\u5206\u652f\uff0clow\u3001equal\u548chigh\u3002\u5b83\u7684\u7528\u6cd5\u548cBStree\u4ee5\u53caHashmap\u57fa\u672c\u76f8\u540c\uff0c\u7528\u4e8e\u50a8\u5b58\u952e\u503c\u5bf9\u7684\u6570\u636e\uff0c\u4f46\u662f\u5b83\u901a\u8fc7\u952e\u4e2d\u7684\u72ec\u7acb\u5b57\u7b26\u6765\u63a7\u5236\u3002\u8fd9\u4f7f\u5f97TSTree\u5177\u6709\u4e00\u4e9bBStree\u548cHashmap\u4e0d\u5177\u5907\u7684\u529f\u80fd\u3002\nTSTree\u7684\u5de5\u4f5c\u65b9\u5f0f\u662f\uff0c\u6bcf\u4e2a\u952e\u90fd\u662f\u5b57\u7b26\u4e32\uff0c\u6839\u636e\u5b57\u7b26\u4e32\u4e2d\u5b57\u7b26\u7684\u7b49\u6027\uff0c\u901a\u8fc7\u6784\u5efa\u6216\u8005\u904d\u5386\u4e00\u68f5\u6811\u6765\u8fdb\u884c\u63d2\u5165\u3002\u9996\u5148\u7531\u6839\u8282\u70b9\u5f00\u59cb\uff0c\u89c2\u5bdf\u6bcf\u4e2a\u8282\u70b9\u7684\u5b57\u7b26\uff0c\u5982\u679c\u5c0f\u4e8e\u3001\u7b49\u4e8e\u6216\u5927\u4e8e\u5219\u53bb\u5f80\u76f8\u5e94\u7684\u65b9\u5411\u3002\u4f60\u53ef\u4ee5\u53c2\u8003\u8fd9\u4e2a\u5934\u6587\u4ef6\uff1a\n#ifndef _lcthw_TSTree_h\n#define _lctwh_TSTree_h\n\n#include &lt;stdlib.h&gt;\n#include &lt;lcthw\/darray.h&gt;\n\ntypedef struct TSTree {\n    char splitchar;\n    struct TSTree *low;\n    struct TSTree *equal;\n    struct TSTree *high;\n    void *value;\n} TSTree;\n\nvoid *TSTree_search(TSTree *root, const char *key, size_t len);\n\nvoid *TSTree_search_prefix(TSTree *root, const char *key, size_t len);\n\ntypedef void (*TSTree_traverse_cb)(void *value, void *data);\n\nTSTree *TSTree_insert(TSTree *node, const char *key, size_t len, void *value);\n\nvoid TSTree_traverse(TSTree *node, TSTree_traverse_cb cb, void *data);\n\nvoid TSTree_destroy(TSTree *root);\n\n#endif\nTSTree\u62e5\u6709\u4e0b\u5217\u6210\u5458\uff1a\nsplitchar\n\u6811\u4e2d\u8be5\u8282\u70b9\u7684\u5b57\u7b26\u3002\nlow\n\u5c0f\u4e8esplitchar\u7684\u5206\u652f\u3002\nequal\n\u7b49\u4e8esplitchar\u7684\u5206\u652f\u3002\nhigh\n\u5927\u4e8esplitchar\u7684\u5206\u652f\u3002\nvalue\n\u8fd9\u4e2a\u8282\u70b9\u4e0a\u7b26\u5408\u5f53\u524dsplitchar\u7684\u503c\u7684\u96c6\u5408\u3002\n\u4f60\u53ef\u4ee5\u770b\u5230\u8fd9\u4e2a\u5b9e\u73b0\u4e2d\u542b\u6709\u4e0b\u5217\u64cd\u4f5c\uff1a\nsearch\n\u4e3a\u7279\u5b9akey\u5bfb\u627e\u503c\u7684\u5178\u578b\u64cd\u4f5c\u3002\nsearch_prefix\n\u5bfb\u627e\u7b2c\u4e00\u4e2a\u4ee5key\u4e3a\u524d\u7f00\u7684\u503c\uff0c\u8fd9\u662f\u4f60\u4e0d\u80fd\u8f7b\u6613\u4f7f\u7528BSTree \u6216 Hashmap \u5b8c\u6210\u7684\u64cd\u4f5c\u3002\ninsert\n\u5c06key\u6839\u636e\u6bcf\u4e2a\u5b57\u7b26\u62c6\u5206\uff0c\u5e76\u628a\u5b83\u63d2\u5165\u5230\u6811\u4e2d\u3002\ntraverse\n\u904d\u5386\u6574\u9897\u6811\uff0c\u4f7f\u4f60\u80fd\u591f\u6536\u96c6\u6216\u5206\u6790\u6240\u5305\u542b\u7684\u6240\u6709\u952e\u548c\u503c\u3002\n\u552f\u4e00\u7f3a\u5c11\u7684\u64cd\u4f5c\u5c31\u662fTSTree_delete\uff0c\u8fd9\u662f\u56e0\u4e3a\u5b83\u662f\u4e00\u4e2a\u5f00\u9500\u5f88\u5927\u7684\u64cd\u4f5c\uff0c\u6bd4BSTree_delete\u5927\u5f97\u591a\u3002\u5f53\u6211\u4f7f\u7528TSTree\u7ed3\u6784\u65f6\uff0c\u6211\u5c06\u5b83\u4eec\u89c6\u4e3a\u5e38\u91cf\u6570\u636e\uff0c\u6211\u6253\u7b97\u904d\u5386\u8bb8\u591a\u6b21\uff0c\u4f46\u662f\u6c38\u8fdc\u4e0d\u4f1a\u79fb\u9664\u4efb\u4f55\u4e1c\u897f\u3002\u5b83\u4eec\u5bf9\u4e8e\u8fd9\u6837\u7684\u64cd\u4f5c\u4f1a\u5f88\u5feb\uff0c\u4f46\u662f\u4e0d\u9002\u4e8e\u9700\u8981\u5feb\u901f\u63d2\u5165\u6216\u5220\u9664\u7684\u60c5\u51b5\u3002\u4e3a\u6b64\u6211\u4f1a\u4f7f\u7528Hashmap\u56e0\u4e3a\u5b83\u4f18\u4e8eBSTree\u548cTSTree\u3002\nTSTree\u7684\u5b9e\u73b0\u975e\u5e38\u7b80\u5355\uff0c\u4f46\u662f\u7b2c\u4e00\u6b21\u53ef\u80fd\u96be\u4ee5\u7406\u89e3\u3002\u6211\u4f1a\u5728\u4f60\u8bfb\u5b8c\u4e4b\u540e\u62c6\u5206\u5b83\u3002\n#include &lt;stdlib.h&gt;\n#include &lt;stdio.h&gt;\n#include &lt;assert.h&gt;\n#include &lt;lcthw\/dbg.h&gt;\n#include &lt;lcthw\/tstree.h&gt;\n\nstatic inline TSTree *TSTree_insert_base(TSTree *root, TSTree *node,\n        const char *key, size_t len, void *value)\n{\n    if(node == NULL) {\n        node = (TSTree *) calloc(1, sizeof(TSTree));\n\n        if(root == NULL) {\n            root = node;\n        }\n\n        node-&gt;splitchar = *key;\n    }\n\n    if(*key &lt; node-&gt;splitchar) {\n        node-&gt;low = TSTree_insert_base(root, node-&gt;low, key, len, value);\n    } else if(*key == node-&gt;splitchar) {\n        if(len &gt; 1) {\n            node-&gt;equal = TSTree_insert_base(root, node-&gt;equal, key+1, len - 1, value);\n        } else {\n            assert(node-&gt;value == NULL &amp;&amp; \"Duplicate insert into tst.\");\n            node-&gt;value = value;\n        }\n    } else {\n        node-&gt;high = TSTree_insert_base(root, node-&gt;high, key, len, value);\n    }\n\n    return node;\n}\n\nTSTree *TSTree_insert(TSTree *node, const char *key, size_t len, void *value)\n{\n    return TSTree_insert_base(node, node, key, len, value);\n}\n\nvoid *TSTree_search(TSTree *root, const char *key, size_t len)\n{\n    TSTree *node = root;\n    size_t i = 0;\n\n    while(i &lt; len &amp;&amp; node) {\n        if(key[i] &lt; node-&gt;splitchar) {\n            node = node-&gt;low;\n        } else if(key[i] == node-&gt;splitchar) {\n            i++;\n            if(i &lt; len) node = node-&gt;equal;\n        } else {\n            node = node-&gt;high;\n        }\n    }\n\n    if(node) {\n        return node-&gt;value;\n    } else {\n        return NULL;\n    }\n}\n\nvoid *TSTree_search_prefix(TSTree *root, const char *key, size_t len)\n{\n    if(len == 0) return NULL;\n\n    TSTree *node = root;\n    TSTree *last = NULL;\n    size_t i = 0;\n\n    while(i &lt; len &amp;&amp; node) {\n        if(key[i] &lt; node-&gt;splitchar) {\n            node = node-&gt;low;\n        } else if(key[i] == node-&gt;splitchar) {\n            i++;\n            if(i &lt; len) {\n                if(node-&gt;value) last = node;\n                node = node-&gt;equal;\n            }\n        } else {\n            node = node-&gt;high;\n        }\n    }\n\n    node = node ? node : last;\n\n    \/\/ traverse until we find the first value in the equal chain\n    \/\/ this is then the first node with this prefix\n    while(node &amp;&amp; !node-&gt;value) {\n        node = node-&gt;equal;\n    }\n\n    return node ? node-&gt;value : NULL;\n}\n\nvoid TSTree_traverse(TSTree *node, TSTree_traverse_cb cb, void *data)\n{\n    if(!node) return;\n\n    if(node-&gt;low) TSTree_traverse(node-&gt;low, cb, data);\n\n    if(node-&gt;equal) {\n        TSTree_traverse(node-&gt;equal, cb, data);\n    }\n\n    if(node-&gt;high) TSTree_traverse(node-&gt;high, cb, data);\n\n    if(node-&gt;value) cb(node-&gt;value, data);\n}\n\nvoid TSTree_destroy(TSTree *node)\n{\n    if(node == NULL) return;\n\n    if(node-&gt;low) TSTree_destroy(node-&gt;low);\n\n    if(node-&gt;equal) {\n        TSTree_destroy(node-&gt;equal);\n    }\n\n    if(node-&gt;high) TSTree_destroy(node-&gt;high);\n\n    free(node);\n}\n\u5bf9\u4e8eTSTree_insert\uff0c\u6211\u4f7f\u7528\u4e86\u76f8\u540c\u6a21\u5f0f\u7684\u9012\u5f52\u7ed3\u6784\uff0c\u5176\u4e2d\u6211\u521b\u5efa\u4e86\u4e00\u4e2a\u5c0f\u578b\u51fd\u6570\uff0c\u5b83\u8c03\u7528\u771f\u6b63\u7684\u9012\u5f52\u51fd\u6570\u3002\u6211\u5bf9\u6b64\u5e76\u4e0d\u505a\u4efb\u4f55\u68c0\u67e5\uff0c\u4f46\u662f\u4f60\u5e94\u8be5\u4e3a\u4e4b\u6dfb\u52a0\u901a\u5e38\u7684\u9632\u5fa1\u6027\u7f16\u7a0b\u7b56\u7565\u3002\u8981\u8bb0\u4f4f\u7684\u4e00\u4ef6\u4e8b\uff0c\u5c31\u662f\u5b83\u4f7f\u7528\u4e86\u4e00\u4e9b\u4e0d\u540c\u7684\u8bbe\u8ba1\uff0c\u8fd9\u91cc\u5e76\u6ca1\u6709\u5355\u72ec\u7684TSTree_create\u51fd\u6570\uff0c\u5982\u679c\u4f60\u5c06node\u4f20\u5165\u4e3aNULL\uff0c\u5b83\u4f1a\u65b0\u5efa\u4e00\u4e2a\uff0c\u7136\u540e\u8fd4\u56de\u6700\u7ec8\u7684\u503c\u3002\n\u8fd9\u610f\u5473\u7740\u6211\u9700\u8981\u4e3a\u4f60\u5206\u89e3TSTree_insert_base\uff0c\u4f7f\u4f60\u7406\u89e3\u63d2\u5165\u64cd\u4f5c\u3002\ntstree.c:10-18\n\u50cf\u6211\u63d0\u5230\u7684\u90a3\u6837\uff0c\u5982\u679c\u51fd\u6570\u63a5\u6536\u5230NULL\uff0c\u6211\u9700\u8981\u521b\u5efa\u8282\u70b9\uff0c\u5e76\u4e14\u5c06*key\uff08\u5f53\u524d\u5b57\u7b26\uff09\u8d4b\u503c\u7ed9\u5b83\u3002\u8fd9\u7528\u4e8e\u5f53\u6211\u63d2\u5165\u952e\u65f6\u6765\u6784\u5efa\u6811\u3002\ntstree.c:20-21\n\u5f53*key\u5c0f\u4e8esplitchar\u65f6\uff0c\u9009\u62e9low\u5206\u652f\u3002\ntstree.c:22\n\u5982\u679csplitchar\u76f8\u7b49\uff0c\u6211\u5c31\u8981\u8fdb\u4e00\u6b65\u786e\u5b9a\u7b49\u6027\u3002\u8fd9\u4f1a\u5728\u6211\u521a\u521a\u521b\u5efa\u8fd9\u4e2a\u8282\u70b9\u65f6\u53d1\u751f\uff0c\u6240\u4ee5\u8fd9\u91cc\u6211\u4f1a\u6784\u5efa\u8fd9\u68f5\u6811\u3002\ntstree.c:23-24\n\u4ecd\u7136\u6709\u5b57\u7b26\u4e32\u9700\u8981\u5904\u7406\uff0c\u6240\u4ee5\u5411\u4e0b\u9012\u5f52equal\u5206\u652f\uff0c\u5e76\u4e14\u79fb\u52a8\u5230\u4e0b\u4e00\u4e2a*key\u5b57\u7b26\u3002\ntstree.c:26-27\n\u8fd9\u662f\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\u7684\u60c5\u51b5\uff0c\u6240\u4ee5\u6211\u5c06\u503c\u8bbe\u7f6e\u597d\u3002\u6211\u7f16\u5199\u4e86\u4e00\u4e2aassert\u6765\u907f\u514d\u91cd\u590d\u3002\ntstree.c:29-30\n\u6700\u540e\u7684\u60c5\u51b5\u662f*key\u5927\u4e8esplitchar\uff0c\u6240\u4ee5\u6211\u9700\u8981\u5411\u4e0b\u9012\u5f52high\u5206\u652f\u3002\n\u8fd9\u4e2a\u6570\u636e\u7ed3\u6784\u7684key\u5b9e\u9645\u4e0a\u5e26\u6709\u4e00\u4e9b\u7279\u6027\uff0c\u6211\u53ea\u4f1a\u5728splitchar\u76f8\u7b49\u65f6\u9012\u589e\u6240\u8981\u5206\u6790\u7684\u5b57\u7b26\u3002\u5176\u5b83\u4e24\u79cd\u60c5\u51b5\u6211\u53ea\u4f1a\u7ee7\u7eed\u904d\u5386\u6574\u4e2a\u6811\uff0c\u76f4\u5230\u78b0\u5230\u4e86\u76f8\u7b49\u7684\u5b57\u7b26\uff0c\u6211\u624d\u4f1a\u9012\u5f52\u5904\u7406\u4e0b\u4e00\u4e2a\u5b57\u7b26\u3002\u8fd9\u4e00\u64cd\u4f5c\u4f7f\u5b83\u5bf9\u4e8e\u627e\u4e0d\u5230\u952e\u7684\u60c5\u51b5\u662f\u975e\u5e38\u5feb\u7684\u3002\u6211\u53ef\u4ee5\u4f20\u5165\u4e00\u4e2a\u4e0d\u5b58\u5728\u7684\u952e\uff0c\u7b80\u5355\u5730\u904d\u5386\u4e00\u4e9bhigh\u548clow\u8282\u70b9\uff0c\u76f4\u5230\u6211\u78b0\u5230\u4e86\u672b\u5c3e\u5e76\u4e14\u77e5\u9053\u8fd9\u4e2a\u952e\u4e0d\u5b58\u5728\u3002\u6211\u5e76\u4e0d\u9700\u8981\u5904\u7406\u952e\u7684\u6bcf\u4e2a\u5b57\u7b26\uff0c\u6216\u8005\u6811\u7684\u6bcf\u4e2a\u8282\u70b9\u3002\n\u4e00\u65e6\u4f60\u7406\u89e3\u4e86\u8fd9\u4e9b\uff0c\u4e4b\u540e\u6765\u5206\u6790TSTree_search\u5982\u4f55\u5de5\u4f5c\uff1a\ntstree.c:46\n\u6211\u5e76\u4e0d\u9700\u8981\u9012\u5f52\u5904\u7406\u6574\u68f5\u6811\uff0c\u53ea\u9700\u8981\u4f7f\u7528while\u5faa\u73af\u548c\u5f53\u524d\u7684node\u8282\u70b9\u3002\ntstree.c:47-48\n\u5982\u679c\u5f53\u524d\u5b57\u7b26\u5c0f\u4e8e\u8282\u70b9\u4e2d\u7684splitchar\uff0c\u5219\u9009\u62e9low\u5206\u652f\u3002\ntstree.c:49-51\n\u5982\u679c\u76f8\u7b49\uff0c\u81ea\u589ei\u5e76\u4e14\u9009\u62e9equal\u5206\u652f\uff0c\u53ea\u8981\u4e0d\u662f\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\u3002\u8fd9\u5c31\u662fif(i &lt; len)\u6240\u505a\u7684\uff0c\u4f7f\u6211\u4e0d\u4f1a\u8d8a\u8fc7\u6700\u540e\u7684value\u3002\ntstree.c:52-53\n\u5426\u5219\u6211\u4f1a\u9009\u62e9high\u5206\u652f\uff0c\u7531\u4e8e\u5f53\u524d\u5b57\u7b26\u66f4\u5927\u3002\ntstree.c:57-61\n\u5faa\u73af\u7ed3\u675f\u540e\u5982\u679cnode\u4e0d\u4e3a\u7a7a\uff0c\u90a3\u4e48\u8fd4\u56de\u5b83\u7684value\uff0c\u5426\u5219\u8fd4\u56deNULL\u3002\n\u8fd9\u5e76\u4e0d\u96be\u4ee5\u7406\u89e3\uff0c\u5e76\u4e14\u4f60\u53ef\u4ee5\u770b\u5230TSTree_search_prefix\u51fd\u6570\u7528\u4e86\u51e0\u4e4e\u76f8\u540c\u7684\u7b97\u6cd5\u3002\u552f\u4e00\u7684\u4e0d\u540c\u5c31\u662f\u6211\u5e76\u4e0d\u8bd5\u7740\u5bfb\u627e\u7cbe\u786e\u7684\u5339\u914d\uff0c\u800c\u662f\u53ef\u627e\u5230\u7684\u6700\u957f\u524d\u7f00\u3002\u6211\u5728\u76f8\u7b49\u65f6\u8ddf\u8e2alast\u8282\u70b9\u6765\u5b9e\u73b0\u5b83\uff0c\u5e76\u4e14\u5728\u641c\u7d22\u5faa\u73af\u7ed3\u675f\u4e4b\u540e\uff0c\u904d\u5386\u8fd9\u4e2a\u8282\u70b9\u76f4\u5230\u53d1\u73b0value\u3002\n\u89c2\u5bdfTSTree_search_prefix\uff0c\u4f60\u5c31\u4f1a\u5f00\u59cb\u660e\u767dTSTree\u76f8\u5bf9BSTree \u548c Hashmap\u5728\u67e5\u627e\u64cd\u4f5c\u4e0a\u7684\u53e6\u4e00\u4e2a\u4f18\u70b9\u3002\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3aX\u7684\u952e\uff0c\u4f60\u53ef\u4ee5\u5728X\u6b65\u5185\u627e\u5230\u4efb\u4f55\u952e\uff0c\u4f46\u662f\u4e5f\u53ef\u4ee5\u5728X\u6b65\u52a0\u4e0a\u989d\u5916\u7684N\u6b65\u5185\u627e\u5230\u7b2c\u4e00\u4e2a\u524d\u7f00\uff0c\u53d6\u51b3\u4e8e\u5339\u914d\u7684\u952e\u6709\u591a\u957f\u3002\u5982\u679c\u6811\u4e2d\u6700\u957f\u7684\u952e\u662f\u5341\u4e2a\u5b57\u7b26\uff0c\u90a3\u4e48\u4f60\u5c31\u53ef\u4ee5\u572810\u6b65\u4e4b\u5185\u627e\u5230\u4efb\u610f\u7684\u524d\u7f00\u3002\u66f4\u91cd\u8981\u7684\u662f\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u5bf9\u952e\u7684\u6bcf\u4e2a\u5b57\u7b26\u53ea\u6bd4\u8f83\u4e00\u6b21\u6765\u5b9e\u73b0\u3002\n\u76f8\u6bd4\u4e4b\u4e0b\uff0c\u4f7f\u7528BSTree\u6267\u884c\u76f8\u540c\u64cd\u4f5c\uff0c\u4f60\u9700\u8981\u5728BSTree\u7684\u6bcf\u4e00\u4e2a\u53ef\u80fd\u5339\u914d\u7684\u8282\u70b9\u4e2d\u68c0\u67e5\u4e24\u4e2a\u5b57\u7b26\u4e32\u662f\u5426\u6709\u5171\u540c\u7684\u524d\u7f00\u3002\u8fd9\u5bf9\u4e8e\u5bfb\u627e\u952e\uff0c\u6216\u8005\u68c0\u67e5\u952e\u662f\u5426\u5b58\u5728\uff08TSTree_search\uff09\u662f\u76f8\u540c\u7684\u3002\u4f60\u9700\u8981\u5c06\u6bcf\u4e2a\u5b57\u7b26\u4e0eBSTree\u4e2d\u7684\u5927\u591a\u6570\u5b57\u7b26\u5bf9\u6bd4\uff0c\u6765\u786e\u8ba4\u662f\u5426\u5339\u914d\u3002\nHashamp\u5bf9\u4e8e\u5bfb\u627e\u524d\u7f00\u66f4\u52a0\u7cdf\u7cd5\uff0c\u56e0\u4e3a\u4f60\u4e0d\u80fd\u591f\u4ec5\u4ec5\u8ba1\u7b97\u524d\u7f00\u7684\u54c8\u5e0c\u503c\u3002\u4f60\u57fa\u672c\u4e0a\u4e0d\u80fd\u9ad8\u6548\u5728Hashmap\u4e2d\u5b9e\u73b0\u5b83\uff0c\u9664\u975e\u6570\u636e\u7c7b\u4f3cURL\u53ef\u4ee5\u88ab\u89e3\u6790\u3002\u5373\u4f7f\u8fd9\u6837\u4f60\u8fd8\u662f\u9700\u8981\u904d\u5386Hashmap\u7684\u6240\u6709\u8282\u70b9\u3002\n\n\u8bd1\u8005\u6ce8\uff1a\u4e8c\u53c9\u6811\u548c\u4e09\u53c9\u6811\u5728\u641c\u7d22\u65f6\u90fd\u662f\u8d70\u5176\u4e2d\u7684\u4e00\u652f\uff0c\u4f46\u7531\u4e8e\u4e8c\u53c9\u6811\u4e2d\u6bcf\u4e2a\u8282\u70b9\u50a8\u5b58\u5b57\u7b26\u4e32\uff0c\u800c\u4e09\u53c9\u6811\u50a8\u5b58\u7684\u662f\u5b57\u7b26\u3002\u6240\u4ee5\u4e09\u53c9\u6811\u7684\u6574\u4e2a\u641c\u7d22\u8fc7\u7a0b\u76f8\u5f53\u4e8e\u4e00\u6b21\u5b57\u7b26\u4e32\u6bd4\u8f83\uff0c\u800c\u4e8c\u53c9\u6811\u7684\u6bcf\u4e2a\u8282\u70b9\u90fd\u9700\u8981\u4e00\u6b21\u5b57\u7b26\u4e32\u6bd4\u8f83\u3002\u4e09\u53c9\u6811\u5806\u53e0\u50a8\u5b58\u5b57\u7b26\u4e32\u4f7f\u641c\u7d22\u8d77\u6765\u66f4\u65b9\u4fbf\u3002\n\n\n\u81f3\u4e8e\u54c8\u5e0c\u8868\uff0c\u7531\u4e8e\u5b57\u7b26\u4e32\u6574\u4f53\u548c\u524d\u7f00\u8ba1\u7b97\u51fa\u6765\u7684\u54c8\u5e0c\u503c\u5dee\u522b\u5f88\u5927\uff0c\u6240\u4ee5\u6309\u524d\u7f00\u641c\u7d22\u65f6\uff0c\u54c8\u5e0c\u7684\u4f18\u52bf\u5b8c\u5168\u5931\u6548\uff0c\u6240\u4ee5\u53ea\u80fd\u6539\u4e3a\u66b4\u529b\u641c\u7d22\uff0c\u6548\u679c\u6bd4\u4e8c\u53c9\u6811\u8fd8\u8981\u5dee\u3002\n\n\u6700\u540e\u7684\u4e24\u4e2a\u51fd\u6570\u5e94\u8be5\u6613\u4e8e\u5206\u6790\uff0c\u56e0\u4e3a\u5b83\u4eec\u662f\u5178\u578b\u7684\u904d\u5386\u548c\u9500\u6bc1\u64cd\u4f5c\uff0c\u4f60\u5df2\u7ecf\u5728\u5176\u5b83\u6570\u636e\u7ed3\u6784\u4e2d\u770b\u5230\u8fc7\u4e86\u3002\n\u6700\u540e\uff0c\u6211\u7f16\u5199\u4e86\u7b80\u5355\u7684\u5355\u5143\u6d4b\u8bd5\uff0c\u6765\u786e\u4fdd\u6211\u6240\u505a\u7684\u5168\u90e8\u4e1c\u897f\u6b63\u786e\u3002\n#include \"minunit.h\"\n#include &lt;lcthw\/tstree.h&gt;\n#include &lt;string.h&gt;\n#include &lt;assert.h&gt;\n#include &lt;lcthw\/bstrlib.h&gt;\n\n\nTSTree *node = NULL;\nchar *valueA = \"VALUEA\";\nchar *valueB = \"VALUEB\";\nchar *value2 = \"VALUE2\";\nchar *value4 = \"VALUE4\";\nchar *reverse = \"VALUER\";\nint traverse_count = 0;\n\nstruct tagbstring test1 = bsStatic(\"TEST\");\nstruct tagbstring test2 = bsStatic(\"TEST2\");\nstruct tagbstring test3 = bsStatic(\"TSET\");\nstruct tagbstring test4 = bsStatic(\"T\");\n\nchar *test_insert()\n{\n    node = TSTree_insert(node, bdata(&amp;test1), blength(&amp;test1), valueA);\n    mu_assert(node != NULL, \"Failed to insert into tst.\");\n\n    node = TSTree_insert(node, bdata(&amp;test2), blength(&amp;test2), value2);\n    mu_assert(node != NULL, \"Failed to insert into tst with second name.\");\n\n    node = TSTree_insert(node, bdata(&amp;test3), blength(&amp;test3), reverse);\n    mu_assert(node != NULL, \"Failed to insert into tst with reverse name.\");\n\n    node = TSTree_insert(node, bdata(&amp;test4), blength(&amp;test4), value4);\n    mu_assert(node != NULL, \"Failed to insert into tst with second name.\");\n\n    return NULL;\n}\n\nchar *test_search_exact()\n{\n    \/\/ tst returns the last one inserted\n    void *res = TSTree_search(node, bdata(&amp;test1), blength(&amp;test1));\n    mu_assert(res == valueA, \"Got the wrong value back, should get A not B.\");\n\n    \/\/ tst does not find if not exact\n    res = TSTree_search(node, \"TESTNO\", strlen(\"TESTNO\"));\n    mu_assert(res == NULL, \"Should not find anything.\");\n\n    return NULL;\n}\n\nchar *test_search_prefix()\n{\n    void *res = TSTree_search_prefix(node, bdata(&amp;test1), blength(&amp;test1));\n    debug(\"result: %p, expected: %p\", res, valueA);\n    mu_assert(res == valueA, \"Got wrong valueA by prefix.\");\n\n    res = TSTree_search_prefix(node, bdata(&amp;test1), 1);\n    debug(\"result: %p, expected: %p\", res, valueA);\n    mu_assert(res == value4, \"Got wrong value4 for prefix of 1.\");\n\n    res = TSTree_search_prefix(node, \"TE\", strlen(\"TE\"));\n    mu_assert(res != NULL, \"Should find for short prefix.\");\n\n    res = TSTree_search_prefix(node, \"TE--\", strlen(\"TE--\"));\n    mu_assert(res != NULL, \"Should find for partial prefix.\");\n\n\n    return NULL;\n}\n\nvoid TSTree_traverse_test_cb(void *value, void *data)\n{\n    assert(value != NULL &amp;&amp; \"Should not get NULL value.\");\n    assert(data == valueA &amp;&amp; \"Expecting valueA as the data.\");\n    traverse_count++;\n}\n\nchar *test_traverse()\n{\n    traverse_count = 0;\n    TSTree_traverse(node, TSTree_traverse_test_cb, valueA);\n    debug(\"traverse count is: %d\", traverse_count);\n    mu_assert(traverse_count == 4, \"Didn't find 4 keys.\");\n\n    return NULL;\n}\n\nchar *test_destroy()\n{\n    TSTree_destroy(node);\n\n    return NULL;\n}\n\nchar * all_tests() {\n    mu_suite_start();\n\n    mu_run_test(test_insert);\n    mu_run_test(test_search_exact);\n    mu_run_test(test_search_prefix);\n    mu_run_test(test_traverse);\n    mu_run_test(test_destroy);\n\n    return NULL;\n}\n\nRUN_TESTS(all_tests);\n\u4f18\u70b9\u548c\u7f3a\u70b9\nTSTree\u53ef\u4ee5\u7528\u4e8e\u5b9e\u73b0\u4e00\u4e9b\u5176\u5b83\u5b9e\u7528\u7684\u4e8b\u60c5\uff1a\n\n\u9664\u4e86\u5bfb\u627e\u524d\u7f00\uff0c\u4f60\u53ef\u4ee5\u53cd\u8f6c\u63d2\u5165\u7684\u6240\u6709\u952e\uff0c\u4e4b\u540e\u901a\u8fc7\u540e\u7f00\u6765\u5bfb\u627e\u3002\u6211\u4f7f\u7528\u5b83\u6765\u5bfb\u627e\u4e3b\u673a\u540d\u79f0\uff0c\u56e0\u4e3a\u6211\u60f3\u8981\u627e\u5230*.learncodethehardway.com\uff0c\u6240\u4ee5\u5982\u679c\u6211\u53cd\u5411\u6765\u5bfb\u627e\uff0c\u4f1a\u66f4\u5feb\u5339\u914d\u5230\u5b83\u4eec\u3002\n\u4f60\u53ef\u4ee5\u6267\u884c\u201c\u6a21\u7cca\u201d\u641c\u7d22\uff0c\u5176\u4e2d\u4f60\u53ef\u4ee5\u6536\u96c6\u6240\u6709\u4e0e\u952e\u7684\u5927\u591a\u6570\u5b57\u7b26\u76f8\u4f3c\u7684\u8282\u70b9\uff0c\u6216\u8005\u4f7f\u7528\u5176\u5b83\u7b97\u6cd5\u7528\u4e8e\u641c\u7d22\u8fd1\u4f3c\u7684\u5339\u914d\u3002\n\u4f60\u53ef\u4ee5\u5bfb\u627e\u6240\u6709\u4e2d\u95f4\u5e26\u6709\u7279\u5b9a\u90e8\u5206\u7684\u952e\u3002\n\n\u6211\u5df2\u7ecf\u8c08\u8bba\u4e86TSTree\u80fd\u505a\u7684\u4e00\u4e9b\u4e8b\u60c5\uff0c\u4f46\u662f\u5b83\u4eec\u5e76\u4e0d\u603b\u662f\u6700\u597d\u7684\u6570\u636e\u7ed3\u6784\u3002TSTree\u7684\u7f3a\u70b9\u5728\u4e8e\uff1a\n\n\u50cf\u6211\u63d0\u5230\u8fc7\u7684\u90a3\u6837\uff0c\u5220\u9664\u64cd\u4f5c\u975e\u5e38\u9ebb\u70e6\u3002\u5b83\u4eec\u9002\u7528\u4e8e\u9700\u8981\u5feb\u901f\u68c0\u7d22\u5e76\u4e14\u4ece\u4e0d\u79fb\u9664\u7684\u64cd\u4f5c\u3002\u5982\u679c\u4f60\u9700\u8981\u5220\u9664\uff0c\u53ef\u4ee5\u7b80\u5355\u5730\u5c06value\u7f6e\u7a7a\uff0c\u4e4b\u540e\u5f53\u6811\u8fc7\u5927\u65f6\u5468\u671f\u6027\u91cd\u6784\u5b83\u3002\n\u4e0eBSTree\u548cHashmap\u76f8\u6bd4\uff0c\u5b83\u5728\u76f8\u540c\u7684\u952e\u4e0a\u4f7f\u7528\u4e86\u5927\u91cf\u7684\u7a7a\u95f4\u3002\u5b83\u5bf9\u4e8e\u952e\u4e2d\u7684\u6bcf\u4e2a\u5b57\u7b26\u90fd\u4f7f\u7528\u4e86\u5b8c\u6574\u7684\u8282\u70b9\u3002\u5b83\u5bf9\u4e8e\u77ed\u7684\u952e\u6548\u679c\u66f4\u597d\uff0c\u4f46\u5982\u679c\u4f60\u5728TSTree\u4e2d\u653e\u5165\u4e00\u5927\u5806\u4e1c\u897f\uff0c\u5b83\u4f1a\u53d8\u5f97\u5f88\u5927\u3002\n\u5b83\u4eec\u4e5f\u4e0d\u9002\u5408\u5904\u7406\u975e\u5e38\u957f\u7684\u952e\uff0c\u7136\u800c\u201c\u957f\u201d\u662f\u4e3b\u89c2\u7684\u8bcd\uff0c\u6240\u4ee5\u5e94\u5f53\u50cf\u901a\u5e38\u4e00\u6837\u5148\u8fdb\u884c\u6d4b\u8bd5\u3002\u5982\u679c\u4f60\u5c1d\u8bd5\u50a8\u5b58\u4e00\u4e07\u4e2a\u5b57\u7b26\u7684\u952e\uff0c\u90a3\u4e48\u5e94\u5f53\u4f7f\u7528Hashmap\u3002\n\n\u5982\u4f55\u6539\u8fdb\n\u50cf\u901a\u5e38\u4e00\u6837\uff0c\u6d4f\u89c8\u4ee3\u7801\uff0c\u4f7f\u7528\u9632\u5fa1\u6027\u7684\u5148\u51b3\u6761\u4ef6\u3001\u65ad\u8a00\uff0c\u5e76\u4e14\u68c0\u67e5\u6bcf\u4e2a\u51fd\u6570\u6765\u6539\u8fdb\u3002\u4e0b\u9762\u662f\u4e00\u4e9b\u5176\u4ed6\u7684\u6539\u8fdb\u65b9\u6848\uff0c\u4f46\u662f\u4f60\u5e76\u4e0d\u9700\u8981\u5168\u90e8\u5b9e\u73b0\u5b83\u4eec\uff1a\n\n\u4f60\u53ef\u4ee5\u4f7f\u7528DArray\u6765\u5141\u8bb8\u91cd\u590d\u7684value\u503c\u3002\n\u56e0\u4e3a\u6211\u63d0\u5230\u5220\u9664\u975e\u5e38\u56f0\u96be\uff0c\u4f46\u662f\u4f60\u53ef\u4ee5\u901a\u8fc7\u5c06\u503c\u8bbe\u4e3aNULL\u6765\u6a21\u62df\uff0c\u4f7f\u503c\u80fd\u591f\u9ad8\u6548\u88ab\u5220\u9664\u3002\n\u76ee\u524d\u8fd8\u4e0d\u80fd\u83b7\u53d6\u5230\u6240\u6709\u5339\u914d\u6307\u5b9a\u524d\u7f00\u7684\u503c\uff0c\u6211\u4f1a\u8ba9\u4f60\u5728\u9644\u52a0\u9898\u4e2d\u5b9e\u73b0\u5b83\u3002\n\u6709\u4e00\u4e9b\u5176\u4ed6\u5f97\u66f4\u590d\u6742\u7684\u7b97\u6cd5\u4f1a\u6bd4\u5b83\u8981\u597d\u3002\u67e5\u8be2\u524d\u7f00\u6570\u7ec4\u3001\u524d\u7f00\u6811\u548c\u57fa\u6570\u6811\u7684\u8d44\u6599\u3002\n\n\u9644\u52a0\u9898\n\n\u5b9e\u73b0TSTree_collect\u8fd4\u56deDArray\u5305\u542b\u6240\u6709\u5339\u914d\u6307\u5b9a\u524d\u7f00\u7684\u952e\u3002\n\u5b9e\u73b0TSTree_search_suffix\u548cTSTree_insert_suffix\uff0c\u5b9e\u73b0\u540e\u7f00\u641c\u7d22\u548c\u63d2\u5165\u3002\n\u4f7f\u7528valgrind\u6765\u67e5\u770b\u4e0eBSTree \u548c Hashmap\u76f8\u6bd4\uff0c\u8fd9\u4e2a\u7ed3\u6784\u4f7f\u7528\u4e86\u591a\u5c11\u5185\u5b58\u6765\u50a8\u5b58\u6570\u636e\u3002\n","categories":"\u7ec3\u4e6021","tags":["\u641c\u7d22","\u7ed3\u6784"]},{"title":"\u4e00\u4e2a\u5feb\u901f\u7684URL\u8def\u7531","url":"https:\/\/naka507.github.io\/posts\/A0F3E9CEEB1897B5.html","content":"\u4e00\u4e2a\u5feb\u901f\u7684URL\u8def\u7531\n\u6211\u73b0\u5728\u6253\u7b97\u5411\u4f60\u5c55\u793a\u4f7f\u7528TSTree\u6765\u521b\u5efa\u670d\u52a1\u5668\u4e2d\u7684\u5feb\u901fURL\u8def\u7531\u3002\u5b83\u9002\u7528\u4e8e\u5e94\u7528\u4e2d\u7684\u7b80\u5355\u7684URL\u5339\u914d\uff0c\u800c\u4e0d\u662f\u5728\u8bb8\u591aWeb\u5e94\u7528\u6846\u67b6\u4e2d\u7684\u66f4\u590d\u6742\uff08\u4e00\u4e9b\u60c5\u51b5\u4e0b\u4e5f\u4e0d\u5fc5\u8981\uff09\u7684\u8def\u7531\u53d1\u73b0\u529f\u80fd\u3002\n\u6211\u6253\u7b97\u7f16\u7a0b\u4e00\u4e2a\u5c0f\u578b\u547d\u4ee4\u884c\u5de5\u5177\u548c\u8def\u7531\u4ea4\u4e92\uff0c\u4ed6\u53eb\u505aurlor\uff0c\u8bfb\u53d6\u7b80\u5355\u7684\u8def\u7531\u6587\u4ef6\uff0c\u4e4b\u540e\u63d0\u793a\u7528\u6237\u8f93\u5165\u8981\u68c0\u7d22\u7684URL\u3002\n#include &lt;lcthw\/tstree.h&gt;\n#include &lt;lcthw\/bstrlib.h&gt;\n\nTSTree *add_route_data(TSTree *routes, bstring line)\n{\n    struct bstrList *data = bsplit(line, ' ');\n    check(data-&gt;qty == 2, \"Line '%s' does not have 2 columns\",\n            bdata(line));\n\n    routes = TSTree_insert(routes,\n            bdata(data-&gt;entry[0]), blength(data-&gt;entry[0]),\n            bstrcpy(data-&gt;entry[1]));\n\n    bstrListDestroy(data);\n\n    return routes;\n\nerror:\n    return NULL;\n}\n\nTSTree *load_routes(const char *file)\n{\n    TSTree *routes = NULL;\n    bstring line = NULL;\n    FILE *routes_map = NULL;\n\n    routes_map = fopen(file, \"r\");\n    check(routes_map != NULL, \"Failed to open routes: %s\", file);\n\n    while((line = bgets((bNgetc)fgetc, routes_map, '\\n')) != NULL) {\n        check(btrimws(line) == BSTR_OK, \"Failed to trim line.\");\n        routes = add_route_data(routes, line);\n        check(routes != NULL, \"Failed to add route.\");\n        bdestroy(line);\n    }\n\n    fclose(routes_map);\n    return routes;\n\nerror:\n    if(routes_map) fclose(routes_map);\n    if(line) bdestroy(line);\n\n    return NULL;\n}\n\nbstring match_url(TSTree *routes, bstring url)\n{\n    bstring route = TSTree_search(routes, bdata(url), blength(url));\n\n    if(route == NULL) {\n        printf(\"No exact match found, trying prefix.\\n\");\n        route = TSTree_search_prefix(routes, bdata(url), blength(url));\n    }\n\n    return route;\n}\n\nbstring read_line(const char *prompt)\n{\n    printf(\"%s\", prompt);\n\n    bstring result = bgets((bNgetc)fgetc, stdin, '\\n');\n    check_debug(result != NULL, \"stdin closed.\");\n\n    check(btrimws(result) == BSTR_OK, \"Failed to trim.\");\n\n    return result;\n\nerror:\n    return NULL;\n}\n\nvoid bdestroy_cb(void *value, void *ignored)\n{\n    (void)ignored;\n    bdestroy((bstring)value);\n}\n\nvoid destroy_routes(TSTree *routes)\n{\n    TSTree_traverse(routes, bdestroy_cb, NULL);\n    TSTree_destroy(routes);\n}\n\nint main(int argc, char *argv[])\n{\n    bstring url = NULL;\n    bstring route = NULL;\n    check(argc == 2, \"USAGE: urlor &lt;urlfile&gt;\");\n\n    TSTree *routes = load_routes(argv[1]);\n    check(routes != NULL, \"Your route file has an error.\");\n\n    while(1) {\n        url = read_line(\"URL&gt; \");\n        check_debug(url != NULL, \"goodbye.\");\n\n        route = match_url(routes, url);\n\n        if(route) {\n            printf(\"MATCH: %s == %s\\n\", bdata(url), bdata(route));\n        } else {\n            printf(\"FAIL: %s\\n\", bdata(url));\n        }\n\n        bdestroy(url);\n    }\n\n    destroy_routes(routes);\n    return 0;\n\nerror:\n    destroy_routes(routes);\n    return 1;\n}\n\u4e4b\u540e\u6211\u521b\u5efa\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u6587\u4ef6\uff0c\u542b\u6709\u4e00\u4e9b\u7528\u4e8e\u4ea4\u4e92\u7684\u4f2a\u9020\u7684\u8def\u7531\uff1a\n\/ MainApp \/hello Hello \/hello\/ Hello \/signup Signup \/logout Logout \/album\/ Album\n\u4f60\u4f1a\u770b\u5230\u4ec0\u4e48\n\u4e00\u65e6\u4f60\u4f7furlor\u5de5\u4f5c\uff0c\u5e76\u4e14\u521b\u5efa\u4e86\u8def\u7531\u6587\u4ef6\uff0c\u4f60\u53ef\u4ee5\u5c1d\u8bd5\u8fd9\u6837\uff1a\n$ .\/bin\/urlor urls.txt\nURL&gt; \/\nMATCH: \/ == MainApp\nURL&gt; \/hello\nMATCH: \/hello == Hello\nURL&gt; \/hello\/zed  \nNo exact match found, trying prefix.\nMATCH: \/hello\/zed == Hello\nURL&gt; \/album\nNo exact match found, trying prefix.\nMATCH: \/album == Album\nURL&gt; \/album\/12345\nNo exact match found, trying prefix.\nMATCH: \/album\/12345 == Album\nURL&gt; asdfasfdasfd\nNo exact match found, trying prefix.\nFAIL: asdfasfdasfd\nURL&gt; \/asdfasdfasf\nNo exact match found, trying prefix.\nMATCH: \/asdfasdfasf == MainApp\nURL&gt;\n$\n\u4f60\u53ef\u4ee5\u770b\u5230\u8def\u7531\u7cfb\u7edf\u9996\u5148\u5c1d\u8bd5\u7cbe\u786e\u5339\u914d\uff0c\u4e4b\u540e\u5982\u679c\u627e\u4e0d\u5230\u7684\u8bdd\u5219\u4f1a\u5c1d\u8bd5\u524d\u7f00\u5339\u914d\u3002\u8fd9\u4e3b\u8981\u662f\u5c1d\u8bd5\u8fd9\u4e8c\u8005\u7684\u4e0d\u540c\u3002\u6839\u636e\u4f60\u7684URL\u7684\u8bed\u4e49\uff0c\u4f60\u53ef\u80fd\u60f3\u8981\u4e4b\u4e2d\u7cbe\u786e\u5339\u914d\uff0c\u59cb\u7ec8\u524d\u7f00\u5339\u914d\uff0c\u6216\u8005\u6267\u884c\u4e8c\u8005\u5e76\u9009\u51fa\u201c\u6700\u597d\u201d\u7684\u90a3\u4e2a\u3002\n\u5982\u4f55\u6539\u8fdb\nURL\u975e\u5e38\u53e4\u602a\u3002\u56e0\u4e3a\u4eba\u4eec\u60f3\u8ba9\u5b83\u4eec\u795e\u5947\u5730\u5904\u7406\u5b83\u4eec\u7684web\u5e94\u7528\u6240\u5177\u6709\u7684\uff0c\u6240\u6709\u75af\u72c2\u7684\u4e8b\u60c5\uff0c\u5373\u4f7f\u4e0d\u662f\u5f88\u5408\u903b\u8f91\u3002\u5728\u8fd9\u4e2a\u5bf9\u5982\u4f55\u5c06TSTree\u7528\u4f5c\u8def\u7531\u7684\u7b80\u5355\u6f14\u793a\u4e2d\uff0c\u5b83\u5177\u6709\u4e00\u4e9b\u4eba\u4eec\u4e0d\u60f3\u8981\u7684\u7f3a\u9677\u3002\u6bd4\u5982\uff0c\u5b83\u4f1a\u628a\/al\u5339\u914d\u5230Album\uff0c\u5b83\u662f\u4eba\u4eec\u901a\u5e38\u4e0d\u60f3\u8981\u7684\u3002\u5b83\u4eec\u60f3\u8981\/album\/*\u5339\u914d\u5230Album\u4ee5\u53ca\/al\u5339\u914d\u5230404\u9519\u8bef\u3002\n\u8fd9\u5e76\u4e0d\u96be\u4ee5\u5b9e\u73b0\uff0c\u56e0\u4e3a\u4f60\u53ef\u4ee5\u4fee\u6539\u524d\u7f00\u7b97\u6cd5\u6765\u4ee5\u4f60\u60f3\u8981\u7684\u4efb\u4f55\u65b9\u5f0f\u5339\u914d\u3002\u5982\u679c\u4f60\u4fee\u6539\u4e86\u5339\u914d\u7b97\u6cd5\uff0c\u6765\u5bfb\u627e\u6240\u6709\u5339\u914d\u7684\u524d\u7f00\uff0c\u4e4b\u540e\u9009\u51fa\u201c\u6700\u597d\u201d\u7684\u90a3\u4e2a\uff0c\u4f60\u5c31\u53ef\u4ee5\u8f7b\u6613\u505a\u5230\u5b83\u3002\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\/al\u56de\u5339\u914dMainApp\u6216\u8005Album\u3002\u83b7\u5f97\u8fd9\u4e9b\u7ed3\u679c\u4e4b\u540e\uff0c\u5c31\u53ef\u4ee5\u6267\u884c\u4e00\u4e9b\u903b\u8f91\u6765\u51b3\u5b9a\u54ea\u4e2a\u201c\u6700\u597d\u201d\u3002\n\u53e6\u4e00\u4ef6\u4f60\u80fd\u5728\u771f\u6b63\u7684\u8def\u7531\u7cfb\u7edf\u91cc\u505a\u7684\u4e8b\u60c5\uff0c\u5c31\u662f\u4f7f\u7528TSTree\u6765\u5bfb\u627e\u6240\u6709\u53ef\u80fd\u7684\u5339\u914d\uff0c\u4f46\u662f\u8fd9\u4e9b\u5339\u914d\u662f\u9700\u8981\u68c0\u67e5\u7684\u4e00\u4e9b\u6a21\u5f0f\u4e32\u3002\u5728\u8bb8\u591aweb\u5e94\u7528\u4e2d\uff0c\u6709\u4e00\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u5217\u8868\uff0c\u7528\u4e8e\u548c\u6bcf\u4e2a\u8bf7\u6c42\u7684URL\u8fdb\u884c\u5339\u914d\u3002\u5339\u914d\u6240\u6709\u8fd9\u4e9b\u6b63\u5219\u8868\u8fbe\u5f0f\u975e\u5e38\u82b1\u65f6\u95f4\uff0c\u6240\u4ee5\u4f60\u53ef\u4ee5\u4f7f\u7528TSTree\u6765\u901a\u8fc7\u5b83\u4eec\u7684\u524d\u7f00\u5bfb\u627e\u6240\u6709\u53ef\u80fd\u7684\u7ed3\u679c\u3002\u4e8e\u662f\u4f60\u5c31\u53ef\u4ee5\u7f29\u5c0f\u6a21\u5f0f\u4e32\u7684\u8303\u56f4\uff0c\u66f4\u5feb\u901f\u5730\u505a\u5c1d\u8bd5\u3002\n\u4f7f\u7528\u8fd9\u79cd\u65b9\u5f0f\uff0c\u4f60\u7684URL\u4f1a\u7cbe\u786e\u5339\u914d\uff0c\u56e0\u4e3a\u4f60\u5b9e\u9645\u4e0a\u8fd0\u884c\u4e86\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u5b83\u4eec\u5339\u914d\u8d77\u6765\u66f4\u5feb\uff0c\u56e0\u4e3a\u4f60\u901a\u8fc7\u53ef\u80fd\u7684\u524d\u7f00\u6765\u67e5\u627e\u5b83\u4eec\u3002\n\u8fd9\u79cd\u7b97\u6cd5\u4e5f\u53ef\u7528\u4e8e\u6240\u6709\u9700\u8981\u7528\u6237\u53ef\u89c6\u5316\u7684\u7075\u6d3b\u8def\u7531\u673a\u5236\u3002\u57df\u540d\u3001IP\u5730\u5740\u3001\u5305\u6ce8\u518c\u5668\u548c\u76ee\u5f55\uff0c\u6587\u4ef6\u6216\u8005URL\u3002\n\u9644\u52a0\u9898\n\n\u521b\u5efa\u4e00\u4e2a\u5b9e\u9645\u7684\u5f15\u64ce\uff0c\u4f7f\u7528Handler\u7ed3\u6784\u50a8\u5b58\u5e94\u7528\uff0c\u800c\u4e0d\u662f\u4ec5\u4ec5\u50a8\u5b58\u5e94\u7528\u7684\u5b57\u7b26\u4e32\u3002\u8fd9\u4e2a\u7ed3\u6784\u50a8\u5b58\u5b83\u6240\u7ed1\u5b9a\u7684URL\uff0c\u540d\u79f0\u548c\u4efb\u4f55\u9700\u8981\u6784\u5efa\u5b9e\u9645\u8def\u7531\u7cfb\u7edf\u7684\u4e1c\u897f\u3002\n\u5c06URL\u6620\u5c04\u5230.so\u6587\u4ef6\u800c\u4e0d\u662f\u4efb\u610f\u7684\u540d\u5b57\uff0c\u5e76\u4e14\u4f7f\u7528dlopen\u7cfb\u7edf\u52a8\u6001\u52a0\u8f7d\u5904\u7406\u5668\uff0c\u5e76\u6267\u884c\u5b83\u4eec\u6240\u5305\u542b\u7684\u56de\u8c03\u3002\u5c06\u8fd9\u4e9b\u56de\u8c03\u653e\u8fdb\u4f60\u7684Handler\u7ed3\u6784\u4f53\u4e2d\uff0c\u4e4b\u540e\u4f60\u5c31\u7528C\u7f16\u5199\u4e86\u52a8\u6001\u56de\u8c03\u5904\u7406\u5668\u7cfb\u7edf\u7684\u5168\u90e8\u3002\n","categories":"\u7ec3\u4e6022","tags":["\u8def\u7531","Web","\u6846\u67b6"]},{"title":"\u89e3\u6784 K&R C\u201d \u5df2\u6b7b","url":"https:\/\/naka507.github.io\/posts\/ACB13F6E3D683928.html","content":"\u201c\u89e3\u6784 K&amp;R C\u201d \u5df2\u6b7b\n\u6211\u5f7b\u5e95\u5931\u8d25\u4e86\u3002\u6211\u653e\u5f03\u4e86\u591a\u5e74\u4ee5\u6765\u5c1d\u8bd5\u7406\u6e05C\u8bed\u8a00\u5982\u4f55\u7f16\u5199\u7684\u60f3\u6cd5\uff0c\u56e0\u4e3a\u5b83\u7684\u53d1\u660e\u662f\u6709\u7f3a\u9677\u7684\u3002\u8d77\u521d\uff0c\u6211\u7684\u4e66\u4e2d\u6709\u4e00\u7ae0\u53eb\u505a\u201c\u89e3\u6784 K&amp;R C\u201d\u3002\u8fd9\u4e00\u7ae0\u7684\u76ee\u7684\u662f\u544a\u8bc9\u4eba\u4eec\u6c38\u8fdc\u4e0d\u8981\u5047\u8bbe\u5b83\u4eec\u7684\u4ee3\u7801\u662f\u6b63\u786e\u7684\uff0c\u6216\u8005\u5bf9\u4e8e\u4efb\u4f55\u4eba\u7684\u4ee3\u7801\uff0c\u4e0d\u7ba1\u5b83\u6709\u591a\u51fa\u540d\uff0c\u4e5f\u4e0d\u80fd\u907f\u514d\u7f3a\u9677\u3002\u8fd9\u770b\u8d77\u6765\u4f3c\u4e4e\u5e76\u4e0d\u662f\u9769\u547d\u6027\u7684\u60f3\u6cd5\uff0c\u5e76\u4e14\u5bf9\u6211\u6765\u8bf4\u5b83\u53ea\u662f\u5206\u6790\u4ee3\u7801\u7f3a\u9677\u548c\u7f16\u5199\u66f4\u597d\u66f4\u53ef\u9760\u4ee3\u7801\u7684\u4e00\u90e8\u5206\u3002\n\u591a\u5e74\u4ee5\u6765\uff0c\u6211\u5728\u5199\u8fd9\u672c\u4e66\u7684\u8fd9\u4e00\u5757\u65f6\u6536\u5230\u91cd\u632b\uff0c\u5e76\u4e14\u6536\u5230\u4e86\u6bd4\u4efb\u4f55\u5176\u5b83\u4e8b\u60c5\u66f4\u591a\u7684\u6279\u8bc4\u548c\u4fae\u8fb1\u3002\u4e0d\u4ec5\u5982\u6b64\uff0c\u800c\u4e14\u4e66\u4e2d\u8fd9\u90e8\u5206\u7684\u6279\u8bc4\u4ee5\u8fd9\u4e9b\u8bdd\u800c\u7ed3\u675f\uff0c\u201c\u4f60\u662f\u5bf9\u7684\uff0c\u4f46\u662f\u4f60\u8ba4\u4e3a\u4ed6\u4eec\u7684\u4ee3\u7801\u5f88\u70c2\u8fd9\u4ef6\u4e8b\u662f\u9519\u7684\u3002\u201d\u6211\u4e0d\u80fd\u7406\u89e3\uff0c\u6709\u4e00\u7fa4\u88ab\u8ba4\u4e3a\u5f88\u806a\u660e\u7684\u4eba\uff0c\u4ed6\u4eec\u7684\u5927\u8111\u4e2d\u5145\u6ee1\u7406\u6027\uff0c\u5374\u575a\u6301\u201c\u6211\u53ef\u4ee5\u662f\u9519\u7684\uff0c\u4f46\u662f\u540c\u65f6\u4e5f\u53ef\u4ee5\u662f\u5bf9\u7684\u201d\u7684\u89c2\u70b9\u3002\u6211\u4e0d\u5f97\u4e0d\u4e0e\u8fd9\u4e9b\u5b66\u7a76\u5728C IRC channels\u3001\u90ae\u4ef6\u5217\u8868\u3001\u8bc4\u8bba\u4e0a\u6597\u4e89\uff0c\u8fd9\u5305\u62ec\u6bcf\u4e00\u4e2a\u5b83\u4eec\u63d0\u51fa\u4e00\u4e9b\u602a\u5f02\u7684\u3001\u8fc2\u8150\u7684\u523b\u8584\u610f\u89c1\u7684\u60c5\u51b5\uff0c\u9700\u8981\u6211\u5bf9\u6211\u7684\u6587\u7ae0\u8fdb\u884c\u66f4\u591a\u7684\u903b\u8f91\u6027\u4fee\u6539\u6765\u8bf4\u670d\u4ed6\u4eec\u3002\n\u6709\u8da3\u7684\u4e00\u70b9\u662f\uff0c\u5728\u6211\u5199\u8fd9\u90e8\u5206\u4e4b\u524d\uff0c\u6211\u6536\u5230\u4e86\u672c\u4e66\u8bb8\u591a\u6b63\u9762\u7684\u8bc4\u8bba\u3002\u5f53\u65f6\u672c\u4e66\u8fd8\u5728\u5199\u4f5c\u4e2d\uff0c\u6240\u4ee5\u6211\u89c9\u5f97\u786e\u5b9e\u9700\u8981\u6539\u8fdb\u3002\u6211\u751a\u81f3\u8bbe\u7f6e\u4e86\u4e00\u4e9b\u5956\u91d1\u8ba9\u4eba\u4eec\u5e2e\u52a9\u6539\u8fdb\u3002\u4f46\u53ef\u60b2\u7684\u662f\uff0c\u4e00\u65e6\u4ed6\u4eec\u88ab\u81ea\u5df1\u7684\u82f1\u96c4\u8499\u853d\uff0c\u6240\u5d07\u62dc\u7684\u57fa\u8c03\u5c31\u53d1\u751f\u4e86\u7ffb\u5929\u8986\u5730\u7684\u53d8\u5316\u3002\u6211\u53d8\u5f97\u5341\u5206\u4ee4\u4eba\u8ba8\u538c\uff0c\u53ea\u4e0d\u8fc7\u662f\u5c1d\u8bd5\u6559\u4eba\u4eec\u5982\u4f55\u5b89\u5168\u4f7f\u7528\u4e00\u4e2a\u6781\u6613\u51fa\u9519\u7684\u5783\u573e\u8bed\u8a00\uff0c\u6bd4\u5982C\u8bed\u8a00\u3002\u8fd9\u662f\u6211\u5f88\u64c5\u957f\u7684\u4e1c\u897f\u3002\n\u8fd9\u4e9b\u6279\u8bc4\u8005\u5411\u6211\u627f\u8ba4\uff0c\u4ed6\u4eec\u4e0d\u5199C\u4ee3\u7801\u4e5f\u4e0d\u6559\u6388\u5b83\uff0c\u4ed6\u4eec\u53ea\u662f\u6b7b\u8bb0\u786c\u80cc\u6807\u51c6\u5e93\u6765\u201c\u5e2e\u52a9\u201d\u5176\u5b83\u4eba\uff0c\u8fd9\u5bf9\u6211\u6765\u8bf4\u5e76\u4e0d\u91cd\u8981\u3002\u6211\u4ee5\u4e00\u4e2a\u5f00\u653e\u7684\u5fc3\u6001\u8bd5\u56fe\u89e3\u51b3\u95ee\u9898\uff0c\u751a\u81f3\u8bbe\u7f6e\u5956\u91d1\u7ed9\u90a3\u4e9b\u6709\u52a9\u4e8e\u4fee\u590d\u5b83\u7684\u4eba\uff0c\u8fd9\u4e5f\u4e0d\u91cd\u8981\u3002\u8fd9\u53ef\u4ee5\u4f7f\u66f4\u591a\u7684\u4eba\u7231\u4e0aC\u8bed\u8a00\uff0c\u5e76\u4e14\u4f7f\u5176\u5b83\u4eba\u5165\u95e8\u7f16\u7a0b\uff0c\u8fd9\u66f4\u4e0d\u91cd\u8981\u3002\u91cd\u8981\u7684\u662f\u6211\u201c\u4fae\u8fb1\u201d\u4e86\u4ed6\u4eec\u7684\u82f1\u96c4\uff0c\u8fd9\u610f\u5473\u7740\u6211\u6240\u8bf4\u7684\u8bdd\u6c38\u8fdc\u5730\u5b8c\u86cb\u4e86\uff0c\u6ca1\u6709\u4eba\u4f1a\u518d\u6b21\u76f8\u4fe1\u6211\u3002\n\u5766\u7387\u5730\u8bf4\uff0c\u8fd9\u662f\u7f16\u7a0b\u6587\u5316\u6781\u4e3a\u7684\u9ed1\u6697\u3001\u4e11\u964b\u3001\u90aa\u6076\u7684\u4e00\u9762\u3002\u4ed6\u4eec\u6574\u5929\u5728\u8bf4\uff0c\u201c\u6211\u4e0e\u4f60\u4eec\u540c\u5728\u201d\uff0c\u4f46\u662f\u5982\u679c\u4f60\u4e0d\u5c48\u670d\u4e8e\u5927\u5e08\u4eec\u6d77\u91cf\u7684\u5b66\u8bc6\uff0c\u4ee5\u53ca\u4e5e\u6c42\u4ed6\u4eec\u51c6\u8bb8\u4f60\u8d28\u7591\u4ed6\u4eec\u6240\u4fe1\u5949\u7684\u4e1c\u897f\uff0c\u4f60\u7a81\u7136\u5c31\u4f1a\u53d8\u6210\u654c\u4eba\u3002\u7a0b\u5e8f\u5458\u8d39\u5c3d\u5fc3\u673a\u5730\u628a\u81ea\u5df1\u653e\u5728\u6743\u529b\u7684\u5b9d\u5ea7\u4e0a\uff0c\u6765\u8981\u6c42\u522b\u4eba\u8d5e\u8bb8\u4ed6\u4eec\u9ad8\u8d85\u7684\u8bb0\u5fc6\u80fd\u529b\uff0c\u6216\u8005\u5bf9\u4e00\u4e9b\u5fae\u4e0d\u8db3\u9053\u7684\u7410\u4e8b\u7684\u719f\u77e5\uff0c\u5e76\u4e14\u4f1a\u5c3d\u5168\u529b\u6d88\u706d\u90a3\u4e9b\u80c6\u6562\u8d28\u7591\u7684\u4eba\u3002\n\u8fd9\u975e\u5e38\u6076\u5fc3\uff0c\u6211\u5bf9\u6b64\u4e5f\u6ca1\u4ec0\u4e48\u80fd\u505a\u7684\u3002\u6211\u5bf9\u8001\u7a0b\u5e8f\u5458\u65e0\u80fd\u4e3a\u529b\u3002\u4f46\u4ed6\u4eec\u6ce8\u5b9a\u4f1a\u5931\u8d25\u3002\u5b83\u4eec\u901a\u8fc7\u6807\u51c6\u5316\u8bb0\u5fc6\u6240\u79ef\u7d2f\u7684\u5b66\u8bc6\uff0c\u4e5f\u4f1a\u5728\u54b8\u9c7c\u7684\u4e0b\u4e00\u6b21\u7ffb\u8eab\u4e2d\u84b8\u53d1\u6389\u3002\u5b83\u4eec\u5bf9\u8003\u8651\u5982\u4f55\u4e8b\u7269\u7684\u8fd0\u4f5c\u65b9\u5f0f\uff0c\u4ee5\u53ca\u5982\u4f55\u6539\u8fdb\u5b83\u4eec\uff0c\u6216\u8005\u5c06\u5b83\u4eec\u7684\u624b\u827a\u4f20\u6388\u7ed9\u4ed6\u4eba\u6beb\u65e0\u5174\u8da3\uff0c\u9664\u975e\u8fd9\u91cc\u9762\u6d89\u53ca\u5230\u5927\u91cf\u7684\u963f\u8c00\u5949\u627f\u5e76\u8ba9\u4ed6\u4eec\u89c9\u5f97\u5f88\u723d\u3002\u8001\u7a0b\u5e8f\u5458\u603b\u4f1a\u5b8c\u86cb\u7684\u3002\n\u4ed6\u4eec\u5411\u73b0\u5728\u7684\u5e74\u8f7b\u7a0b\u5e8f\u5458\u65bd\u538b\uff0c\u6211\u5bf9\u6b64\u5e76\u4e0d\u80fd\u505a\u4efb\u4f55\u4e8b\u60c5\u3002\u6211\u4e0d\u80fd\u963b\u6b62\u65e0\u80fd\u7a0b\u5e8f\u5458\u7684\u8bfd\u8c24\uff0c\u4ed6\u4eec\u751a\u81f3\u6839\u672c\u4e0d\u50cf\u4e13\u4e1a\u7684C\u7a0b\u5e8f\u5458\u90a3\u6837\u3002\u7136\u800c\uff0c\u6211\u5b81\u613f\u4f7f\u672c\u4e66\u6709\u52a9\u4e8e\u90a3\u4e9b\u60f3\u8981\u5b66\u4e60C\u8bed\u8a00\u4ee5\u53ca\u5982\u4f55\u7f16\u5199\u53ef\u9760\u7684\u8f6f\u4ef6\u7684\u4eba\uff0c\u800c\u4e0d\u662f\u548c\u90a3\u4e9b\u601d\u7ef4\u95ed\u9501\u7684\u4fdd\u5b88\u6d3e\u505a\u6597\u4e89\u3002\u5b83\u4eec\u8d2a\u56fe\u5b89\u9038\u7684\u884c\u4e3a\u7ed9\u4eba\u4e00\u79cd\u611f\u89c9\uff0c\u5c31\u662f\u4ed6\u4eec\u77e5\u9053\u66f4\u591a\u8fc2\u8150\u7684\u3001\u53ef\u601c\u7684\u5c0f\u8bdd\u9898\uff0c\u5c31\u6bd4\u5982\u672a\u5b9a\u4e49\u884c\u4e3a\u3002\n\u56e0\u6b64\uff0c\u6211\u5220\u9664\u4e86\u4e66\u4e2d\u7684K&amp;R C\u90e8\u5206\uff0c\u5e76\u4e14\u627e\u5230\u4e86\u65b0\u7684\u4e3b\u9898\u3002\u6211\u6253\u7b97\u91cd\u5199\u8fd9\u672c\u4e66\uff0c\u4f46\u662f\u5e76\u4e0d\u77e5\u9053\u5982\u4f55\u53bb\u505a\u3002\u6211\u72b9\u5982\u5728\u5730\u72f1\u4e2d\uff0c\u56e0\u4e3a\u6211\u81ea\u5df1\u975e\u5e38\u6267\u7740\u4e8e\u6211\u89c9\u5f97\u5f88\u91cd\u8981\u7684\u4e00\u4e9b\u4e8b\u60c5\uff0c\u4f46\u6211\u4e0d\u77e5\u9053\u5982\u4f55\u63a8\u8fdb\u3002\u6211\u73b0\u5728\u7b97\u662f\u660e\u767d\u4e86\u8fd9\u662f\u9519\u7684\uff0c\u56e0\u4e3a\u5b83\u963b\u788d\u6211\u5c06\u4e00\u4e9b\u4e0eC\u4e0d\u76f8\u5173\u7684\u91cd\u8981\u6280\u5de7\u6559\u7ed9\u8bb8\u591a\u65b0\u7684\u7a0b\u5e8f\u5458\uff0c\u5305\u62ec\u7f16\u7a0b\u89c4\u8303\u3001\u4ee3\u7801\u5206\u6790\u3001\u7f3a\u9677\u548c\u5b89\u5168\u6f0f\u6d1e\u7684\u68c0\u6d4b\uff0c\u4ee5\u53ca\u5b66\u4e60\u5176\u5b83\u7f16\u7a0b\u8bed\u8a00\u7684\u65b9\u6cd5\u3002\n\u73b0\u5728\u6211\u660e\u767d\u4e86\uff0c\u6211\u5c06\u4e3a\u8fd9\u672c\u4e66\u5236\u4f5c\u4e00\u4e9b\u8bfe\u7a0b\uff0c\u5173\u4e8e\u7f16\u5199\u6700\u5b89\u5168\u7684C\u4ee3\u7801\uff0c\u4ee5\u53ca\u5c06C\u8bed\u8a00\u4ee3\u7801\u6253\u7834\u4e3a\u4e00\u79cd\u5b66\u4e60C\u548c\u7f16\u7a0b\u89c4\u8303\u7684\u65b9\u5f0f\u3002\u6211\u4f1a\u5351\u5fae\u5730\u8bf4\u6211\u7684\u4e66\u53ea\u662f\u4e00\u4e2a\u6865\u6881\uff0c\u6240\u6709\u4eba\u5e94\u8be5\u53bb\u8bfbK&amp;R C\u6765\u8fce\u5408\u8fd9\u4e9b\u5b66\u7a76\uff0c\u5e76\u4e14\u5728\u8fd9\u4e9b\u9ec4\u91d1\u6cd5\u5219\u7684\u811a\u4e0b\u9876\u793c\u819c\u62dc\u3002\u6211\u8981\u6f84\u6e05\u6211\u7684C\u7248\u672c\u9650\u5236\u4e8e\u4e00\u4e2a\u56fa\u5b9a\u7684\u76ee\u7684\u4e4b\u4e2d\uff0c\u56e0\u4e3a\u8fd9\u8ba9\u6211\u7684\u4ee3\u7801\u66f4\u5b89\u5168\u3002\u6211\u4e00\u5b9a\u4f1a\u63d0\u5230\u6240\u6709\u8fc2\u8150\u7684\u4e1c\u897f\uff0c\u6bd4\u5982\u6bcf\u4e2a\u4e66\u5446\u5b50\u5f0f\u7684\uff0c\u5173\u4e8e20\u4e16\u7eaa60\u5e74\u4ee3\u7684PDP-11\u7535\u8111\u4e0a\u7a7a\u6307\u9488\u7684\u8981\u6c42\u3002\n\u4e4b\u540e\uff0c\u6211\u4f1a\u544a\u8bc9\u4eba\u4eec\u4e0d\u8981\u518d\u53bb\u5199\u522b\u7684C\u7a0b\u5e8f\u3002\u8fd9\u4e0d\u4f1a\u5f88\u660e\u663e\uff0c\u5b8c\u5168\u4e0d\u4f1a\uff0c\u4f46\u6211\u7684\u76ee\u6807\u662f\u5c06\u4eba\u4eec\u4eceC\u5e26\u5230\u80fd\u66f4\u597d\u5730\u7f16\u7a0b\u7684\u5176\u5b83\u8bed\u8a00\u4e2d\u3002Go\u3001Rust\u6216\u8005Swift\uff0c\u662f\u6211\u80fd\u60f3\u5230\u7684\u80fd\u5904\u7406C\u8bed\u8a00\u4e3b\u8981\u4efb\u52a1\u65b0\u578b\u8bed\u8a00\uff0c\u6240\u4ee5\u6211\u63a8\u8350\u4eba\u4eec\u5b66\u4e60\u5b83\u4eec\u3002\u6211\u4f1a\u544a\u8bc9\u4ed6\u4eec\uff0c\u4ed6\u4eec\u7684\u6280\u80fd\u5728\u4e8e\u53d1\u73b0\u7f3a\u9677\uff0c\u5e76\u4e14\u5bf9C\u4ee3\u7801\u7684\u4e25\u683c\u5206\u6790\u5c06\u4f1a\u5bf9\u6240\u6709\u8bed\u8a00\u90fd\u6709\u5de8\u5927\u7684\u597d\u5904\uff0c\u4ee5\u53ca\u4f7f\u5176\u5b83\u8bed\u8a00\u66f4\u6613\u4e8e\u5b66\u4e60\u3002\n\u4f46\u662fC\u5462\uff1fC\u5df2\u7ecf\u6b7b\u4e86\uff0c\u5b83\u662f\u4e3a\u60f3\u8981\u4e89\u8bbaA.6.2\u7ae0\u7b2c\u56db\u6bb5\u7684\u6307\u9488\u672a\u5b9a\u4e49\u884c\u4e3a\u7684\u8001\u7a0b\u5e8f\u5458\u51c6\u5907\u7684\u3002\u8c22\u5929\u8c22\u5730\uff0c\u6211\u6253\u7b97\u53bb\u5b66\u4e60Go\uff08\u6216\u8005Rust\uff0c\u6216\u8005Swift\uff0c\u6216\u8005\u5176\u5b83\u4efb\u4f55\u4e1c\u897f\uff09\u4e86\u3002","categories":"\u540e\u8bb01","tags":["\u89e3\u6784","\u4ee3\u7801"]},{"title":"\u51c6\u5907","url":"https:\/\/naka507.github.io\/posts\/C3D207FADFAF5841.html","content":"\u51c6\u5907\n\u5728\u8fd9\u4e00\u7ae0\u4e2d\uff0c\u4f60\u5c06\u4e3aC\u8bed\u8a00\u7f16\u7a0b\u914d\u7f6e\u597d\u4f60\u7684\u7cfb\u7edf\u3002\u4e00\u4e2a\u597d\u6d88\u606f\u662f\u5bf9\u4e8e\u6240\u6709\u4f7f\u7528Linux\u6216\u8005Mac\u7684\u4eba\uff0c\u4f60\u7684\u7cfb\u7edf\u662f\u4e3aC\u8bed\u8a00\u7f16\u7a0b\u800c\u8bbe\u8ba1\u7684\u3002C\u8bed\u8a00\u7684\u521b\u9020\u8005\u4e5f\u5bf9Unix\u64cd\u4f5c\u7cfb\u7edf\u7684\u521b\u9020\u505a\u51fa\u4e86\u8d21\u732e\uff0c\u5e76\u4e14Linux\u548cOSX\u90fd\u662f\u57fa\u4e8eUnix\u7684\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5b89\u88c5\u5de5\u4f5c\u4f1a\u975e\u5e38\u7b80\u5355\u3002\n\u5bf9\u4e8eWindows\u4e0a\u7684\u7528\u6237\uff0c\u6211\u6709\u4e00\u4e2a\u574f\u6d88\u606f\uff1a\u5728Windows\u4e0a\u5b66\u4e60C\u975e\u5e38\u75db\u82e6\u3002\u4f60\u53ef\u4ee5\u5728Windows\u4e0a\u7f16\u5199C\u4ee3\u7801\uff0c\u8fd9\u5e76\u4e0d\u662f\u95ee\u9898\u3002\u95ee\u9898\u662f\u6240\u6709\u7684\u5e93\u3001\u51fd\u6570\u548c\u5de5\u5177\u90fd\u548c\u5176\u5b83\u7684C\u8bed\u8a00\u73af\u5883\u6709\u4e9b\u5dee\u5f02\u3002C\u6765\u81ea\u4e8eUnix\uff0c\u5e76\u4e14\u548cUnix\u5e73\u53f0\u914d\u5408\u5f97\u6bd4\u8f83\u597d\u3002\u6050\u6015\u8fd9\u662f\u4e00\u4e2a\u4f60\u5e76\u4e0d\u80fd\u63a5\u53d7\u7684\u4e8b\u5b9e\u3002\n\u7136\u800c\u4f60\u5e76\u4e0d\u9700\u8981\u4e3a\u6b64\u6050\u614c\u3002\u6211\u5e76\u4e0d\u662f\u8bf4\u8981\u5b8c\u5168\u907f\u514dWindows\u3002\u7136\u800c\u6211\u8bf4\u7684\u662f\uff0c\u5982\u679c\u4f60\u6253\u7b97\u4ee5\u6700\u77ed\u7684\u65f6\u95f4\u6765\u5b66\u4e60C\uff0c\u4f60\u9700\u8981\u63a5\u89e6Unix\u5e76\u9002\u5e94\u5b83\u3002\u8fd9\u540c\u65f6\u4e5f\u5bf9\u4f60\u6709\u5e2e\u52a9\uff0c\u56e0\u4e3a\u61c2\u5f97\u4e00\u4e9bUnix\u7684\u77e5\u8bc6\uff0c\u4e5f\u4f1a\u8ba9\u4f60\u61c2\u5f97\u4e00\u4e9bC\u7f16\u7a0b\u7684\u4e60\u60ef\uff0c\u4ee5\u53ca\u6269\u5145\u4f60\u7684\u6280\u80fd\u3002\n\u8fd9\u4e5f\u610f\u5473\u7740\u6bcf\u4e2a\u4eba\u90fd\u9700\u8981\u4f7f\u7528\u547d\u4ee4\u884c\u3002\u55ef\uff0c\u5c31\u662f\u8fd9\u6837\u3002\u4f60\u5c06\u4f1a\u8fdb\u5165\u547d\u4ee4\u884c\u5e76\u4e14\u952e\u5165\u4e00\u4e9b\u547d\u4ee4\u3002\u4e0d\u8981\u4e3a\u6b64\u611f\u5230\u5bb3\u6015\uff0c\u56e0\u4e3a\u6211\u4f1a\u544a\u8bc9\u4f60\u8981\u952e\u5165\u4ec0\u4e48\uff0c\u4ee5\u53ca\u7ed3\u679c\u5e94\u8be5\u662f\u4ec0\u4e48\u6837\u5b50\uff0c\u6240\u4ee5\u4f60\u5b9e\u9645\u4e0a\u4f1a\u5b66\u5230\u5f88\u591a\u4e1c\u897f\uff0c\u540c\u65f6\u6269\u5145\u81ea\u5df1\u7684\u6280\u80fd\u3002\nLinux\n\u5728\u591a\u6570Linux\u7cfb\u7edf\u4e0a\u4f60\u90fd\u9700\u8981\u5b89\u88c5\u4e00\u4e9b\u5305\u3002\u5bf9\u4e8e\u57fa\u4e8eDebian\u7684\u7cfb\u7edf\uff0c\u4f8b\u5982Ubuntu\u4f60\u9700\u8981\u4f7f\u7528\u4e0b\u5217\u547d\u4ee4\u6765\u5b89\u88c5\u4e00\u4e9b\u4e1c\u897f\uff1a\n$ sudo apt-get install build-essential\n\u4e0a\u9762\u662f\u547d\u4ee4\u884c\u63d0\u793a\u7b26\u7684\u4e00\u4e2a\u793a\u4f8b\u3002\u4f60\u9700\u8981\u63a5\u89e6\u5230\u80fd\u8f93\u5165\u5b83\u7684\u5730\u65b9\uff0c\u627e\u5230\u4f60\u7684\u201c\u7ec8\u7aef\u201d\u7a0b\u5e8f\u5e76\u4e14\u8fd0\u884c\u5b83\u3002\u63a5\u7740\uff0c\u4f60\u4f1a\u770b\u5230\u4e00\u4e2a\u7c7b\u4f3c\u4e8e$\u7684Shell\u63d0\u793a\u7b26\uff0c\u5e76\u4e14\u4f60\u53ef\u4ee5\u5728\u91cc\u9762\u952e\u5165\u547d\u4ee4\u3002\u4e0d\u8981\u952e\u5165$\uff0c\u800c\u662f\u5b83\u540e\u9762\u7684\u4e1c\u897f\u3002\n\u4e0b\u9762\u662f\u5728\u57fa\u4e8eRPM\u7684Linux\u7cfb\u7edf\uff0c\u4f8b\u5982Fedora\u4e2d\u6267\u884c\u76f8\u540c\u5b89\u88c5\u5de5\u4f5c\u7684\u65b9\u6cd5\uff1a\n$ su -c \"yum groupinstall development-tools\"\n\u4e00\u65e6\u4f60\u8fd0\u884c\u4e86\u5b83\uff0c\u5b83\u4f1a\u6b63\u5e38\u5de5\u4f5c\uff0c\u4f60\u5e94\u8be5\u80fd\u591f\u505a\u672c\u4e66\u7684\u7b2c\u4e00\u4e2a\u7ec3\u4e60\u3002\u5982\u679c\u4e0d\u80fd\u8bf7\u544a\u8bc9\u6211\u3002\nMac OSX\n\u5728 Mac OSX\u4e0a\uff0c\u5b89\u88c5\u5de5\u4f5c\u4f1a\u66f4\u7b80\u5355\u3002\u9996\u5148\uff0c\u4f60\u9700\u8981\u4ece\u82f9\u679c\u5b98\u7f51\u4e0b\u8f7d\u6700\u65b0\u7684XCode\uff0c\u6216\u8005\u627e\u5230\u4f60\u7684\u5b89\u88c5DVD\u5e76\u4ece\u4e2d\u5b89\u88c5\u3002\u9700\u8981\u4e0b\u8f7d\u7684\u6587\u4ef6\u5f88\u5927\uff0c\u8981\u82b1\u8d39\u5f88\u957f\u65f6\u95f4\uff0c\u6240\u4ee5\u6211\u63a8\u8350\u4f60\u4eceDVD\u5b89\u88c5\u3002\u540c\u65f6\uff0c\u4e0a\u7f51\u641c\u7d22\u201c\u5b89\u88c5xcode\u201d\u6765\u6307\u5bfc\u4f60\u6765\u5b89\u88c5\u5b83\u3002\n\u4e00\u65e6\u4f60\u5b89\u88c5\u5b8cXCode\uff0c\u53ef\u80fd\u9700\u8981\u91cd\u542f\u4f60\u7684\u7535\u8111\u3002\u4f60\u53ef\u4ee5\u627e\u5230\u4f60\u7684\u7ec8\u7aef\u7a0b\u5e8f\u5e76\u4e14\u5c06\u5b83\u653e\u5230\u5feb\u6377\u542f\u52a8\u680f\u4e2d\u3002\u5728\u672c\u4e66\u4e2d\u4f60\u4f1a\u7ecf\u5e38\u7528\u5230\u7ec8\u7aef\uff0c\u6240\u4ee5\u6700\u597d\u5c06\u5b83\u653e\u5230\u987a\u624b\u7684\u533a\u57df\u3002\nWindows\n\u5bf9\u4e8eWindows\u7528\u6237\uff0c\u4f60\u9700\u8981\u5728\u865a\u62df\u673a\u4e2d\u5b89\u88c5\u5e76\u8fd0\u884c\u4e00\u4e2a\u57fa\u672c\u7684Ubuntu Linux\u7cfb\u7edf\uff0c\u6765\u505a\u672c\u4e66\u7684\u7ec3\u4e60\uff0c\u5e76\u4e14\u907f\u514d\u4efb\u4f55Windows\u4e2d\u5b89\u88c5\u7684\u95ee\u9898\u3002\n\n\u8bd1\u8005\u6ce8\uff1a\u5982\u679c\u4f60\u7684Windows\u7248\u672c\u662fWin10 14316\u53ca\u4e4b\u540e\u7684\u7248\u672c\uff0c\u53ef\u4ee5\u5f00\u542fUbuntu\u5b50\u7cfb\u7edf\u6765\u83b7\u53d6Linux\u73af\u5883\u3002\n\n\u6587\u672c\u7f16\u8f91\u5668\n\u5bf9\u4e8e\u7a0b\u5e8f\u5458\u6765\u8bf4\uff0c\u6587\u672c\u7f16\u8f91\u5668\u7684\u9009\u62e9\u6709\u4e9b\u56f0\u96be\u3002\u5bf9\u4e8e\u521d\u5b66\u8005\u6211\u63a8\u8350\u4ed6\u4eec\u4f7f\u7528Gedit\uff0c\u56e0\u4e3a\u5b83\u5f88\u7b80\u5355\uff0c\u5e76\u4e14\u53ef\u4ee5\u7528\u4e8e\u7f16\u5199\u4ee3\u7801\u3002\u7136\u800c\uff0c\u5b83\u5728\u7279\u5b9a\u7684\u56fd\u9645\u5316\u73af\u5883\u4e2d\u5e76\u4e0d\u80fd\u6b63\u5e38\u5de5\u4f5c\u3002\u5982\u679c\u4f60\u5df2\u7ecf\u662f\u8001\u53f8\u673a\u7684\u8bdd\uff0c\u4f60\u53ef\u4ee5\u9009\u7528\u4f60\u6700\u559c\u6b22\u7684\u7f16\u8f91\u5668\u3002\n\u51fa\u4e8e\u8fd9\u79cd\u8003\u8651\uff0c\u6211\u6253\u7b97\u8ba9\u4f60\u5c1d\u8bd5\u4e00\u4e9b\u4f60\u6240\u5728\u5e73\u53f0\u4e0a\u7684\u6807\u51c6\u7684\u7528\u4e8e\u7f16\u7a0b\u7684\u6587\u672c\u7f16\u8f91\u5668\uff0c\u5e76\u4e14\u957f\u671f\u4f7f\u7528\u5176\u4e2d\u4f60\u6700\u559c\u6b22\u7684\u4e00\u4e2a\u3002\u5982\u679c\u4f60\u5df2\u7ecf\u7528\u4e86Gedit\u5e76\u4e14\u5f88\u559c\u6b22\u4ed6\uff0c\u90a3\u4e48\u5c31\u4e00\u81f4\u7528\u4e0b\u53bb\u3002\u5982\u679c\u4f60\u6253\u7b97\u5c1d\u8bd5\u4e00\u4e9b\u4e0d\u540c\u7684\u7f16\u8f91\u5668\uff0c\u5219\u8d76\u5feb\u5c1d\u8bd5\u5e76\u9009\u62e9\u4e00\u4e2a\u3002\n\u6700\u91cd\u8981\u7684\u4e8b\u60c5\u662f\uff0c\u4e0d\u8981\u7ea0\u7ed3\u4e8e\u5bfb\u627e\u6700\u5b8c\u7f8e\u7684\u7f16\u8f91\u5668\u3002\u6587\u672c\u7f16\u8f91\u5668\u51e0\u4e4e\u90fd\u5f88\u5947\u602a\uff0c\u4f60\u53ea\u9700\u8981\u9009\u62e9\u4e00\u4e2a\u5e76\u719f\u6089\u5b83\uff0c\u5982\u679c\u4f60\u53d1\u73b0\u559c\u6b22\u522b\u7684\u7f16\u8f91\u5668\u53ef\u4ee5\u5207\u6362\u5230\u5b83\u3002\u4e0d\u8981\u5728\u6311\u9009\u5b83\u548c\u628a\u5b83\u53d8\u5f97\u66f4\u597d\u4e0a\u9762\u82b1\u5f88\u591a\u65f6\u95f4\u3002\n\u8fd9\u662f\u4ea6\u53ef\u4ee5\u5c1d\u8bd5\u7684\u4e00\u4e9b\u7f16\u8f91\u5668\uff1a\n\nLinux\u548cOSX\u4e0a\u7684Gedit\u3002\nOSX\u4e0a\u7684TextWrangler\u3002\n\u53ef\u4ee5\u5728\u7ec8\u7aef\u4e2d\u8fd0\u884c\u5e76\u51e0\u4e4e\u5728\u4efb\u4f55\u5730\u65b9\u5de5\u4f5c\u7684Nano\u3002\nEmacs\u548cEmacs OSX\u3002\u9700\u8981\u5b66\u4e60\u4e00\u4e9b\u4e1c\u897f\u3002\nVim\u548cMac Vim\u3002\n\n\u6bcf\u4e2a\u4eba\u90fd\u53ef\u80fd\u9009\u62e9\u4e00\u6b3e\u4e0d\u540c\u7684\u7f16\u8f91\u5668\uff0c\u8fd9\u4e9b\u53ea\u662f\u4e00\u90e8\u5206\u4eba\u6240\u9009\u62e9\u7684\u5f00\u6e90\u7f16\u8f91\u5668\u3002\u5728\u627e\u5230\u4f60\u6700\u559c\u6b22\u7684\u90a3\u4e2a\u4e4b\u524d\uff0c\u5c1d\u8bd5\u5176\u4e2d\u7684\u4e00\u4e9b\uff0c\u751a\u81f3\u662f\u4e00\u4e9b\u5546\u4e1a\u7f16\u8f91\u5668\u3002\n\u8b66\u544a\uff1a\u4e0d\u8981\u4f7f\u7528IDE\nIDE\uff0c\u6216\u8005\u201c\u96c6\u6210\u5f00\u53d1\u5de5\u5177\u201d\uff0c\u4f1a\u4f7f\u4f60\u53d8\u7b28\u3002\u5982\u679c\u4f60\u60f3\u8981\u6210\u4e3a\u4e00\u4e2a\u597d\u7684\u7a0b\u5e8f\u5458\uff0c\u5b83\u4f1a\u662f\u6700\u7cdf\u7cd5\u7684\u5de5\u5177\uff0c\u56e0\u4e3a\u5b83\u9690\u85cf\u4e86\u80cc\u540e\u7684\u7ec6\u8282\uff0c\u4f60\u7684\u5de5\u4f5c\u662f\u5f04\u6e05\u695a\u80cc\u540e\u53d1\u751f\u4e86\u4ec0\u4e48\u3002\u5982\u679c\u4f60\u8bd5\u7740\u5b8c\u6210\u4e00\u4e9b\u4e8b\u60c5\uff0c\u5e76\u4e14\u6240\u5728\u5e73\u53f0\u6839\u636e\u7279\u5b9a\u7684IDE\u800c\u8bbe\u8ba1\uff0c\u5b83\u4eec\u975e\u5e38\u6709\u7528\uff0c\u4f46\u662f\u5bf9\u4e8e\u5b66\u4e60C\u7f16\u7a0b\uff08\u4ee5\u53ca\u8bb8\u591a\u5176\u5b83\u8bed\u8a00\uff09\uff0c\u5b83\u4eec\u6ca1\u6709\u610f\u4e49\u3002\n\n\u6ce8\n\n\n\u5982\u679c\u4f60\u73a9\u8fc7\u5409\u4ed6\uff0c\u4f60\u5e94\u8be5\u77e5\u9053TAB\u662f\u4ec0\u4e48\u3002\u4f46\u662f\u5bf9\u4e8e\u5176\u5b83\u4eba\uff0c\u8ba9\u6211\u5bf9\u5176\u505a\u4e2a\u89e3\u91ca\u3002\u5728\u97f3\u4e50\u4e2d\u6709\u4e00\u79cd\u4e50\u8c31\u53eb\u505a\u201c\u4e94\u7ebf\u8c31\u201d\u3002\u5b83\u662f\u901a\u7528\u3001\u975e\u5e38\u53e4\u8001\u7684\u4e50\u8c31\uff0c\u4ee5\u4e00\u79cd\u901a\u7528\u7684\u65b9\u6cd5\u6765\u8bb0\u4e0b\u5176\u5b83\u4eba\u5e94\u8be5\u5728\u4e50\u5668\u4e0a\u5f39\u594f\u7684\u97f3\u7b26\u3002\u5982\u679c\u4f60\u5f39\u8fc7\u94a2\u7434\uff0c\u8fd9\u79cd\u4e50\u8c31\u975e\u5e38\u6613\u4e8e\u4f7f\u7528\uff0c\u56e0\u4e3a\u5b83\u51e0\u4e4e\u5c31\u662f\u4e3a\u94a2\u7434\u548c\u4ea4\u54cd\u4e50\u53d1\u660e\u7684\u3002\n\n\n\u7136\u800c\u5409\u4ed6\u662f\u4e00\u79cd\u5947\u602a\u7684\u4e50\u5668\uff0c\u5b83\u5e76\u4e0d\u80fd\u5f88\u597d\u5730\u9002\u7528\u8fd9\u79cd\u4e50\u8c31\u3002\u6240\u4ee5\u5409\u4ed6\u624b\u901a\u5e38\u4f7f\u7528\u4e00\u79cd\u53eb\u505aTAB\uff08tablature\uff09\u7684\u4e50\u8c31\u3002\u5b83\u6240\u505a\u7684\u4e0d\u662f\u544a\u8bc9\u4f60\u8be5\u5f39\u594f\u54ea\u4e2a\u97f3\u7b26\uff0c\u800c\u662f\u5728\u5f53\u65f6\u5e94\u8be5\u62e8\u54ea\u6839\u5f26\u3002\u4f60\u5b8c\u5168\u53ef\u4ee5\u5728\u4e0d\u77e5\u9053\u6240\u5f39\u594f\u7684\u5355\u4e2a\u97f3\u7b26\u7684\u60c5\u51b5\u4e0b\u5b66\u4e60\u6574\u9996\u4e50\u66f2\uff0c\u8bb8\u591a\u4eba\u4e5f\u90fd\u662f\u8fd9\u4e48\u505a\u7684\uff0c\u4f46\u662f\u5982\u679c\u4f60\u60f3\u77e5\u9053\u4f60\u5f39\u7684\u662f\u4ec0\u4e48\uff0cTAB\u662f\u6beb\u65e0\u610f\u4e49\u7684\u3002\n\n\n\u4f20\u7edf\u7684\u4e50\u8c31\u53ef\u80fd\u6bd4TAB\u66f4\u96be\u4e00\u4e9b\uff0c\u4f46\u662f\u4f1a\u544a\u8bc9\u4f60\u5982\u4f55\u6f14\u594f\u97f3\u4e50\uff0c\u800c\u4e0d\u662f\u5982\u679c\u73a9\u5409\u4ed6\u3002\u901a\u8fc7\u4f20\u7edf\u7684\u4e50\u8c31\u6211\u53ef\u4ee5\u5728\u94a2\u7434\u4e0a\uff0c\u6216\u8005\u5728\u8d1d\u65af\u4e0a\u5f39\u594f\u76f8\u540c\u7684\u66f2\u5b50\u3002\u6211\u4e5f\u53ef\u4ee5\u5c06\u5b83\u653e\u5230\u7535\u8111\u4e2d\uff0c\u4e3a\u5b83\u8bbe\u8ba1\u5168\u90e8\u7684\u66f2\u8c31\u3002\u4f46\u662f\u901a\u8fc7TAB\u6211\u53ea\u80fd\u5728\u5409\u4ed6\u4e0a\u5f39\u594f\u3002\n\n\nIDE\u5c31\u50cf\u662fTAB\uff0c\u4f60\u53ef\u4ee5\u7528\u5b83\u975e\u5e38\u5feb\u901f\u5730\u7f16\u7a0b\uff0c\u4f46\u662f\u4f60\u53ea\u80fd\u591f\u7528\u4e00\u79cd\u8bed\u8a00\u5728\u4e00\u4e2a\u5e73\u53f0\u4e0a\u7f16\u7a0b\u3002\u8fd9\u5c31\u662f\u516c\u53f8\u559c\u6b22\u5c06\u5b83\u5356\u7ed9\u4f60\u7684\u539f\u56e0\u3002\u5b83\u4eec\u77e5\u9053\u4f60\u6bd4\u8f83\u61d2\uff0c\u5e76\u4e14\u7531\u4e8e\u5b83\u53ea\u9002\u7528\u4e8e\u5b83\u4eec\u81ea\u5df1\u7684\u5e73\u53f0\uff0c\u4ed6\u4eec\u5c31\u5c06\u4f60\u9501\u5b9a\u5728\u4e86\u90a3\u4e2a\u5e73\u53f0\u4e0a\u3002\n\n\n\u6253\u7834\u8fd9\u4e00\u5faa\u73af\u7684\u529e\u6cd5\u5c31\u662f\u4e0d\u7528IDE\u5b66\u4e60\u7f16\u7a0b\u3002\u4e00\u4e2a\u666e\u901a\u7684\u6587\u672c\u7f16\u8f91\u5668\uff0c\u6216\u8005\u4e00\u4e2a\u7a0b\u5e8f\u5458\u4f7f\u7528\u7684\u6587\u672c\u7f16\u8f91\u5668\uff0c\u4f8b\u5982Vim\u6216\u8005Emacs\uff0c\u80fd\u8ba9\u4f60\u66f4\u719f\u6089\u4ee3\u7801\u3002\u8fd9\u6709\u4e00\u70b9\u70b9\u56f0\u96be\uff0c\u4f46\u662f\u7ec8\u7ed3\u679c\u662f\u4f60\u5c06\u4f1a\u719f\u6089\u4efb\u4f55\u4ee3\u7801\uff0c\u5728\u4efb\u4f55\u8ba1\u7b97\u673a\u4e0a\uff0c\u4ee5\u4efb\u4f55\u8bed\u8a00\uff0c\u5e76\u4e14\u61c2\u5f97\u80cc\u540e\u7684\u539f\u7406\u3002\n","categories":"\u7ec3\u4e601","tags":["Linux","Unix","Windows"]}]